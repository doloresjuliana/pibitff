{
  "version": 3,
  "sources": ["../../../../../apps/frappe/node_modules/@vue/shared/dist/shared.cjs.prod.js", "../../../../../apps/frappe/node_modules/@vue/shared/index.js", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/location.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/credentials.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/module-errors.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/to-node-description.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/standard-errors.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/strict-mode-errors.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error/pipeline-operator-errors.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parse-error.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/estree.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/tokenizer/context.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/tokenizer/types.ts", "../../../../../apps/frappe/node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts", "../../../../../apps/frappe/node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/identifier.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/scopeflags.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/flow/scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/base.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/comments.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/whitespace.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/tokenizer/state.ts", "../../../../../apps/frappe/node_modules/@babel/babel-helper-string-parser/src/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/tokenizer/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/class-scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/expression-scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/util/production-parameter.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/util.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/node.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/flow/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/jsx/xhtml.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/jsx/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/typescript/scope.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/typescript/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/placeholders.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugins/v8intrinsic.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/plugin-utils.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/options.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/lval.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/expression.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/statement.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/parser/index.ts", "../../../../../apps/frappe/node_modules/@babel/parser/src/index.ts", "../../../../../apps/frappe/node_modules/source-map/lib/base64.js", "../../../../../apps/frappe/node_modules/source-map/lib/base64-vlq.js", "../../../../../apps/frappe/node_modules/source-map/lib/util.js", "../../../../../apps/frappe/node_modules/source-map/lib/array-set.js", "../../../../../apps/frappe/node_modules/source-map/lib/mapping-list.js", "../../../../../apps/frappe/node_modules/source-map/lib/source-map-generator.js", "../../../../../apps/frappe/node_modules/source-map/lib/binary-search.js", "../../../../../apps/frappe/node_modules/source-map/lib/quick-sort.js", "../../../../../apps/frappe/node_modules/source-map/lib/source-map-consumer.js", "../../../../../apps/frappe/node_modules/source-map/lib/source-node.js", "../../../../../apps/frappe/node_modules/source-map/source-map.js", "../../../../../apps/frappe/node_modules/estree-walker/dist/umd/estree-walker.js", "../../../../../apps/frappe/node_modules/@vue/compiler-dom/node_modules/@vue/compiler-core/dist/compiler-core.cjs.prod.js", "../../../../../apps/frappe/node_modules/@vue/compiler-dom/node_modules/@vue/compiler-core/index.js", "../../../../../apps/frappe/node_modules/@vue/compiler-dom/dist/compiler-dom.cjs.prod.js", "../../../../../apps/frappe/node_modules/@vue/compiler-dom/index.js", "../../../../../apps/frappe/node_modules/@vue/reactivity/dist/reactivity.cjs.prod.js", "../../../../../apps/frappe/node_modules/@vue/reactivity/index.js", "../../../../../apps/frappe/node_modules/@vue/runtime-core/dist/runtime-core.cjs.prod.js", "../../../../../apps/frappe/node_modules/@vue/runtime-core/index.js", "../../../../../apps/frappe/node_modules/@vue/runtime-dom/dist/runtime-dom.cjs.prod.js", "../../../../../apps/frappe/node_modules/@vue/runtime-dom/index.js", "../../../../../apps/frappe/node_modules/vue/dist/vue.cjs.prod.js", "../../../../../apps/frappe/node_modules/vue/index.js", "../../../../../apps/pibitff/pibitff/public/js/tff_process/tff_process.bundle.js", "../../../../../apps/frappe/node_modules/vue-demi/lib/index.mjs", "../../../../../apps/frappe/node_modules/vue/dist/vue.runtime.esm-bundler.js", "../../../../../apps/frappe/node_modules/@vue/devtools-api/lib/esm/env.js", "../../../../../apps/frappe/node_modules/@vue/devtools-api/lib/esm/const.js", "../../../../../apps/frappe/node_modules/@vue/devtools-api/lib/esm/time.js", "../../../../../apps/frappe/node_modules/@vue/devtools-api/lib/esm/proxy.js", "../../../../../apps/frappe/node_modules/@vue/devtools-api/lib/esm/index.js", "../../../../../apps/frappe/node_modules/pinia/dist/pinia.mjs", "../pibitff/pibitff/public/js/tff_process/components/TffProcess.vue", "sfc-template:/home/frappe/frappe-bench/apps/pibitff/pibitff/public/js/tff_process/components/TffProcess.vue?type=template", "../../../../../apps/pibitff/pibitff/public/js/tff_process/components/TffProcess.vue"],
  "sourcesContent": ["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* PatchFlags.TEXT */]: `TEXT`,\r\n    [2 /* PatchFlags.CLASS */]: `CLASS`,\r\n    [4 /* PatchFlags.STYLE */]: `STYLE`,\r\n    [8 /* PatchFlags.PROPS */]: `PROPS`,\r\n    [16 /* PatchFlags.FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* PatchFlags.HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* PatchFlags.STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* PatchFlags.KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* PatchFlags.UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* PatchFlags.NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* PatchFlags.DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* PatchFlags.HOISTED */]: `HOISTED`,\r\n    [-2 /* PatchFlags.BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* SlotFlags.STABLE */]: 'STABLE',\r\n    [2 /* SlotFlags.DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* SlotFlags.FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    // Split the content into individual lines but capture the newline sequence\r\n    // that separated each line. This is important because the actual sequence is\r\n    // needed to properly take into account the full line length for offset\r\n    // comparison\r\n    let lines = source.split(/(\\r?\\n)/);\r\n    // Separate the lines and newline sequences into separate arrays for easier referencing\r\n    const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\r\n    lines = lines.filter((_, idx) => idx % 2 === 0);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count +=\r\n            lines[i].length +\r\n                ((newlineSequences[i] && newlineSequences[i].length) || 0);\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                const newLineSeqLength = (newlineSequences[j] && newlineSequences[j].length) || 0;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - (lineLength + newLineSeqLength));\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + newLineSeqLength;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\n/**\r\n * Boolean attributes should be included if the value is truthy or ''.\r\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\r\n */\r\nfunction includeBooleanAttr(value) {\r\n    return !!value || value === '';\r\n}\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownHtmlAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\r\n/**\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\r\n */\r\nconst isKnownSvgAttr = /*#__PURE__*/ makeMap(`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\r\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\r\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\r\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\r\n    `color-interpolation-filters,color-profile,color-rendering,` +\r\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\r\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\r\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\r\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\r\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\r\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\r\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\r\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\r\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\r\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\r\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\r\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\r\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\r\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\r\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\r\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\r\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\r\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\r\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\r\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\r\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\r\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\r\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\r\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\r\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\r\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\r\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\r\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\r\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\r\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\r\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\r\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\r\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = isString(item)\r\n                ? parseStringStyle(item)\r\n                : normalizeStyle(item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isString(value)) {\r\n        return value;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles || isString(styles)) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\r\nfunction normalizeProps(props) {\r\n    if (!props)\r\n        return null;\r\n    let { class: klass, style } = props;\r\n    if (klass && !isString(klass)) {\r\n        props.class = normalizeClass(klass);\r\n    }\r\n    if (style) {\r\n        props.style = normalizeStyle(style);\r\n    }\r\n    return props;\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `false` flag.\r\n */\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `false` flag.\r\n */\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\n/**\r\n * Compiler only.\r\n * Do NOT use in runtime code paths unless behind `false` flag.\r\n */\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.slice(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isSymbol(a);\r\n    bValidType = isSymbol(b);\r\n    if (aValidType || bValidType) {\r\n        return a === b;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return isString(val)\r\n        ? val\r\n        : val == null\r\n            ? ''\r\n            : isArray(val) ||\r\n                (isObject(val) &&\r\n                    (val.toString === objectToString || !isFunction(val.toString)))\r\n                ? JSON.stringify(val, replacer, 2)\r\n                : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    // can't use isRef here since @vue/shared has no deps\r\n    if (val && val.__v_isRef) {\r\n        return replacer(_key, val.value);\r\n    }\r\n    else if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\nconst EMPTY_OBJ = {};\r\nconst EMPTY_ARR = [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => toTypeString(val) === '[object Date]';\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,ref_for,ref_key,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => str ? `on${capitalize(str)}` : ``);\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\r\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\r\nfunction genPropsAccessExp(name) {\r\n    return identRE.test(name)\r\n        ? `__props.${name}`\r\n        : `__props[${JSON.stringify(name)}]`;\r\n}\n\nexports.EMPTY_ARR = EMPTY_ARR;\nexports.EMPTY_OBJ = EMPTY_OBJ;\nexports.NO = NO;\nexports.NOOP = NOOP;\nexports.PatchFlagNames = PatchFlagNames;\nexports.camelize = camelize;\nexports.capitalize = capitalize;\nexports.def = def;\nexports.escapeHtml = escapeHtml;\nexports.escapeHtmlComment = escapeHtmlComment;\nexports.extend = extend;\nexports.genPropsAccessExp = genPropsAccessExp;\nexports.generateCodeFrame = generateCodeFrame;\nexports.getGlobalThis = getGlobalThis;\nexports.hasChanged = hasChanged;\nexports.hasOwn = hasOwn;\nexports.hyphenate = hyphenate;\nexports.includeBooleanAttr = includeBooleanAttr;\nexports.invokeArrayFns = invokeArrayFns;\nexports.isArray = isArray;\nexports.isBooleanAttr = isBooleanAttr;\nexports.isBuiltInDirective = isBuiltInDirective;\nexports.isDate = isDate;\nexports.isFunction = isFunction;\nexports.isGloballyWhitelisted = isGloballyWhitelisted;\nexports.isHTMLTag = isHTMLTag;\nexports.isIntegerKey = isIntegerKey;\nexports.isKnownHtmlAttr = isKnownHtmlAttr;\nexports.isKnownSvgAttr = isKnownSvgAttr;\nexports.isMap = isMap;\nexports.isModelListener = isModelListener;\nexports.isNoUnitNumericStyleProp = isNoUnitNumericStyleProp;\nexports.isObject = isObject;\nexports.isOn = isOn;\nexports.isPlainObject = isPlainObject;\nexports.isPromise = isPromise;\nexports.isReservedProp = isReservedProp;\nexports.isSSRSafeAttrName = isSSRSafeAttrName;\nexports.isSVGTag = isSVGTag;\nexports.isSet = isSet;\nexports.isSpecialBooleanAttr = isSpecialBooleanAttr;\nexports.isString = isString;\nexports.isSymbol = isSymbol;\nexports.isVoidTag = isVoidTag;\nexports.looseEqual = looseEqual;\nexports.looseIndexOf = looseIndexOf;\nexports.makeMap = makeMap;\nexports.normalizeClass = normalizeClass;\nexports.normalizeProps = normalizeProps;\nexports.normalizeStyle = normalizeStyle;\nexports.objectToString = objectToString;\nexports.parseStringStyle = parseStringStyle;\nexports.propsToAttrMap = propsToAttrMap;\nexports.remove = remove;\nexports.slotFlagsText = slotFlagsText;\nexports.stringifyStyle = stringifyStyle;\nexports.toDisplayString = toDisplayString;\nexports.toHandlerKey = toHandlerKey;\nexports.toNumber = toNumber;\nexports.toRawType = toRawType;\nexports.toTypeString = toTypeString;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/shared.cjs.prod.js')\n} else {\n  module.exports = require('./dist/shared.cjs.js')\n}\n", "export type Pos = {\n  start: number;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: string | undefined | null;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n *\n * @export\n * @param {Position} position\n * @param {number} columnOffset\n * @returns {Position}\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n", "export const enum ParseErrorCode {\n  SyntaxError = \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError = \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n}\n\nexport type SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\nexport type ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\nexport type ParseErrorCredentials<ErrorDetails> = {\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  toMessage: ToMessage<ErrorDetails>;\n};\n\nconst reflect = (keys: string[], last = keys.length - 1) => ({\n  get(this: unknown): unknown {\n    return keys.reduce(\n      (object, key) =>\n        // @ts-expect-error key should index object\n        object[key],\n      this,\n    );\n  },\n  set(this: unknown, value: unknown) {\n    keys.reduce(\n      // @ts-expect-error key should index item\n      (item, key, i) => (i === last ? (item[key] = value) : item[key]),\n      this,\n    );\n  },\n});\n\nconst instantiate = <T>(\n  constructor: new () => T,\n  properties: any,\n  descriptors: any,\n) =>\n  Object.keys(descriptors)\n    .map(key => [key, descriptors[key]])\n    .filter(([, descriptor]) => !!descriptor)\n    .map(([key, descriptor]) => [\n      key,\n      typeof descriptor === \"function\"\n        ? { value: descriptor, enumerable: false }\n        : typeof descriptor.reflect === \"string\"\n        ? { ...descriptor, ...reflect(descriptor.reflect.split(\".\")) }\n        : descriptor,\n    ])\n    .reduce(\n      (instance, [key, descriptor]) =>\n        Object.defineProperty(instance, key, {\n          configurable: true,\n          ...descriptor,\n        }),\n      Object.assign(new constructor(), properties),\n    );\n\nexport { instantiate };\n", "import { ParseErrorCode } from \"../parse-error\";\n\nexport default {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError,\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError,\n  },\n};\n", "const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = keyof Omit<\n  typeof NodeDescriptions,\n  \"UpdateExpression\"\n>;\n\ntype NodeWithDescription =\n  | {\n      type: \"UpdateExpression\";\n      prefix: boolean;\n    }\n  | {\n      type: NodeTypesWithDescriptions;\n    };\n\n// @ts-expect-error prefix is specified only when type is UpdateExpression\n// eslint-disable-next-line no-confusing-arrow\nconst toNodeDescription = ({ type, prefix }: NodeWithDescription) =>\n  type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[String(prefix) as \"true\" | \"false\"]\n    : NodeDescriptions[type];\n\nexport default toNodeDescription;\n", "import toNodeDescription from \"./to-node-description\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\"; prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"ImportSpecifier\"\n        | \"ImportNamespaceSpecifier\"\n        | \"ImportDefaultSpecifier\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\";\n    };\n\nexport default {\n  AccessorIsGenerator: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter:\n    \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter:\n    \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind,\n  }: {\n    kind: \"const\" | \"destructuring\";\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses:\n    \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({ exportName }: { exportName: string }) =>\n    `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName,\n  }: {\n    localName: string;\n    exportName: string;\n  }) =>\n    `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'.\",\n\n  ForInOfLoopInitializer: ({\n    type,\n  }: {\n    type: \"ForInStatement\" | \"ForOfStatement\";\n  }) =>\n    `'${\n      type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n    }' loop variable declaration may not have an initializer.`,\n\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block.\",\n\n  IllegalBreakContinue: ({\n    type,\n  }: {\n    type: \"BreakStatement\" | \"ContinueStatement\";\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: ({ importName }: { importName: string }) =>\n    `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({ maxArgumentCount }: { maxArgumentCount: 1 | 2 }) =>\n    `\\`import()\\` requires exactly ${\n      maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"\n    }.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault:\n    \"A JSON module can only be imported with `default`.\",\n  IncompatibleRegExpUVFlags:\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({ radix }: { radix: number }) =>\n    `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({ identifierName }: { identifierName: string }) =>\n    `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({ unexpected }: { unexpected: string }) =>\n    `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName,\n  }: {\n    identifierName: string;\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({ labelName }: { labelName: string }) =>\n    `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({ missingPlugin }: { missingPlugin: [string] }) =>\n    `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also, seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: ({ missingPlugin }: { missingPlugin: string[] }) =>\n    `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({ key }: { key: string }) =>\n    `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode,\n  }: {\n    surrogateCharCode: number;\n  }) =>\n    `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n      16,\n    )}'.`,\n  ModuleExportUndefined: ({ localName }: { localName: string }) =>\n    `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar:\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor:\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({ identifierName }: { identifierName: string }) =>\n    `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed:\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({ keyword }: { keyword: string }) =>\n    `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget:\n    \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected,\n  }: {\n    expected?: string | null;\n    unexpected?: string | null;\n  }) =>\n    `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n      expected ? `, expected \"${expected}\"` : \"\"\n    }`,\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport:\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName,\n  }: {\n    target: string;\n    onlyValidPropertyName: string;\n  }) =>\n    `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper:\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0.\",\n};\n", "export default {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: ({ referenceName }: { referenceName: string }) =>\n    `Assigning to '${referenceName}' in strict mode.`,\n\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: ({ bindingName }: { bindingName: string }) =>\n    `Binding '${bindingName}' in strict mode.`,\n\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n\n  StrictWith: \"'with' in strict mode.\",\n};\n", "import toNodeDescription from \"./to-node-description\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n] as const);\n\ntype GetSetMemberType<T extends Set<any>> = T extends Set<infer M>\n  ? M\n  : unknown;\n\ntype UnparanthesizedPipeBodyTypes = GetSetMemberType<\n  typeof UnparenthesizedPipeBodyDescriptions\n>;\n\nexport default {\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter:\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound:\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({ token }: { token: string }) =>\n    `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused:\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({ type }: { type: UnparanthesizedPipeBodyTypes }) =>\n    `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n      type,\n    })}; please wrap it in parentheses.`,\n\n  // Messages whose codes start with \u201CPipeline\u201D or \u201CPrimaryTopic\u201D\n  // are retained for backwards compatibility\n  // with the deprecated smart-mix pipe operator proposal plugin.\n  // They are subject to removal in a future major version.\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n};\n", "import { Position } from \"./util/location\";\nimport {\n  instantiate,\n  ParseErrorCode,\n  type ParseErrorCredentials,\n  type ToMessage,\n  type SyntaxPlugin,\n} from \"./parse-error/credentials\";\nimport type { Undone } from \"./parser/node\";\nimport type { Node } from \"./types\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  missingPlugin?: string | string[];\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  // pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = (a: {\n  loc: Position;\n  details: ErrorDetails;\n}) => ParseError<ErrorDetails>;\n\nfunction toParseErrorConstructor<ErrorDetails>({\n  toMessage,\n  ...properties\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  type ConstructorArgument = {\n    loc: Position;\n    details: ErrorDetails;\n  };\n\n  return function constructor({ loc, details }: ConstructorArgument) {\n    return instantiate(\n      SyntaxError,\n      { ...properties, loc },\n      {\n        clone(\n          overrides: {\n            loc?: Position;\n            details?: ErrorDetails;\n          } = {},\n        ) {\n          const loc = (overrides.loc || {}) as Partial<Position>;\n          return constructor({\n            loc: new Position(\n              \"line\" in loc ? loc.line : this.loc.line,\n              \"column\" in loc ? loc.column : this.loc.column,\n              \"index\" in loc ? loc.index : this.loc.index,\n            ),\n            details: { ...this.details, ...overrides.details },\n          });\n        },\n        details: { value: details, enumerable: false },\n        message: {\n          get(this: ConstructorArgument): string {\n            return `${toMessage(this.details)} (${this.loc.line}:${\n              this.loc.column\n            })`;\n          },\n          set(value: string) {\n            Object.defineProperty(this, \"message\", { value });\n          },\n        },\n        pos: { reflect: \"loc.index\", enumerable: true },\n        missingPlugin: \"missingPlugin\" in details && {\n          reflect: \"details.missingPlugin\",\n          enumerable: true,\n        },\n      },\n    ) as ParseError<ErrorDetails>;\n  };\n}\n\ntype ParseErrorTemplate =\n  | string\n  | ToMessage<any>\n  | { message: string | ToMessage<any> };\n\ntype ParseErrorTemplates = { [reasonCode: string]: ParseErrorTemplate };\n\n// This is the templated form of `ParseErrorEnum`.\n//\n// Note: We could factor out the return type calculation into something like\n// `ParseErrorConstructor<T extends ParseErrorTemplates>`, and then we could\n// reuse it in the non-templated form of `ParseErrorEnum`, but TypeScript\n// doesn't seem to drill down that far when showing you the computed type of\n// an object in an editor, so we'll leave it inlined for now.\nexport function ParseErrorEnum(a: TemplateStringsArray): <\n  T extends ParseErrorTemplates,\n>(\n  parseErrorTemplates: T,\n) => {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\nexport function ParseErrorEnum<T extends ParseErrorTemplates>(\n  parseErrorTemplates: T,\n  syntaxPlugin?: SyntaxPlugin,\n): {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either:\n//\n// 1. a static error message,\n// 2. `toMessage` functions that define additional necessary `details` needed by\n//    the `ParseError`, or\n// 3. Objects that contain a `message` of one of the above and overridden `code`\n//    and/or `reasonCode`:\n//\n// ParseErrorEnum `optionalSyntaxPlugin` ({\n//   ErrorWithStaticMessage: \"message\",\n//   ErrorWithDynamicMessage: ({ type } : { type: string }) => `${type}`),\n//   ErrorWithOverriddenCodeAndOrReasonCode: {\n//     message: ({ type }: { type: string }) => `${type}`),\n//     code: ParseErrorCode.SourceTypeModuleError,\n//     ...(BABEL_8_BREAKING ? { } : { reasonCode: \"CustomErrorReasonCode\" })\n//   }\n// });\n//\nexport function ParseErrorEnum(\n  argument: TemplateStringsArray | ParseErrorTemplates,\n  syntaxPlugin?: SyntaxPlugin,\n) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return (parseErrorTemplates: ParseErrorTemplates) =>\n      ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n\n  const ParseErrorConstructors = {} as Record<\n    string,\n    ParseErrorConstructor<unknown>\n  >;\n\n  for (const reasonCode of Object.keys(argument)) {\n    const template = (argument as ParseErrorTemplates)[reasonCode];\n    const { message, ...rest } =\n      typeof template === \"string\"\n        ? { message: () => template }\n        : typeof template === \"function\"\n        ? { message: template }\n        : template;\n    const toMessage = typeof message === \"string\" ? () => message : message;\n\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: ParseErrorCode.SyntaxError,\n      reasonCode,\n      toMessage,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...rest,\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nexport type RaiseProperties<ErrorDetails> = {\n  at: Position | Undone<Node>;\n} & ErrorDetails;\n\nimport ModuleErrors from \"./parse-error/module-errors\";\nimport StandardErrors from \"./parse-error/standard-errors\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors\";\n\nexport * from \"./parse-error/credentials\";\n", "import { type TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport type * as N from \"../types\";\nimport type { Node as NodeType, NodeBase, File } from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parse-error\";\nimport type { Undone } from \"../parser/node\";\nimport type { BindingTypes } from \"../util/scopeflags\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object: any, key: string) =>\n  defineProperty(object, key, { enumerable: false, value: object[key] });\n\nfunction toESTreeLocation(node: any) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: typeof Parser) =>\n  class ESTreeParserMixin extends superClass implements Parser {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.options.tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseRegExpLiteral({ pattern, flags }): N.EstreeRegExpLiteral {\n      let regex: RegExp | null = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt: BigInt | null;\n      try {\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal: null = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T extends N.Node>(value: any) {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    // Cast a Directive to an ExpressionStatement. Mutates the input Directive.\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const expression = directive.value as any as N.EstreeLiteral;\n      delete directive.value;\n\n      expression.type = \"Literal\";\n      // @ts-expect-error N.EstreeLiteral.raw is not defined.\n      expression.raw = expression.extra.raw;\n      expression.value = expression.extra.expressionValue;\n\n      const stmt = directive as any as N.ExpressionStatement;\n      stmt.type = \"ExpressionStatement\";\n      stmt.expression = expression;\n      // @ts-expect-error N.ExpressionStatement.directive is not defined\n      stmt.directive = expression.extra.rawValue;\n\n      delete expression.extra;\n\n      return stmt;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync?: boolean | null,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        // @ts-expect-error plugin typings\n        this.checkDeclaration((node as unknown as N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return (method as any as N.EstreeProperty | N.EstreeMethodDefinition)\n        .value.params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: boolean | undefined | null,\n      topLevel: boolean,\n      end: TokenType,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): void {\n      super.parseBlockBody(\n        node,\n        allowDirectives,\n        topLevel,\n        end,\n        afterBlockParse,\n      );\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      // @ts-expect-error estree plugin typings\n      node.body = directiveStatements.concat(node.body);\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // @ts-expect-error mutate AST types\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = node as any;\n      delete node.id;\n      // @ts-expect-error mutate AST types\n      node.name = name;\n      // @ts-expect-error mutate AST types\n      node.type = \"PrivateIdentifier\";\n      return node as unknown as N.EstreePrivateIdentifier;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node);\n        }\n      }\n      return node.name;\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseLiteral<T extends N.Literal>(value: any, type: T[\"type\"]): T {\n      const node = super.parseLiteral<T>(value, type);\n      // @ts-expect-error mutating AST types\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseMethod<\n      T extends N.ClassPrivateMethod | N.ObjectMethod | N.ClassMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope: boolean = false,\n    ): N.EstreeMethodDefinition {\n      let funcNode = this.startNode<N.MethodLike>();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        // @ts-expect-error todo(flow->ts)\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error mutate AST types\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // @ts-expect-error mutate AST types\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        node.computed = false;\n      }\n      return this.finishNode(\n        // @ts-expect-error cast methods to estree types\n        node as Undone<N.EstreeMethodDefinition>,\n        \"MethodDefinition\",\n      );\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = super.parseClassProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = super.parseClassPrivateProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): N.ObjectMethod | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) as any;\n\n      if (node) {\n        node.type = \"Property\";\n        if ((node as any as N.ClassMethod).kind === \"method\") {\n          node.kind = \"init\";\n        }\n        node.shorthand = false;\n      }\n\n      return node as any;\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: number | undefined | null,\n      startLoc: Position | undefined | null,\n      isPattern: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectProperty | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ) as any;\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return node as any;\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return type === \"Property\"\n        ? \"value\"\n        : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(\n      prop: N.Node,\n      isLast: boolean,\n      isLHS: boolean,\n    ) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(Errors.PatternHasAccessor, { at: prop.key });\n      } else if (prop.method) {\n        this.raise(Errors.PatternHasMethod, { at: prop.key });\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n      }\n    }\n\n    finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n      unfinished: Undone<T>,\n      optional: boolean,\n    ): T {\n      const node = super.finishCallExpression(unfinished, optional);\n\n      if (node.callee.type === \"Import\") {\n        (node as N.Node as N.EstreeImportExpression).type = \"ImportExpression\";\n        (node as N.Node as N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          (node as N.Node as N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // arguments isn't optional in the type definition\n        delete node.arguments;\n        // callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(unfinished: Undone<N.AnyExport>) {\n      const node = super.parseExport(unfinished);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          // @ts-expect-error mutating AST types\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            // @ts-expect-error mutating AST types\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            // @ts-expect-error mutating AST types\n            node.type = \"ExportAllDeclaration\";\n            // @ts-expect-error mutating AST types\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node as N.AnyExport;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    // @ts-expect-error override interfaces\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n\n    finishNodeAt<T extends NodeType>(\n      node: Undone<T>,\n      type: T[\"type\"],\n      endLoc: Position,\n    ): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    resetStartLocation(node: N.Node, start: number, startLoc: Position) {\n      super.resetStartLocation(node, start, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n", "// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext;\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n", "import { types as tc, type TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the \u201Cargument\u201D subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string;\n  beforeExpr?: boolean;\n  startsExpr?: boolean;\n  rightAssociative?: boolean;\n  isLoop?: boolean;\n  isAssign?: boolean;\n  prefix?: boolean;\n  postfix?: boolean;\n  binop?: number | null;\n};\n\n// Internally the tokenizer stores token as a number\nexport type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: string | undefined | null;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: number | undefined | null;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext:\n    | ((context: Array<TokContext>) => void)\n    | undefined\n    | null;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport type InternalTokenTypes = {\n  [name: string]: TokenType;\n};\n\nexport const tt: InternalTokenTypes = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n};\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n", "import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,3104,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n", "const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n", "/* eslint max-len: 0 */\n\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n", "// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b0000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b0000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b0000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b0001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b0010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b0100000_0000_00,\n             BIND_FLAGS_TS_IMPORT       = 0b1000000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM    | BIND_FLAGS_TS_CONST_ENUM                                 ,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0                   | BIND_FLAGS_TS_EXPORT_ONLY,\n             BIND_TS_TYPE_IMPORT= 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_TS_IMPORT,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n", "import {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport type { Position } from \"./location\";\nimport type * as N from \"../types\";\nimport { Errors } from \"../parse-error\";\nimport type Tokenizer from \"../tokenizer\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlags;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope extends Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n\n  enter(flags: ScopeFlags) {\n    /*:: +createScope: (flags: ScopeFlags) => IScope; */\n    // @ts-expect-error This method will be overwritten by subclasses\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit(): ScopeFlags {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        !(\n          scope.flags & SCOPE_SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  currentThisScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n", "import type { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport type * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n", "import type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"../typings\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<any>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: string | undefined | null;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin\u2019s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(\n        pluginOptions,\n      ) as (keyof typeof pluginOptions)[]) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption<\n    PluginName extends ParserPluginWithOptions[0],\n    OptionName extends keyof PluginOptions<PluginName>,\n  >(plugin: PluginName, name: OptionName) {\n    return (this.plugins.get(plugin) as null | PluginOptions<PluginName>)?.[\n      name\n    ];\n  }\n}\n", "/*:: declare var invariant; */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport type { Undone } from \"./node\";\n\n/**\n * A whitespace token containing comments\n * @typedef CommentWhitespace\n * @type {object}\n * @property {number} start - the start of the whitespace token.\n * @property {number} end - the end of the whitespace token.\n * @property {Array<Comment>} comments - the containing comments\n * @property {Node | null} leadingNode - the immediately preceding AST node of the whitespace token\n * @property {Node | null} trailingNode - the immediately following AST node of the whitespace token\n * @property {Node | null} containingNode - the innermost AST node containing the whitespace\n *                                         with minimal size (|end - start|)\n */\nexport type CommentWhitespace = {\n  start: number;\n  end: number;\n  comments: Array<Comment>;\n  leadingNode: Node | null;\n  trailingNode: Node | null;\n  containingNode: Node | null;\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nfunction setTrailingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nfunction setLeadingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nexport function setInnerComments(\n  node: Undone<Node>,\n  comments?: Array<Comment>,\n) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n *\n * @param {Undone<Node>} node\n * @param {Array<Node>} elements\n * @param {Array<Comment>} comments\n */\nfunction adjustInnerComments(\n  node: Undone<Node>,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\n/** @class CommentsParser */\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   *\n   * @param {Node} node\n   * @returns {void}\n   * @memberof CommentsParser\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   *\n   * @memberof CommentsParser\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   *\n   * @memberof CommentsParser\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing */\n  // async /* 1 */ function f() {}\n  /*\n   * the comment whitespace \"* 1 *\" has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark \"* 1 *\" as\n   * inner comments. So \"* 1 *\" should be detached from the Identifier node.\n   *\n   * @param {N.Node} node the last finished AST node _before_ current token\n   * @returns\n   * @memberof CommentsParser\n   */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   *\n   * @param {Node} node\n   * @param {number} start\n   * @param {number} end\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n", "import * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\n\n// Skip whitespace and single-line comments, including /* no newline here */.\n// After this RegExp matches, its lastIndex points to a line terminator, or\n// the start of multi-line comment (which is effectively a line terminator),\n// or the end of string.\nexport const skipWhiteSpaceToLineBreak = new RegExp(\n  // Unfortunately JS doesn't support Perl's atomic /(?>pattern)/ or\n  // possessive quantifiers, so we use a trick to prevent backtracking\n  // when the look-ahead for line terminator fails.\n  \"(?=(\" +\n    // Capture the whitespace and comments that should be skipped inside\n    // a look-ahead assertion, and then re-match the group as a unit.\n    skipWhiteSpaceInLine.source +\n    \"))\\\\1\" +\n    // Look-ahead for either line terminator, start of multi-line comment,\n    // or end of string.\n    /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source,\n  \"y\", // sticky\n);\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n", "import type { Options } from \"../options\";\nimport type * as N from \"../types\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { tt, type TokenType } from \"./types\";\nimport type { Errors } from \"../parse-error\";\nimport { type ParseError } from \"../parse-error\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number;\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0;\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n        ? true\n        : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n  inDisallowConditionalTypesContext: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: \"loop\" | \"switch\" | undefined | null;\n    name?: string | null;\n    statementStart?: number;\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  canStartJSXElement: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this) as (keyof State)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // @ts-expect-error val must conform to S[key]\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number;\n  value: any;\n  type: TokenType;\n  start: number;\n  end: number;\n  context: TokContext[];\n  startLoc: Position;\n  lastTokEndLoc: Position;\n  curLine: number;\n  lineStart: number;\n  curPosition: () => Position;\n  /* Used only in readToken_mult_modulo */\n  inType: boolean;\n};\n", "import * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let containsInvalid = false;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      let escaped;\n      ({\n        ch: escaped,\n        pos,\n        lineStart,\n        curLine,\n      } = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      ));\n      if (escaped === null) {\n        containsInvalid = true;\n      } else {\n        out += escaped;\n      }\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return { pos, str: out, containsInvalid, lineStart, curLine };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/)!;\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n      ? isAllowedNumericSeparatorSibling.dec\n      : radix === 8\n      ? isAllowedNumericSeparatorSibling.oct\n      : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n", "/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location\";\nimport CommentsParser, { type CommentWhitespace } from \"../parser/comments\";\nimport type * as N from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types\";\nimport { type TokContext } from \"./context\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n  type RaiseProperties,\n} from \"../parse-error\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState, DeferredStrictError } from \"./state\";\n\nimport {\n  readInt,\n  readCodePoint,\n  readStringContents,\n  type IntErrorHandlers,\n  type CodePointErrorHandlers,\n  type StringContentsErrorHandlers,\n} from \"@babel/helper-string-parser\";\n\nimport type { Plugin } from \"../typings\";\n\nfunction buildPosition(pos: number, lineStart: number, curLine: number) {\n  return new Position(curLine, pos - lineStart, pos);\n}\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  // This is only valid when using the regexpUnicodeSets plugin\n  charCodes.lowercaseV,\n]);\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default abstract class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   *\n   * @param {TokenType} type\n   * @returns {boolean}\n   * @memberof Tokenizer\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   *\n   * @param {State} state\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   *\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // @ts-expect-error For performance we use a simplified tokenizer state structure\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, { at }),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  skipBlockComment(): N.CommentBlock | undefined {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment: N.CommentBlock = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | undefined {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment: N.CommentLine = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment();\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === charCodes.dash && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === charCodes.lessThan && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace: CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val?: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // @ts-expect-error the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          { at: this.state.curPosition() },\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        throw this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code),\n    });\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      // @ts-expect-error VALID_REGEX_FLAGS.has should accept expanded type: number\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, { at: nextPos() });\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, { at: nextPos() });\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen: boolean = false,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const { n, pos } = readInt(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      radix,\n      len,\n      forceLen,\n      allowNumSeparator,\n      this.errorHandlers_readInt,\n    );\n    this.state.pos = pos;\n    return n;\n  }\n\n  readRadixNumber(radix: number): void {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        // Numeric literals can't have newlines, so this is safe to do.\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix,\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, { at: startLoc });\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (isBigInt) {\n      const str = this.input\n        .slice(startLoc.index, this.state.pos)\n        .replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, { at: this.state.curPosition() });\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, { at: startLoc });\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos),\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, { at: startLoc });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, { at: startLoc });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, { at: startLoc });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const { code, pos } = readCodePoint(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      throwOnInvalid,\n      this.errorHandlers_readCodePoint,\n    );\n    this.state.pos = pos;\n    return code;\n  }\n\n  readString(quote: number): void {\n    const { str, pos, curLine, lineStart } = readStringContents(\n      quote === charCodes.quotationMark ? \"double\" : \"single\",\n      this.input,\n      this.state.pos + 1, // skip the quote\n      this.state.lineStart,\n      this.state.curLine,\n      this.errorHandlers_readStringContents_string,\n    );\n    this.state.pos = pos + 1; // skip the quote\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(tt.string, str);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    const opening = this.input[this.state.pos];\n    const { str, containsInvalid, pos, curLine, lineStart } =\n      readStringContents(\n        \"template\",\n        this.input,\n        this.state.pos + 1, // skip '`' or `}`\n        this.state.lineStart,\n        this.state.curLine,\n        this.errorHandlers_readStringContents_template,\n      );\n    this.state.pos = pos + 1; // skip '`' or `$`\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n\n    if (this.input.codePointAt(pos) === charCodes.graveAccent) {\n      this.finishToken(\n        tt.templateTail,\n        containsInvalid ? null : opening + str + \"`\",\n      );\n    } else {\n      this.state.pos++; // skip '{'\n      this.finishToken(\n        tt.templateNonTail,\n        containsInvalid ? null : opening + str + \"${\",\n      );\n    }\n  }\n\n  recordStrictModeErrors(\n    toParseError: DeferredStrictError,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, { at });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode?: number): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition(),\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, { at: escStart });\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode?: number): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raise<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    // @ts-expect-error: refine details typing\n    const error = toParseError({ loc, details });\n\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> | never {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        // @ts-expect-error: refine details typing\n        return (errors[i] = toParseError({ loc, details }));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, raiseProperties);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc,\n    });\n  }\n\n  expectPlugin(pluginName: Plugin, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName],\n    });\n  }\n\n  expectOnePlugin(pluginNames: Plugin[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n\n  errorBuilder(error: ParseErrorConstructor<{}>) {\n    return (pos: number, lineStart: number, curLine: number) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    };\n  }\n\n  errorHandlers_readInt: IntErrorHandlers = {\n    invalidDigit: (pos, lineStart, curLine, radix) => {\n      if (!this.options.errorRecovery) return false;\n\n      this.raise(Errors.InvalidDigit, {\n        at: buildPosition(pos, lineStart, curLine),\n        radix,\n      });\n      // Continue parsing the number as if there was no invalid digit.\n      return true;\n    },\n    numericSeparatorInEscapeSequence: this.errorBuilder(\n      Errors.NumericSeparatorInEscapeSequence,\n    ),\n    unexpectedNumericSeparator: this.errorBuilder(\n      Errors.UnexpectedNumericSeparator,\n    ),\n  };\n\n  errorHandlers_readCodePoint: CodePointErrorHandlers = {\n    ...this.errorHandlers_readInt,\n    invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n    invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint),\n  };\n\n  errorHandlers_readStringContents_string: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: (pos, lineStart, curLine) => {\n      this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedString, {\n        // Report the error at the string quote\n        at: buildPosition(pos - 1, lineStart, curLine),\n      });\n    },\n  };\n\n  errorHandlers_readStringContents_template: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedTemplate, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n  };\n}\n", "import {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport type { Position } from \"./location\";\nimport { Errors } from \"../parse-error\";\nimport type Tokenizer from \"../tokenizer\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n}\n", "import { Errors, type ParseErrorConstructor } from \"../parse-error\";\nimport type { Position } from \"./location\";\nimport type { Node } from \"../types\";\nimport type Tokenizer from \"../tokenizer\";\n\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration(): this is ArrowHeadParsingScope {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<{}>, Position]> =\n    new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<{}>,\n    {\n      at,\n    }: {\n      at: Position;\n    },\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: (a: [ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {ErrorTemplate} template Error template\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const origin = { at: node.loc.start };\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {ParseErrorConstructor<{||}>} error\n   * @param {Node} payload.at\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordArrowParemeterBindingError(\n    error: ParseErrorConstructor<{}>,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = { at: node.loc.start };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError({ at }: { at: Position }): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, { at });\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, { at: loc });\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n", "export const // Initial Parameter flags\n  PARAM = 0b0000,\n  // track [Yield] production parameter\n  PARAM_YIELD = 0b0001,\n  // track [Await] production parameter\n  PARAM_AWAIT = 0b0010,\n  // track [Return] production parameter\n  PARAM_RETURN = 0b0100,\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind = number;\n\n// todo(flow->ts) - check if more granular type can be used,\n//  type below is not good because things like PARAM_AWAIT|PARAM_YIELD are not included\n// export type ParamKind =\n//   | typeof PARAM\n//   | typeof PARAM_AWAIT\n//   | typeof PARAM_IN\n//   | typeof PARAM_RETURN\n//   | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<number> = [];\n  enter(flags: number) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): number {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return ((isAsync ? PARAM_AWAIT : 0) |\n    (isGenerator ? PARAM_YIELD : 0)) as ParamKind;\n}\n", "import { type Position } from \"../util/location\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport type State from \"../tokenizer/state\";\nimport type { EstreePropertyDefinition, Node, ObjectProperty } from \"../types\";\nimport { lineBreak, skipWhiteSpaceToLineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error\";\nimport type Parser from \".\";\n\nimport type ScopeHandler from \"../util/scope\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node;\n  error: Error;\n  thrown: Thrown;\n  aborted: Aborted;\n  failState: FailState;\n};\n\n// ## Parser utilities\n\nexport default abstract class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  abstract getScopeHandler(): { new (...args: any): ScopeHandler };\n\n  // TODO\n\n  addExtra(\n    node: Partial<Node>,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, { at: this.state.startLoc });\n      }\n      throw this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEndLoc.index, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, { at: this.state.lastTokEndLoc });\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: Position | null): void {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T extends Node | ReadonlyArray<Node>>(\n    fn: (abort: (node?: T) => never) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: {\n      node: T | null;\n    } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length] as ParseError<any>,\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        // @ts-expect-error casting general syntax error to parse error\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ExpressionErrors | undefined | null,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc,\n      });\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, { at: doubleProtoLoc });\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, { at: privateKeyLoc });\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(\n    node: Node,\n  ): node is ObjectProperty | EstreePropertyDefinition {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    this: Parser,\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKey**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional paramter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: Position | undefined | null = null;\n  doubleProtoLoc: Position | undefined | null = null;\n  privateKeyLoc: Position | undefined | null = null;\n  optionalParametersLoc: Position | undefined | null = null;\n}\n", "import type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: {\n    [key: string]: any;\n  };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error __clone is not defined in Node prototype\n  NodePrototype.__clone = function (): Node {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this) as (keyof Node)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // @ts-expect-error cloning this to newNode\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport type Undone<T extends NodeType> = Omit<T, \"type\">;\n\nexport abstract class NodeUtils extends UtilParser {\n  startNode<T extends NodeType>(): Undone<T> {\n    // @ts-expect-error cast Node as Undone<T>\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T extends NodeType>(pos: number, loc: Position): Undone<T> {\n    // @ts-expect-error cast Node as Undone<T>\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T extends NodeType>(type: Undone<NodeType>): Undone<T> {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T extends NodeType>(node: Undone<T>, type: T[\"type\"]): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T extends NodeType>(\n    node: Omit<T, \"type\">,\n    type: T[\"type\"],\n    endLoc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    // @ts-expect-error migrate to Babel types AST typings\n    node.type = type;\n    // @ts-expect-error migrate to Babel types AST typings\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node as T);\n    return node as T;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type Parser from \"../../parser\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types\";\nimport type * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports:\n    \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({ enumName }: { enumName: string }) =>\n    `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName,\n  }: {\n    invalidEnumType: string;\n    enumName: string;\n  }) =>\n    `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion,\n  }: {\n    enumName: string;\n    memberName: string;\n    suggestion: string;\n  }) =>\n    `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n  }) =>\n    `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitailized: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: {\n    message:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    ...(!process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {}),\n  },\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion,\n  }: {\n    unsupportedExportKind: string;\n    suggestion: string;\n  }) =>\n    `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type: TokenType): boolean {\n  return tokenIsKeywordOrIdentifier(type) && type !== tt._from;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (c: T, b: number, a: T[]) => boolean | undefined | null,\n): [T[], T[]] {\n  const list1: T[] = [];\n  const list2: T[] = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\n\ntype EnumContext = {\n  enumName: string;\n  explicitType: EnumExplicitType;\n  memberName: string;\n};\n\ntype EnumMemberInit =\n  | {\n      type: \"number\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"string\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"boolean\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"invalid\";\n      loc: Position;\n    }\n  | {\n      type: \"none\";\n      loc: Position;\n    };\n\nexport default (superClass: typeof Parser) =>\n  class FlowParserMixin extends superClass implements Parser {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): {\n      new (...args: any): FlowScopeHandler;\n    } {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n          at: moduloLoc,\n        });\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = super.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [\n      N.FlowType | undefined | null,\n      N.FlowPredicate | undefined | null,\n    ] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(\n      node: Undone<N.FlowDeclareClass>,\n    ): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: Undone<N.FlowDeclareFunction>,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode<N.TypeAnnotation>();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [typeNode.returnType, node.predicate] =\n        this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BIND_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: Undone<N.FlowDeclare>,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(FlowErrors.NestedDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: Undone<N.FlowDeclareVariable>,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(\n      node: Undone<N.FlowDeclareModule>,\n    ): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = super.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      // @ts-expect-error refine typings\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode<N.ImportDeclaration>();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          super.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n          // @ts-expect-error refine typings\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind: \"CommonJS\" | \"ES\" | null = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n              at: bodyElement,\n            });\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: Undone<N.FlowDeclareExportDeclaration>,\n      insideModule?: boolean | null,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value as\n            | \"const\"\n            | \"let\"\n            | \"type\"\n            | \"interface\";\n          throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n            at: this.state.startLoc,\n            unsupportedExportKind: label,\n            suggestion: exportSuggestions[label],\n          });\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(\n            node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n          );\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n\n          return node as N.Node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: Undone<N.FlowDeclareModuleExports>,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: Undone<N.FlowDeclareTypeAlias>,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      const finished = this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareTypeAlias\";\n      return finished;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: Undone<N.FlowDeclareOpaqueType>,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      const finished = this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareOpaqueType\";\n      return finished;\n    }\n\n    flowParseDeclareInterface(\n      node: Undone<N.FlowDeclareInterface>,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: Undone<N.FlowDeclare>,\n      isClass: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._mixins)) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: Undone<N.FlowInterface>): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n          at: this.state.startLoc,\n        });\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        {\n          at: startLoc,\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: Undone<N.FlowTypeAlias>): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: Undone<N.FlowOpaqueType>,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode<N.TypeParameter>();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      // @ts-expect-error migrate to Babel types\n      node.variance = variance;\n      // @ts-expect-error migrate to Babel types\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        // @ts-expect-error migrate to Babel types\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, { at: nodeStartLoc });\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode<N.TypeParameterDeclaration>();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode<N.FlowInterfaceType>();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? super.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: Undone<N.FlowObjectTypeIndexer>,\n      isStatic: boolean,\n      variance?: N.FlowVariance | null,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: Undone<N.FlowObjectTypeInternalSlot>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: Undone<N.FlowFunctionTypeAnnotation>,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: Undone<N.FlowObjectTypeCallProperty>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean;\n      allowExact: boolean;\n      allowSpread: boolean;\n      allowProto: boolean;\n      allowInexact: boolean;\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: Position | undefined | null = null;\n        let inexactStartLoc: Position | undefined | null = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n            at: inexactStartLoc,\n          });\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: Undone<N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty>,\n      isStatic: boolean,\n      protoStartLoc: Position | undefined | null,\n      variance: N.FlowVariance | undefined | null,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(FlowErrors.InexactInsideNonObject, {\n              at: this.state.lastTokStartLoc,\n            });\n          } else if (!allowInexact) {\n            this.raise(FlowErrors.InexactInsideExact, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, { at: variance });\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(FlowErrors.UnexpectedSpreadType, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, { at: variance });\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(FlowErrors.ThisParamBannedInConstructor, {\n              at: node.value.this,\n            });\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: Undone<\n        N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty\n      >,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          { at: property.value.this },\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          { at: property },\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, { at: property });\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node: N.Identifier | N.FlowQualifiedTypeIdentifier =\n        id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt<N.FlowQualifiedTypeIdentifier>(\n          startPos,\n          startLoc,\n        );\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode<N.FlowFunctionTypeParam>();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node });\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: node });\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[];\n      rest: N.FlowFunctionTypeParam | undefined | null;\n      _this: N.FlowFunctionTypeParam | undefined | null;\n    } {\n      let rest: N.FlowFunctionTypeParam | undefined | null = null;\n      let _this: N.FlowFunctionTypeParam | undefined | null = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: Undone<N.FlowTypeAnnotation>,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt:\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(\n            node as Undone<N.BooleanLiteralTypeAnnotation>,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n              at: this.state.startLoc,\n            });\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node as Undone<N.Identifier>, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startPos,\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode<N.FlowTypeAnnotation>();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): N.FlowVariance | undefined | null {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode<N.FlowVariance>();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        return this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode<N.TypeAnnotation>();\n\n        [\n          typeNode.typeAnnotation,\n          // @ts-expect-error predicate may not exist\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context?: string | null, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode<N.FlowInterface>();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            // @ts-expect-error: refine typings\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, {\n            at: state.startLoc,\n          });\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression;\n      failed: boolean;\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            // @ts-expect-error: refine typings\n            this.finishArrowValidation(node);\n          } else {\n            // @ts-expect-error: refine typings\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        node.params as any as N.Expression[],\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(\n      node: Undone<N.Node>,\n      parse: () => T,\n    ): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(\n      node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n    ): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          super.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          // @ts-expect-error: refine typings\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        // @ts-expect-error: refine typings\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(node)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n    ) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (super.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, { at: startLoc });\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, {\n            at: member.value,\n          });\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, {\n          at: this.state.curPosition(),\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          return this.finishOp(tt.questionDot, 2);\n        }\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        return this.readIterator();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left);\n      }\n      super.toAssignable(node, isLHS);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: ReadonlyArray<N.Expression | undefined | null>,\n      isParenthesizedExpr?: boolean,\n    ): ReadonlyArray<N.Expression | undefined | null> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, {\n            at: expr.typeAnnotation,\n          });\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingTypes) {\n      return (\n        type === \"TypeCastExpression\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n        // estree support\n      } else if (\n        // @ts-expect-error TS does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        // @ts-expect-error estree\n        method.value.params\n      ) {\n        // @ts-expect-error estree\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, { at: param });\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, { at: param });\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startPos: number | undefined | null,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectMethod | N.ObjectProperty {\n      if ((prop as any).variance) {\n        this.unexpected((prop as any).variance.loc.start);\n      }\n      delete (prop as any).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      const result = super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (result.value || result).typeParameters = typeParameters;\n      }\n      return result;\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, { at: param });\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: param });\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, { at: param });\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, { at: param });\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: number | null,\n      startLoc?: Position | null,\n      left?: N.Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state.type);\n    }\n\n    parseImportSpecifierLocal<\n      T extends\n        | N.ImportSpecifier\n        | N.ImportDefaultSpecifier\n        | N.ImportNamespaceSpecifier,\n    >(node: N.ImportDeclaration, specifier: Undone<T>, type: T[\"type\"]): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\" as const;\n      } else if (this.isContextual(tt._type)) {\n        kind = \"type\" as const;\n      }\n      if (kind) {\n        const lh = this.lookahead();\n        const { type } = lh;\n\n        // import type * is not allowed\n        if (kind === \"type\" && type === tt.star) {\n          // FIXME: lh.start?\n          this.unexpected(null, lh.type);\n        }\n\n        if (\n          isMaybeDefaultImport(type) ||\n          type === tt.braceL ||\n          type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingTypes | undefined,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, {\n              at: specifier,\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n          at: specifier,\n        });\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(\n      node: Undone<N.Function>,\n      allowModifiers?: boolean,\n    ): void {\n      // @ts-expect-error kind may not index node\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        // @ts-expect-error refine typings\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters: N.TypeParameterDeclaration;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression:\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n          | undefined\n          | null = null;\n\n        if (\n          arrow.node &&\n          // @ts-expect-error: refine tryParse typings\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            // @ts-expect-error: refine tryParse typings\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                { at: typeParameters },\n              );\n            }\n            // @ts-expect-error: refine tryParse typings\n            return arrow.node;\n          }\n\n          // @ts-expect-error: refine typings\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n          at: typeParameters,\n        });\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error todo(flow->ts)\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode<N.TypeAnnotation>();\n\n          [\n            typeNode.typeAnnotation,\n            // @ts-expect-error (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        // @ts-expect-error todo(flow->ts)\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Pattern[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction?: boolean | null,\n      strictModeChanged: boolean = true,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node.params[i] });\n        }\n      }\n\n      return super.checkParams(\n        node,\n        allowDuplicates,\n        isArrowFunction,\n        strictModeChanged,\n      );\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: boolean | null,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        // @ts-expect-error: refine tryParse typings\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          // @ts-expect-error: refine tryParse typings\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node = this.startNodeAt<N.OptionalCallExpression>(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt<\n          N.OptionalCallExpression | N.CallExpression\n        >(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) {\n            (node as Undone<N.OptionalCallExpression>).optional = false;\n          }\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      const node = this.startNodeAt<N.ArrowFunctionExpression>(\n        startPos,\n        startLoc,\n      );\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return super.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(FlowErrors.UnterminatedFlowComment, {\n          at: this.state.curPosition(),\n        });\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | undefined {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, {\n            at: this.state.startLoc,\n          });\n        }\n        this.hasFlowCommentCompletion();\n        const commentSkip = this.skipFlowComment();\n        if (commentSkip) {\n          this.state.pos += commentSkip;\n          this.state.hasFlowComment = true;\n        }\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos + 2);\n        if (end === -1) {\n          throw this.raise(Errors.UnterminatedComment, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos = end + 2 + 3;\n        return;\n      }\n\n      return super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | false {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          // @ts-expect-error testing whether a number is included\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, {\n          at: this.state.curPosition(),\n        });\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n        at: loc,\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n          ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n          : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        {\n          at: loc,\n          ...enumContext,\n        },\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n        at: loc,\n        enumName,\n        memberName,\n      });\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      node: N.Node,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n        at: node,\n        enumName,\n      });\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): {\n      id: N.Node;\n      init: EnumMemberInit;\n    } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\" as const, loc };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string;\n      explicitType: EnumExplicitType;\n    }): {\n      members: {\n        booleanMembers: Array<N.Node>;\n        numberMembers: Array<N.Node>;\n        stringMembers: Array<N.Node>;\n        defaultedMembers: Array<N.Node>;\n      };\n      hasUnknownMembers: boolean;\n    } {\n      const seenNames = new Set();\n      const members = {\n        // @ts-expect-error: migrate to Babel types\n        booleanMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        numberMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        stringMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, {\n            at: id,\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, {\n            at: id,\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string;\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n          at: this.state.startLoc,\n          enumName,\n        });\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, {\n          at: this.state.startLoc,\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: Undone<N.Node>, id: N.Node): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: Undone<N.Node>): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n", "const entities: {\n  __proto__: null;\n  [name: string]: string;\n} = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n} as const;\nexport default entities;\n", "import * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types\";\nimport type { TokContext } from \"../../tokenizer/context\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport type * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { type Undone } from \"../../parser/node\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({ openingTagName }: { openingTagName: string }) =>\n    `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity,\n  }: {\n    unexpected: string;\n    HTMLEntity: string;\n  }) =>\n    `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object?: N.JSXElement | null): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport interface IJSXParserMixin {\n  jsxParseOpeningElementAfterName(\n    node: N.JSXOpeningElement,\n  ): N.JSXOpeningElement;\n}\n\nexport default (superClass: typeof Parser) =>\n  class JSXParserMixin extends superClass implements Parser, IJSXParserMixin {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(JsxErrors.UnterminatedJsxContent, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, {\n                at: this.state.curPosition(),\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) == charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, { at: node });\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, {\n            at: this.state.startLoc,\n          });\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEndLoc.index,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: Undone<N.JSXSpreadChild>): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_expr);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: Undone<N.JSXExpressionContainer>,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(JsxErrors.UnexpectedSequenceExpression, {\n              at: expression.expressions[1],\n            });\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt<N.JSXOpeningElement | N.JSXOpeningFragment>(\n        startPos,\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        // @ts-expect-error migrate to Babel types\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(\n        node as Undone<N.JSXOpeningElement>,\n      );\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: Undone<N.JSXOpeningElement>,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode<\n                N.JSXSpreadChild | N.JSXExpressionContainer\n              >();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(\n                  this.jsxParseSpreadChild(node as Undone<N.JSXSpreadChild>),\n                );\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(\n                    node as Undone<N.JSXExpressionContainer>,\n                    tc.j_expr,\n                  ),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, {\n            at: closingElement,\n          });\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, {\n              at: closingElement,\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n          at: this.state.startLoc,\n        });\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n", "import type { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n  BIND_FLAGS_TS_IMPORT,\n  SCOPE_TS_MODULE,\n} from \"../../util/scopeflags\";\nimport type * as N from \"../../types\";\nimport { Errors } from \"../../parse-error\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  importsStack: Set<string>[] = [];\n\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    this.importsStack.push(new Set()); // Always keep the top-level scope for export checks.\n\n    return new TypeScriptScope(flags);\n  }\n\n  enter(flags: number): void {\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n\n    super.enter(flags);\n  }\n\n  exit() {\n    const flags = super.exit();\n\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.pop();\n    }\n\n    return flags;\n  }\n\n  hasImport(name: string, allowShadow?: boolean) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    if (bindingType & BIND_FLAGS_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n\n    if (this.hasImport(name)) return;\n\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.types.has(name) || scope.exportOnlyBindings.has(name)) return;\n    }\n\n    super.checkLocalExport(id);\n  }\n}\n", "/*:: declare var invariant; */\n\nimport type State from \"../../tokenizer/state\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport type * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport { createPositionWithColumnOffset } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_TS_TYPE_IMPORT,\n  BIND_CLASS,\n  BIND_NONE,\n  BIND_FLAGS_TS_IMPORT,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node\";\nimport type { Pattern } from \"../../types\";\nimport type { Expression } from \"../../types\";\nimport type { IJSXParserMixin } from \"../jsx\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x?: T | null): T {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\ntype ModifierBase = {\n  accessibility?: N.Accessibility;\n} & {\n  [key in TsModifier]?: boolean | undefined | null;\n};\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({ methodName }: { methodName: string }) =>\n    `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName,\n  }: {\n    propertyName: string;\n  }) =>\n    `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccesorCannotDeclareThisParameter:\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  CannotFindName: ({ name }: { name: string }) => `Cannot find name '${name}'.`,\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier:\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ({ modifier }: { modifier: N.Accessibility }) =>\n      `Accessibility modifier already seen.`,\n  DuplicateModifier: ({ modifier }: { modifier: TsModifier }) =>\n    `Duplicate modifier: '${modifier}'.`,\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: ({ token }: { token: \"extends\" | \"implements\" }) =>\n    `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: ({\n    modifiers,\n  }: {\n    modifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride:\n    \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic:\n    \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext:\n    \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier,\n  }: {\n    modifier: TsModifier;\n  }) =>\n    `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers,\n  }: {\n    orderedModifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression:\n    \"Invalid property access after an instantiation expression. \" +\n    \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName:\n    \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements:\n    \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass:\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam:\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion:\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter:\n    \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter:\n    \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType:\n    \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName,\n  }: {\n    typeParameterName: string;\n  }) =>\n    `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier:\n    \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed:\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports:\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports:\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({ type }: { type: string }) =>\n    `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n});\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): modifier is N.Accessibility {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(\n  modifier: string,\n): modifier is N.VarianceAnnotations {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\ntype ClassWithMixin<\n  T extends new (...args: any) => any,\n  M extends object,\n> = T extends new (...args: infer P) => infer I\n  ? new (...args: P) => I & M\n  : never;\n\nexport default (superClass: ClassWithMixin<typeof Parser, IJSXParserMixin>) =>\n  class TypeScriptParserMixin extends superClass implements Parser {\n    getScopeHandler(): {\n      new (...args: any): TypeScriptScopeHandler;\n    } {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T extends TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): T | undefined | null {\n      if (!tokenIsIdentifier(this.state.type) && this.state.type !== tt._in) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.indexOf(modifier) !== -1) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers({\n      modified,\n      allowedModifiers,\n      disallowedModifiers,\n      stopOnStartOfClassStaticBlock,\n      errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n    }: {\n      modified: ModifierBase;\n      allowedModifiers: readonly TsModifier[];\n      disallowedModifiers?: TsModifier[];\n      stopOnStartOfClassStaticBlock?: boolean;\n      // FIXME: make sure errorTemplate can receive `modifier`\n      errorTemplate?: any;\n    }): void {\n      const enforceOrder = (\n        loc: Position,\n        modifier: TsModifier,\n        before: TsModifier,\n        after: TsModifier,\n      ) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, {\n            at: loc,\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (\n        loc: Position,\n        modifier: TsModifier,\n        mod1: TsModifier,\n        mod2: TsModifier,\n      ) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, {\n            at: loc,\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: TsModifier | undefined | null = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, {\n              at: startLoc,\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, {\n            at: startLoc,\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T | undefined | null,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] | undefined | null {\n      const result = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStart;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node = this.startNode<N.TsImportType>();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName();\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean = true): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier(allowReservedWords);\n      while (this.eat(tt.dot)) {\n        const node: Undone<N.TsQualifiedName> =\n          this.startNodeAtNode<N.TsQualifiedName>(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node = this.startNode<N.TsTypeReference>();\n      node.typeName = this.tsParseEntityName();\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node = this.startNodeAtNode<N.TsTypePredicate>(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node = this.startNode<N.TsThisType>();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node = this.startNode<N.TsTypeQuery>();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName();\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"in\", \"out\"],\n        disallowedModifiers: [\n          \"public\",\n          \"private\",\n          \"protected\",\n          \"readonly\",\n          \"declare\",\n          \"abstract\",\n          \"override\",\n        ],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n      });\n    }\n\n    // for better error recover\n    tsParseNoneModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [],\n        disallowedModifiers: [\"in\", \"out\"],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n    }\n\n    tsParseTypeParameter(\n      parseModifiers: (\n        node: Undone<N.TsTypeParameter>,\n      ) => void = this.tsParseNoneModifiers.bind(this),\n    ): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers?: ((node: N.TsTypeParameter) => void) | null,\n    ): N.TsTypeParameterDeclaration | undefined | null {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(\n      parseModifiers?: ((node: N.TsTypeParameter) => void) | null,\n    ) {\n      const node = this.startNode<N.TsTypeParameterDeclaration>();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        // @ts-expect-error refine typings\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, { at: node });\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): N.TsTypeReference | undefined | null {\n      if (this.lookahead().type !== tt._const) return null;\n\n      this.next();\n      const typeReference = this.tsParseTypeReference();\n\n      // If the type reference has type parameters, then you are using it as a\n      // type and not as a const signifier. We'll *never* be able to find this\n      // name, since const isn't allowed as a type name. So in this instance we\n      // get to pretend we're the type checker.\n      if (typeReference.typeParameters) {\n        this.raise(TSErrors.CannotFindName, {\n          at: typeReference.typeName,\n          name: \"const\",\n        });\n      }\n\n      return typeReference;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: Undone<N.TsSignatureDeclaration>,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): Array<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern\n    > {\n      return super\n        .parseBindingList(tt.parenR, charCodes.rightParenthesis)\n        .map(pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n              at: pattern,\n              type: pattern.type,\n            });\n          }\n          return pattern as any;\n        });\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: Undone<\n        N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration\n      >,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(\n      node: Undone<N.TsIndexSignature>,\n    ): N.TsIndexSignature | undefined | null {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, { at: node });\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, { at: this.state.curPosition() });\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, { at: this.state.curPosition() });\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n              at: method[returnTypeKey],\n            });\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id = this.startNode<N.Identifier>();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"readonly\"],\n        disallowedModifiers: [\n          \"declare\",\n          \"abstract\",\n          \"private\",\n          \"protected\",\n          \"public\",\n          \"static\",\n          \"override\",\n        ],\n      });\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      super.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        super.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node = this.startNode<N.TsTypeLiteral>();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): Array<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node = this.startNode<N.TsMappedType>();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node = this.startNode<N.TsTupleType>();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements: boolean | null = null;\n      node.elementTypes.forEach(elementNode => {\n        const { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, {\n            at: elementNode,\n          });\n        }\n\n        seenOptionalElement ||=\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        let checkType = type;\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          checkType = elementNode.type;\n        }\n\n        const isLabeled = checkType === \"TSNamedTupleMember\";\n        labeledElements ??= isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n            at: elementNode,\n          });\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type: N.TsType | N.TsNamedTupleMember = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = type.typeName as N.Identifier;\n        } else {\n          this.raise(TSErrors.InvalidTupleMemberLabel, { at: type });\n          // @ts-expect-error This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode = this.startNodeAtNode<N.TsOptionalType>(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode = this.startNodeAt<N.TsRestType>(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode<N.TsParenthesizedType>();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node = this.startNode<\n        N.TsFunctionOrConstructorType | N.TsConstructorType\n      >();\n      if (type === \"TSConstructorType\") {\n        (node as Undone<N.TsConstructorType>).abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node = this.startNode<N.TsLiteralType>();\n      // @ts-expect-error refine typings\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return super.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node = this.startNode<N.TsLiteralType>();\n      node.literal = super.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType | N.Node {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node = this.startNode<N.TsLiteralType>();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            // @ts-expect-error: parseMaybeUnary must returns unary expression\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                ? \"TSNullKeyword\"\n                : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node = this.startNode<N.TsKeywordType>();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node = this.startNodeAtNode<N.TsArrayType>(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node = this.startNodeAtNode<N.TsIndexedAccessType>(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node = this.startNode<N.TsTypeOperator>();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(\n          // @ts-expect-error todo(flow->ts)\n          node,\n        );\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, { at: node });\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode<N.TsInferType>();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode<N.TsTypeParameter>();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n        ? this.tsParseInferType()\n        : this.tsInAllowConditionalTypesContext(() =>\n            this.tsParseArrayTypeOrHigher(),\n          );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node = this.startNode<N.TsUnionType | N.TsIntersectionType>();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          super.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            true,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t = this.startNode<N.TsTypeAnnotation>();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = thisTypePredicate as N.TsThisType;\n            node.asserts = true;\n            (node as N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate as N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node as N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation():\n      | N.TsTypeAnnotation\n      | undefined\n      | null {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): N.TsTypeAnnotation | undefined | null {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): N.TsType | undefined | null {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): N.Identifier | undefined | null {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(Errors.InvalidEscapedReservedWord, {\n          at: this.state.lastTokStartLoc,\n          reservedWord: \"asserts\",\n        });\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: Undone<N.TsTypeAnnotation> = this.startNode<N.TsTypeAnnotation>(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node = this.startNodeAtNode<N.TsConditionalType>(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, { at: this.state.startLoc });\n      }\n\n      const node = this.startNode<N.TsTypeAssertion>();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): Array<N.TsExpressionWithTypeArguments> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          const node = this.startNode<N.TsExpressionWithTypeArguments>();\n          node.expression = this.tsParseEntityName();\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.tsParseTypeArguments();\n          }\n\n          return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, {\n          at: originalStartLoc,\n          token,\n        });\n      }\n\n      return delimitedList;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: Undone<N.TsInterfaceDeclaration>,\n      properties: {\n        declare?: true;\n      } = {},\n    ): N.TsInterfaceDeclaration | undefined | null {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, { at: this.state.startLoc });\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body = this.startNode<N.TSInterfaceBody>();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers.bind(this),\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node = this.startNode<N.TsKeywordType>();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node = this.startNode<N.TsEnumMember>();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? super.parseStringLiteral(this.state.value)\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = super.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: Undone<N.TsEnumDeclaration>,\n      properties: {\n        const?: true;\n        declare?: true;\n      } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node = this.startNode<N.TsModuleBlock>();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      super.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: Undone<N.TsModuleDeclaration>,\n      nested: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode<N.TsModuleDeclaration>();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        // @ts-expect-error Fixme: refine typings\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = super.parseStringLiteral(this.state.value);\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: Undone<N.TsImportEqualsDeclaration>,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_FLAGS_TS_IMPORT);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, {\n          at: moduleReference,\n        });\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node = this.startNode<N.TsExternalModuleReference>();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T extends N.NodeBase | undefined | null>(\n      f: () => T,\n    ): T | undefined | null {\n      const result = this.tryParse(\n        abort =>\n          // @ts-expect-error todo(flow->ts)\n          f() || abort(),\n      );\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      // @ts-expect-error refine typings\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => T | undefined | false): T | undefined {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): N.Declaration | undefined | null {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind: \"let\" | null;\n\n      if (this.isContextual(tt._let)) {\n        starttype = tt._var;\n        kind = \"let\" as const;\n      }\n\n      // @ts-expect-error refine typings\n      return this.tsInAmbientContext(() => {\n        if (starttype === tt._function) {\n          nany.declare = true;\n          return super.parseFunctionStatement(\n            nany,\n            /* async */ false,\n            /* declarationPosition */ true,\n          );\n        }\n\n        if (starttype === tt._class) {\n          // While this is also set by tsParseExpressionStatement, we need to set it\n          // before parsing the class declaration to know how to register it in the scope.\n          nany.declare = true;\n          return this.parseClass(\n            nany,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          );\n        }\n\n        if (starttype === tt._enum) {\n          return this.tsParseEnumDeclaration(nany, { declare: true });\n        }\n\n        if (starttype === tt._global) {\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n        }\n\n        if (starttype === tt._const || starttype === tt._var) {\n          if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n            nany.declare = true;\n            return this.parseVarStatement(nany, kind || this.state.value, true);\n          }\n\n          // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n          this.expect(tt._const);\n          return this.tsParseEnumDeclaration(nany, {\n            const: true,\n            declare: true,\n          });\n        }\n\n        if (starttype === tt._interface) {\n          const result = this.tsParseInterfaceDeclaration(nany, {\n            declare: true,\n          });\n          if (result) return result;\n        }\n\n        if (tokenIsIdentifier(starttype)) {\n          return this.tsParseDeclaration(\n            nany,\n            this.state.value,\n            /* next */ true,\n          );\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): N.Declaration | undefined | null {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(\n      node: Undone<N.TsModuleDeclaration>,\n      expr: N.Identifier,\n    ): N.Declaration | undefined | null {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod = node as Undone<N.TsModuleDeclaration>;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): N.Declaration | undefined | null {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      if (!this.match(tt.lt)) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: Undone<N.ArrowFunctionExpression> | undefined | null =\n        this.tsTryParseAndCatch(() => {\n          const node = this.startNodeAt<N.ArrowFunctionExpression>(\n            startPos,\n            startLoc,\n          );\n          node.typeParameters = this.tsParseTypeParameters();\n          // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n          super.parseFunctionParams(node);\n          node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n          this.expect(tt.arrow);\n          return node;\n        });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return super.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES productions, where the first token\n    // has been created without state.inType. Thus we need to rescan the lt token.\n    tsParseTypeArgumentsInExpression(): N.TsTypeParameterInstantiation | void {\n      if (this.reScan_lt() !== tt.lt) {\n        return undefined;\n      }\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode<N.TsTypeParameterInstantiation>();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, { at: node });\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: boolean | undefined | null,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: N.Accessibility | undefined | null;\n      let readonly = false;\n      let override = false;\n      if (allowModifiers !== undefined) {\n        const modified: ModifierBase = {};\n        this.tsParseModifiers({\n          modified,\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        });\n        accessibility = modified.accessibility;\n        override = modified.override;\n        readonly = modified.readonly;\n        if (\n          allowModifiers === false &&\n          (accessibility || readonly || override)\n        ) {\n          this.raise(TSErrors.UnexpectedParameterModifier, { at: startLoc });\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp = this.startNodeAt<N.TSParameterProperty>(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, { at: pp });\n        }\n        pp.parameter = elt as any as N.Identifier | N.AssignmentPattern;\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        return this.finishNode(node, bodilessType);\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, { at: node });\n        if ((node as Undone<N.FunctionDeclaration>).declare) {\n          return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        }\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(node);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: Array<N.Expression | undefined | null>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, {\n            at: node.typeAnnotation,\n          });\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: Array<N.Expression | undefined | null>,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isInParens?: boolean,\n    ): Array<N.Expression | undefined | null> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression = this.startNodeAt<N.TsNonNullExpression>(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = super.parseTaggedTemplateExpression(\n              base,\n              startPos,\n              startLoc,\n              state,\n            );\n            result.typeParameters = typeArguments;\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node = this.startNodeAt<\n              N.CallExpression | N.OptionalCallExpression\n            >(startPos, startLoc);\n            node.callee = base;\n            // possibleAsync always false here, because we would have handled it above.\n            // @ts-expect-error (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(\n              tt.parenR,\n              /* possibleAsync */ false,\n            );\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            node.typeParameters = typeArguments;\n            if (state.optionalChainMember) {\n              (node as Undone<N.OptionalCallExpression>).optional =\n                isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>>>c is not (a<b>)>>c, but a<(b>>>c)\n            tokenType === tt.bitShiftR ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node = this.startNodeAt<N.TsInstantiationExpression>(\n            startPos,\n            startLoc,\n          );\n          node.expression = base;\n          node.typeParameters = typeArguments;\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (\n            result.type === \"TSInstantiationExpression\" &&\n            (this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis))\n          ) {\n            this.raise(\n              TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n              { at: this.state.startLoc },\n            );\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        node.typeParameters = callee.typeParameters;\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ): N.Expression {\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(tt._as)\n      ) {\n        const node = this.startNodeAt<N.TsAsExpression>(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(\n          // @ts-expect-error todo(flow->ts)\n          node,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(\n      node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    ): N.AnyImport {\n      node.importKind = \"value\";\n      if (\n        tokenIsIdentifier(this.state.type) ||\n        this.match(tt.star) ||\n        this.match(tt.braceL)\n      ) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(tt._type) &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          ahead.type !== tt._from &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (tokenIsIdentifier(this.state.type) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(\n            node as Undone<N.TsImportEqualsDeclaration>,\n          );\n        }\n      }\n\n      const importNode = super.parseImport(node as Undone<N.ImportDeclaration>);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        // @ts-expect-error refine typings\n        importNode.specifiers.length > 1 &&\n        // @ts-expect-error refine typings\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n          at: importNode,\n        });\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: Undone<N.Node>): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(tt._type) &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(\n          node as Undone<N.TsImportEqualsDeclaration>,\n          /* isExport */ true,\n        );\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign = node as Undone<N.TsExportAssignment>;\n        assign.expression = super.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl = node as Undone<N.TsNamespaceExportDeclaration>;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (\n          this.isContextual(tt._type) &&\n          this.lookahead().type === tt.braceL\n        ) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(\n          node as Undone<N.ExportAllDeclaration | N.ExportDefaultDeclaration>,\n        );\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode<N.Class>();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        return this.parseClass(cls, true, true);\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(\n          this.startNode<N.TsInterfaceDeclaration>(),\n        );\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        //\n        // If a const declaration has no type annotation and is initiailized to\n        // a string literal, numeric literal, or enum reference, then it is\n        // allowed. In an ideal world, we'd check whether init was *actually* an\n        // enum reference, but we allow anything that \"could be\" a literal enum\n        // in `isPossiblyLiteralEnum` since we don't have all the information\n        // that the typescript compiler has.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n            at: init,\n          });\n        } else if (\n          init.type !== \"StringLiteral\" &&\n          init.type !== \"BooleanLiteral\" &&\n          init.type !== \"NumericLiteral\" &&\n          init.type !== \"BigIntLiteral\" &&\n          (init.type !== \"TemplateLiteral\" || init.expressions.length > 0) &&\n          !isPossiblyLiteralEnum(init)\n        ) {\n          this.raise(\n            TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            { at: init },\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(\n      context?: string | null,\n      topLevel?: boolean | null,\n    ): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node = this.startNode<N.TsEnumDeclaration>();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(\n          this.startNode<N.TsEnumDeclaration>(),\n        );\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): N.Accessibility | undefined | null {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: readonly TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ] as const;\n      this.tsParseModifiers({\n        modified: member,\n        allowedModifiers: modifiers,\n        disallowedModifiers: [\"in\", \"out\"],\n        stopOnStartOfClassStaticBlock: true,\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n              at: this.state.curPosition(),\n            });\n          }\n          super.parseClassStaticBlock(\n            classBody,\n            member as any as N.StaticBlock,\n          );\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: Undone<N.ClassMember | N.TsIndexSignature>,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(\n        member as Undone<N.TsIndexSignature>,\n      );\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member as any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, { at: member });\n        }\n        if ((member as any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, {\n            at: member,\n            modifier: (member as any).accessibility,\n          });\n        }\n        if ((member as any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, { at: member });\n        }\n        if ((member as any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, { at: member });\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member as any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n          at: member,\n        });\n      }\n\n      if ((member as any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, { at: member });\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member as Undone<N.ClassMember>,\n        state,\n        isStatic,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp as any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, { at: methodOrProp });\n      }\n\n      if ((methodOrProp as any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, { at: methodOrProp });\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    // @ts-expect-error plugin overrides interfaces\n    parseExpressionStatement(\n      node: Undone<N.ExpressionStatement>,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? // @ts-expect-error refine typings\n            this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TsTypeCastExpression>(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n          at: this.state.startLoc,\n        });\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: N.Declaration | undefined | null =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType?: BindingTypes,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node as any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (\n        this.state.isAmbientContext &&\n        !(node.readonly && !node.typeAnnotation) &&\n        this.match(tt.eq)\n      ) {\n        this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n          at: this.state.startLoc,\n        });\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(TSErrors.AbstractPropertyHasInitializer, {\n          at: this.state.startLoc,\n          propertyName:\n            key.type === \"Identifier\" && !node.computed\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n        });\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // @ts-expect-error abstract may not index node\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, { at: node });\n      }\n\n      // @ts-expect-error accessibility may not index node\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, {\n          at: node,\n          // @ts-expect-error refine typings\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, {\n          at: typeParameters,\n        });\n      }\n\n      // @ts-expect-error declare does not exist in ClassMethod\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, { at: method, kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (node.type === \"MethodDefinition\" && !node.value.body) return;\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        // @ts-expect-error refine typings\n        node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startPos: number | undefined | null,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ) {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      return super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: State | undefined | null;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: N.TsTypeParameterDeclaration | undefined | null;\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(\n          refExpressionErrors,\n          afterLeftParse,\n        );\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters.params[0];\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(TSErrors.SingleTypeParameterWithoutTrailingComma, {\n                at: createPositionWithColumnOffset(parameter.loc.end, 1),\n                typeParameterName: parameter.name.name,\n              });\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, { at: node });\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(\n      refExpressionErrors?: ExpressionErrors | null,\n      sawUnary?: boolean,\n    ): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n      }\n    }\n\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          // @ts-expect-error refine typings\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isAmbientContext &&\n          !this.state.inType\n        ) {\n          this.raise(TSErrors.PatternIsOptional, { at: param });\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParemeterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              { at: node },\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, { at: node });\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left);\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    // @ts-expect-error plugin overrides interfaces\n    isValidLVal(\n      type:\n        | \"TSTypeCastExpression\"\n        | \"TSParameterProperty\"\n        | \"TSNonNullExpression\"\n        | \"TSAsExpression\"\n        | \"TSTypeAssertion\",\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return (\n        getOwn(\n          {\n            // Allow \"typecasts\" to appear on the left of assignment expressions,\n            // because it may be in an arrow function.\n            // e.g. `const f = (foo: number = 0) => foo;`\n            TSTypeCastExpression: true,\n            TSParameterProperty: \"parameter\",\n            TSNonNullExpression: \"expression\",\n            TSAsExpression: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSTypeAssertion: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n          },\n          type,\n        ) || super.isValidLVal(type, isUnparenthesizedInAssign, binding)\n      );\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(\n      close: typeof charCodes[keyof typeof charCodes],\n    ): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      } else {\n        return super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(\n      startPos?: number | null,\n      startLoc?: Position | null,\n      left?: Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          return this.finishOp(tt.gt, 1);\n        }\n        if (code === charCodes.lessThan) {\n          return this.finishOp(tt.lt, 1);\n        }\n      }\n      return super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableList(\n      exprList: Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(\n            expr as N.TsTypeCastExpression,\n          );\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          // @ts-expect-error: refine typings\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        // @ts-expect-error: refine typings\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T extends N.Class>(\n      node: Undone<T>,\n      isStatement: boolean,\n      optionalId?: boolean,\n    ): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node as any).abstract;\n      try {\n        return super.parseClass(node, isStatement, optionalId);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | undefined | null {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          node as N.ClassDeclaration,\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n            at: node,\n          });\n          return this.tsParseInterfaceDeclaration(\n            node as N.TsInterfaceDeclaration,\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod<\n      T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope?: boolean,\n    ) {\n      const method = super.parseMethod<T>(\n        node,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error todo(flow->ts) property not defined for all types in union\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? // @ts-expect-error estree typings\n            !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, {\n            at: method,\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(key.start, key.end)}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: Undone<N.ExportSpecifier>,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: Undone<N.ImportSpecifier>,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      bindingType: BindingTypes | undefined,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n        isInTypeOnlyImport ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          { at: loc },\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(\n          node[rightOfAsKey],\n          hasTypeSpecifier ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT,\n        );\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\") return false;\n  if (expression.computed) return false;\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n", "import * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type * as N from \"../types\";\nimport { ParseErrorEnum } from \"../parse-error\";\nimport type { Undone } from \"../parser/node\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport type { BindingTypes } from \"../util/scopeflags\";\nimport type { Position } from \"../util/location\";\n\ntype PossiblePlaceholedrs = {\n  Identifier: N.Identifier;\n  StringLiteral: N.StringLiteral;\n  Expression: N.Expression;\n  Statement: N.Statement;\n  Declaration: N.Declaration;\n  BlockStatement: N.BlockStatement;\n  ClassBody: N.ClassBody;\n  Pattern: N.Pattern;\n};\nexport type PlaceholderTypes = keyof PossiblePlaceholedrs;\n\ntype NodeOf<T extends keyof PossiblePlaceholedrs> = PossiblePlaceholedrs[T];\n// todo: when there  is proper union type for Node\n// type NodeOf<T extends PlaceholderTypes> = Extract<N.Node, { type: T }>;\n\n// todo: Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T extends PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\",\n});\n\n/* eslint-disable sort-keys */\n\nexport default (superClass: typeof Parser) =>\n  class PlaceholdersParserMixin extends superClass implements Parser {\n    parsePlaceholder<T extends PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ MaybePlaceholder<T> | undefined | null {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        // @ts-expect-error placeholder typings\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T extends PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      // @ts-expect-error todo(flow->ts)\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(\n      refExpressionErrors?: ExpressionErrors | null,\n    ): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") ||\n        super.parseExprAtom(refExpressionErrors)\n      );\n    }\n\n    parseIdentifier(liberal?: boolean): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal)\n      );\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ) {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n    }\n\n    isValidLVal(type: string, isParenthesized: boolean, binding: BindingTypes) {\n      return (\n        type === \"Placeholder\" ||\n        super.isValidLVal(type, isParenthesized, binding)\n      );\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context?: string | null): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(tt._let)) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(\n      node: N.BreakStatement | N.ContinueStatement,\n      isBreak: boolean,\n    ) {\n      // @ts-expect-error: node.label could be Placeholder\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(node, isBreak);\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        // @ts-expect-error placeholder typings\n        return super.parseExpressionStatement(node, expr);\n      }\n\n      if (this.match(tt.colon)) {\n        // @ts-expect-error placeholder typings\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = super.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(\n      allowDirectives?: boolean,\n      createNewLexicalScope?: boolean,\n      afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n    ): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(\n          allowDirectives,\n          createNewLexicalScope,\n          afterBlockParse,\n        )\n      );\n    }\n\n    parseFunctionId(\n      requireId?: boolean,\n    ): MaybePlaceholder<\"Identifier\"> | undefined | null {\n      return (\n        this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId)\n      );\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseClass<T extends N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n            at: this.state.startLoc,\n          });\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      super.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        super.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(node);\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(node);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          // @ts-expect-error placeholder typings\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration>,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(node);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier =\n        this.startNodeAtNode<N.ImportDefaultSpecifier>(placeholder);\n      specifier.local = placeholder;\n      node.specifiers.push(\n        this.finishNode(specifier, \"ImportDefaultSpecifier\"),\n      );\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource()\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (this.state.start > this.state.lastTokEndLoc.index) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, {\n          at: this.state.lastTokEndLoc,\n        });\n      }\n    }\n  };\n", "import type Parser from \"../parser\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types\";\nimport type * as N from \"../types\";\nimport type { ExpressionErrors } from \"../parser/util\";\n\nexport default (superClass: typeof Parser) =>\n  class V8IntrinsicMixin extends superClass implements Parser {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode<N.Identifier>();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          // @ts-expect-error: avoid mutating AST types\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      return (\n        this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors)\n      );\n    }\n  };\n", "import type Parser from \"./parser\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"./typings\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = PluginConfig[];\n\nexport type MixinPlugin = (superClass: { new (...args: any): Parser }) => {\n  new (...args: any): Parser;\n};\n\n// This function\u2019s second parameter accepts either a string (plugin name) or an\n// array pair (plugin name and options object). If an options object is given,\n// then each value is non-recursively checked for identity with the actual\n// option value of each plugin in the first argument (which is an array of\n// plugin names or array pairs).\nexport function hasPlugin(\n  plugins: PluginList,\n  expectedConfig: PluginConfig,\n): boolean {\n  // The expectedOptions object is by default an empty object if the given\n  // expectedConfig argument does not give an options object (i.e., if it is a\n  // string).\n  const [expectedName, expectedOptions] =\n    typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n\n  const expectedKeys = Object.keys(expectedOptions);\n\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        // @ts-expect-error key may not exist in plugin options\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\n\nexport function getPluginOption<\n  PluginName extends ParserPluginWithOptions[0],\n  OptionName extends keyof PluginOptions<PluginName>,\n>(plugins: PluginList, name: PluginName, option: OptionName) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return (plugin[1] as PluginOptions<PluginName>)[option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (\n      decoratorsBeforeExport != null &&\n      typeof decoratorsBeforeExport !== \"boolean\"\n    ) {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n\n    const allowCallParenthesized = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"allowCallParenthesized\",\n    );\n    if (\n      allowCallParenthesized != null &&\n      typeof allowCallParenthesized !== \"boolean\"\n    ) {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\n      \"recordAndTuple\",\n      { syntaxType: \"hash\" },\n    ]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // @ts-expect-error so @babel/core can provide better error message\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames = Object.keys(mixinPlugins) as ReadonlyArray<\n  \"estree\" | \"jsx\" | \"flow\" | \"typescript\" | \"v8intrinsic\" | \"placeholders\"\n>;\n", "import type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType;\n  sourceFilename?: string;\n  startColumn: number;\n  startLine: number;\n  allowAwaitOutsideFunction: boolean;\n  allowReturnOutsideFunction: boolean;\n  allowImportExportEverywhere: boolean;\n  allowSuperOutsideMethod: boolean;\n  allowUndeclaredExports: boolean;\n  plugins: PluginList;\n  strictMode: boolean | undefined | null;\n  ranges: boolean;\n  tokens: boolean;\n  createParenthesizedExpressions: boolean;\n  errorRecovery: boolean;\n  attachComment: boolean;\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Column (0-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startColumn: 0,\n  // Line (1-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts?: Options | null): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    // @ts-expect-error key may not exist in opts\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n", "import * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  AssignmentPattern,\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  ObjectOrClassMember,\n  ClassMember,\n  ObjectMember,\n  TsNamedTypeElementBase,\n  PrivateName,\n  ObjectExpression,\n  ObjectPattern,\n  ArrayExpression,\n  ArrayPattern,\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils, type Undone } from \"./node\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_SCOPE_LEXICAL,\n} from \"../util/scopeflags\";\nimport type { ExpressionErrors } from \"./util\";\nimport { Errors, type LValAncestor } from \"../parse-error\";\nimport type Parser from \"./index\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default abstract class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  abstract parseIdentifier(liberal?: boolean): Identifier;\n  abstract parseMaybeAssign(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseMaybeAssignAllowIn(\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: Pos | null,\n  ): Expression;\n\n  abstract parseObjectLike<T extends ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): T;\n  abstract parseObjPropValue(\n    prop: any,\n    startPos: number | null,\n    startLoc: Position | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void;\n  abstract parsePropertyName(\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ): Expression | Identifier;\n  abstract parsePrivateName(): PrivateName;\n  // Forward-declaration: defined in statement.js\n  abstract parseDecorator(): Decorator;\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression.\n   *                                If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *                                If isLHS is `false`, we are in an arrow function parameters list.\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): void {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParemeterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParemeterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            { at: node },\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc,\n            });\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, { at: node.left.loc.end });\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        { at: prop.key },\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, { at: prop });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaLoc: Position | undefined | null,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, /* allowPattern */ true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, { at: elt });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, { at: trailingCommaLoc });\n        }\n      }\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return (node.properties as ObjectExpression[\"properties\"]).every(\n          (prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type !== \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          },\n        );\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return (node as ArrayExpression).elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isParenthesizedExpr?: boolean,\n  ): ReadonlyArray<Expression | undefined | null> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): SpreadElement {\n    const node = this.startNode<SpreadElement>();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(this: Parser): RestElement {\n    const node = this.startNode<RestElement>();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(this: Parser): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode<ArrayPattern>();\n        this.next();\n        // @ts-expect-error: Fixme: TSParameterProperty can not be assigned to node.elements\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    this: Parser,\n    close: TokenType,\n    closeCharCode: typeof charCodes[keyof typeof charCodes],\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): Array<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc,\n          });\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(\n    this: Parser,\n    prop: Undone<RestElement>,\n  ): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(this: Parser): ObjectMember | RestElement {\n    const prop = this.startNode<ObjectMember | RestElement>();\n    const { type, start: startPos, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(prop as Undone<RestElement>);\n    } else if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      (prop as Undone<ObjectMember>).key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop as Undone<ObjectMember>);\n    }\n    (prop as Undone<ObjectMember>).method = false;\n    return this.parseObjPropValue(\n      prop as Undone<ObjectMember>,\n      startPos,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n  }\n\n  parseAssignableListItem(\n    this: Parser,\n    allowModifiers: boolean | undefined | null,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    this: Parser,\n    startPos?: number | null,\n    startLoc?: Position | null,\n    left?: Pattern | null,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt<AssignmentPattern>(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus it's descendents must be subsquently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param {NodeType} type A Node `type` string\n   * @param {boolean} isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param {BindingTypes} binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns { boolean | string | [string, boolean] }\n   *          `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    binding: BindingTypes,\n  ): string | boolean {\n    return getOwn(\n      {\n        AssignmentPattern: \"left\",\n        RestElement: \"argument\",\n        ObjectProperty: \"value\",\n        ParenthesizedExpression: \"expression\",\n        ArrayPattern: \"elements\",\n        ObjectPattern: \"properties\",\n      },\n      // @ts-expect-error refine string to enum\n      type,\n    );\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param {Expression} expression The expression in question to check.\n   * @param {Object} options A set of options described below.\n   * @param {LValAncestor} options.in\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param {BindingTypes} [options.binding=BIND_NONE]\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BIND_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param {Set<string>|false} [options.checkClashes=false]\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param {boolean} [options.allowingSloppyLetBinding]\n   *        Whether an identifier named \"let\" should be allowed in sloppy mode.\n   *        Defaults to `true` unless lexical scope its being used. This property\n   *        is only relevant if the parser's state is in sloppy mode.\n   * @param {boolean} [options.strictModeChanged=false]\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param {boolean} [options.hasParenthesizedAncestor=false]\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   * @memberof LValParser\n   */\n\n  checkLVal(\n    expression: Expression | ObjectMember | RestElement,\n    {\n      in: ancestor,\n      binding = BIND_NONE,\n      checkClashes = false,\n      strictModeChanged = false,\n      allowingSloppyLetBinding = !(binding & BIND_SCOPE_LEXICAL),\n      hasParenthesizedAncestor = false,\n    }: {\n      in: LValAncestor;\n      binding?: BindingTypes;\n      checkClashes?: Set<string> | false;\n      strictModeChanged?: boolean;\n      allowingSloppyLetBinding?: boolean;\n      hasParenthesizedAncestor?: boolean;\n    },\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, { at: expression });\n      }\n      return;\n    }\n\n    if (expression.type === \"Identifier\") {\n      this.checkIdentifier(\n        expression as Identifier,\n        binding,\n        strictModeChanged,\n        allowingSloppyLetBinding,\n      );\n\n      const { name } = expression as Identifier;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, { at: expression });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      expression.type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, {\n        at: expression,\n        ancestor:\n          ancestor.type === \"UpdateExpression\"\n            ? { type: \"UpdateExpression\", prefix: ancestor.prefix }\n            : { type: ancestor.type },\n      });\n      return;\n    }\n\n    const [key, isParenthesizedExpression] = Array.isArray(validity)\n      ? validity\n      : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor =\n      expression.type === \"ArrayPattern\" ||\n      expression.type === \"ObjectPattern\" ||\n      expression.type === \"ParenthesizedExpression\"\n        ? expression\n        : ancestor;\n\n    // @ts-expect-error key may not index expression.\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          // @ts-expect-error: refine types\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          allowingSloppyLetBinding,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression,\n        });\n      }\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingTypes,\n    strictModeChanged: boolean = false,\n    allowLetBinding: boolean = !(bindingType & BIND_SCOPE_LEXICAL),\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, { at, referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (!allowLetBinding && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, { at });\n    }\n\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingTypes) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, { at: node });\n    }\n  }\n\n  checkCommaAfterRest(\n    close: typeof charCodes[keyof typeof charCodes],\n  ): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      { at: this.state.startLoc },\n    );\n\n    return true;\n  }\n}\n", "// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts \u2014 that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport type * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier\";\nimport { Position, createPositionWithColumnOffset } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport type { ParamKind } from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, type ParseError } from \"../parse-error\";\nimport { UnparenthesizedPipeBodyDescriptions } from \"../parse-error/pipeline-operator-errors\";\nimport { setInnerComments } from \"./comments\";\nimport { cloneIdentifier, type Undone } from \"./node\";\nimport type Parser from \".\";\n\nimport type { SourceType } from \"../options\";\n\nexport default abstract class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  abstract parseBlock(\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement;\n  abstract parseClass(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ): N.Class;\n  abstract parseDecorators(allowExport?: boolean): void;\n  abstract parseFunction<T extends N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ): T;\n  abstract parseFunctionParams(\n    node: N.Function,\n    allowModifiers?: boolean,\n  ): void;\n  abstract takeDecorators(node: N.HasDecorators): void;\n  abstract parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: N.Directive[] | null | undefined,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void;\n  abstract parseProgram(\n    program: N.Program,\n    end: TokenType,\n    sourceType?: SourceType,\n  ): N.Program;\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean | undefined | null,\n    protoRef: {\n      used: boolean;\n    },\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // @ts-expect-error prop must be an ObjectProperty\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, { at: key });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, { at: key });\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(this: Parser): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    // @ts-expect-error fixme: refine types\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    this: Parser,\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParseError<any>,\n  ) {\n    refExpressionErrors.optionalParametersLoc =\n      resultError?.loc ?? this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt<N.AssignmentExpression>(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startPos\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startPos\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startPos\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\"),\n      });\n      // @ts-expect-error todo(flow->ts) improve node types\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    this: Parser,\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    this: Parser,\n    left: N.Expression | N.PrivateName,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt<N.LogicalExpression | N.BinaryExpression>(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc,\n            });\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return this.parseExprOp(\n          finishedNode,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc,\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(this: Parser): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      // @ts-expect-error TS2345: Argument of type 'string' is not assignable to parameter of type '\"ArrowFunctionExpression\" | \"YieldExpression\" | \"AssignmentExpression\" | \"ConditionalExpression\"'.\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        // @ts-expect-error TS2322: Type 'string' is not assignable to type '\"AssignmentExpression\" | \"ArrowFunctionExpression\" | \"ConditionalExpression\" | \"YieldExpression\"'.\n        type: body.type,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, { at: startLoc });\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(\n    node: N.AwaitExpression | Undone<N.UnaryExpression>,\n  ) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument,\n      });\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode<N.UnaryExpression | N.UpdateExpression>();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, { at: node });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, { at: node });\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node as Undone<N.UnaryExpression>);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(\n      // @ts-expect-error using \"Undone\" node as \"done\"\n      node,\n      update,\n      refExpressionErrors,\n    );\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, { at: startLoc });\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    this: Parser,\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (update) {\n      // @ts-expect-error Type 'Node' is missing the following properties from type 'Undone<UpdateExpression>': prefix, operator, argument\n      const updateExpressionNode = node as Undone<N.UpdateExpression>;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\"),\n      });\n      return node;\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt<N.UpdateExpression>(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: (expr = this.finishNode(node, \"UpdateExpression\")),\n      });\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: boolean | null,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(\n          base,\n          startPos,\n          startLoc,\n          state,\n          computed,\n          optional,\n        );\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt<\n      N.OptionalMemberExpression | N.MemberExpression\n    >(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, { at: startLoc });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      (node as N.OptionalMemberExpression).optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors: ExpressionErrors | null = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    const node = this.startNodeAt<N.CallExpression | N.OptionalCallExpression>(\n      startPos,\n      startLoc,\n    );\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      // @ts-expect-error when optionalChainMember is true, node must be an optional call\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        // @ts-expect-error todo(flow->ts)\n        node,\n        refExpressionErrors,\n      );\n    }\n    let finishedNode:\n      | N.CallExpression\n      | N.OptionalCallExpression\n      | N.ArrowFunctionExpression = this.finishCallExpression(\n      node,\n      optionalChainMember,\n    );\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt<N.ArrowFunctionExpression>(startPos, startLoc),\n        finishedNode as N.CallExpression,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return finishedNode;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node = this.startNodeAt<N.TaggedTemplateExpression>(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, { at: startLoc });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n    node: Undone<T>,\n    optional: boolean,\n  ): T {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount:\n            this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n              ? 2\n              : 1,\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, { at: arg });\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    this: Parser,\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: N.Node | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): Array<N.Expression | undefined | null> {\n    const elts: N.Expression[] = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node as N.ArrowFunctionExpression;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(this: Parser): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression \u2014 either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    let node;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode<N.MetaProperty | N.Import>();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node as Undone<N.MetaProperty>);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode<N.Class>();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, { at: callee });\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: this.state.startLoc,\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName();\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          break;\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n            !this.hasFollowingLineBreak()\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(\n                this.startNodeAtNode(id),\n                undefined,\n                true,\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that \u201Ctopic token\u201D.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the \u201Ctopic token\u201D, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token\u2019s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode<N.TopicReference>();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin\u2019s configuration matches the current token\u2019s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin\u2019s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin\u2019s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference(\n    node: Undone<N.Node>,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): N.Expression {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin\u2019s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      const nodeType =\n        pipeProposal === \"smart\"\n          ? \"PipelinePrimaryTopicReference\"\n          : // The proposal must otherwise be \"hack\",\n            // as enforced by testTopicReferenceConfiguration.\n            \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(\n          // The topic reference is not allowed in the current context:\n          // it is outside of a pipe body.\n          // Raise recoverable errors.\n          pipeProposal === \"smart\"\n            ? Errors.PrimaryTopicNotAllowed\n            : // In this case, `pipeProposal === \"hack\"` is true.\n              Errors.PipeTopicUnbound,\n          { at: startLoc },\n        );\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin\u2019s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin\u2019s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration\u2019s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            // @ts-expect-error token must have a label\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, { at: startLoc });\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n  ): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition(),\n      });\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    return this.parseArrowExpression(node, params, true);\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(\n    this: Parser,\n    node: Undone<N.DoExpression>,\n    isAsync: boolean,\n  ): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode<N.Super>();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.SuperNotAllowed, { at: node });\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.UnexpectedSuper, { at: node });\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, { at: node });\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode<N.PrivateName>();\n    const id = this.startNodeAt<N.Identifier>(\n      this.state.start + 1,\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      new Position(\n        this.state.curLine,\n        this.state.start + 1 - this.state.lineStart,\n        this.state.start + 1,\n      ),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(\n    this: Parser,\n  ): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode<N.FunctionExpression | N.MetaProperty>();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"sent\",\n      );\n    }\n    return this.parseFunction(node as Undone<N.FunctionExpression>);\n  }\n\n  parseMetaProperty(\n    node: Undone<N.MetaProperty>,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: Undone<N.MetaProperty>): N.MetaProperty {\n    const id = this.createIdentifier(\n      this.startNodeAtNode<N.Identifier>(node),\n      \"import\",\n    );\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, { at: id });\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T extends N.Node>(\n    value: any,\n    type: T[\"type\"],\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T extends N.Node>(value: any, type: T[\"type\"]): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: {\n    value: any;\n    pattern: string;\n    flags: N.RegExpLiteral[\"flags\"];\n  }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode<N.BooleanLiteral>();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode<N.NullLiteral>();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(\n    this: Parser,\n    canBeArrow: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList: N.Expression[] = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt<N.ArrowFunctionExpression>(\n      startPos,\n      startLoc,\n    );\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      // @ts-expect-error todo(flow->ts) improve node types\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt<N.SequenceExpression>(\n        innerStartPos,\n        innerStartLoc,\n      );\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(\n      startPos,\n      startLoc,\n      // @ts-expect-error todo(flow->ts)\n      val,\n    );\n  }\n\n  wrapParenthesis(\n    startPos: number,\n    startLoc: Position,\n    expression: N.Expression,\n  ): N.Expression {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startPos);\n\n      this.takeSurroundingComments(\n        expression,\n        startPos,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression = this.startNodeAt<N.ParenthesizedExpression>(\n      startPos,\n      startLoc,\n    );\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(\n    node: Undone<N.ArrowFunctionExpression>,\n  ): Undone<N.ArrowFunctionExpression> | undefined {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startPos: number,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startLoc: Position,\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(this: Parser): N.NewExpression | N.MetaProperty {\n    const node = this.startNode<N.NewExpression | N.MetaProperty>();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"new\",\n      );\n      this.next();\n      const metaProp = this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"target\",\n      );\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(Errors.UnexpectedNewTarget, { at: metaProp });\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node as Undone<N.NewExpression>);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call \u2014 at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(this: Parser, node: Undone<N.NewExpression>): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(this: Parser, node: Undone<N.NewExpression>): void {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, { at: node.callee });\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.lastTokEndLoc,\n      });\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt<N.TemplateElement>(\n      elemStart,\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          // FIXME: explain\n          at: createPositionWithColumnOffset(startLoc, 2),\n        });\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      finishedNode,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return finishedNode;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(this: Parser, isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode<N.TemplateLiteral>();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(this: Parser): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike(\n    close: TokenType,\n    isPattern: true,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectPattern;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: false | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectExpression;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: true,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.RecordExpression;\n  parseObjectLike<T extends N.ObjectPattern | N.ObjectExpression>(\n    this: Parser,\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode<\n      N.ObjectExpression | N.ObjectPattern | N.RecordExpression\n    >();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(\n            // @ts-expect-error todo(flow->ts) improve node types\n            node,\n          );\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, { at: prop });\n      }\n\n      // @ts-expect-error shorthand may not index prop\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      // @ts-expect-error Fixme: refine typings\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    // @ts-expect-error type is well defined\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: N.Node): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: Undone<N.ObjectProperty>): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode<N.ObjectProperty>();\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    return this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        { at: method },\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, { at: method });\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    this: Parser,\n    prop: Undone<N.ObjectMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): N.ObjectMethod | undefined | null {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      const finishedProp = this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    this: Parser,\n    prop: Undone<N.ObjectProperty>,\n    startPos: number | undefined | null,\n    startLoc: Position | undefined | null,\n    isPattern: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectProperty | undefined | null {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc,\n          });\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    this: Parser,\n    prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n    startPos: number | undefined | null,\n    startLoc: Position | undefined | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMethod | N.ObjectProperty {\n    const node =\n      this.parseObjectMethod(\n        prop as Undone<N.ObjectMethod>,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop as Undone<N.ObjectProperty>,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    this: Parser,\n    prop:\n      | Undone<N.ObjectOrClassMember | N.ClassMember>\n      | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop as Undone<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.decimal:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, {\n                at: privateKeyLoc,\n              });\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            throw this.unexpected();\n        }\n      }\n      (prop as any).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(\n    node: N.BodilessFunctionOrMethodBase,\n    isAsync?: boolean | null,\n  ): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod>(\n    this: Parser,\n    node: Undone<T>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: T[\"type\"],\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return finishedNode;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    this: Parser,\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode<N.ArrayExpression | N.TupleExpression>();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[] | undefined | null,\n    isAsync: boolean,\n    trailingCommaLoc?: Position | null,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead \u2260 {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[],\n    trailingCommaLoc?: Position | null,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params as (N.Pattern | N.TSParameterProperty)[];\n  }\n\n  parseFunctionBodyAndFinish<\n    T extends\n      | N.Function\n      | N.TSDeclareMethod\n      | N.TSDeclareFunction\n      | N.ClassPrivateMethod,\n  >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n    // @ts-expect-error (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowExpression?: boolean | null,\n    isMethod: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      (node as Undone<N.ArrowFunctionExpression>).body =\n        this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(\n        (this.prodParam.currentFlags() | PARAM_RETURN) as ParamKind,\n      );\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(Errors.IllegalLanguageModeDirective, {\n              at:\n                // @ts-expect-error kind may not index node\n                (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // @ts-expect-error key may not index node\n                !!node.key\n                  ? // @ts-expect-error node.key has been gaurded\n                    node.key.loc.end\n                  : node,\n            });\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: ReadonlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: Undone<N.Function>,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isArrowFunction?: boolean | null,\n    strictModeChanged: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set<string>();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" } as const;\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged,\n      });\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    this: Parser,\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    nodeForExtra?: N.Node | null,\n  ): (N.Expression | null)[] {\n    const elts: (N.Expression | null)[] = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: false,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc,\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode<N.Identifier>();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(\n    node: Omit<N.Identifier, \"type\">,\n    name: string,\n  ): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, { at: startLoc });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, { at: startLoc });\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc,\n        });\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError({ at: startLoc });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, { at: startLoc });\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word,\n      });\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(\n    this: Parser,\n    startPos: number,\n    startLoc: Position,\n  ): N.AwaitExpression {\n    const node = this.startNodeAt<N.AwaitExpression>(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, { at: node });\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(this: Parser): N.YieldExpression {\n    const node = this.startNode<N.YieldExpression>();\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    this.next();\n    let delegating = false;\n    let argument: N.Expression | null = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc,\n        });\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt<N.PipelineBareFunction>(\n        startPos,\n        startLoc,\n      );\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt<N.PipelineTopicExpression>(\n        startPos,\n        startLoc,\n      );\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, { at: this.state.startLoc });\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, { at: startLoc });\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser\u2019s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(this: Parser, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(this: Parser): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prop: Undone<N.ObjectOrClassMember | N.ClassMember>,\n  ): void {}\n}\n", "import type * as N from \"../types\";\nimport {\n  tokenIsIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"../parse-error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport type { Position } from \"../util/location\";\nimport { createPositionWithColumnOffset } from \"../util/location\";\nimport { cloneStringLiteral, cloneIdentifier, type Undone } from \"./node\";\nimport type Parser from \"./index\";\n\nconst loopLabel = { kind: \"loop\" } as const,\n  switchLabel = { kind: \"switch\" } as const;\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n * @param {*} tokens\n * @returns\n */\nfunction babel7CompatTokens(tokens: (Token | N.Comment)[], input: string) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === charCodes.graveAccent) {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // @ts-expect-error: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default abstract class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(this: Parser, file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    this: Parser,\n    program: Undone<N.Program>,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, { at, localName });\n      }\n    }\n    return this.finishNode(program, \"Program\");\n  }\n\n  // TODO\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   *\n   * @param {N.Statement} stmt\n   * @returns {N.Directive}\n   * @memberof StatementParser\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = stmt as any;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode<N.InterpreterDirective>();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context?: string | null): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context?: string | null): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    // Also, `let \\` is never valid as an expression so this must be a keyword.\n    if (\n      nextCh === charCodes.backslash ||\n      nextCh === charCodes.leftSquareBracket\n    ) {\n      return true;\n    }\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identfier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(\n    this: Parser,\n    context?: string | null,\n    topLevel?: boolean,\n  ): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(\n    this: Parser,\n    context?: string | null,\n    topLevel?: boolean | null,\n  ): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node as Undone<N.DebuggerStatement>);\n      case tt._do:\n        return this.parseDoStatement(node as Undone<N.DoWhileStatement>);\n      case tt._for:\n        return this.parseForStatement(node as Undone<N.ForStatement>);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(Errors.StrictFunction, { at: this.state.startLoc });\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(Errors.SloppyFunction, { at: this.state.startLoc });\n          }\n        }\n        return this.parseFunctionStatement(\n          node as Undone<N.FunctionDeclaration>,\n          false,\n          !context,\n        );\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node as Undone<N.ClassDeclaration>, true);\n\n      case tt._if:\n        return this.parseIfStatement(node as Undone<N.IfStatement>);\n      case tt._return:\n        return this.parseReturnStatement(node as Undone<N.ReturnStatement>);\n      case tt._switch:\n        return this.parseSwitchStatement(node as Undone<N.SwitchStatement>);\n      case tt._throw:\n        return this.parseThrowStatement(node as Undone<N.ThrowStatement>);\n      case tt._try:\n        return this.parseTryStatement(node as Undone<N.TryStatement>);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          kind,\n        );\n\n      case tt._while:\n        return this.parseWhileStatement(node as Undone<N.WhileStatement>);\n      case tt._with:\n        return this.parseWithStatement(node as Undone<N.WithStatement>);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node as Undone<N.EmptyStatement>);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(Errors.UnexpectedImportExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node as Undone<N.ImportDeclaration>);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(\n            node as Undone<\n              | N.ExportAllDeclaration\n              | N.ExportDefaultDeclaration\n              | N.ExportDefaultDeclaration\n            >,\n          );\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(result);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n              at: this.state.startLoc,\n            });\n          }\n          this.next();\n          return this.parseFunctionStatement(\n            node as Undone<N.FunctionDeclaration>,\n            true,\n            !context,\n          );\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(starttype) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(\n        node as Undone<N.LabeledStatement>,\n        maybeName,\n        // @ts-expect-error migrate to Babel types\n        expr,\n        context,\n      );\n    } else {\n      return this.parseExpressionStatement(\n        node as Undone<N.ExpressionStatement>,\n        expr,\n      );\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, { at: node });\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(this: Parser, allowExport?: boolean): void {\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorExportClass, { at: this.state.startLoc });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  parseDecorator(this: Parser): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode<N.Decorator>();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startPos, startLoc, expr);\n\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (\n          this.getPluginOption(\"decorators\", \"allowCallParenthesized\") ===\n            false &&\n          node.expression !== expr\n        ) {\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, {\n            at: paramsStartLoc,\n          });\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          if (this.match(tt.privateName)) {\n            this.classScope.usePrivateName(\n              this.state.value,\n              this.state.startLoc,\n            );\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(this: Parser, expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: true,\n  ): N.BreakStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: false,\n  ): N.ContinueStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, { at: node, type });\n    }\n  }\n\n  parseDebuggerStatement(\n    node: Undone<N.DebuggerStatement>,\n  ): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(this: Parser): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(\n    this: Parser,\n    node: Undone<N.DoWhileStatement>,\n  ): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(\n    this: Parser,\n    node: Undone<N.ForStatement | N.ForInOf>,\n  ): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isAwaitAllowed() && this.eatContextual(tt._await)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const initNode = this.startNode<N.VariableDeclaration>();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(initNode, true, kind);\n      const init = this.finishNode(initNode, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(tt._of)) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node as Undone<N.ForInOf>, init, awaitAt);\n      }\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, { at: init });\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, { at: init });\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { in: { type } });\n      return this.parseForIn(\n        node as Undone<N.ForInStatement | N.ForOfStatement>,\n        // @ts-expect-error init has been transformed to an assignable\n        init,\n        awaitAt,\n      );\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node as Undone<N.ForStatement>, init);\n  }\n\n  parseFunctionStatement(\n    this: Parser,\n    node: Undone<N.FunctionDeclaration>,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(this: Parser, node: Undone<N.IfStatement>) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(this: Parser, node: Undone<N.ReturnStatement>) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, { at: this.state.startLoc });\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(this: Parser, node: Undone<N.SwitchStatement>) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases: N.SwitchStatement[\"cases\"] = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        // @ts-expect-error Fixme\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(this: Parser, node: Undone<N.ThrowStatement>) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, { at: this.state.lastTokEndLoc });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(this: Parser): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, {\n      in: { type: \"CatchClause\" },\n      binding: BIND_LEXICAL,\n      allowingSloppyLetBinding: true,\n    });\n\n    return param;\n  }\n\n  parseTryStatement(\n    this: Parser,\n    node: Undone<N.TryStatement>,\n  ): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode<N.CatchClause>();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, { at: node });\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(\n    this: Parser,\n    node: Undone<N.WhileStatement>,\n  ): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(\n    this: Parser,\n    node: Undone<N.WithStatement>,\n  ): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, { at: this.state.startLoc });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: Undone<N.EmptyStatement>): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    this: Parser,\n    node: Undone<N.LabeledStatement>,\n    maybeName: string,\n    expr: N.Identifier,\n    context?: string | null,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: Undone<N.ExpressionStatement>,\n    expr: N.Expression,\n  ) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    this: Parser,\n    allowDirectives: boolean = false,\n    createNewLexicalScope: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode<N.BlockStatement>();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    this: Parser,\n    node: Undone<N.BlockStatementLike>,\n    allowDirectives: boolean | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body: N.BlockStatementLike[\"body\"] = (node.body = []);\n    const directives: N.BlockStatementLike[\"directives\"] = (node.directives =\n      []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    this: Parser,\n    body: N.Statement[],\n    directives: N.Directive[] | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    this: Parser,\n    node: Undone<N.ForStatement>,\n    init?: N.VariableDeclaration | N.Expression | null,\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    this: Parser,\n    node: Undone<N.ForInOf>,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt?: Position | null,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): Undone<N.VariableDeclaration> {\n    const declarations: N.VariableDeclarator[] = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode<N.VariableDeclarator>();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n        ? this.parseMaybeAssignDisallowIn()\n        : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\",\n          });\n        } else if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\",\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(\n    this: Parser,\n    decl: Undone<N.VariableDeclarator>,\n    kind: \"var\" | \"let\" | \"const\",\n  ): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, {\n      in: { type: \"VariableDeclarator\" },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n    });\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T extends N.NormalFunction>(\n    this: Parser,\n    node: Undone<T>,\n    statement: number = FUNC_NO_FLAGS,\n    isAsync: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(Errors.GeneratorInSingleStatementContext, {\n        at: this.state.startLoc,\n      });\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node as T);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node as T;\n  }\n\n  parseFunctionId(requireId?: boolean): N.Identifier | undefined | null {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowModifiers?: boolean,\n  ): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T extends N.Class>(\n    this: Parser,\n    node: Undone<T>,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    this: Parser,\n    hadSuperClass: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody = this.startNode<N.ClassBody>();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc,\n            });\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode<N.ClassMember>();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          // @ts-expect-error Fixme\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          // @ts-expect-error Fixme\n          member.kind === \"constructor\" &&\n          // @ts-expect-error Fixme\n          member.decorators &&\n          // @ts-expect-error Fixme\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, { at: member });\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, { at: this.state.startLoc });\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = member as any;\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = member as any;\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, member as any as N.StaticBlock);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod = member as N.ClassMethod;\n    const privateMethod = member as N.ClassPrivateMethod;\n    const publicProp = member as N.ClassProperty;\n    const privateProp = member as N.ClassPrivateProperty;\n    const accessorProp = member as N.ClassAccessorProperty;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key,\n        });\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, { at: key });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, { at: key });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, { at: publicMethod.key });\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, { at: publicMethod.key });\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (\n      isContextual &&\n      key.name === \"accessor\" &&\n      !this.isLineTerminator()\n    ) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(\n    this: Parser,\n    member: Undone<N.ClassMember>,\n  ): N.Expression | N.Identifier {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, { at: this.state.startLoc });\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc,\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<\n      N.StaticBlock & {\n        decorators?: Array<N.Decorator>;\n      }\n    >,\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body: N.Node[] = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, { at: member });\n    }\n  }\n\n  pushClassProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassProperty,\n  ) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, { at: prop.key });\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: Undone<N.ClassPrivateProperty>,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed) {\n      // Not private, so not node is not a PrivateName and we can safely cast\n      const key = prop.key as N.Expression;\n\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        // Non-computed field, which is either an identifier named \"constructor\"\n        // or a string literal named \"constructor\"\n        this.raise(Errors.ConstructorClassField, { at: key });\n      }\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key),\n        CLASS_ELEMENT_OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassPrivateMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: Undone<\n      N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod\n    >,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    methodOrProp: Undone<N.ClassMethod | N.ClassProperty>,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    this: Parser,\n    node: Undone<N.ClassPrivateProperty>,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(this: Parser, node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    this: Parser,\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    this: Parser,\n    node: Undone<\n      N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty\n    >,\n  ): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: Undone<N.Class>,\n    isStatement: boolean,\n    optionalId?: boolean | null,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, { at: this.state.startLoc });\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(this: Parser, node: Undone<N.Class>): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(\n    this: Parser,\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n  ): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar =\n      parseAfterDefault &&\n      this.eatExportStar(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const hasNamespace =\n      hasStar &&\n      this.maybeParseExportNamespaceSpecifier(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node as Undone<N.ExportNamedDeclaration>, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(\n        node as Undone<N.ExportNamedDeclaration>,\n        isFromRequired,\n      );\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(\n        node as Undone<N.ExportNamedDeclaration>,\n      );\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(\n        node as Undone<N.ExportNamedDeclaration>,\n        true,\n        false,\n        !!(node as Undone<N.ExportNamedDeclaration>).source,\n      );\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      (node as Undone<N.ExportDefaultDeclaration>).declaration =\n        this.parseExportDefaultExpression();\n      this.checkExport(node as Undone<N.ExportDefaultDeclaration>, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(tt._as)) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n  ): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(this: Parser): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr as Undone<N.FunctionExpression>,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, { at: this.state.startLoc });\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc,\n      });\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  parseExportDeclaration(\n    this: Parser,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    node: Undone<N.ExportNamedDeclaration>,\n  ): N.Declaration | undefined | null {\n    return this.parseStatement(null) as N.Declaration;\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n    expect?: boolean,\n  ): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          throw this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return true;\n      }\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: Undone<N.ExportNamedDeclaration | N.ExportDefaultDeclaration>,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = (node as any as N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration,\n            });\n          }\n        }\n        // @ts-expect-error node.specifiers may not exist\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        // @ts-expect-error node.specifiers may not exist\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      // @ts-expect-error migrate to Babel types\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node: Undone<\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier\n    >,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, { at: node });\n      } else {\n        this.raise(Errors.DuplicateExport, { at: node, exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ) {\n    // @ts-expect-error Fixme: node.type must be undefined because they are undone\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      // @ts-expect-error specifiers may not index node\n      const { specifiers } = node;\n      if (specifiers != null) {\n        // @ts-expect-error refine specifier types\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start,\n          });\n        }\n      }\n    }\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(this: Parser, node: Undone<N.ImportDeclaration>): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(tt._from);\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        // @ts-expect-error attributes have been deprecated\n        node.attributes = attributes;\n      }\n    }\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(this: Parser): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom() as N.StringLiteral;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldParseDefaultImport(node: Undone<N.ImportDeclaration>): boolean {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    node: Undone<N.ImportDeclaration>,\n    specifier: Undone<T>,\n    type: T[\"type\"],\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(specifier: Undone<T>, type: T[\"type\"], bindingType = BIND_LEXICAL) {\n    this.checkLVal(specifier.local, {\n      // @ts-expect-error refine types\n      in: specifier,\n      binding: bindingType,\n    });\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName,\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key,\n        });\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode<N.ImportDefaultSpecifier>(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode<N.ImportNamespaceSpecifier>();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: Undone<N.ImportDeclaration>) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode<N.ImportSpecifier>();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n        undefined,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: Undone<N.ImportSpecifier>,\n    importedIsString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    bindingType: BindingTypes | undefined,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: (imported as N.StringLiteral).value,\n        });\n      }\n      this.checkReservedWord(\n        (imported as N.Identifier).name,\n        specifier.loc.start,\n        true,\n        true,\n      );\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(\n      specifier,\n      \"ImportSpecifier\",\n      bindingType,\n    );\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n", "import type { Options } from \"../options\";\nimport type * as N from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<\n  string,\n  {\n    [x: string]: any;\n  }\n>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  // todo(flow->ts) - this probably can be removed\n  // abstract jsxParseOpeningElementAfterName(\n  //   node: N.JSXOpeningElement,\n  // ): N.JSXOpeningElement;\n\n  constructor(options: Options | undefined | null, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): {\n    new (...args: any): ScopeHandler;\n  } {\n    return ScopeHandler;\n  }\n\n  parse(): N.File {\n    this.enterInitialScopes();\n    const file = this.startNode() as N.File;\n    const program = this.startNode() as N.Program;\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n", "import { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport type {\n  PluginConfig as ParserPlugin,\n  FlowPluginOptions,\n  RecordAndTuplePluginOptions,\n  PipelineOperatorPluginOptions,\n} from \"./typings\";\nimport Parser from \"./parser\";\n\nimport type { ExportedTokenType } from \"./tokenizer/types\";\nimport {\n  getExportedToken,\n  tt as internalTokenTypes,\n  type InternalTokenTypes,\n} from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(\n  internalTokenTypes: InternalTokenTypes,\n): Record<string, ExportedTokenType> {\n  const tokenTypes: Record<string, ExportedTokenType> = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: Options | undefined | null, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: { new (...args: any): Parser } } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): {\n  new (...args: any): Parser;\n} {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      // @ts-expect-error todo(flow->ts)\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n\nexport type {\n  FlowPluginOptions,\n  ParserPlugin,\n  PipelineOperatorPluginOptions,\n  RecordAndTuplePluginOptions,\n};\nexport type ParserOptions = Partial<Options>;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   \u201Csources\u201D entry.  This value is prepended to the individual\n    //   entries in the \u201Csource\u201D field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   \u201CsourceRoot\u201D, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n", "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n", "(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = global || self, factory(global.estreeWalker = {}));\n}(this, (function (exports) { 'use strict';\n\n\t// @ts-check\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\n\t/** @typedef {{\n\t\tskip: () => void;\n\t\tremove: () => void;\n\t\treplace: (node: BaseNode) => void;\n\t}} WalkerContext */\n\n\tclass WalkerBase {\n\t\tconstructor() {\n\t\t\t/** @type {boolean} */\n\t\t\tthis.should_skip = false;\n\n\t\t\t/** @type {boolean} */\n\t\t\tthis.should_remove = false;\n\n\t\t\t/** @type {BaseNode | null} */\n\t\t\tthis.replacement = null;\n\n\t\t\t/** @type {WalkerContext} */\n\t\t\tthis.context = {\n\t\t\t\tskip: () => (this.should_skip = true),\n\t\t\t\tremove: () => (this.should_remove = true),\n\t\t\t\treplace: (node) => (this.replacement = node)\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {any} parent\n\t\t * @param {string} prop\n\t\t * @param {number} index\n\t\t * @param {BaseNode} node\n\t\t */\n\t\treplace(parent, prop, index, node) {\n\t\t\tif (parent) {\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tparent[prop][index] = node;\n\t\t\t\t} else {\n\t\t\t\t\tparent[prop] = node;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {any} parent\n\t\t * @param {string} prop\n\t\t * @param {number} index\n\t\t */\n\t\tremove(parent, prop, index) {\n\t\t\tif (parent) {\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tparent[prop].splice(index, 1);\n\t\t\t\t} else {\n\t\t\t\t\tdelete parent[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// @ts-check\n\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\t/** @typedef { import('./walker.js').WalkerContext} WalkerContext */\n\n\t/** @typedef {(\n\t *    this: WalkerContext,\n\t *    node: BaseNode,\n\t *    parent: BaseNode,\n\t *    key: string,\n\t *    index: number\n\t * ) => void} SyncHandler */\n\n\tclass SyncWalker extends WalkerBase {\n\t\t/**\n\t\t *\n\t\t * @param {SyncHandler} enter\n\t\t * @param {SyncHandler} leave\n\t\t */\n\t\tconstructor(enter, leave) {\n\t\t\tsuper();\n\n\t\t\t/** @type {SyncHandler} */\n\t\t\tthis.enter = enter;\n\n\t\t\t/** @type {SyncHandler} */\n\t\t\tthis.leave = leave;\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {BaseNode} node\n\t\t * @param {BaseNode} parent\n\t\t * @param {string} [prop]\n\t\t * @param {number} [index]\n\t\t * @returns {BaseNode}\n\t\t */\n\t\tvisit(node, parent, prop, index) {\n\t\t\tif (node) {\n\t\t\t\tif (this.enter) {\n\t\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tthis.should_skip = false;\n\t\t\t\t\tthis.should_remove = false;\n\t\t\t\t\tthis.replacement = null;\n\n\t\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\t\tif (skipped) return node;\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\n\t\t\t\tfor (const key in node) {\n\t\t\t\t\tconst value = node[key];\n\n\t\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\t\tif (!this.visit(value[i], node, key, i)) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.leave) {\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tthis.replacement = null;\n\t\t\t\t\tthis.should_remove = false;\n\n\t\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.replacement = _replacement;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\t}\n\n\t// @ts-check\n\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\t/** @typedef { import('./walker').WalkerContext} WalkerContext */\n\n\t/** @typedef {(\n\t *    this: WalkerContext,\n\t *    node: BaseNode,\n\t *    parent: BaseNode,\n\t *    key: string,\n\t *    index: number\n\t * ) => Promise<void>} AsyncHandler */\n\n\tclass AsyncWalker extends WalkerBase {\n\t\t/**\n\t\t *\n\t\t * @param {AsyncHandler} enter\n\t\t * @param {AsyncHandler} leave\n\t\t */\n\t\tconstructor(enter, leave) {\n\t\t\tsuper();\n\n\t\t\t/** @type {AsyncHandler} */\n\t\t\tthis.enter = enter;\n\n\t\t\t/** @type {AsyncHandler} */\n\t\t\tthis.leave = leave;\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {BaseNode} node\n\t\t * @param {BaseNode} parent\n\t\t * @param {string} [prop]\n\t\t * @param {number} [index]\n\t\t * @returns {Promise<BaseNode>}\n\t\t */\n\t\tasync visit(node, parent, prop, index) {\n\t\t\tif (node) {\n\t\t\t\tif (this.enter) {\n\t\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tthis.should_skip = false;\n\t\t\t\t\tthis.should_remove = false;\n\t\t\t\t\tthis.replacement = null;\n\n\t\t\t\t\tawait this.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\t\tif (skipped) return node;\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\n\t\t\t\tfor (const key in node) {\n\t\t\t\t\tconst value = node[key];\n\n\t\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\t\tif (!(await this.visit(value[i], node, key, i))) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\t\tawait this.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.leave) {\n\t\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\t\tthis.replacement = null;\n\t\t\t\t\tthis.should_remove = false;\n\n\t\t\t\t\tawait this.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\t\tif (this.replacement) {\n\t\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.should_remove) {\n\t\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\t\tthis.replacement = _replacement;\n\t\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\t\tif (removed) return null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\t}\n\n\t// @ts-check\n\n\t/** @typedef { import('estree').BaseNode} BaseNode */\n\t/** @typedef { import('./sync.js').SyncHandler} SyncHandler */\n\t/** @typedef { import('./async.js').AsyncHandler} AsyncHandler */\n\n\t/**\n\t *\n\t * @param {BaseNode} ast\n\t * @param {{\n\t *   enter?: SyncHandler\n\t *   leave?: SyncHandler\n\t * }} walker\n\t * @returns {BaseNode}\n\t */\n\tfunction walk(ast, { enter, leave }) {\n\t\tconst instance = new SyncWalker(enter, leave);\n\t\treturn instance.visit(ast, null);\n\t}\n\n\t/**\n\t *\n\t * @param {BaseNode} ast\n\t * @param {{\n\t *   enter?: AsyncHandler\n\t *   leave?: AsyncHandler\n\t * }} walker\n\t * @returns {Promise<BaseNode>}\n\t */\n\tasync function asyncWalk(ast, { enter, leave }) {\n\t\tconst instance = new AsyncWalker(enter, leave);\n\t\treturn await instance.visit(ast, null);\n\t}\n\n\texports.asyncWalk = asyncWalk;\n\texports.walk = walk;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar shared = require('@vue/shared');\nvar parser = require('@babel/parser');\nvar sourceMap = require('source-map');\nvar estreeWalker = require('estree-walker');\n\nfunction defaultOnError(error) {\r\n    throw error;\r\n}\r\nfunction defaultOnWarn(msg) {\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n    const msg = (messages || errorMessages)[code] + (additionalMessage || ``)\r\n        ;\r\n    const error = new SyntaxError(String(msg));\r\n    error.code = code;\r\n    error.loc = loc;\r\n    return error;\r\n}\r\nconst errorMessages = {\r\n    // parse errors\r\n    [0 /* ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\r\n    [1 /* ErrorCodes.CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\r\n    [2 /* ErrorCodes.DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\r\n    [3 /* ErrorCodes.END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\r\n    [4 /* ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\r\n    [5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\r\n    [6 /* ErrorCodes.EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\r\n    [7 /* ErrorCodes.EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\r\n    [8 /* ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\r\n    [9 /* ErrorCodes.EOF_IN_TAG */]: 'Unexpected EOF in tag.',\r\n    [10 /* ErrorCodes.INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\r\n    [11 /* ErrorCodes.INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\r\n    [12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n    [13 /* ErrorCodes.MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\r\n    [14 /* ErrorCodes.MISSING_END_TAG_NAME */]: 'End tag name was expected.',\r\n    [15 /* ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\r\n    [16 /* ErrorCodes.NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\r\n    [17 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n    [18 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n    [19 /* ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\r\n    [21 /* ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\r\n    [20 /* ErrorCodes.UNEXPECTED_NULL_CHARACTER */]: `Unexpected null character.`,\r\n    [22 /* ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\r\n    // Vue-specific parse errors\r\n    [23 /* ErrorCodes.X_INVALID_END_TAG */]: 'Invalid end tag.',\r\n    [24 /* ErrorCodes.X_MISSING_END_TAG */]: 'Element is missing end tag.',\r\n    [25 /* ErrorCodes.X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\r\n    [27 /* ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\r\n        'Note that dynamic directive argument cannot contain spaces.',\r\n    [26 /* ErrorCodes.X_MISSING_DIRECTIVE_NAME */]: 'Legal directive name was expected.',\r\n    // transform errors\r\n    [28 /* ErrorCodes.X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\r\n    [29 /* ErrorCodes.X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\r\n    [30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\r\n    [31 /* ErrorCodes.X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\r\n    [32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\r\n    [33 /* ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\r\n    [34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\r\n    [35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\r\n    [36 /* ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\r\n    [37 /* ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\r\n        `When there are multiple named slots, all slots should use <template> ` +\r\n        `syntax to avoid scope ambiguity.`,\r\n    [38 /* ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\r\n    [39 /* ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\r\n        `default slot. These children will be ignored.`,\r\n    [40 /* ErrorCodes.X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\r\n    [41 /* ErrorCodes.X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\r\n    [42 /* ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\r\n    [43 /* ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n    [44 /* ErrorCodes.X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\r\n    [45 /* ErrorCodes.X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\r\n    // generic errors\r\n    [46 /* ErrorCodes.X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n    [47 /* ErrorCodes.X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\r\n    [48 /* ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n    [49 /* ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`,\r\n    // just to fulfill types\r\n    [50 /* ErrorCodes.__EXTEND_POINT__ */]: ``\r\n};\n\nconst FRAGMENT = Symbol(``);\r\nconst TELEPORT = Symbol(``);\r\nconst SUSPENSE = Symbol(``);\r\nconst KEEP_ALIVE = Symbol(``);\r\nconst BASE_TRANSITION = Symbol(``);\r\nconst OPEN_BLOCK = Symbol(``);\r\nconst CREATE_BLOCK = Symbol(``);\r\nconst CREATE_ELEMENT_BLOCK = Symbol(``);\r\nconst CREATE_VNODE = Symbol(``);\r\nconst CREATE_ELEMENT_VNODE = Symbol(``);\r\nconst CREATE_COMMENT = Symbol(``);\r\nconst CREATE_TEXT = Symbol(``);\r\nconst CREATE_STATIC = Symbol(``);\r\nconst RESOLVE_COMPONENT = Symbol(``);\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(``);\r\nconst RESOLVE_DIRECTIVE = Symbol(``);\r\nconst RESOLVE_FILTER = Symbol(``);\r\nconst WITH_DIRECTIVES = Symbol(``);\r\nconst RENDER_LIST = Symbol(``);\r\nconst RENDER_SLOT = Symbol(``);\r\nconst CREATE_SLOTS = Symbol(``);\r\nconst TO_DISPLAY_STRING = Symbol(``);\r\nconst MERGE_PROPS = Symbol(``);\r\nconst NORMALIZE_CLASS = Symbol(``);\r\nconst NORMALIZE_STYLE = Symbol(``);\r\nconst NORMALIZE_PROPS = Symbol(``);\r\nconst GUARD_REACTIVE_PROPS = Symbol(``);\r\nconst TO_HANDLERS = Symbol(``);\r\nconst CAMELIZE = Symbol(``);\r\nconst CAPITALIZE = Symbol(``);\r\nconst TO_HANDLER_KEY = Symbol(``);\r\nconst SET_BLOCK_TRACKING = Symbol(``);\r\nconst PUSH_SCOPE_ID = Symbol(``);\r\nconst POP_SCOPE_ID = Symbol(``);\r\nconst WITH_CTX = Symbol(``);\r\nconst UNREF = Symbol(``);\r\nconst IS_REF = Symbol(``);\r\nconst WITH_MEMO = Symbol(``);\r\nconst IS_MEMO_SAME = Symbol(``);\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nconst helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [RESOLVE_FILTER]: `resolveFilter`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [NORMALIZE_CLASS]: `normalizeClass`,\r\n    [NORMALIZE_STYLE]: `normalizeStyle`,\r\n    [NORMALIZE_PROPS]: `normalizeProps`,\r\n    [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [CAPITALIZE]: `capitalize`,\r\n    [TO_HANDLER_KEY]: `toHandlerKey`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_CTX]: `withCtx`,\r\n    [UNREF]: `unref`,\r\n    [IS_REF]: `isRef`,\r\n    [WITH_MEMO]: `withMemo`,\r\n    [IS_MEMO_SAME]: `isMemoSame`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\n\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nconst locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n    return {\r\n        type: 0 /* NodeTypes.ROOT */,\r\n        children,\r\n        helpers: [],\r\n        components: [],\r\n        directives: [],\r\n        hoists: [],\r\n        imports: [],\r\n        cached: 0,\r\n        temps: 0,\r\n        codegenNode: undefined,\r\n        loc\r\n    };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\r\n    if (context) {\r\n        if (isBlock) {\r\n            context.helper(OPEN_BLOCK);\r\n            context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\r\n        }\r\n        else {\r\n            context.helper(getVNodeHelper(context.inSSR, isComponent));\r\n        }\r\n        if (directives) {\r\n            context.helper(WITH_DIRECTIVES);\r\n        }\r\n    }\r\n    return {\r\n        type: 13 /* NodeTypes.VNODE_CALL */,\r\n        tag,\r\n        props,\r\n        children,\r\n        patchFlag,\r\n        dynamicProps,\r\n        directives,\r\n        isBlock,\r\n        disableTracking,\r\n        isComponent,\r\n        loc\r\n    };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 17 /* NodeTypes.JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 15 /* NodeTypes.JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n    return {\r\n        type: 16 /* NodeTypes.JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: shared.isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n    return {\r\n        type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\r\n        loc,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic ? 3 /* ConstantTypes.CAN_STRINGIFY */ : constType\r\n    };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* NodeTypes.INTERPOLATION */,\r\n        loc,\r\n        content: shared.isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n    return {\r\n        type: 8 /* NodeTypes.COMPOUND_EXPRESSION */,\r\n        loc,\r\n        children\r\n    };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 14 /* NodeTypes.JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\r\n    return {\r\n        type: 18 /* NodeTypes.JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        isSlot,\r\n        loc\r\n    };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n    return {\r\n        type: 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        newline,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n    return {\r\n        type: 20 /* NodeTypes.JS_CACHE_EXPRESSION */,\r\n        index,\r\n        value,\r\n        isVNode,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createBlockStatement(body) {\r\n    return {\r\n        type: 21 /* NodeTypes.JS_BLOCK_STATEMENT */,\r\n        body,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n    return {\r\n        type: 22 /* NodeTypes.JS_TEMPLATE_LITERAL */,\r\n        elements,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n    return {\r\n        type: 23 /* NodeTypes.JS_IF_STATEMENT */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n    return {\r\n        type: 24 /* NodeTypes.JS_ASSIGNMENT_EXPRESSION */,\r\n        left,\r\n        right,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n    return {\r\n        type: 25 /* NodeTypes.JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createReturnStatement(returns) {\r\n    return {\r\n        type: 26 /* NodeTypes.JS_RETURN_STATEMENT */,\r\n        returns,\r\n        loc: locStub\r\n    };\r\n}\n\nconst isStaticExp = (p) => p.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && p.isStatic;\r\nconst isBuiltInType = (tag, expected) => tag === expected || tag === shared.hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nconst isMemberExpressionBrowser = (path) => {\r\n    // remove whitespaces around . or [ first\r\n    path = path.trim().replace(whitespaceRE, s => s.trim());\r\n    let state = 0 /* MemberExpLexState.inMemberExp */;\r\n    let stateStack = [];\r\n    let currentOpenBracketCount = 0;\r\n    let currentOpenParensCount = 0;\r\n    let currentStringType = null;\r\n    for (let i = 0; i < path.length; i++) {\r\n        const char = path.charAt(i);\r\n        switch (state) {\r\n            case 0 /* MemberExpLexState.inMemberExp */:\r\n                if (char === '[') {\r\n                    stateStack.push(state);\r\n                    state = 1 /* MemberExpLexState.inBrackets */;\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === '(') {\r\n                    stateStack.push(state);\r\n                    state = 2 /* MemberExpLexState.inParens */;\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case 1 /* MemberExpLexState.inBrackets */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* MemberExpLexState.inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `[`) {\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === `]`) {\r\n                    if (!--currentOpenBracketCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 2 /* MemberExpLexState.inParens */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* MemberExpLexState.inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `(`) {\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (char === `)`) {\r\n                    // if the exp ends as a call then it should not be considered valid\r\n                    if (i === path.length - 1) {\r\n                        return false;\r\n                    }\r\n                    if (!--currentOpenParensCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 3 /* MemberExpLexState.inString */:\r\n                if (char === currentStringType) {\r\n                    state = stateStack.pop();\r\n                    currentStringType = null;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return !currentOpenBracketCount && !currentOpenParensCount;\r\n};\r\nconst isMemberExpressionNode = (path, context) => {\r\n        try {\r\n            let ret = parser.parseExpression(path, {\r\n                plugins: context.expressionPlugins\r\n            });\r\n            if (ret.type === 'TSAsExpression' || ret.type === 'TSTypeAssertion') {\r\n                ret = ret.expression;\r\n            }\r\n            return (ret.type === 'MemberExpression' ||\r\n                ret.type === 'OptionalMemberExpression' ||\r\n                ret.type === 'Identifier');\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\nconst isMemberExpression = isMemberExpressionNode;\r\nfunction getInnerRange(loc, offset, length) {\r\n    const source = loc.source.slice(offset, offset + length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation(shared.extend({}, pos), source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nfunction assert(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (shared.isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' &&\r\n            (p.exp || allowEmpty) &&\r\n            isStaticArgOf(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction isStaticArgOf(arg, name) {\r\n    return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nfunction isText(node) {\r\n    return node.type === 5 /* NodeTypes.INTERPOLATION */ || node.type === 2 /* NodeTypes.TEXT */;\r\n}\r\nfunction isVSlot(p) {\r\n    return p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'slot';\r\n}\r\nfunction isTemplateNode(node) {\r\n    return (node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 3 /* ElementTypes.TEMPLATE */);\r\n}\r\nfunction isSlotOutlet(node) {\r\n    return node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 2 /* ElementTypes.SLOT */;\r\n}\r\nfunction getVNodeHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\r\n}\r\nfunction getVNodeBlockHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\r\n}\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\r\nfunction getUnnormalizedProps(props, callPath = []) {\r\n    if (props &&\r\n        !shared.isString(props) &&\r\n        props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n        const callee = props.callee;\r\n        if (!shared.isString(callee) && propsHelperSet.has(callee)) {\r\n            return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\r\n        }\r\n    }\r\n    return [props, callPath];\r\n}\r\nfunction injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    /**\r\n     * 1. mergeProps(...)\r\n     * 2. toHandlers(...)\r\n     * 3. normalizeProps(...)\r\n     * 4. normalizeProps(guardReactiveProps(...))\r\n     *\r\n     * we need to get the real props before normalization\r\n     */\r\n    let props = node.type === 13 /* NodeTypes.VNODE_CALL */ ? node.props : node.arguments[2];\r\n    let callPath = [];\r\n    let parentCall;\r\n    if (props &&\r\n        !shared.isString(props) &&\r\n        props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n        const ret = getUnnormalizedProps(props);\r\n        props = ret[0];\r\n        callPath = ret[1];\r\n        parentCall = callPath[callPath.length - 1];\r\n    }\r\n    if (props == null || shared.isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!shared.isString(first) && first.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\r\n            first.properties.unshift(prop);\r\n        }\r\n        else {\r\n            if (props.callee === TO_HANDLERS) {\r\n                // #2366\r\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n                    createObjectExpression([prop]),\r\n                    props\r\n                ]);\r\n            }\r\n            else {\r\n                props.arguments.unshift(createObjectExpression([prop]));\r\n            }\r\n        }\r\n        !propsWithInjection && (propsWithInjection = props);\r\n    }\r\n    else if (props.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\r\n        let alreadyExists = false;\r\n        // check existing key to avoid overriding user provided keys\r\n        if (prop.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n            const propKeyName = prop.key.content;\r\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n                p.key.content === propKeyName);\r\n        }\r\n        if (!alreadyExists) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n        // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n        // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n        // the `guardReactiveProps` will no longer be needed\r\n        if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n            parentCall = callPath[callPath.length - 2];\r\n        }\r\n    }\r\n    if (node.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.props = propsWithInjection;\r\n        }\r\n    }\r\n    else {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.arguments[2] = propsWithInjection;\r\n        }\r\n    }\r\n}\r\nfunction toValidAssetId(name, type) {\r\n    // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\r\n    return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n        return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\r\n    })}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nfunction hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* NodeTypes.FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* NodeTypes.IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* NodeTypes.IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => shared.isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n        case 12 /* NodeTypes.TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* NodeTypes.TEXT */:\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            return false;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getMemoedVNodeCall(node) {\r\n    if (node.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\r\n        return node.arguments[1].returns;\r\n    }\r\n    else {\r\n        return node;\r\n    }\r\n}\r\nfunction makeBlock(node, { helper, removeHelper, inSSR }) {\r\n    if (!node.isBlock) {\r\n        node.isBlock = true;\r\n        removeHelper(getVNodeHelper(inSSR, node.isComponent));\r\n        helper(OPEN_BLOCK);\r\n        helper(getVNodeBlockHelper(inSSR, node.isComponent));\r\n    }\r\n}\n\nconst deprecationData = {\r\n    [\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */]: {\r\n        message: `Platform-native elements with \"is\" prop will no longer be ` +\r\n            `treated as components in Vue 3 unless the \"is\" value is explicitly ` +\r\n            `prefixed with \"vue:\".`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\r\n    },\r\n    [\"COMPILER_V_BIND_SYNC\" /* CompilerDeprecationTypes.COMPILER_V_BIND_SYNC */]: {\r\n        message: key => `.sync modifier for v-bind has been removed. Use v-model with ` +\r\n            `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` +\r\n            `\\`v-model:${key}\\`.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\r\n    },\r\n    [\"COMPILER_V_BIND_PROP\" /* CompilerDeprecationTypes.COMPILER_V_BIND_PROP */]: {\r\n        message: `.prop modifier for v-bind has been removed and no longer necessary. ` +\r\n            `Vue 3 will automatically set a binding as DOM property when appropriate.`\r\n    },\r\n    [\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */]: {\r\n        message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` +\r\n            `object spread: it will now overwrite an existing non-mergeable attribute ` +\r\n            `that appears before v-bind in the case of conflict. ` +\r\n            `To retain 2.x behavior, move v-bind to make it the first attribute. ` +\r\n            `You can also suppress this warning if the usage is intended.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\r\n    },\r\n    [\"COMPILER_V_ON_NATIVE\" /* CompilerDeprecationTypes.COMPILER_V_ON_NATIVE */]: {\r\n        message: `.native modifier for v-on has been removed as is no longer necessary.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\r\n    },\r\n    [\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* CompilerDeprecationTypes.COMPILER_V_IF_V_FOR_PRECEDENCE */]: {\r\n        message: `v-if / v-for precedence when used on the same element has changed ` +\r\n            `in Vue 3: v-if now takes higher precedence and will no longer have ` +\r\n            `access to v-for scope variables. It is best to avoid the ambiguity ` +\r\n            `with <template> tags or use a computed property that filters v-for ` +\r\n            `data source.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\r\n    },\r\n    [\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */]: {\r\n        message: `<template> with no special directives will render as a native template ` +\r\n            `element instead of its inner content in Vue 3.`\r\n    },\r\n    [\"COMPILER_INLINE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE */]: {\r\n        message: `\"inline-template\" has been removed in Vue 3.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\r\n    },\r\n    [\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */]: {\r\n        message: `filters have been removed in Vue 3. ` +\r\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n            `Use method calls or computed properties instead.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\r\n    }\r\n};\r\nfunction getCompatValue(key, context) {\r\n    const config = context.options\r\n        ? context.options.compatConfig\r\n        : context.compatConfig;\r\n    const value = config && config[key];\r\n    if (key === 'MODE') {\r\n        return value || 3; // compiler defaults to v3 behavior\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nfunction isCompatEnabled(key, context) {\r\n    const mode = getCompatValue('MODE', context);\r\n    const value = getCompatValue(key, context);\r\n    // in v3 mode, only enable if explicitly set to true\r\n    // otherwise enable for any non-false value\r\n    return mode === 3 ? value === true : value !== false;\r\n}\r\nfunction checkCompatEnabled(key, context, loc, ...args) {\r\n    const enabled = isCompatEnabled(key, context);\r\n    return enabled;\r\n}\r\nfunction warnDeprecation(key, context, loc, ...args) {\r\n    const val = getCompatValue(key, context);\r\n    if (val === 'suppress-warning') {\r\n        return;\r\n    }\r\n    const { message, link } = deprecationData[key];\r\n    const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\r\n    const err = new SyntaxError(msg);\r\n    err.code = key;\r\n    if (loc)\r\n        err.loc = loc;\r\n    context.onWarn(err);\r\n}\n\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n    gt: '>',\r\n    lt: '<',\r\n    amp: '&',\r\n    apos: \"'\",\r\n    quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n    delimiters: [`{{`, `}}`],\r\n    getNamespace: () => 0 /* Namespaces.HTML */,\r\n    getTextMode: () => 0 /* TextModes.DATA */,\r\n    isVoidTag: shared.NO,\r\n    isPreTag: shared.NO,\r\n    isCustomElement: shared.NO,\r\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n    onError: defaultOnError,\r\n    onWarn: defaultOnWarn,\r\n    comments: false\r\n};\r\nfunction baseParse(content, options = {}) {\r\n    const context = createParserContext(content, options);\r\n    const start = getCursor(context);\r\n    return createRoot(parseChildren(context, 0 /* TextModes.DATA */, []), getSelection(context, start));\r\n}\r\nfunction createParserContext(content, rawOptions) {\r\n    const options = shared.extend({}, defaultParserOptions);\r\n    let key;\r\n    for (key in rawOptions) {\r\n        // @ts-ignore\r\n        options[key] =\r\n            rawOptions[key] === undefined\r\n                ? defaultParserOptions[key]\r\n                : rawOptions[key];\r\n    }\r\n    return {\r\n        options,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        originalSource: content,\r\n        source: content,\r\n        inPre: false,\r\n        inVPre: false,\r\n        onWarn: options.onWarn\r\n    };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n    const parent = last(ancestors);\r\n    const ns = parent ? parent.ns : 0 /* Namespaces.HTML */;\r\n    const nodes = [];\r\n    while (!isEnd(context, mode, ancestors)) {\r\n        const s = context.source;\r\n        let node = undefined;\r\n        if (mode === 0 /* TextModes.DATA */ || mode === 1 /* TextModes.RCDATA */) {\r\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n                // '{{'\r\n                node = parseInterpolation(context, mode);\r\n            }\r\n            else if (mode === 0 /* TextModes.DATA */ && s[0] === '<') {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n                if (s.length === 1) {\r\n                    emitError(context, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 1);\r\n                }\r\n                else if (s[1] === '!') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n                    if (startsWith(s, '<!--')) {\r\n                        node = parseComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<!DOCTYPE')) {\r\n                        // Ignore DOCTYPE by a limitation.\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<![CDATA[')) {\r\n                        if (ns !== 0 /* Namespaces.HTML */) {\r\n                            node = parseCDATA(context, ancestors);\r\n                        }\r\n                        else {\r\n                            emitError(context, 1 /* ErrorCodes.CDATA_IN_HTML_CONTENT */);\r\n                            node = parseBogusComment(context);\r\n                        }\r\n                    }\r\n                    else {\r\n                        emitError(context, 11 /* ErrorCodes.INCORRECTLY_OPENED_COMMENT */);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (s[1] === '/') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n                    if (s.length === 2) {\r\n                        emitError(context, 5 /* ErrorCodes.EOF_BEFORE_TAG_NAME */, 2);\r\n                    }\r\n                    else if (s[2] === '>') {\r\n                        emitError(context, 14 /* ErrorCodes.MISSING_END_TAG_NAME */, 2);\r\n                        advanceBy(context, 3);\r\n                        continue;\r\n                    }\r\n                    else if (/[a-z]/i.test(s[2])) {\r\n                        emitError(context, 23 /* ErrorCodes.X_INVALID_END_TAG */);\r\n                        parseTag(context, 1 /* TagType.End */, parent);\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        emitError(context, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (/[a-z]/i.test(s[1])) {\r\n                    node = parseElement(context, ancestors);\r\n                    // 2.x <template> with no directive compat\r\n                    if (isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_NATIVE_TEMPLATE */, context) &&\r\n                        node &&\r\n                        node.tag === 'template' &&\r\n                        !node.props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n                            isSpecialTemplateDirective(p.name))) {\r\n                        node = node.children;\r\n                    }\r\n                }\r\n                else if (s[1] === '?') {\r\n                    emitError(context, 21 /* ErrorCodes.UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\r\n                    node = parseBogusComment(context);\r\n                }\r\n                else {\r\n                    emitError(context, 12 /* ErrorCodes.INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\r\n                }\r\n            }\r\n        }\r\n        if (!node) {\r\n            node = parseText(context, mode);\r\n        }\r\n        if (shared.isArray(node)) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                pushNode(nodes, node[i]);\r\n            }\r\n        }\r\n        else {\r\n            pushNode(nodes, node);\r\n        }\r\n    }\r\n    // Whitespace handling strategy like v2\r\n    let removedWhitespace = false;\r\n    if (mode !== 2 /* TextModes.RAWTEXT */ && mode !== 1 /* TextModes.RCDATA */) {\r\n        const shouldCondense = context.options.whitespace !== 'preserve';\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (!context.inPre && node.type === 2 /* NodeTypes.TEXT */) {\r\n                if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                    const prev = nodes[i - 1];\r\n                    const next = nodes[i + 1];\r\n                    // Remove if:\r\n                    // - the whitespace is the first or last node, or:\r\n                    // - (condense mode) the whitespace is adjacent to a comment, or:\r\n                    // - (condense mode) the whitespace is between two elements AND contains newline\r\n                    if (!prev ||\r\n                        !next ||\r\n                        (shouldCondense &&\r\n                            (prev.type === 3 /* NodeTypes.COMMENT */ ||\r\n                                next.type === 3 /* NodeTypes.COMMENT */ ||\r\n                                (prev.type === 1 /* NodeTypes.ELEMENT */ &&\r\n                                    next.type === 1 /* NodeTypes.ELEMENT */ &&\r\n                                    /[\\r\\n]/.test(node.content))))) {\r\n                        removedWhitespace = true;\r\n                        nodes[i] = null;\r\n                    }\r\n                    else {\r\n                        // Otherwise, the whitespace is condensed into a single space\r\n                        node.content = ' ';\r\n                    }\r\n                }\r\n                else if (shouldCondense) {\r\n                    // in condense mode, consecutive whitespaces in text are condensed\r\n                    // down to a single space.\r\n                    node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\r\n                }\r\n            }\r\n            // Remove comment nodes if desired by configuration.\r\n            else if (node.type === 3 /* NodeTypes.COMMENT */ && !context.options.comments) {\r\n                removedWhitespace = true;\r\n                nodes[i] = null;\r\n            }\r\n        }\r\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n            // remove leading newline per html spec\r\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n            const first = nodes[0];\r\n            if (first && first.type === 2 /* NodeTypes.TEXT */) {\r\n                first.content = first.content.replace(/^\\r?\\n/, '');\r\n            }\r\n        }\r\n    }\r\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n    if (node.type === 2 /* NodeTypes.TEXT */) {\r\n        const prev = last(nodes);\r\n        // Merge if both this and the previous node are text and those are\r\n        // consecutive. This happens for cases like \"a < b\".\r\n        if (prev &&\r\n            prev.type === 2 /* NodeTypes.TEXT */ &&\r\n            prev.loc.end.offset === node.loc.start.offset) {\r\n            prev.content += node.content;\r\n            prev.loc.end = node.loc.end;\r\n            prev.loc.source += node.loc.source;\r\n            return;\r\n        }\r\n    }\r\n    nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n    advanceBy(context, 9);\r\n    const nodes = parseChildren(context, 3 /* TextModes.CDATA */, ancestors);\r\n    if (context.source.length === 0) {\r\n        emitError(context, 6 /* ErrorCodes.EOF_IN_CDATA */);\r\n    }\r\n    else {\r\n        advanceBy(context, 3);\r\n    }\r\n    return nodes;\r\n}\r\nfunction parseComment(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    // Regular comment.\r\n    const match = /--(\\!)?>/.exec(context.source);\r\n    if (!match) {\r\n        content = context.source.slice(4);\r\n        advanceBy(context, context.source.length);\r\n        emitError(context, 7 /* ErrorCodes.EOF_IN_COMMENT */);\r\n    }\r\n    else {\r\n        if (match.index <= 3) {\r\n            emitError(context, 0 /* ErrorCodes.ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\r\n        }\r\n        if (match[1]) {\r\n            emitError(context, 10 /* ErrorCodes.INCORRECTLY_CLOSED_COMMENT */);\r\n        }\r\n        content = context.source.slice(4, match.index);\r\n        // Advancing with reporting nested comments.\r\n        const s = context.source.slice(0, match.index);\r\n        let prevIndex = 1, nestedIndex = 0;\r\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n            advanceBy(context, nestedIndex - prevIndex + 1);\r\n            if (nestedIndex + 4 < s.length) {\r\n                emitError(context, 16 /* ErrorCodes.NESTED_COMMENT */);\r\n            }\r\n            prevIndex = nestedIndex + 1;\r\n        }\r\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* NodeTypes.COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseBogusComment(context) {\r\n    const start = getCursor(context);\r\n    const contentStart = context.source[1] === '?' ? 1 : 2;\r\n    let content;\r\n    const closeIndex = context.source.indexOf('>');\r\n    if (closeIndex === -1) {\r\n        content = context.source.slice(contentStart);\r\n        advanceBy(context, context.source.length);\r\n    }\r\n    else {\r\n        content = context.source.slice(contentStart, closeIndex);\r\n        advanceBy(context, closeIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* NodeTypes.COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n    // Start tag.\r\n    const wasInPre = context.inPre;\r\n    const wasInVPre = context.inVPre;\r\n    const parent = last(ancestors);\r\n    const element = parseTag(context, 0 /* TagType.Start */, parent);\r\n    const isPreBoundary = context.inPre && !wasInPre;\r\n    const isVPreBoundary = context.inVPre && !wasInVPre;\r\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n        // #4030 self-closing <pre> tag\r\n        if (isPreBoundary) {\r\n            context.inPre = false;\r\n        }\r\n        if (isVPreBoundary) {\r\n            context.inVPre = false;\r\n        }\r\n        return element;\r\n    }\r\n    // Children.\r\n    ancestors.push(element);\r\n    const mode = context.options.getTextMode(element, parent);\r\n    const children = parseChildren(context, mode, ancestors);\r\n    ancestors.pop();\r\n    // 2.x inline-template compat\r\n    {\r\n        const inlineTemplateProp = element.props.find(p => p.type === 6 /* NodeTypes.ATTRIBUTE */ && p.name === 'inline-template');\r\n        if (inlineTemplateProp &&\r\n            checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\" /* CompilerDeprecationTypes.COMPILER_INLINE_TEMPLATE */, context, inlineTemplateProp.loc)) {\r\n            const loc = getSelection(context, element.loc.end);\r\n            inlineTemplateProp.value = {\r\n                type: 2 /* NodeTypes.TEXT */,\r\n                content: loc.source,\r\n                loc\r\n            };\r\n        }\r\n    }\r\n    element.children = children;\r\n    // End tag.\r\n    if (startsWithEndTagOpen(context.source, element.tag)) {\r\n        parseTag(context, 1 /* TagType.End */, parent);\r\n    }\r\n    else {\r\n        emitError(context, 24 /* ErrorCodes.X_MISSING_END_TAG */, 0, element.loc.start);\r\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n            const first = children[0];\r\n            if (first && startsWith(first.loc.source, '<!--')) {\r\n                emitError(context, 8 /* ErrorCodes.EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\r\n            }\r\n        }\r\n    }\r\n    element.loc = getSelection(context, element.loc.start);\r\n    if (isPreBoundary) {\r\n        context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n        context.inVPre = false;\r\n    }\r\n    return element;\r\n}\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ shared.makeMap(`if,else,else-if,for,slot`);\r\nfunction parseTag(context, type, parent) {\r\n    // Tag open.\r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n    const tag = match[1];\r\n    const ns = context.options.getNamespace(tag, parent);\r\n    advanceBy(context, match[0].length);\r\n    advanceSpaces(context);\r\n    // save current state in case we need to re-parse attributes with v-pre\r\n    const cursor = getCursor(context);\r\n    const currentSource = context.source;\r\n    // check <pre> tag\r\n    if (context.options.isPreTag(tag)) {\r\n        context.inPre = true;\r\n    }\r\n    // Attributes.\r\n    let props = parseAttributes(context, type);\r\n    // check v-pre\r\n    if (type === 0 /* TagType.Start */ &&\r\n        !context.inVPre &&\r\n        props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'pre')) {\r\n        context.inVPre = true;\r\n        // reset context\r\n        shared.extend(context, cursor);\r\n        context.source = currentSource;\r\n        // re-parse attrs and filter out v-pre itself\r\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\r\n    }\r\n    // Tag close.\r\n    let isSelfClosing = false;\r\n    if (context.source.length === 0) {\r\n        emitError(context, 9 /* ErrorCodes.EOF_IN_TAG */);\r\n    }\r\n    else {\r\n        isSelfClosing = startsWith(context.source, '/>');\r\n        if (type === 1 /* TagType.End */ && isSelfClosing) {\r\n            emitError(context, 4 /* ErrorCodes.END_TAG_WITH_TRAILING_SOLIDUS */);\r\n        }\r\n        advanceBy(context, isSelfClosing ? 2 : 1);\r\n    }\r\n    if (type === 1 /* TagType.End */) {\r\n        return;\r\n    }\r\n    let tagType = 0 /* ElementTypes.ELEMENT */;\r\n    if (!context.inVPre) {\r\n        if (tag === 'slot') {\r\n            tagType = 2 /* ElementTypes.SLOT */;\r\n        }\r\n        else if (tag === 'template') {\r\n            if (props.some(p => p.type === 7 /* NodeTypes.DIRECTIVE */ && isSpecialTemplateDirective(p.name))) {\r\n                tagType = 3 /* ElementTypes.TEMPLATE */;\r\n            }\r\n        }\r\n        else if (isComponent(tag, props, context)) {\r\n            tagType = 1 /* ElementTypes.COMPONENT */;\r\n        }\r\n    }\r\n    return {\r\n        type: 1 /* NodeTypes.ELEMENT */,\r\n        ns,\r\n        tag,\r\n        tagType,\r\n        props,\r\n        isSelfClosing,\r\n        children: [],\r\n        loc: getSelection(context, start),\r\n        codegenNode: undefined // to be created during transform phase\r\n    };\r\n}\r\nfunction isComponent(tag, props, context) {\r\n    const options = context.options;\r\n    if (options.isCustomElement(tag)) {\r\n        return false;\r\n    }\r\n    if (tag === 'component' ||\r\n        /^[A-Z]/.test(tag) ||\r\n        isCoreComponent(tag) ||\r\n        (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n        (options.isNativeTag && !options.isNativeTag(tag))) {\r\n        return true;\r\n    }\r\n    // at this point the tag should be a native tag, but check for potential \"is\"\r\n    // casting\r\n    for (let i = 0; i < props.length; i++) {\r\n        const p = props[i];\r\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            if (p.name === 'is' && p.value) {\r\n                if (p.value.content.startsWith('vue:')) {\r\n                    return true;\r\n                }\r\n                else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // directive\r\n            // v-is (TODO Deprecate)\r\n            if (p.name === 'is') {\r\n                return true;\r\n            }\r\n            else if (\r\n            // :is on plain element - only treat as component in compat mode\r\n            p.name === 'bind' &&\r\n                isStaticArgOf(p.arg, 'is') &&\r\n                true &&\r\n                checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseAttributes(context, type) {\r\n    const props = [];\r\n    const attributeNames = new Set();\r\n    while (context.source.length > 0 &&\r\n        !startsWith(context.source, '>') &&\r\n        !startsWith(context.source, '/>')) {\r\n        if (startsWith(context.source, '/')) {\r\n            emitError(context, 22 /* ErrorCodes.UNEXPECTED_SOLIDUS_IN_TAG */);\r\n            advanceBy(context, 1);\r\n            advanceSpaces(context);\r\n            continue;\r\n        }\r\n        if (type === 1 /* TagType.End */) {\r\n            emitError(context, 3 /* ErrorCodes.END_TAG_WITH_ATTRIBUTES */);\r\n        }\r\n        const attr = parseAttribute(context, attributeNames);\r\n        // Trim whitespace between class\r\n        // https://github.com/vuejs/core/issues/4251\r\n        if (attr.type === 6 /* NodeTypes.ATTRIBUTE */ &&\r\n            attr.value &&\r\n            attr.name === 'class') {\r\n            attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\r\n        }\r\n        if (type === 0 /* TagType.Start */) {\r\n            props.push(attr);\r\n        }\r\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n            emitError(context, 15 /* ErrorCodes.MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\r\n        }\r\n        advanceSpaces(context);\r\n    }\r\n    return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n    // Name.\r\n    const start = getCursor(context);\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    const name = match[0];\r\n    if (nameSet.has(name)) {\r\n        emitError(context, 2 /* ErrorCodes.DUPLICATE_ATTRIBUTE */);\r\n    }\r\n    nameSet.add(name);\r\n    if (name[0] === '=') {\r\n        emitError(context, 19 /* ErrorCodes.UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\r\n    }\r\n    {\r\n        const pattern = /[\"'<]/g;\r\n        let m;\r\n        while ((m = pattern.exec(name))) {\r\n            emitError(context, 17 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\r\n        }\r\n    }\r\n    advanceBy(context, name.length);\r\n    // Value\r\n    let value = undefined;\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        advanceSpaces(context);\r\n        advanceBy(context, 1);\r\n        advanceSpaces(context);\r\n        value = parseAttributeValue(context);\r\n        if (!value) {\r\n            emitError(context, 13 /* ErrorCodes.MISSING_ATTRIBUTE_VALUE */);\r\n        }\r\n    }\r\n    const loc = getSelection(context, start);\r\n    if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\r\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\r\n        let isPropShorthand = startsWith(name, '.');\r\n        let dirName = match[1] ||\r\n            (isPropShorthand || startsWith(name, ':')\r\n                ? 'bind'\r\n                : startsWith(name, '@')\r\n                    ? 'on'\r\n                    : 'slot');\r\n        let arg;\r\n        if (match[2]) {\r\n            const isSlot = dirName === 'slot';\r\n            const startOffset = name.lastIndexOf(match[2]);\r\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\r\n            let content = match[2];\r\n            let isStatic = true;\r\n            if (content.startsWith('[')) {\r\n                isStatic = false;\r\n                if (!content.endsWith(']')) {\r\n                    emitError(context, 27 /* ErrorCodes.X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\r\n                    content = content.slice(1);\r\n                }\r\n                else {\r\n                    content = content.slice(1, content.length - 1);\r\n                }\r\n            }\r\n            else if (isSlot) {\r\n                // #1241 special case for v-slot: vuetify relies extensively on slot\r\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n                // supports such usage so we are keeping it consistent with 2.x.\r\n                content += match[3] || '';\r\n            }\r\n            arg = {\r\n                type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\r\n                content,\r\n                isStatic,\r\n                constType: isStatic\r\n                    ? 3 /* ConstantTypes.CAN_STRINGIFY */\r\n                    : 0 /* ConstantTypes.NOT_CONSTANT */,\r\n                loc\r\n            };\r\n        }\r\n        if (value && value.isQuoted) {\r\n            const valueLoc = value.loc;\r\n            valueLoc.start.offset++;\r\n            valueLoc.start.column++;\r\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n            valueLoc.source = valueLoc.source.slice(1, -1);\r\n        }\r\n        const modifiers = match[3] ? match[3].slice(1).split('.') : [];\r\n        if (isPropShorthand)\r\n            modifiers.push('prop');\r\n        // 2.x compat v-bind:foo.sync -> v-model:foo\r\n        if (dirName === 'bind' && arg) {\r\n            if (modifiers.includes('sync') &&\r\n                checkCompatEnabled(\"COMPILER_V_BIND_SYNC\" /* CompilerDeprecationTypes.COMPILER_V_BIND_SYNC */, context, loc, arg.loc.source)) {\r\n                dirName = 'model';\r\n                modifiers.splice(modifiers.indexOf('sync'), 1);\r\n            }\r\n        }\r\n        return {\r\n            type: 7 /* NodeTypes.DIRECTIVE */,\r\n            name: dirName,\r\n            exp: value && {\r\n                type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\r\n                content: value.content,\r\n                isStatic: false,\r\n                // Treat as non-constant by default. This can be potentially set to\r\n                // other values by `transformExpression` to make it eligible for hoisting.\r\n                constType: 0 /* ConstantTypes.NOT_CONSTANT */,\r\n                loc: value.loc\r\n            },\r\n            arg,\r\n            modifiers,\r\n            loc\r\n        };\r\n    }\r\n    // missing directive name or illegal directive name\r\n    if (!context.inVPre && startsWith(name, 'v-')) {\r\n        emitError(context, 26 /* ErrorCodes.X_MISSING_DIRECTIVE_NAME */);\r\n    }\r\n    return {\r\n        type: 6 /* NodeTypes.ATTRIBUTE */,\r\n        name,\r\n        value: value && {\r\n            type: 2 /* NodeTypes.TEXT */,\r\n            content: value.content,\r\n            loc: value.loc\r\n        },\r\n        loc\r\n    };\r\n}\r\nfunction parseAttributeValue(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    const quote = context.source[0];\r\n    const isQuoted = quote === `\"` || quote === `'`;\r\n    if (isQuoted) {\r\n        // Quoted value.\r\n        advanceBy(context, 1);\r\n        const endIndex = context.source.indexOf(quote);\r\n        if (endIndex === -1) {\r\n            content = parseTextData(context, context.source.length, 4 /* TextModes.ATTRIBUTE_VALUE */);\r\n        }\r\n        else {\r\n            content = parseTextData(context, endIndex, 4 /* TextModes.ATTRIBUTE_VALUE */);\r\n            advanceBy(context, 1);\r\n        }\r\n    }\r\n    else {\r\n        // Unquoted\r\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        const unexpectedChars = /[\"'<=`]/g;\r\n        let m;\r\n        while ((m = unexpectedChars.exec(match[0]))) {\r\n            emitError(context, 18 /* ErrorCodes.UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\r\n        }\r\n        content = parseTextData(context, match[0].length, 4 /* TextModes.ATTRIBUTE_VALUE */);\r\n    }\r\n    return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n    const [open, close] = context.options.delimiters;\r\n    const closeIndex = context.source.indexOf(close, open.length);\r\n    if (closeIndex === -1) {\r\n        emitError(context, 25 /* ErrorCodes.X_MISSING_INTERPOLATION_END */);\r\n        return undefined;\r\n    }\r\n    const start = getCursor(context);\r\n    advanceBy(context, open.length);\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context);\r\n    const rawContentLength = closeIndex - open.length;\r\n    const rawContent = context.source.slice(0, rawContentLength);\r\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n    const content = preTrimContent.trim();\r\n    const startOffset = preTrimContent.indexOf(content);\r\n    if (startOffset > 0) {\r\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n    }\r\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n    advanceBy(context, close.length);\r\n    return {\r\n        type: 5 /* NodeTypes.INTERPOLATION */,\r\n        content: {\r\n            type: 4 /* NodeTypes.SIMPLE_EXPRESSION */,\r\n            isStatic: false,\r\n            // Set `isConstant` to false by default and will decide in transformExpression\r\n            constType: 0 /* ConstantTypes.NOT_CONSTANT */,\r\n            content,\r\n            loc: getSelection(context, innerStart, innerEnd)\r\n        },\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseText(context, mode) {\r\n    const endTokens = mode === 3 /* TextModes.CDATA */ ? [']]>'] : ['<', context.options.delimiters[0]];\r\n    let endIndex = context.source.length;\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1);\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index;\r\n        }\r\n    }\r\n    const start = getCursor(context);\r\n    const content = parseTextData(context, endIndex, mode);\r\n    return {\r\n        type: 2 /* NodeTypes.TEXT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(context, length, mode) {\r\n    const rawText = context.source.slice(0, length);\r\n    advanceBy(context, length);\r\n    if (mode === 2 /* TextModes.RAWTEXT */ ||\r\n        mode === 3 /* TextModes.CDATA */ ||\r\n        !rawText.includes('&')) {\r\n        return rawText;\r\n    }\r\n    else {\r\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n        return context.options.decodeEntities(rawText, mode === 4 /* TextModes.ATTRIBUTE_VALUE */);\r\n    }\r\n}\r\nfunction getCursor(context) {\r\n    const { column, line, offset } = context;\r\n    return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset, end.offset)\r\n    };\r\n}\r\nfunction last(xs) {\r\n    return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n    return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n    const { source } = context;\r\n    advancePositionWithMutation(context, source, numberOfCharacters);\r\n    context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n    if (match) {\r\n        advanceBy(context, match[0].length);\r\n    }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n    if (offset) {\r\n        loc.offset += offset;\r\n        loc.column += offset;\r\n    }\r\n    context.options.onError(createCompilerError(code, {\r\n        start: loc,\r\n        end: loc,\r\n        source: ''\r\n    }));\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n    const s = context.source;\r\n    switch (mode) {\r\n        case 0 /* TextModes.DATA */:\r\n            if (startsWith(s, '</')) {\r\n                // TODO: probably bad performance\r\n                for (let i = ancestors.length - 1; i >= 0; --i) {\r\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 1 /* TextModes.RCDATA */:\r\n        case 2 /* TextModes.RAWTEXT */: {\r\n            const parent = last(ancestors);\r\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        case 3 /* TextModes.CDATA */:\r\n            if (startsWith(s, ']]>')) {\r\n                return true;\r\n            }\r\n            break;\r\n    }\r\n    return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n    return (startsWith(source, '</') &&\r\n        source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\r\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\r\n}\n\nfunction hoistStatic(root, context) {\r\n    walk(root, context, \r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]));\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n    const { children } = root;\r\n    return (children.length === 1 &&\r\n        child.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        !isSlotOutlet(child));\r\n}\r\nfunction walk(node, context, doNotHoistNode = false) {\r\n    const { children } = node;\r\n    const originalCount = children.length;\r\n    let hoistedCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // only plain elements & text calls are eligible for hoisting.\r\n        if (child.type === 1 /* NodeTypes.ELEMENT */ &&\r\n            child.tagType === 0 /* ElementTypes.ELEMENT */) {\r\n            const constantType = doNotHoistNode\r\n                ? 0 /* ConstantTypes.NOT_CONSTANT */\r\n                : getConstantType(child, context);\r\n            if (constantType > 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                if (constantType >= 2 /* ConstantTypes.CAN_HOIST */) {\r\n                    child.codegenNode.patchFlag =\r\n                        -1 /* PatchFlags.HOISTED */ + (``);\r\n                    child.codegenNode = context.hoist(child.codegenNode);\r\n                    hoistedCount++;\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                // node may contain dynamic children, but its props may be eligible for\r\n                // hoisting.\r\n                const codegenNode = child.codegenNode;\r\n                if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n                    const flag = getPatchFlag(codegenNode);\r\n                    if ((!flag ||\r\n                        flag === 512 /* PatchFlags.NEED_PATCH */ ||\r\n                        flag === 1 /* PatchFlags.TEXT */) &&\r\n                        getGeneratedPropsConstantType(child, context) >=\r\n                            2 /* ConstantTypes.CAN_HOIST */) {\r\n                        const props = getNodeProps(child);\r\n                        if (props) {\r\n                            codegenNode.props = context.hoist(props);\r\n                        }\r\n                    }\r\n                    if (codegenNode.dynamicProps) {\r\n                        codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (child.type === 12 /* NodeTypes.TEXT_CALL */ &&\r\n            getConstantType(child.content, context) >= 2 /* ConstantTypes.CAN_HOIST */) {\r\n            child.codegenNode = context.hoist(child.codegenNode);\r\n            hoistedCount++;\r\n        }\r\n        // walk further\r\n        if (child.type === 1 /* NodeTypes.ELEMENT */) {\r\n            const isComponent = child.tagType === 1 /* ElementTypes.COMPONENT */;\r\n            if (isComponent) {\r\n                context.scopes.vSlot++;\r\n            }\r\n            walk(child, context);\r\n            if (isComponent) {\r\n                context.scopes.vSlot--;\r\n            }\r\n        }\r\n        else if (child.type === 11 /* NodeTypes.FOR */) {\r\n            // Do not hoist v-for single child because it has to be a block\r\n            walk(child, context, child.children.length === 1);\r\n        }\r\n        else if (child.type === 9 /* NodeTypes.IF */) {\r\n            for (let i = 0; i < child.branches.length; i++) {\r\n                // Do not hoist v-if single child because it has to be a block\r\n                walk(child.branches[i], context, child.branches[i].children.length === 1);\r\n            }\r\n        }\r\n    }\r\n    if (hoistedCount && context.transformHoist) {\r\n        context.transformHoist(children, context, node);\r\n    }\r\n    // all children were hoisted - the entire children array is hoistable.\r\n    if (hoistedCount &&\r\n        hoistedCount === originalCount &&\r\n        node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        node.tagType === 0 /* ElementTypes.ELEMENT */ &&\r\n        node.codegenNode &&\r\n        node.codegenNode.type === 13 /* NodeTypes.VNODE_CALL */ &&\r\n        shared.isArray(node.codegenNode.children)) {\r\n        node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\r\n    }\r\n}\r\nfunction getConstantType(node, context) {\r\n    const { constantCache } = context;\r\n    switch (node.type) {\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n            if (node.tagType !== 0 /* ElementTypes.ELEMENT */) {\r\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n            const cached = constantCache.get(node);\r\n            if (cached !== undefined) {\r\n                return cached;\r\n            }\r\n            const codegenNode = node.codegenNode;\r\n            if (codegenNode.type !== 13 /* NodeTypes.VNODE_CALL */) {\r\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n            if (codegenNode.isBlock &&\r\n                node.tag !== 'svg' &&\r\n                node.tag !== 'foreignObject') {\r\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n            const flag = getPatchFlag(codegenNode);\r\n            if (!flag) {\r\n                let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n                // Element itself has no patch flag. However we still need to check:\r\n                // 1. Even for a node with no patch flag, it is possible for it to contain\r\n                // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n                // injected keys or cached event handlers. Therefore we need to always\r\n                // check the codegenNode's props to be sure.\r\n                const generatedPropsType = getGeneratedPropsConstantType(node, context);\r\n                if (generatedPropsType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                    constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                    return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                }\r\n                if (generatedPropsType < returnType) {\r\n                    returnType = generatedPropsType;\r\n                }\r\n                // 2. its children.\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    const childType = getConstantType(node.children[i], context);\r\n                    if (childType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                        constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                        return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                    }\r\n                    if (childType < returnType) {\r\n                        returnType = childType;\r\n                    }\r\n                }\r\n                // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n                // type, check if any of the props can cause the type to be lowered\r\n                // we can skip can_patch because it's guaranteed by the absence of a\r\n                // patchFlag.\r\n                if (returnType > 1 /* ConstantTypes.CAN_SKIP_PATCH */) {\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'bind' && p.exp) {\r\n                            const expType = getConstantType(p.exp, context);\r\n                            if (expType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                                constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                            }\r\n                            if (expType < returnType) {\r\n                                returnType = expType;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // only svg/foreignObject could be block here, however if they are\r\n                // static then they don't need to be blocks since there will be no\r\n                // nested updates.\r\n                if (codegenNode.isBlock) {\r\n                    // except set custom directives.\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n                            constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                            return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                        }\r\n                    }\r\n                    context.removeHelper(OPEN_BLOCK);\r\n                    context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\r\n                    codegenNode.isBlock = false;\r\n                    context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\r\n                }\r\n                constantCache.set(node, returnType);\r\n                return returnType;\r\n            }\r\n            else {\r\n                constantCache.set(node, 0 /* ConstantTypes.NOT_CONSTANT */);\r\n                return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n        case 2 /* NodeTypes.TEXT */:\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            return 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n        case 9 /* NodeTypes.IF */:\r\n        case 11 /* NodeTypes.FOR */:\r\n        case 10 /* NodeTypes.IF_BRANCH */:\r\n            return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n        case 12 /* NodeTypes.TEXT_CALL */:\r\n            return getConstantType(node.content, context);\r\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\r\n            return node.constType;\r\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\r\n            let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                if (shared.isString(child) || shared.isSymbol(child)) {\r\n                    continue;\r\n                }\r\n                const childType = getConstantType(child, context);\r\n                if (childType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                    return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n                }\r\n                else if (childType < returnType) {\r\n                    returnType = childType;\r\n                }\r\n            }\r\n            return returnType;\r\n        default:\r\n            return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n    }\r\n}\r\nconst allowHoistedHelperSet = new Set([\r\n    NORMALIZE_CLASS,\r\n    NORMALIZE_STYLE,\r\n    NORMALIZE_PROPS,\r\n    GUARD_REACTIVE_PROPS\r\n]);\r\nfunction getConstantTypeOfHelperCall(value, context) {\r\n    if (value.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */ &&\r\n        !shared.isString(value.callee) &&\r\n        allowHoistedHelperSet.has(value.callee)) {\r\n        const arg = value.arguments[0];\r\n        if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n            return getConstantType(arg, context);\r\n        }\r\n        else if (arg.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n            // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n            return getConstantTypeOfHelperCall(arg, context);\r\n        }\r\n    }\r\n    return 0 /* ConstantTypes.NOT_CONSTANT */;\r\n}\r\nfunction getGeneratedPropsConstantType(node, context) {\r\n    let returnType = 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n    const props = getNodeProps(node);\r\n    if (props && props.type === 15 /* NodeTypes.JS_OBJECT_EXPRESSION */) {\r\n        const { properties } = props;\r\n        for (let i = 0; i < properties.length; i++) {\r\n            const { key, value } = properties[i];\r\n            const keyType = getConstantType(key, context);\r\n            if (keyType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                return keyType;\r\n            }\r\n            if (keyType < returnType) {\r\n                returnType = keyType;\r\n            }\r\n            let valueType;\r\n            if (value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n                valueType = getConstantType(value, context);\r\n            }\r\n            else if (value.type === 14 /* NodeTypes.JS_CALL_EXPRESSION */) {\r\n                // some helper calls can be hoisted,\r\n                // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n                // in this case we need to respect the ConstantType of the helper's arguments\r\n                valueType = getConstantTypeOfHelperCall(value, context);\r\n            }\r\n            else {\r\n                valueType = 0 /* ConstantTypes.NOT_CONSTANT */;\r\n            }\r\n            if (valueType === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                return valueType;\r\n            }\r\n            if (valueType < returnType) {\r\n                returnType = valueType;\r\n            }\r\n        }\r\n    }\r\n    return returnType;\r\n}\r\nfunction getNodeProps(node) {\r\n    const codegenNode = node.codegenNode;\r\n    if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n        return codegenNode.props;\r\n    }\r\n}\r\nfunction getPatchFlag(node) {\r\n    const flag = node.patchFlag;\r\n    return flag ? parseInt(flag, 10) : undefined;\r\n}\n\nfunction createTransformContext(root, { filename = '', prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = shared.NOOP, isCustomElement = shared.NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = shared.EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {\r\n    const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\r\n    const context = {\r\n        // options\r\n        selfName: nameMatch && shared.capitalize(shared.camelize(nameMatch[1])),\r\n        prefixIdentifiers,\r\n        hoistStatic,\r\n        cacheHandlers,\r\n        nodeTransforms,\r\n        directiveTransforms,\r\n        transformHoist,\r\n        isBuiltInComponent,\r\n        isCustomElement,\r\n        expressionPlugins,\r\n        scopeId,\r\n        slotted,\r\n        ssr,\r\n        inSSR,\r\n        ssrCssVars,\r\n        bindingMetadata,\r\n        inline,\r\n        isTS,\r\n        onError,\r\n        onWarn,\r\n        compatConfig,\r\n        // state\r\n        root,\r\n        helpers: new Map(),\r\n        components: new Set(),\r\n        directives: new Set(),\r\n        hoists: [],\r\n        imports: [],\r\n        constantCache: new Map(),\r\n        temps: 0,\r\n        cached: 0,\r\n        identifiers: Object.create(null),\r\n        scopes: {\r\n            vFor: 0,\r\n            vSlot: 0,\r\n            vPre: 0,\r\n            vOnce: 0\r\n        },\r\n        parent: null,\r\n        currentNode: root,\r\n        childIndex: 0,\r\n        inVOnce: false,\r\n        // methods\r\n        helper(name) {\r\n            const count = context.helpers.get(name) || 0;\r\n            context.helpers.set(name, count + 1);\r\n            return name;\r\n        },\r\n        removeHelper(name) {\r\n            const count = context.helpers.get(name);\r\n            if (count) {\r\n                const currentCount = count - 1;\r\n                if (!currentCount) {\r\n                    context.helpers.delete(name);\r\n                }\r\n                else {\r\n                    context.helpers.set(name, currentCount);\r\n                }\r\n            }\r\n        },\r\n        helperString(name) {\r\n            return `_${helperNameMap[context.helper(name)]}`;\r\n        },\r\n        replaceNode(node) {\r\n            context.parent.children[context.childIndex] = context.currentNode = node;\r\n        },\r\n        removeNode(node) {\r\n            const list = context.parent.children;\r\n            const removalIndex = node\r\n                ? list.indexOf(node)\r\n                : context.currentNode\r\n                    ? context.childIndex\r\n                    : -1;\r\n            if (!node || node === context.currentNode) {\r\n                // current node removed\r\n                context.currentNode = null;\r\n                context.onNodeRemoved();\r\n            }\r\n            else {\r\n                // sibling node removed\r\n                if (context.childIndex > removalIndex) {\r\n                    context.childIndex--;\r\n                    context.onNodeRemoved();\r\n                }\r\n            }\r\n            context.parent.children.splice(removalIndex, 1);\r\n        },\r\n        onNodeRemoved: () => { },\r\n        addIdentifiers(exp) {\r\n            // identifier tracking only happens in non-browser builds.\r\n            {\r\n                if (shared.isString(exp)) {\r\n                    addId(exp);\r\n                }\r\n                else if (exp.identifiers) {\r\n                    exp.identifiers.forEach(addId);\r\n                }\r\n                else if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n                    addId(exp.content);\r\n                }\r\n            }\r\n        },\r\n        removeIdentifiers(exp) {\r\n            {\r\n                if (shared.isString(exp)) {\r\n                    removeId(exp);\r\n                }\r\n                else if (exp.identifiers) {\r\n                    exp.identifiers.forEach(removeId);\r\n                }\r\n                else if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n                    removeId(exp.content);\r\n                }\r\n            }\r\n        },\r\n        hoist(exp) {\r\n            if (shared.isString(exp))\r\n                exp = createSimpleExpression(exp);\r\n            context.hoists.push(exp);\r\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2 /* ConstantTypes.CAN_HOIST */);\r\n            identifier.hoisted = exp;\r\n            return identifier;\r\n        },\r\n        cache(exp, isVNode = false) {\r\n            return createCacheExpression(context.cached++, exp, isVNode);\r\n        }\r\n    };\r\n    {\r\n        context.filters = new Set();\r\n    }\r\n    function addId(id) {\r\n        const { identifiers } = context;\r\n        if (identifiers[id] === undefined) {\r\n            identifiers[id] = 0;\r\n        }\r\n        identifiers[id]++;\r\n    }\r\n    function removeId(id) {\r\n        context.identifiers[id]--;\r\n    }\r\n    return context;\r\n}\r\nfunction transform(root, options) {\r\n    const context = createTransformContext(root, options);\r\n    traverseNode(root, context);\r\n    if (options.hoistStatic) {\r\n        hoistStatic(root, context);\r\n    }\r\n    if (!options.ssr) {\r\n        createRootCodegen(root, context);\r\n    }\r\n    // finalize meta information\r\n    root.helpers = [...context.helpers.keys()];\r\n    root.components = [...context.components];\r\n    root.directives = [...context.directives];\r\n    root.imports = context.imports;\r\n    root.hoists = context.hoists;\r\n    root.temps = context.temps;\r\n    root.cached = context.cached;\r\n    {\r\n        root.filters = [...context.filters];\r\n    }\r\n}\r\nfunction createRootCodegen(root, context) {\r\n    const { helper } = context;\r\n    const { children } = root;\r\n    if (children.length === 1) {\r\n        const child = children[0];\r\n        // if the single child is an element, turn it into a block.\r\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n            // single element root is never hoisted so codegenNode will never be\r\n            // SimpleExpressionNode\r\n            const codegenNode = child.codegenNode;\r\n            if (codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n                makeBlock(codegenNode, context);\r\n            }\r\n            root.codegenNode = codegenNode;\r\n        }\r\n        else {\r\n            // - single <slot/>, IfNode, ForNode: already blocks.\r\n            // - single text node: always patched.\r\n            // root codegen falls through via genNode()\r\n            root.codegenNode = child;\r\n        }\r\n    }\r\n    else if (children.length > 1) {\r\n        // root has multiple nodes - return a fragment block.\r\n        let patchFlag = 64 /* PatchFlags.STABLE_FRAGMENT */;\r\n        shared.PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */];\r\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + (``), undefined, undefined, true, undefined, false /* isComponent */);\r\n    }\r\n    else ;\r\n}\r\nfunction traverseChildren(parent, context) {\r\n    let i = 0;\r\n    const nodeRemoved = () => {\r\n        i--;\r\n    };\r\n    for (; i < parent.children.length; i++) {\r\n        const child = parent.children[i];\r\n        if (shared.isString(child))\r\n            continue;\r\n        context.parent = parent;\r\n        context.childIndex = i;\r\n        context.onNodeRemoved = nodeRemoved;\r\n        traverseNode(child, context);\r\n    }\r\n}\r\nfunction traverseNode(node, context) {\r\n    context.currentNode = node;\r\n    // apply transform plugins\r\n    const { nodeTransforms } = context;\r\n    const exitFns = [];\r\n    for (let i = 0; i < nodeTransforms.length; i++) {\r\n        const onExit = nodeTransforms[i](node, context);\r\n        if (onExit) {\r\n            if (shared.isArray(onExit)) {\r\n                exitFns.push(...onExit);\r\n            }\r\n            else {\r\n                exitFns.push(onExit);\r\n            }\r\n        }\r\n        if (!context.currentNode) {\r\n            // node was removed\r\n            return;\r\n        }\r\n        else {\r\n            // node may have been replaced\r\n            node = context.currentNode;\r\n        }\r\n    }\r\n    switch (node.type) {\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            if (!context.ssr) {\r\n                // inject import for the Comment symbol, which is needed for creating\r\n                // comment nodes with `createVNode`\r\n                context.helper(CREATE_COMMENT);\r\n            }\r\n            break;\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n            // no need to traverse, but we need to inject toString helper\r\n            if (!context.ssr) {\r\n                context.helper(TO_DISPLAY_STRING);\r\n            }\r\n            break;\r\n        // for container types, further traverse downwards\r\n        case 9 /* NodeTypes.IF */:\r\n            for (let i = 0; i < node.branches.length; i++) {\r\n                traverseNode(node.branches[i], context);\r\n            }\r\n            break;\r\n        case 10 /* NodeTypes.IF_BRANCH */:\r\n        case 11 /* NodeTypes.FOR */:\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n        case 0 /* NodeTypes.ROOT */:\r\n            traverseChildren(node, context);\r\n            break;\r\n    }\r\n    // exit transforms\r\n    context.currentNode = node;\r\n    let i = exitFns.length;\r\n    while (i--) {\r\n        exitFns[i]();\r\n    }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n    const matches = shared.isString(name)\r\n        ? (n) => n === name\r\n        : (n) => name.test(n);\r\n    return (node, context) => {\r\n        if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n            const { props } = node;\r\n            // structural directive transforms are not concerned with slots\r\n            // as they are handled separately in vSlot.ts\r\n            if (node.tagType === 3 /* ElementTypes.TEMPLATE */ && props.some(isVSlot)) {\r\n                return;\r\n            }\r\n            const exitFns = [];\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (prop.type === 7 /* NodeTypes.DIRECTIVE */ && matches(prop.name)) {\r\n                    // structural directives are removed to avoid infinite recursion\r\n                    // also we remove them *before* applying so that it can further\r\n                    // traverse itself in case it moves the node around\r\n                    props.splice(i, 1);\r\n                    i--;\r\n                    const onExit = fn(node, prop, context);\r\n                    if (onExit)\r\n                        exitFns.push(onExit);\r\n                }\r\n            }\r\n            return exitFns;\r\n        }\r\n    };\r\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\r\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap: sourceMap$1 = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssrRuntimeModuleName = 'vue/server-renderer', ssr = false, isTS = false, inSSR = false }) {\r\n    const context = {\r\n        mode,\r\n        prefixIdentifiers,\r\n        sourceMap: sourceMap$1,\r\n        filename,\r\n        scopeId,\r\n        optimizeImports,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        ssrRuntimeModuleName,\r\n        ssr,\r\n        isTS,\r\n        inSSR,\r\n        source: ast.loc.source,\r\n        code: ``,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        indentLevel: 0,\r\n        pure: false,\r\n        map: undefined,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`;\r\n        },\r\n        push(code, node) {\r\n            context.code += code;\r\n            if (context.map) {\r\n                if (node) {\r\n                    let name;\r\n                    if (node.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !node.isStatic) {\r\n                        const content = node.content.replace(/^_ctx\\./, '');\r\n                        if (content !== node.content && isSimpleIdentifier(content)) {\r\n                            name = content;\r\n                        }\r\n                    }\r\n                    addMapping(node.loc.start, name);\r\n                }\r\n                advancePositionWithMutation(context, code);\r\n                if (node && node.loc !== locStub) {\r\n                    addMapping(node.loc.end);\r\n                }\r\n            }\r\n        },\r\n        indent() {\r\n            newline(++context.indentLevel);\r\n        },\r\n        deindent(withoutNewLine = false) {\r\n            if (withoutNewLine) {\r\n                --context.indentLevel;\r\n            }\r\n            else {\r\n                newline(--context.indentLevel);\r\n            }\r\n        },\r\n        newline() {\r\n            newline(context.indentLevel);\r\n        }\r\n    };\r\n    function newline(n) {\r\n        context.push('\\n' + `  `.repeat(n));\r\n    }\r\n    function addMapping(loc, name) {\r\n        context.map.addMapping({\r\n            name,\r\n            source: context.filename,\r\n            original: {\r\n                line: loc.line,\r\n                column: loc.column - 1 // source-map column is 0 based\r\n            },\r\n            generated: {\r\n                line: context.line,\r\n                column: context.column - 1\r\n            }\r\n        });\r\n    }\r\n    if (sourceMap$1) {\r\n        // lazy require source-map implementation, only in non-browser builds\r\n        context.map = new sourceMap.SourceMapGenerator();\r\n        context.map.setSourceContent(filename, context.source);\r\n    }\r\n    return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n    const context = createCodegenContext(ast, options);\r\n    if (options.onContextCreated)\r\n        options.onContextCreated(context);\r\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\r\n    const hasHelpers = ast.helpers.length > 0;\r\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\r\n    const genScopeId = scopeId != null && mode === 'module';\r\n    const isSetupInlined = !!options.inline;\r\n    // preambles\r\n    // in setup() inline mode, the preamble is generated in a sub context\r\n    // and returned separately.\r\n    const preambleContext = isSetupInlined\r\n        ? createCodegenContext(ast, options)\r\n        : context;\r\n    if (mode === 'module') {\r\n        genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\r\n    }\r\n    else {\r\n        genFunctionPreamble(ast, preambleContext);\r\n    }\r\n    // enter render function\r\n    const functionName = ssr ? `ssrRender` : `render`;\r\n    const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\r\n    if (options.bindingMetadata && !options.inline) {\r\n        // binding optimization args\r\n        args.push('$props', '$setup', '$data', '$options');\r\n    }\r\n    const signature = options.isTS\r\n        ? args.map(arg => `${arg}: any`).join(',')\r\n        : args.join(', ');\r\n    if (isSetupInlined) {\r\n        push(`(${signature}) => {`);\r\n    }\r\n    else {\r\n        push(`function ${functionName}(${signature}) {`);\r\n    }\r\n    indent();\r\n    if (useWithBlock) {\r\n        push(`with (_ctx) {`);\r\n        indent();\r\n        // function mode const declarations should be inside with block\r\n        // also they should be renamed to avoid collision with user properties\r\n        if (hasHelpers) {\r\n            push(`const { ${ast.helpers.map(aliasHelper).join(', ')} } = _Vue`);\r\n            push(`\\n`);\r\n            newline();\r\n        }\r\n    }\r\n    // generate asset resolution statements\r\n    if (ast.components.length) {\r\n        genAssets(ast.components, 'component', context);\r\n        if (ast.directives.length || ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.directives.length) {\r\n        genAssets(ast.directives, 'directive', context);\r\n        if (ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.filters && ast.filters.length) {\r\n        newline();\r\n        genAssets(ast.filters, 'filter', context);\r\n        newline();\r\n    }\r\n    if (ast.temps > 0) {\r\n        push(`let `);\r\n        for (let i = 0; i < ast.temps; i++) {\r\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n        }\r\n    }\r\n    if (ast.components.length || ast.directives.length || ast.temps) {\r\n        push(`\\n`);\r\n        newline();\r\n    }\r\n    // generate the VNode tree expression\r\n    if (!ssr) {\r\n        push(`return `);\r\n    }\r\n    if (ast.codegenNode) {\r\n        genNode(ast.codegenNode, context);\r\n    }\r\n    else {\r\n        push(`null`);\r\n    }\r\n    if (useWithBlock) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    deindent();\r\n    push(`}`);\r\n    return {\r\n        ast,\r\n        code: context.code,\r\n        preamble: isSetupInlined ? preambleContext.code : ``,\r\n        // SourceMapGenerator does have toJSON() method but it's not in the types\r\n        map: context.map ? context.map.toJSON() : undefined\r\n    };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName, ssrRuntimeModuleName } = context;\r\n    const VueBinding = ssr\r\n        ? `require(${JSON.stringify(runtimeModuleName)})`\r\n        : runtimeGlobalName;\r\n    // Generate const declaration for helpers\r\n    // In prefix mode, we place the const declaration at top so it's done\r\n    // only once; But if we not prefixing, we place the declaration inside the\r\n    // with block so it doesn't incur the `in` check cost for every helper access.\r\n    if (ast.helpers.length > 0) {\r\n        if (prefixIdentifiers) {\r\n            push(`const { ${ast.helpers.map(aliasHelper).join(', ')} } = ${VueBinding}\\n`);\r\n        }\r\n        else {\r\n            // \"with\" mode.\r\n            // save Vue in a separate variable to avoid collision\r\n            push(`const _Vue = ${VueBinding}\\n`);\r\n            // in \"with\" mode, helpers are declared inside the with block to avoid\r\n            // has check cost, but hoists are lifted out of the function - we need\r\n            // to provide the helper here.\r\n            if (ast.hoists.length) {\r\n                const staticHelpers = [\r\n                    CREATE_VNODE,\r\n                    CREATE_ELEMENT_VNODE,\r\n                    CREATE_COMMENT,\r\n                    CREATE_TEXT,\r\n                    CREATE_STATIC\r\n                ]\r\n                    .filter(helper => ast.helpers.includes(helper))\r\n                    .map(aliasHelper)\r\n                    .join(', ');\r\n                push(`const { ${staticHelpers} } = _Vue\\n`);\r\n            }\r\n        }\r\n    }\r\n    // generate variables for ssr helpers\r\n    if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n        // ssr guarantees prefixIdentifier: true\r\n        push(`const { ${ast.ssrHelpers\r\n            .map(aliasHelper)\r\n            .join(', ')} } = require(\"${ssrRuntimeModuleName}\")\\n`);\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    push(`return `);\r\n}\r\nfunction genModulePreamble(ast, context, genScopeId, inline) {\r\n    const { push, newline, optimizeImports, runtimeModuleName, ssrRuntimeModuleName } = context;\r\n    if (genScopeId && ast.hoists.length) {\r\n        ast.helpers.push(PUSH_SCOPE_ID, POP_SCOPE_ID);\r\n    }\r\n    // generate import statements for helpers\r\n    if (ast.helpers.length) {\r\n        if (optimizeImports) {\r\n            // when bundled with webpack with code-split, calling an import binding\r\n            // as a function leads to it being wrapped with `Object(a.b)` or `(0,a.b)`,\r\n            // incurring both payload size increase and potential perf overhead.\r\n            // therefore we assign the imports to variables (which is a constant ~50b\r\n            // cost per-component instead of scaling with template size)\r\n            push(`import { ${ast.helpers\r\n                .map(s => helperNameMap[s])\r\n                .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`);\r\n            push(`\\n// Binding optimization for webpack code-split\\nconst ${ast.helpers\r\n                .map(s => `_${helperNameMap[s]} = ${helperNameMap[s]}`)\r\n                .join(', ')}\\n`);\r\n        }\r\n        else {\r\n            push(`import { ${ast.helpers\r\n                .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n                .join(', ')} } from ${JSON.stringify(runtimeModuleName)}\\n`);\r\n        }\r\n    }\r\n    if (ast.ssrHelpers && ast.ssrHelpers.length) {\r\n        push(`import { ${ast.ssrHelpers\r\n            .map(s => `${helperNameMap[s]} as _${helperNameMap[s]}`)\r\n            .join(', ')} } from \"${ssrRuntimeModuleName}\"\\n`);\r\n    }\r\n    if (ast.imports.length) {\r\n        genImports(ast.imports, context);\r\n        newline();\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    if (!inline) {\r\n        push(`export `);\r\n    }\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\r\n    const resolver = helper(type === 'filter'\r\n        ? RESOLVE_FILTER\r\n        : type === 'component'\r\n            ? RESOLVE_COMPONENT\r\n            : RESOLVE_DIRECTIVE);\r\n    for (let i = 0; i < assets.length; i++) {\r\n        let id = assets[i];\r\n        // potential component implicit self-reference inferred from SFC filename\r\n        const maybeSelfReference = id.endsWith('__self');\r\n        if (maybeSelfReference) {\r\n            id = id.slice(0, -6);\r\n        }\r\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\r\n        if (i < assets.length - 1) {\r\n            newline();\r\n        }\r\n    }\r\n}\r\nfunction genHoists(hoists, context) {\r\n    if (!hoists.length) {\r\n        return;\r\n    }\r\n    context.pure = true;\r\n    const { push, newline, helper, scopeId, mode } = context;\r\n    const genScopeId = scopeId != null && mode !== 'function';\r\n    newline();\r\n    // generate inlined withScopeId helper\r\n    if (genScopeId) {\r\n        push(`const _withScopeId = n => (${helper(PUSH_SCOPE_ID)}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`);\r\n        newline();\r\n    }\r\n    for (let i = 0; i < hoists.length; i++) {\r\n        const exp = hoists[i];\r\n        if (exp) {\r\n            const needScopeIdWrapper = genScopeId && exp.type === 13 /* NodeTypes.VNODE_CALL */;\r\n            push(`const _hoisted_${i + 1} = ${needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``}`);\r\n            genNode(exp, context);\r\n            if (needScopeIdWrapper) {\r\n                push(`)`);\r\n            }\r\n            newline();\r\n        }\r\n    }\r\n    context.pure = false;\r\n}\r\nfunction genImports(importsOptions, context) {\r\n    if (!importsOptions.length) {\r\n        return;\r\n    }\r\n    importsOptions.forEach(imports => {\r\n        context.push(`import `);\r\n        genNode(imports.exp, context);\r\n        context.push(` from '${imports.path}'`);\r\n        context.newline();\r\n    });\r\n}\r\nfunction isText$1(n) {\r\n    return (shared.isString(n) ||\r\n        n.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\r\n        n.type === 2 /* NodeTypes.TEXT */ ||\r\n        n.type === 5 /* NodeTypes.INTERPOLATION */ ||\r\n        n.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */);\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n    const multilines = nodes.length > 3 ||\r\n        (nodes.some(n => shared.isArray(n) || !isText$1(n)));\r\n    context.push(`[`);\r\n    multilines && context.indent();\r\n    genNodeList(nodes, context, multilines);\r\n    multilines && context.deindent();\r\n    context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n    const { push, newline } = context;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (shared.isString(node)) {\r\n            push(node);\r\n        }\r\n        else if (shared.isArray(node)) {\r\n            genNodeListAsArray(node, context);\r\n        }\r\n        else {\r\n            genNode(node, context);\r\n        }\r\n        if (i < nodes.length - 1) {\r\n            if (multilines) {\r\n                comma && push(',');\r\n                newline();\r\n            }\r\n            else {\r\n                comma && push(', ');\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genNode(node, context) {\r\n    if (shared.isString(node)) {\r\n        context.push(node);\r\n        return;\r\n    }\r\n    if (shared.isSymbol(node)) {\r\n        context.push(context.helper(node));\r\n        return;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n        case 9 /* NodeTypes.IF */:\r\n        case 11 /* NodeTypes.FOR */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 2 /* NodeTypes.TEXT */:\r\n            genText(node, context);\r\n            break;\r\n        case 4 /* NodeTypes.SIMPLE_EXPRESSION */:\r\n            genExpression(node, context);\r\n            break;\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case 12 /* NodeTypes.TEXT_CALL */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            genComment(node, context);\r\n            break;\r\n        case 13 /* NodeTypes.VNODE_CALL */:\r\n            genVNodeCall(node, context);\r\n            break;\r\n        case 14 /* NodeTypes.JS_CALL_EXPRESSION */:\r\n            genCallExpression(node, context);\r\n            break;\r\n        case 15 /* NodeTypes.JS_OBJECT_EXPRESSION */:\r\n            genObjectExpression(node, context);\r\n            break;\r\n        case 17 /* NodeTypes.JS_ARRAY_EXPRESSION */:\r\n            genArrayExpression(node, context);\r\n            break;\r\n        case 18 /* NodeTypes.JS_FUNCTION_EXPRESSION */:\r\n            genFunctionExpression(node, context);\r\n            break;\r\n        case 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */:\r\n            genConditionalExpression(node, context);\r\n            break;\r\n        case 20 /* NodeTypes.JS_CACHE_EXPRESSION */:\r\n            genCacheExpression(node, context);\r\n            break;\r\n        case 21 /* NodeTypes.JS_BLOCK_STATEMENT */:\r\n            genNodeList(node.body, context, true, false);\r\n            break;\r\n        // SSR only types\r\n        case 22 /* NodeTypes.JS_TEMPLATE_LITERAL */:\r\n            genTemplateLiteral(node, context);\r\n            break;\r\n        case 23 /* NodeTypes.JS_IF_STATEMENT */:\r\n            genIfStatement(node, context);\r\n            break;\r\n        case 24 /* NodeTypes.JS_ASSIGNMENT_EXPRESSION */:\r\n            genAssignmentExpression(node, context);\r\n            break;\r\n        case 25 /* NodeTypes.JS_SEQUENCE_EXPRESSION */:\r\n            genSequenceExpression(node, context);\r\n            break;\r\n        case 26 /* NodeTypes.JS_RETURN_STATEMENT */:\r\n            genReturnStatement(node, context);\r\n            break;\r\n    }\r\n}\r\nfunction genText(node, context) {\r\n    context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n    const { content, isStatic } = node;\r\n    context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure)\r\n        push(PURE_ANNOTATION);\r\n    push(`${helper(TO_DISPLAY_STRING)}(`);\r\n    genNode(node.content, context);\r\n    push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (shared.isString(child)) {\r\n            context.push(child);\r\n        }\r\n        else {\r\n            genNode(child, context);\r\n        }\r\n    }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n    const { push } = context;\r\n    if (node.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\r\n        push(`[`);\r\n        genCompoundExpression(node, context);\r\n        push(`]`);\r\n    }\r\n    else if (node.isStatic) {\r\n        // only quote keys if necessary\r\n        const text = isSimpleIdentifier(node.content)\r\n            ? node.content\r\n            : JSON.stringify(node.content);\r\n        push(text, node);\r\n    }\r\n    else {\r\n        push(`[${node.content}]`, node);\r\n    }\r\n}\r\nfunction genComment(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n}\r\nfunction genVNodeCall(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent } = node;\r\n    if (directives) {\r\n        push(helper(WITH_DIRECTIVES) + `(`);\r\n    }\r\n    if (isBlock) {\r\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\r\n    }\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    const callHelper = isBlock\r\n        ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n        : getVNodeHelper(context.inSSR, isComponent);\r\n    push(helper(callHelper) + `(`, node);\r\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\r\n    push(`)`);\r\n    if (isBlock) {\r\n        push(`)`);\r\n    }\r\n    if (directives) {\r\n        push(`, `);\r\n        genNode(directives, context);\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genNullableArgs(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i] != null)\r\n            break;\r\n    }\r\n    return args.slice(0, i + 1).map(arg => arg || `null`);\r\n}\r\n// JavaScript\r\nfunction genCallExpression(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const callee = shared.isString(node.callee) ? node.callee : helper(node.callee);\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(callee + `(`, node);\r\n    genNodeList(node.arguments, context);\r\n    push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n    const { push, indent, deindent, newline } = context;\r\n    const { properties } = node;\r\n    if (!properties.length) {\r\n        push(`{}`, node);\r\n        return;\r\n    }\r\n    const multilines = properties.length > 1 ||\r\n        (properties.some(p => p.value.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */));\r\n    push(multilines ? `{` : `{ `);\r\n    multilines && indent();\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const { key, value } = properties[i];\r\n        // key\r\n        genExpressionAsPropertyKey(key, context);\r\n        push(`: `);\r\n        // value\r\n        genNode(value, context);\r\n        if (i < properties.length - 1) {\r\n            // will only reach this if it's multilines\r\n            push(`,`);\r\n            newline();\r\n        }\r\n    }\r\n    multilines && deindent();\r\n    push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n    genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    const { params, returns, body, newline, isSlot } = node;\r\n    if (isSlot) {\r\n        // wrap slot functions with owner context\r\n        push(`_${helperNameMap[WITH_CTX]}(`);\r\n    }\r\n    push(`(`, node);\r\n    if (shared.isArray(params)) {\r\n        genNodeList(params, context);\r\n    }\r\n    else if (params) {\r\n        genNode(params, context);\r\n    }\r\n    push(`) => `);\r\n    if (newline || body) {\r\n        push(`{`);\r\n        indent();\r\n    }\r\n    if (returns) {\r\n        if (newline) {\r\n            push(`return `);\r\n        }\r\n        if (shared.isArray(returns)) {\r\n            genNodeListAsArray(returns, context);\r\n        }\r\n        else {\r\n            genNode(returns, context);\r\n        }\r\n    }\r\n    else if (body) {\r\n        genNode(body, context);\r\n    }\r\n    if (newline || body) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    if (isSlot) {\r\n        if (node.isNonScopedSlot) {\r\n            push(`, undefined, true`);\r\n        }\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n    const { test, consequent, alternate, newline: needNewline } = node;\r\n    const { push, indent, deindent, newline } = context;\r\n    if (test.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        const needsParens = !isSimpleIdentifier(test.content);\r\n        needsParens && push(`(`);\r\n        genExpression(test, context);\r\n        needsParens && push(`)`);\r\n    }\r\n    else {\r\n        push(`(`);\r\n        genNode(test, context);\r\n        push(`)`);\r\n    }\r\n    needNewline && indent();\r\n    context.indentLevel++;\r\n    needNewline || push(` `);\r\n    push(`? `);\r\n    genNode(consequent, context);\r\n    context.indentLevel--;\r\n    needNewline && newline();\r\n    needNewline || push(` `);\r\n    push(`: `);\r\n    const isNested = alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */;\r\n    if (!isNested) {\r\n        context.indentLevel++;\r\n    }\r\n    genNode(alternate, context);\r\n    if (!isNested) {\r\n        context.indentLevel--;\r\n    }\r\n    needNewline && deindent(true /* without newline */);\r\n}\r\nfunction genCacheExpression(node, context) {\r\n    const { push, helper, indent, deindent, newline } = context;\r\n    push(`_cache[${node.index}] || (`);\r\n    if (node.isVNode) {\r\n        indent();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n        newline();\r\n    }\r\n    push(`_cache[${node.index}] = `);\r\n    genNode(node.value, context);\r\n    if (node.isVNode) {\r\n        push(`,`);\r\n        newline();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n        newline();\r\n        push(`_cache[${node.index}]`);\r\n        deindent();\r\n    }\r\n    push(`)`);\r\n}\r\nfunction genTemplateLiteral(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    push('`');\r\n    const l = node.elements.length;\r\n    const multilines = l > 3;\r\n    for (let i = 0; i < l; i++) {\r\n        const e = node.elements[i];\r\n        if (shared.isString(e)) {\r\n            push(e.replace(/(`|\\$|\\\\)/g, '\\\\$1'));\r\n        }\r\n        else {\r\n            push('${');\r\n            if (multilines)\r\n                indent();\r\n            genNode(e, context);\r\n            if (multilines)\r\n                deindent();\r\n            push('}');\r\n        }\r\n    }\r\n    push('`');\r\n}\r\nfunction genIfStatement(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    const { test, consequent, alternate } = node;\r\n    push(`if (`);\r\n    genNode(test, context);\r\n    push(`) {`);\r\n    indent();\r\n    genNode(consequent, context);\r\n    deindent();\r\n    push(`}`);\r\n    if (alternate) {\r\n        push(` else `);\r\n        if (alternate.type === 23 /* NodeTypes.JS_IF_STATEMENT */) {\r\n            genIfStatement(alternate, context);\r\n        }\r\n        else {\r\n            push(`{`);\r\n            indent();\r\n            genNode(alternate, context);\r\n            deindent();\r\n            push(`}`);\r\n        }\r\n    }\r\n}\r\nfunction genAssignmentExpression(node, context) {\r\n    genNode(node.left, context);\r\n    context.push(` = `);\r\n    genNode(node.right, context);\r\n}\r\nfunction genSequenceExpression(node, context) {\r\n    context.push(`(`);\r\n    genNodeList(node.expressions, context);\r\n    context.push(`)`);\r\n}\r\nfunction genReturnStatement({ returns }, context) {\r\n    context.push(`return `);\r\n    if (shared.isArray(returns)) {\r\n        genNodeListAsArray(returns, context);\r\n    }\r\n    else {\r\n        genNode(returns, context);\r\n    }\r\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\r\n    const rootExp = root.type === 'Program' &&\r\n        root.body[0].type === 'ExpressionStatement' &&\r\n        root.body[0].expression;\r\n    estreeWalker.walk(root, {\r\n        enter(node, parent) {\r\n            parent && parentStack.push(parent);\r\n            if (parent &&\r\n                parent.type.startsWith('TS') &&\r\n                parent.type !== 'TSAsExpression' &&\r\n                parent.type !== 'TSNonNullExpression' &&\r\n                parent.type !== 'TSTypeAssertion') {\r\n                return this.skip();\r\n            }\r\n            if (node.type === 'Identifier') {\r\n                const isLocal = !!knownIds[node.name];\r\n                const isRefed = isReferencedIdentifier(node, parent, parentStack);\r\n                if (includeAll || (isRefed && !isLocal)) {\r\n                    onIdentifier(node, parent, parentStack, isRefed, isLocal);\r\n                }\r\n            }\r\n            else if (node.type === 'ObjectProperty' &&\r\n                parent.type === 'ObjectPattern') {\r\n                node.inPattern = true;\r\n            }\r\n            else if (isFunctionType(node)) {\r\n                // walk function expressions and add its arguments to known identifiers\r\n                // so that we don't prefix them\r\n                walkFunctionParams(node, id => markScopeIdentifier(node, id, knownIds));\r\n            }\r\n            else if (node.type === 'BlockStatement') {\r\n                // #3445 record block-level local variables\r\n                walkBlockDeclarations(node, id => markScopeIdentifier(node, id, knownIds));\r\n            }\r\n        },\r\n        leave(node, parent) {\r\n            parent && parentStack.pop();\r\n            if (node !== rootExp && node.scopeIds) {\r\n                for (const id of node.scopeIds) {\r\n                    knownIds[id]--;\r\n                    if (knownIds[id] === 0) {\r\n                        delete knownIds[id];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction isReferencedIdentifier(id, parent, parentStack) {\r\n    if (!parent) {\r\n        return true;\r\n    }\r\n    // is a special keyword but parsed as identifier\r\n    if (id.name === 'arguments') {\r\n        return false;\r\n    }\r\n    if (isReferenced(id, parent)) {\r\n        return true;\r\n    }\r\n    // babel's isReferenced check returns false for ids being assigned to, so we\r\n    // need to cover those cases here\r\n    switch (parent.type) {\r\n        case 'AssignmentExpression':\r\n        case 'AssignmentPattern':\r\n            return true;\r\n        case 'ObjectPattern':\r\n        case 'ArrayPattern':\r\n            return isInDestructureAssignment(parent, parentStack);\r\n    }\r\n    return false;\r\n}\r\nfunction isInDestructureAssignment(parent, parentStack) {\r\n    if (parent &&\r\n        (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\r\n        let i = parentStack.length;\r\n        while (i--) {\r\n            const p = parentStack[i];\r\n            if (p.type === 'AssignmentExpression') {\r\n                return true;\r\n            }\r\n            else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction walkFunctionParams(node, onIdent) {\r\n    for (const p of node.params) {\r\n        for (const id of extractIdentifiers(p)) {\r\n            onIdent(id);\r\n        }\r\n    }\r\n}\r\nfunction walkBlockDeclarations(block, onIdent) {\r\n    for (const stmt of block.body) {\r\n        if (stmt.type === 'VariableDeclaration') {\r\n            if (stmt.declare)\r\n                continue;\r\n            for (const decl of stmt.declarations) {\r\n                for (const id of extractIdentifiers(decl.id)) {\r\n                    onIdent(id);\r\n                }\r\n            }\r\n        }\r\n        else if (stmt.type === 'FunctionDeclaration' ||\r\n            stmt.type === 'ClassDeclaration') {\r\n            if (stmt.declare || !stmt.id)\r\n                continue;\r\n            onIdent(stmt.id);\r\n        }\r\n    }\r\n}\r\nfunction extractIdentifiers(param, nodes = []) {\r\n    switch (param.type) {\r\n        case 'Identifier':\r\n            nodes.push(param);\r\n            break;\r\n        case 'MemberExpression':\r\n            let object = param;\r\n            while (object.type === 'MemberExpression') {\r\n                object = object.object;\r\n            }\r\n            nodes.push(object);\r\n            break;\r\n        case 'ObjectPattern':\r\n            for (const prop of param.properties) {\r\n                if (prop.type === 'RestElement') {\r\n                    extractIdentifiers(prop.argument, nodes);\r\n                }\r\n                else {\r\n                    extractIdentifiers(prop.value, nodes);\r\n                }\r\n            }\r\n            break;\r\n        case 'ArrayPattern':\r\n            param.elements.forEach(element => {\r\n                if (element)\r\n                    extractIdentifiers(element, nodes);\r\n            });\r\n            break;\r\n        case 'RestElement':\r\n            extractIdentifiers(param.argument, nodes);\r\n            break;\r\n        case 'AssignmentPattern':\r\n            extractIdentifiers(param.left, nodes);\r\n            break;\r\n    }\r\n    return nodes;\r\n}\r\nfunction markScopeIdentifier(node, child, knownIds) {\r\n    const { name } = child;\r\n    if (node.scopeIds && node.scopeIds.has(name)) {\r\n        return;\r\n    }\r\n    if (name in knownIds) {\r\n        knownIds[name]++;\r\n    }\r\n    else {\r\n        knownIds[name] = 1;\r\n    }\r\n    (node.scopeIds || (node.scopeIds = new Set())).add(name);\r\n}\r\nconst isFunctionType = (node) => {\r\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\r\n};\r\nconst isStaticProperty = (node) => node &&\r\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\r\n    !node.computed;\r\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\r\n/**\r\n * Copied from https://github.com/babel/babel/blob/main/packages/babel-types/src/validators/isReferenced.ts\r\n * To avoid runtime dependency on @babel/types (which includes process references)\r\n * This file should not change very often in babel but we may need to keep it\r\n * up-to-date from time to time.\r\n *\r\n * https://github.com/babel/babel/blob/main/LICENSE\r\n *\r\n */\r\nfunction isReferenced(node, parent, grandparent) {\r\n    switch (parent.type) {\r\n        // yes: PARENT[NODE]\r\n        // yes: NODE.child\r\n        // no: parent.NODE\r\n        case 'MemberExpression':\r\n        case 'OptionalMemberExpression':\r\n            if (parent.property === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return parent.object === node;\r\n        case 'JSXMemberExpression':\r\n            return parent.object === node;\r\n        // no: let NODE = init;\r\n        // yes: let id = NODE;\r\n        case 'VariableDeclarator':\r\n            return parent.init === node;\r\n        // yes: () => NODE\r\n        // no: (NODE) => {}\r\n        case 'ArrowFunctionExpression':\r\n            return parent.body === node;\r\n        // no: class { #NODE; }\r\n        // no: class { get #NODE() {} }\r\n        // no: class { #NODE() {} }\r\n        // no: class { fn() { return this.#NODE; } }\r\n        case 'PrivateName':\r\n            return false;\r\n        // no: class { NODE() {} }\r\n        // yes: class { [NODE]() {} }\r\n        // no: class { foo(NODE) {} }\r\n        case 'ClassMethod':\r\n        case 'ClassPrivateMethod':\r\n        case 'ObjectMethod':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return false;\r\n        // yes: { [NODE]: \"\" }\r\n        // no: { NODE: \"\" }\r\n        // depends: { NODE }\r\n        // depends: { key: NODE }\r\n        case 'ObjectProperty':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            // parent.value === node\r\n            return !grandparent || grandparent.type !== 'ObjectPattern';\r\n        // no: class { NODE = value; }\r\n        // yes: class { [NODE] = value; }\r\n        // yes: class { key = NODE; }\r\n        case 'ClassProperty':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return true;\r\n        case 'ClassPrivateProperty':\r\n            return parent.key !== node;\r\n        // no: class NODE {}\r\n        // yes: class Foo extends NODE {}\r\n        case 'ClassDeclaration':\r\n        case 'ClassExpression':\r\n            return parent.superClass === node;\r\n        // yes: left = NODE;\r\n        // no: NODE = right;\r\n        case 'AssignmentExpression':\r\n            return parent.right === node;\r\n        // no: [NODE = foo] = [];\r\n        // yes: [foo = NODE] = [];\r\n        case 'AssignmentPattern':\r\n            return parent.right === node;\r\n        // no: NODE: for (;;) {}\r\n        case 'LabeledStatement':\r\n            return false;\r\n        // no: try {} catch (NODE) {}\r\n        case 'CatchClause':\r\n            return false;\r\n        // no: function foo(...NODE) {}\r\n        case 'RestElement':\r\n            return false;\r\n        case 'BreakStatement':\r\n        case 'ContinueStatement':\r\n            return false;\r\n        // no: function NODE() {}\r\n        // no: function foo(NODE) {}\r\n        case 'FunctionDeclaration':\r\n        case 'FunctionExpression':\r\n            return false;\r\n        // no: export NODE from \"foo\";\r\n        // no: export * as NODE from \"foo\";\r\n        case 'ExportNamespaceSpecifier':\r\n        case 'ExportDefaultSpecifier':\r\n            return false;\r\n        // no: export { foo as NODE };\r\n        // yes: export { NODE as foo };\r\n        // no: export { NODE as foo } from \"foo\";\r\n        case 'ExportSpecifier':\r\n            // @ts-expect-error\r\n            if (grandparent === null || grandparent === void 0 ? void 0 : grandparent.source) {\r\n                return false;\r\n            }\r\n            return parent.local === node;\r\n        // no: import NODE from \"foo\";\r\n        // no: import * as NODE from \"foo\";\r\n        // no: import { NODE as foo } from \"foo\";\r\n        // no: import { foo as NODE } from \"foo\";\r\n        // no: import NODE from \"bar\";\r\n        case 'ImportDefaultSpecifier':\r\n        case 'ImportNamespaceSpecifier':\r\n        case 'ImportSpecifier':\r\n            return false;\r\n        // no: import \"foo\" assert { NODE: \"json\" }\r\n        case 'ImportAttribute':\r\n            return false;\r\n        // no: <div NODE=\"foo\" />\r\n        case 'JSXAttribute':\r\n            return false;\r\n        // no: [NODE] = [];\r\n        // no: ({ NODE }) = [];\r\n        case 'ObjectPattern':\r\n        case 'ArrayPattern':\r\n            return false;\r\n        // no: new.NODE\r\n        // no: NODE.target\r\n        case 'MetaProperty':\r\n            return false;\r\n        // yes: type X = { someProperty: NODE }\r\n        // no: type X = { NODE: OtherType }\r\n        case 'ObjectTypeProperty':\r\n            return parent.key !== node;\r\n        // yes: enum X { Foo = NODE }\r\n        // no: enum X { NODE }\r\n        case 'TSEnumMember':\r\n            return parent.id !== node;\r\n        // yes: { [NODE]: value }\r\n        // no: { NODE: value }\r\n        case 'TSPropertySignature':\r\n            if (parent.key === node) {\r\n                return !!parent.computed;\r\n            }\r\n            return true;\r\n    }\r\n    return true;\r\n}\n\nconst isLiteralWhitelisted = /*#__PURE__*/ shared.makeMap('true,false,null,this');\r\nconst transformExpression = (node, context) => {\r\n    if (node.type === 5 /* NodeTypes.INTERPOLATION */) {\r\n        node.content = processExpression(node.content, context);\r\n    }\r\n    else if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n        // handle directives on element\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const dir = node.props[i];\r\n            // do not process for v-on & v-for since they are special handled\r\n            if (dir.type === 7 /* NodeTypes.DIRECTIVE */ && dir.name !== 'for') {\r\n                const exp = dir.exp;\r\n                const arg = dir.arg;\r\n                // do not process exp if this is v-on:arg - we need special handling\r\n                // for wrapping inline statements.\r\n                if (exp &&\r\n                    exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n                    !(dir.name === 'on' && arg)) {\r\n                    dir.exp = processExpression(exp, context, \r\n                    // slot args must be processed as function params\r\n                    dir.name === 'slot');\r\n                }\r\n                if (arg && arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !arg.isStatic) {\r\n                    dir.arg = processExpression(arg, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !false check so that it can be\r\n// tree-shaken from the browser build.\r\nfunction processExpression(node, context, \r\n// some expressions like v-slot props & v-for aliases should be parsed as\r\n// function params\r\nasParams = false, \r\n// v-on handler values may contain multiple statements\r\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\r\n    if (!context.prefixIdentifiers || !node.content.trim()) {\r\n        return node;\r\n    }\r\n    const { inline, bindingMetadata } = context;\r\n    const rewriteIdentifier = (raw, parent, id) => {\r\n        const type = shared.hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\r\n        if (inline) {\r\n            // x = y\r\n            const isAssignmentLVal = parent && parent.type === 'AssignmentExpression' && parent.left === id;\r\n            // x++\r\n            const isUpdateArg = parent && parent.type === 'UpdateExpression' && parent.argument === id;\r\n            // ({ x } = y)\r\n            const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\r\n            if (type === \"setup-const\" /* BindingTypes.SETUP_CONST */ ||\r\n                type === \"setup-reactive-const\" /* BindingTypes.SETUP_REACTIVE_CONST */ ||\r\n                localVars[raw]) {\r\n                return raw;\r\n            }\r\n            else if (type === \"setup-ref\" /* BindingTypes.SETUP_REF */) {\r\n                return `${raw}.value`;\r\n            }\r\n            else if (type === \"setup-maybe-ref\" /* BindingTypes.SETUP_MAYBE_REF */) {\r\n                // const binding that may or may not be ref\r\n                // if it's not a ref, then assignments don't make sense -\r\n                // so we ignore the non-ref assignment case and generate code\r\n                // that assumes the value to be a ref for more efficiency\r\n                return isAssignmentLVal || isUpdateArg || isDestructureAssignment\r\n                    ? `${raw}.value`\r\n                    : `${context.helperString(UNREF)}(${raw})`;\r\n            }\r\n            else if (type === \"setup-let\" /* BindingTypes.SETUP_LET */) {\r\n                if (isAssignmentLVal) {\r\n                    // let binding.\r\n                    // this is a bit more tricky as we need to cover the case where\r\n                    // let is a local non-ref value, and we need to replicate the\r\n                    // right hand side value.\r\n                    // x = y --> isRef(x) ? x.value = y : x = y\r\n                    const { right: rVal, operator } = parent;\r\n                    const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\r\n                    const rExpString = stringifyExpression(processExpression(createSimpleExpression(rExp, false), context, false, false, knownIds));\r\n                    return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\r\n                }\r\n                else if (isUpdateArg) {\r\n                    // make id replace parent in the code range so the raw update operator\r\n                    // is removed\r\n                    id.start = parent.start;\r\n                    id.end = parent.end;\r\n                    const { prefix: isPrefix, operator } = parent;\r\n                    const prefix = isPrefix ? operator : ``;\r\n                    const postfix = isPrefix ? `` : operator;\r\n                    // let binding.\r\n                    // x++ --> isRef(a) ? a.value++ : a++\r\n                    return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\r\n                }\r\n                else if (isDestructureAssignment) {\r\n                    // TODO\r\n                    // let binding in a destructure assignment - it's very tricky to\r\n                    // handle both possible cases here without altering the original\r\n                    // structure of the code, so we just assume it's not a ref here\r\n                    // for now\r\n                    return raw;\r\n                }\r\n                else {\r\n                    return `${context.helperString(UNREF)}(${raw})`;\r\n                }\r\n            }\r\n            else if (type === \"props\" /* BindingTypes.PROPS */) {\r\n                // use __props which is generated by compileScript so in ts mode\r\n                // it gets correct type\r\n                return shared.genPropsAccessExp(raw);\r\n            }\r\n            else if (type === \"props-aliased\" /* BindingTypes.PROPS_ALIASED */) {\r\n                // prop with a different local alias (from defineProps() destructure)\r\n                return shared.genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\r\n            }\r\n        }\r\n        else {\r\n            if (type && type.startsWith('setup')) {\r\n                // setup bindings in non-inline mode\r\n                return `$setup.${raw}`;\r\n            }\r\n            else if (type === \"props-aliased\" /* BindingTypes.PROPS_ALIASED */) {\r\n                return `$props['${bindingMetadata.__propsAliases[raw]}']`;\r\n            }\r\n            else if (type) {\r\n                return `$${type}.${raw}`;\r\n            }\r\n        }\r\n        // fallback to ctx\r\n        return `_ctx.${raw}`;\r\n    };\r\n    // fast path if expression is a simple identifier.\r\n    const rawExp = node.content;\r\n    // bail constant on parens (function invocation) and dot (member access)\r\n    const bailConstant = rawExp.indexOf(`(`) > -1 || rawExp.indexOf('.') > 0;\r\n    if (isSimpleIdentifier(rawExp)) {\r\n        const isScopeVarReference = context.identifiers[rawExp];\r\n        const isAllowedGlobal = shared.isGloballyWhitelisted(rawExp);\r\n        const isLiteral = isLiteralWhitelisted(rawExp);\r\n        if (!asParams && !isScopeVarReference && !isAllowedGlobal && !isLiteral) {\r\n            // const bindings exposed from setup can be skipped for patching but\r\n            // cannot be hoisted to module scope\r\n            if (bindingMetadata[node.content] === \"setup-const\" /* BindingTypes.SETUP_CONST */) {\r\n                node.constType = 1 /* ConstantTypes.CAN_SKIP_PATCH */;\r\n            }\r\n            node.content = rewriteIdentifier(rawExp);\r\n        }\r\n        else if (!isScopeVarReference) {\r\n            if (isLiteral) {\r\n                node.constType = 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n            }\r\n            else {\r\n                node.constType = 2 /* ConstantTypes.CAN_HOIST */;\r\n            }\r\n        }\r\n        return node;\r\n    }\r\n    let ast;\r\n    // exp needs to be parsed differently:\r\n    // 1. Multiple inline statements (v-on, with presence of `;`): parse as raw\r\n    //    exp, but make sure to pad with spaces for consistent ranges\r\n    // 2. Expressions: wrap with parens (for e.g. object expressions)\r\n    // 3. Function arguments (v-for, v-slot): place in a function argument position\r\n    const source = asRawStatements\r\n        ? ` ${rawExp} `\r\n        : `(${rawExp})${asParams ? `=>{}` : ``}`;\r\n    try {\r\n        ast = parser.parse(source, {\r\n            plugins: context.expressionPlugins\r\n        }).program;\r\n    }\r\n    catch (e) {\r\n        context.onError(createCompilerError(44 /* ErrorCodes.X_INVALID_EXPRESSION */, node.loc, undefined, e.message));\r\n        return node;\r\n    }\r\n    const ids = [];\r\n    const parentStack = [];\r\n    const knownIds = Object.create(context.identifiers);\r\n    walkIdentifiers(ast, (node, parent, _, isReferenced, isLocal) => {\r\n        if (isStaticPropertyKey(node, parent)) {\r\n            return;\r\n        }\r\n        // v2 wrapped filter call\r\n        if (node.name.startsWith('_filter_')) {\r\n            return;\r\n        }\r\n        const needPrefix = isReferenced && canPrefix(node);\r\n        if (needPrefix && !isLocal) {\r\n            if (isStaticProperty(parent) && parent.shorthand) {\r\n                node.prefix = `${node.name}: `;\r\n            }\r\n            node.name = rewriteIdentifier(node.name, parent, node);\r\n            ids.push(node);\r\n        }\r\n        else {\r\n            // The identifier is considered constant unless it's pointing to a\r\n            // local scope variable (a v-for alias, or a v-slot prop)\r\n            if (!(needPrefix && isLocal) && !bailConstant) {\r\n                node.isConstant = true;\r\n            }\r\n            // also generate sub-expressions for other identifiers for better\r\n            // source map support. (except for property keys which are static)\r\n            ids.push(node);\r\n        }\r\n    }, true, // invoke on ALL identifiers\r\n    parentStack, knownIds);\r\n    // We break up the compound expression into an array of strings and sub\r\n    // expressions (for identifiers that have been prefixed). In codegen, if\r\n    // an ExpressionNode has the `.children` property, it will be used instead of\r\n    // `.content`.\r\n    const children = [];\r\n    ids.sort((a, b) => a.start - b.start);\r\n    ids.forEach((id, i) => {\r\n        // range is offset by -1 due to the wrapping parens when parsed\r\n        const start = id.start - 1;\r\n        const end = id.end - 1;\r\n        const last = ids[i - 1];\r\n        const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\r\n        if (leadingText.length || id.prefix) {\r\n            children.push(leadingText + (id.prefix || ``));\r\n        }\r\n        const source = rawExp.slice(start, end);\r\n        children.push(createSimpleExpression(id.name, false, {\r\n            source,\r\n            start: advancePositionWithClone(node.loc.start, source, start),\r\n            end: advancePositionWithClone(node.loc.start, source, end)\r\n        }, id.isConstant ? 3 /* ConstantTypes.CAN_STRINGIFY */ : 0 /* ConstantTypes.NOT_CONSTANT */));\r\n        if (i === ids.length - 1 && end < rawExp.length) {\r\n            children.push(rawExp.slice(end));\r\n        }\r\n    });\r\n    let ret;\r\n    if (children.length) {\r\n        ret = createCompoundExpression(children, node.loc);\r\n    }\r\n    else {\r\n        ret = node;\r\n        ret.constType = bailConstant\r\n            ? 0 /* ConstantTypes.NOT_CONSTANT */\r\n            : 3 /* ConstantTypes.CAN_STRINGIFY */;\r\n    }\r\n    ret.identifiers = Object.keys(knownIds);\r\n    return ret;\r\n}\r\nfunction canPrefix(id) {\r\n    // skip whitelisted globals\r\n    if (shared.isGloballyWhitelisted(id.name)) {\r\n        return false;\r\n    }\r\n    // special case for webpack compilation\r\n    if (id.name === 'require') {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction stringifyExpression(exp) {\r\n    if (shared.isString(exp)) {\r\n        return exp;\r\n    }\r\n    else if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        return exp.content;\r\n    }\r\n    else {\r\n        return exp.children\r\n            .map(stringifyExpression)\r\n            .join('');\r\n    }\r\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // #1587: We need to dynamically increment the key based on the current\r\n        // node's sibling nodes, since chained v-if/else branches are\r\n        // rendered at the same depth\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(ifNode);\r\n        let key = 0;\r\n        while (i-- >= 0) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 9 /* NodeTypes.IF */) {\r\n                key += sibling.branches.length;\r\n            }\r\n        }\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                const parentCondition = getParentCondition(ifNode.codegenNode);\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(28 /* ErrorCodes.X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if (context.prefixIdentifiers && dir.exp) {\r\n        // dir.exp can only be simple expression because vIf transform is applied\r\n        // before expression transform.\r\n        dir.exp = processExpression(dir.exp, context);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* NodeTypes.IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if (sibling &&\r\n                sibling.type === 2 /* NodeTypes.TEXT */ &&\r\n                !sibling.content.trim().length) {\r\n                context.removeNode(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* NodeTypes.IF */) {\r\n                // Check if v-else was followed by v-else-if\r\n                if (dir.name === 'else-if' &&\r\n                    sibling.branches[sibling.branches.length - 1].condition === undefined) {\r\n                    context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n                }\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                // check if user is forcing same key on different branches\r\n                {\r\n                    const key = branch.userKey;\r\n                    if (key) {\r\n                        sibling.branches.forEach(({ userKey }) => {\r\n                            if (isSameKey(userKey, key)) {\r\n                                context.onError(createCompilerError(29 /* ErrorCodes.X_V_IF_SAME_KEY */, branch.userKey.loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    const isTemplateIf = node.tagType === 3 /* ElementTypes.TEMPLATE */;\r\n    return {\r\n        type: 10 /* NodeTypes.IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: isTemplateIf && !findDir(node, 'for') ? node.children : [node],\r\n        userKey: findProp(node, `key`),\r\n        isTemplateIf\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            '\"\"',\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, keyIndex, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n    const { helper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* ConstantTypes.CAN_HOIST */));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* NodeTypes.ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* NodeTypes.FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            let patchFlag = 64 /* PatchFlags.STABLE_FRAGMENT */;\r\n            shared.PatchFlagNames[64 /* PatchFlags.STABLE_FRAGMENT */];\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + (``), undefined, undefined, true, false, false /* isComponent */, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const ret = firstChild.codegenNode;\r\n        const vnodeCall = getMemoedVNodeCall(ret);\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n            makeBlock(vnodeCall, context);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return ret;\r\n    }\r\n}\r\nfunction isSameKey(a, b) {\r\n    if (!a || a.type !== b.type) {\r\n        return false;\r\n    }\r\n    if (a.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n        if (a.value.content !== b.value.content) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        // directive\r\n        const exp = a.exp;\r\n        const branchExp = b.exp;\r\n        if (exp.type !== branchExp.type) {\r\n            return false;\r\n        }\r\n        if (exp.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\r\n            exp.isStatic !== branchExp.isStatic ||\r\n            exp.content !== branchExp.content) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getParentCondition(node) {\r\n    while (true) {\r\n        if (node.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\r\n            if (node.alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\r\n                node = node.alternate;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        }\r\n        else if (node.type === 20 /* NodeTypes.JS_CACHE_EXPRESSION */) {\r\n            node = node.value;\r\n        }\r\n    }\r\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper, removeHelper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const isTemplate = isTemplateNode(node);\r\n        const memo = findDir(node, 'memo');\r\n        const keyProp = findProp(node, `key`);\r\n        const keyExp = keyProp &&\r\n            (keyProp.type === 6 /* NodeTypes.ATTRIBUTE */\r\n                ? createSimpleExpression(keyProp.value.content, true)\r\n                : keyProp.exp);\r\n        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\r\n        if (isTemplate) {\r\n            // #2085 / #5288 process :key and v-memo expressions need to be\r\n            // processed on `<template v-for>`. In this case the node is discarded\r\n            // and never traversed so its binding expressions won't be processed\r\n            // by the normal transforms.\r\n            if (memo) {\r\n                memo.exp = processExpression(memo.exp, context);\r\n            }\r\n            if (keyProperty && keyProp.type !== 6 /* NodeTypes.ATTRIBUTE */) {\r\n                keyProperty.value = processExpression(keyProperty.value, context);\r\n            }\r\n        }\r\n        const isStableFragment = forNode.source.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n            forNode.source.constType > 0 /* ConstantTypes.NOT_CONSTANT */;\r\n        const fragmentFlag = isStableFragment\r\n            ? 64 /* PatchFlags.STABLE_FRAGMENT */\r\n            : keyProp\r\n                ? 128 /* PatchFlags.KEYED_FRAGMENT */\r\n                : 256 /* PatchFlags.UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag +\r\n            (``), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const { children } = forNode;\r\n            // check <template v-for> key placement\r\n            if (isTemplate) {\r\n                node.children.some(c => {\r\n                    if (c.type === 1 /* NodeTypes.ELEMENT */) {\r\n                        const key = findProp(c, 'key');\r\n                        if (key) {\r\n                            context.onError(createCompilerError(33 /* ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* NodeTypes.ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* PatchFlags.STABLE_FRAGMENT */ +\r\n                    (``), undefined, undefined, true, undefined, false /* isComponent */);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n                if (childBlock.isBlock !== !isStableFragment) {\r\n                    if (childBlock.isBlock) {\r\n                        // switch from block to vnode\r\n                        removeHelper(OPEN_BLOCK);\r\n                        removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                    else {\r\n                        // switch from vnode to block\r\n                        removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                }\r\n                childBlock.isBlock = !isStableFragment;\r\n                if (childBlock.isBlock) {\r\n                    helper(OPEN_BLOCK);\r\n                    helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n                else {\r\n                    helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n            }\r\n            if (memo) {\r\n                const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [\r\n                    createSimpleExpression(`_cached`)\r\n                ]));\r\n                loop.body = createBlockStatement([\r\n                    createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\r\n                    createCompoundExpression([\r\n                        `if (_cached`,\r\n                        ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n                        ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`\r\n                    ]),\r\n                    createCompoundExpression([`const _item = `, childBlock]),\r\n                    createSimpleExpression(`_item.memo = _memo`),\r\n                    createSimpleExpression(`return _item`)\r\n                ]);\r\n                renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\r\n            }\r\n            else {\r\n                renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(31 /* ErrorCodes.X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp, context);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* NodeTypes.FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: isTemplateNode(node) ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    if (context.prefixIdentifiers) {\r\n        // scope management\r\n        // inject identifiers to context\r\n        value && addIdentifiers(value);\r\n        key && addIdentifiers(key);\r\n        index && addIdentifiers(index);\r\n    }\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (context.prefixIdentifiers) {\r\n            value && removeIdentifiers(value);\r\n            key && removeIdentifiers(key);\r\n            index && removeIdentifiers(index);\r\n        }\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    if (context.prefixIdentifiers) {\r\n        result.source = processExpression(result.source, context);\r\n    }\r\n    let valueContent = LHS.trim().replace(stripParensRE, '').trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n            if (context.prefixIdentifiers) {\r\n                result.key = processExpression(result.key, context, true);\r\n            }\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n                if (context.prefixIdentifiers) {\r\n                    result.index = processExpression(result.index, context, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n        if (context.prefixIdentifiers) {\r\n            result.value = processExpression(result.value, context, true);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\r\n    return createParamsList([value, key, index, ...memoArgs]);\r\n}\r\nfunction createParamsList(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i])\r\n            break;\r\n    }\r\n    return args\r\n        .slice(0, i + 1)\r\n        .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\r\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nconst trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        (node.tagType === 1 /* ElementTypes.COMPONENT */ ||\r\n            node.tagType === 3 /* ElementTypes.TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            const slotProps = vSlot.exp;\r\n            if (context.prefixIdentifiers) {\r\n                slotProps && context.addIdentifiers(slotProps);\r\n            }\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                if (context.prefixIdentifiers) {\r\n                    slotProps && context.removeIdentifiers(slotProps);\r\n                }\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nconst trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // with `prefixIdentifiers: true`, this can be further optimized to make\r\n    // it dynamic only when the slot actually uses the scope variables.\r\n    if (!context.ssr && context.prefixIdentifiers) {\r\n        hasDynamicSlots = hasScopeRef(node, context.identifiers);\r\n    }\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        if (arg && !isStaticExp(arg)) {\r\n            hasDynamicSlots = true;\r\n        }\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    let conditionalBranchIndex = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* NodeTypes.COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(37 /* ErrorCodes.X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* NodeTypes.COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* NodeTypes.JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* ErrorCodes.X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp, context);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(32 /* ErrorCodes.X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(38 /* ErrorCodes.X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        const buildDefaultSlotProperty = (props, children) => {\r\n            const fn = buildSlotFn(props, children, loc);\r\n            if (context.compatConfig) {\r\n                fn.isNonScopedSlot = true;\r\n            }\r\n            return createObjectProperty(`default`, fn);\r\n        };\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length &&\r\n            // #3766\r\n            // with whitespace: 'preserve', whitespaces between slots will end up in\r\n            // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n            implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(39 /* ErrorCodes.X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    const slotFlag = hasDynamicSlots\r\n        ? 2 /* SlotFlags.DYNAMIC */\r\n        : hasForwardedSlots(node.children)\r\n            ? 3 /* SlotFlags.FORWARDED */\r\n            : 1 /* SlotFlags.STABLE */;\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \r\n    // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n    // 1 = compiled and static = can skip normalization AND diff as optimized\r\n    createSimpleExpression(slotFlag + (``), false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn, index) {\r\n    const props = [\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ];\r\n    if (index != null) {\r\n        props.push(createObjectProperty(`key`, createSimpleExpression(String(index), true)));\r\n    }\r\n    return createObjectExpression(props);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        switch (child.type) {\r\n            case 1 /* NodeTypes.ELEMENT */:\r\n                if (child.tagType === 2 /* ElementTypes.SLOT */ ||\r\n                    hasForwardedSlots(child.children)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 9 /* NodeTypes.IF */:\r\n                if (hasForwardedSlots(child.branches))\r\n                    return true;\r\n                break;\r\n            case 10 /* NodeTypes.IF_BRANCH */:\r\n            case 11 /* NodeTypes.FOR */:\r\n                if (hasForwardedSlots(child.children))\r\n                    return true;\r\n                break;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction isNonWhitespaceContent(node) {\r\n    if (node.type !== 2 /* NodeTypes.TEXT */ && node.type !== 12 /* NodeTypes.TEXT_CALL */)\r\n        return true;\r\n    return node.type === 2 /* NodeTypes.TEXT */\r\n        ? !!node.content.trim()\r\n        : isNonWhitespaceContent(node.content);\r\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap();\r\n// generate a JavaScript AST for this element's codegen\r\nconst transformElement = (node, context) => {\r\n    // perform the work on exit, after all child expressions have been\r\n    // processed and merged.\r\n    return function postTransformElement() {\r\n        node = context.currentNode;\r\n        if (!(node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n            (node.tagType === 0 /* ElementTypes.ELEMENT */ ||\r\n                node.tagType === 1 /* ElementTypes.COMPONENT */))) {\r\n            return;\r\n        }\r\n        const { tag, props } = node;\r\n        const isComponent = node.tagType === 1 /* ElementTypes.COMPONENT */;\r\n        // The goal of the transform is to create a codegenNode implementing the\r\n        // VNodeCall interface.\r\n        let vnodeTag = isComponent\r\n            ? resolveComponentType(node, context)\r\n            : `\"${tag}\"`;\r\n        const isDynamicComponent = shared.isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n        let vnodeProps;\r\n        let vnodeChildren;\r\n        let vnodePatchFlag;\r\n        let patchFlag = 0;\r\n        let vnodeDynamicProps;\r\n        let dynamicPropNames;\r\n        let vnodeDirectives;\r\n        let shouldUseBlock = \r\n        // dynamic component may resolve to plain elements\r\n        isDynamicComponent ||\r\n            vnodeTag === TELEPORT ||\r\n            vnodeTag === SUSPENSE ||\r\n            (!isComponent &&\r\n                // <svg> and <foreignObject> must be forced into blocks so that block\r\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n                // This is technically web-specific, but splitting the logic out of core\r\n                // leads to too much unnecessary complexity.\r\n                (tag === 'svg' || tag === 'foreignObject'));\r\n        // props\r\n        if (props.length > 0) {\r\n            const propsBuildResult = buildProps(node, context, undefined, isComponent, isDynamicComponent);\r\n            vnodeProps = propsBuildResult.props;\r\n            patchFlag = propsBuildResult.patchFlag;\r\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n            const directives = propsBuildResult.directives;\r\n            vnodeDirectives =\r\n                directives && directives.length\r\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\r\n                    : undefined;\r\n            if (propsBuildResult.shouldUseBlock) {\r\n                shouldUseBlock = true;\r\n            }\r\n        }\r\n        // children\r\n        if (node.children.length > 0) {\r\n            if (vnodeTag === KEEP_ALIVE) {\r\n                // Although a built-in component, we compile KeepAlive with raw children\r\n                // instead of slot functions so that it can be used inside Transition\r\n                // or other Transition-wrapping HOCs.\r\n                // To ensure correct updates with block optimizations, we need to:\r\n                // 1. Force keep-alive into a block. This avoids its children being\r\n                //    collected by a parent block.\r\n                shouldUseBlock = true;\r\n                // 2. Force keep-alive to always be updated, since it uses raw children.\r\n                patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\r\n            }\r\n            const shouldBuildAsSlots = isComponent &&\r\n                // Teleport is not a real component and has dedicated runtime handling\r\n                vnodeTag !== TELEPORT &&\r\n                // explained above.\r\n                vnodeTag !== KEEP_ALIVE;\r\n            if (shouldBuildAsSlots) {\r\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n                vnodeChildren = slots;\r\n                if (hasDynamicSlots) {\r\n                    patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n                const child = node.children[0];\r\n                const type = child.type;\r\n                // check for dynamic text children\r\n                const hasDynamicTextChild = type === 5 /* NodeTypes.INTERPOLATION */ ||\r\n                    type === 8 /* NodeTypes.COMPOUND_EXPRESSION */;\r\n                if (hasDynamicTextChild &&\r\n                    getConstantType(child, context) === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                    patchFlag |= 1 /* PatchFlags.TEXT */;\r\n                }\r\n                // pass directly if the only child is a text node\r\n                // (plain / interpolation / expression)\r\n                if (hasDynamicTextChild || type === 2 /* NodeTypes.TEXT */) {\r\n                    vnodeChildren = child;\r\n                }\r\n                else {\r\n                    vnodeChildren = node.children;\r\n                }\r\n            }\r\n            else {\r\n                vnodeChildren = node.children;\r\n            }\r\n        }\r\n        // patchFlag & dynamicPropNames\r\n        if (patchFlag !== 0) {\r\n            {\r\n                vnodePatchFlag = String(patchFlag);\r\n            }\r\n            if (dynamicPropNames && dynamicPropNames.length) {\r\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n            }\r\n        }\r\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, isComponent, node.loc);\r\n    };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n    let { tag } = node;\r\n    // 1. dynamic component\r\n    const isExplicitDynamic = isComponentTag(tag);\r\n    const isProp = findProp(node, 'is');\r\n    if (isProp) {\r\n        if (isExplicitDynamic ||\r\n            (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context))) {\r\n            const exp = isProp.type === 6 /* NodeTypes.ATTRIBUTE */\r\n                ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n                : isProp.exp;\r\n            if (exp) {\r\n                return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n                    exp\r\n                ]);\r\n            }\r\n        }\r\n        else if (isProp.type === 6 /* NodeTypes.ATTRIBUTE */ &&\r\n            isProp.value.content.startsWith('vue:')) {\r\n            // <button is=\"vue:xxx\">\r\n            // if not <component>, only is value that starts with \"vue:\" will be\r\n            // treated as component by the parse phase and reach here, unless it's\r\n            // compat mode where all is values are considered components\r\n            tag = isProp.value.content.slice(4);\r\n        }\r\n    }\r\n    // 1.5 v-is (TODO: Deprecate)\r\n    const isDir = !isExplicitDynamic && findDir(node, 'is');\r\n    if (isDir && isDir.exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n            isDir.exp\r\n        ]);\r\n    }\r\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n    if (builtIn) {\r\n        // built-ins are simply fallthroughs / have special handling during ssr\r\n        // so we don't need to import their runtime equivalents\r\n        if (!ssr)\r\n            context.helper(builtIn);\r\n        return builtIn;\r\n    }\r\n    // 3. user component (from setup bindings)\r\n    // this is skipped in browser build since browser builds do not perform\r\n    // binding analysis.\r\n    {\r\n        const fromSetup = resolveSetupReference(tag, context);\r\n        if (fromSetup) {\r\n            return fromSetup;\r\n        }\r\n        const dotIndex = tag.indexOf('.');\r\n        if (dotIndex > 0) {\r\n            const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\r\n            if (ns) {\r\n                return ns + tag.slice(dotIndex);\r\n            }\r\n        }\r\n    }\r\n    // 4. Self referencing component (inferred from filename)\r\n    if (context.selfName &&\r\n        shared.capitalize(shared.camelize(tag)) === context.selfName) {\r\n        context.helper(RESOLVE_COMPONENT);\r\n        // codegen.ts has special check for __self postfix when generating\r\n        // component imports, which will pass additional `maybeSelfReference` flag\r\n        // to `resolveComponent`.\r\n        context.components.add(tag + `__self`);\r\n        return toValidAssetId(tag, `component`);\r\n    }\r\n    // 5. user component (resolve)\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag);\r\n    return toValidAssetId(tag, `component`);\r\n}\r\nfunction resolveSetupReference(name, context) {\r\n    const bindings = context.bindingMetadata;\r\n    if (!bindings || bindings.__isScriptSetup === false) {\r\n        return;\r\n    }\r\n    const camelName = shared.camelize(name);\r\n    const PascalName = shared.capitalize(camelName);\r\n    const checkType = (type) => {\r\n        if (bindings[name] === type) {\r\n            return name;\r\n        }\r\n        if (bindings[camelName] === type) {\r\n            return camelName;\r\n        }\r\n        if (bindings[PascalName] === type) {\r\n            return PascalName;\r\n        }\r\n    };\r\n    const fromConst = checkType(\"setup-const\" /* BindingTypes.SETUP_CONST */) ||\r\n        checkType(\"setup-reactive-const\" /* BindingTypes.SETUP_REACTIVE_CONST */);\r\n    if (fromConst) {\r\n        return context.inline\r\n            ? // in inline mode, const setup bindings (e.g. imports) can be used as-is\r\n                fromConst\r\n            : `$setup[${JSON.stringify(fromConst)}]`;\r\n    }\r\n    const fromMaybeRef = checkType(\"setup-let\" /* BindingTypes.SETUP_LET */) ||\r\n        checkType(\"setup-ref\" /* BindingTypes.SETUP_REF */) ||\r\n        checkType(\"setup-maybe-ref\" /* BindingTypes.SETUP_MAYBE_REF */);\r\n    if (fromMaybeRef) {\r\n        return context.inline\r\n            ? // setup scope bindings that may be refs need to be unrefed\r\n                `${context.helperString(UNREF)}(${fromMaybeRef})`\r\n            : `$setup[${JSON.stringify(fromMaybeRef)}]`;\r\n    }\r\n}\r\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\r\n    const { tag, loc: elementLoc, children } = node;\r\n    let properties = [];\r\n    const mergeArgs = [];\r\n    const runtimeDirectives = [];\r\n    const hasChildren = children.length > 0;\r\n    let shouldUseBlock = false;\r\n    // patchFlag analysis\r\n    let patchFlag = 0;\r\n    let hasRef = false;\r\n    let hasClassBinding = false;\r\n    let hasStyleBinding = false;\r\n    let hasHydrationEventBinding = false;\r\n    let hasDynamicKeys = false;\r\n    let hasVnodeHook = false;\r\n    const dynamicPropNames = [];\r\n    const analyzePatchFlag = ({ key, value }) => {\r\n        if (isStaticExp(key)) {\r\n            const name = key.content;\r\n            const isEventHandler = shared.isOn(name);\r\n            if (isEventHandler &&\r\n                (!isComponent || isDynamicComponent) &&\r\n                // omit the flag for click handlers because hydration gives click\r\n                // dedicated fast path.\r\n                name.toLowerCase() !== 'onclick' &&\r\n                // omit v-model handlers\r\n                name !== 'onUpdate:modelValue' &&\r\n                // omit onVnodeXXX hooks\r\n                !shared.isReservedProp(name)) {\r\n                hasHydrationEventBinding = true;\r\n            }\r\n            if (isEventHandler && shared.isReservedProp(name)) {\r\n                hasVnodeHook = true;\r\n            }\r\n            if (value.type === 20 /* NodeTypes.JS_CACHE_EXPRESSION */ ||\r\n                ((value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ||\r\n                    value.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) &&\r\n                    getConstantType(value, context) > 0)) {\r\n                // skip if the prop is a cached handler or has constant value\r\n                return;\r\n            }\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            else if (name === 'class') {\r\n                hasClassBinding = true;\r\n            }\r\n            else if (name === 'style') {\r\n                hasStyleBinding = true;\r\n            }\r\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n            // treat the dynamic class and style binding of the component as dynamic props\r\n            if (isComponent &&\r\n                (name === 'class' || name === 'style') &&\r\n                !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n        }\r\n        else {\r\n            hasDynamicKeys = true;\r\n        }\r\n    };\r\n    for (let i = 0; i < props.length; i++) {\r\n        // static attribute\r\n        const prop = props[i];\r\n        if (prop.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            const { loc, name, value } = prop;\r\n            let isStatic = true;\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n                if (context.scopes.vFor > 0) {\r\n                    properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n                }\r\n                // in inline mode there is no setupState object, so we can't use string\r\n                // keys to set the ref. Instead, we need to transform it to pass the\r\n                // actual ref instead.\r\n                if (value &&\r\n                    context.inline &&\r\n                    context.bindingMetadata[value.content]) {\r\n                    isStatic = false;\r\n                    properties.push(createObjectProperty(createSimpleExpression('ref_key', true), createSimpleExpression(value.content, true, value.loc)));\r\n                }\r\n            }\r\n            // skip is on <component>, or is=\"vue:xxx\"\r\n            if (name === 'is' &&\r\n                (isComponentTag(tag) ||\r\n                    (value && value.content.startsWith('vue:')) ||\r\n                    (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context)))) {\r\n                continue;\r\n            }\r\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\r\n        }\r\n        else {\r\n            // directives\r\n            const { name, arg, exp, loc } = prop;\r\n            const isVBind = name === 'bind';\r\n            const isVOn = name === 'on';\r\n            // skip v-slot - it is handled by its dedicated transform.\r\n            if (name === 'slot') {\r\n                if (!isComponent) {\r\n                    context.onError(createCompilerError(40 /* ErrorCodes.X_V_SLOT_MISPLACED */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            // skip v-once/v-memo - they are handled by dedicated transforms.\r\n            if (name === 'once' || name === 'memo') {\r\n                continue;\r\n            }\r\n            // skip v-is and :is on <component>\r\n            if (name === 'is' ||\r\n                (isVBind &&\r\n                    isStaticArgOf(arg, 'is') &&\r\n                    (isComponentTag(tag) ||\r\n                        (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* CompilerDeprecationTypes.COMPILER_IS_ON_ELEMENT */, context))))) {\r\n                continue;\r\n            }\r\n            // skip v-on in SSR compilation\r\n            if (isVOn && ssr) {\r\n                continue;\r\n            }\r\n            if (\r\n            // #938: elements with dynamic keys should be forced into blocks\r\n            (isVBind && isStaticArgOf(arg, 'key')) ||\r\n                // inline before-update hooks need to force block so that it is invoked\r\n                // before children\r\n                (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))) {\r\n                shouldUseBlock = true;\r\n            }\r\n            if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\r\n                properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n            }\r\n            // special case for v-bind and v-on with no argument\r\n            if (!arg && (isVBind || isVOn)) {\r\n                hasDynamicKeys = true;\r\n                if (exp) {\r\n                    if (properties.length) {\r\n                        mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n                        properties = [];\r\n                    }\r\n                    if (isVBind) {\r\n                        {\r\n                            if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* CompilerDeprecationTypes.COMPILER_V_BIND_OBJECT_ORDER */, context)) {\r\n                                mergeArgs.unshift(exp);\r\n                                continue;\r\n                            }\r\n                        }\r\n                        mergeArgs.push(exp);\r\n                    }\r\n                    else {\r\n                        // v-on=\"obj\" -> toHandlers(obj)\r\n                        mergeArgs.push({\r\n                            type: 14 /* NodeTypes.JS_CALL_EXPRESSION */,\r\n                            loc,\r\n                            callee: context.helper(TO_HANDLERS),\r\n                            arguments: isComponent ? [exp] : [exp, `true`]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    context.onError(createCompilerError(isVBind\r\n                        ? 34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */\r\n                        : 35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            const directiveTransform = context.directiveTransforms[name];\r\n            if (directiveTransform) {\r\n                // has built-in directive transform.\r\n                const { props, needRuntime } = directiveTransform(prop, node, context);\r\n                !ssr && props.forEach(analyzePatchFlag);\r\n                properties.push(...props);\r\n                if (needRuntime) {\r\n                    runtimeDirectives.push(prop);\r\n                    if (shared.isSymbol(needRuntime)) {\r\n                        directiveImportMap.set(prop, needRuntime);\r\n                    }\r\n                }\r\n            }\r\n            else if (!shared.isBuiltInDirective(name)) {\r\n                // no built-in transform, this is a user custom directive.\r\n                runtimeDirectives.push(prop);\r\n                // custom dirs may use beforeUpdate so they need to force blocks\r\n                // to ensure before-update gets called before children update\r\n                if (hasChildren) {\r\n                    shouldUseBlock = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let propsExpression = undefined;\r\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n    if (mergeArgs.length) {\r\n        if (properties.length) {\r\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n        }\r\n        if (mergeArgs.length > 1) {\r\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\r\n        }\r\n        else {\r\n            // single v-bind with nothing else - no need for a mergeProps call\r\n            propsExpression = mergeArgs[0];\r\n        }\r\n    }\r\n    else if (properties.length) {\r\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\r\n    }\r\n    // patchFlag analysis\r\n    if (hasDynamicKeys) {\r\n        patchFlag |= 16 /* PatchFlags.FULL_PROPS */;\r\n    }\r\n    else {\r\n        if (hasClassBinding && !isComponent) {\r\n            patchFlag |= 2 /* PatchFlags.CLASS */;\r\n        }\r\n        if (hasStyleBinding && !isComponent) {\r\n            patchFlag |= 4 /* PatchFlags.STYLE */;\r\n        }\r\n        if (dynamicPropNames.length) {\r\n            patchFlag |= 8 /* PatchFlags.PROPS */;\r\n        }\r\n        if (hasHydrationEventBinding) {\r\n            patchFlag |= 32 /* PatchFlags.HYDRATE_EVENTS */;\r\n        }\r\n    }\r\n    if (!shouldUseBlock &&\r\n        (patchFlag === 0 || patchFlag === 32 /* PatchFlags.HYDRATE_EVENTS */) &&\r\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\r\n        patchFlag |= 512 /* PatchFlags.NEED_PATCH */;\r\n    }\r\n    // pre-normalize props, SSR is skipped for now\r\n    if (!context.inSSR && propsExpression) {\r\n        switch (propsExpression.type) {\r\n            case 15 /* NodeTypes.JS_OBJECT_EXPRESSION */:\r\n                // means that there is no v-bind,\r\n                // but still need to deal with dynamic key binding\r\n                let classKeyIndex = -1;\r\n                let styleKeyIndex = -1;\r\n                let hasDynamicKey = false;\r\n                for (let i = 0; i < propsExpression.properties.length; i++) {\r\n                    const key = propsExpression.properties[i].key;\r\n                    if (isStaticExp(key)) {\r\n                        if (key.content === 'class') {\r\n                            classKeyIndex = i;\r\n                        }\r\n                        else if (key.content === 'style') {\r\n                            styleKeyIndex = i;\r\n                        }\r\n                    }\r\n                    else if (!key.isHandlerKey) {\r\n                        hasDynamicKey = true;\r\n                    }\r\n                }\r\n                const classProp = propsExpression.properties[classKeyIndex];\r\n                const styleProp = propsExpression.properties[styleKeyIndex];\r\n                // no dynamic key\r\n                if (!hasDynamicKey) {\r\n                    if (classProp && !isStaticExp(classProp.value)) {\r\n                        classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\r\n                    }\r\n                    if (styleProp &&\r\n                        // the static style is compiled into an object,\r\n                        // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n                        (hasStyleBinding ||\r\n                            (styleProp.value.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n                                styleProp.value.content.trim()[0] === `[`) ||\r\n                            // v-bind:style and style both exist,\r\n                            // v-bind:style with static literal object\r\n                            styleProp.value.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */)) {\r\n                        styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\r\n                    }\r\n                }\r\n                else {\r\n                    // dynamic key binding, wrap with `normalizeProps`\r\n                    propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\r\n                }\r\n                break;\r\n            case 14 /* NodeTypes.JS_CALL_EXPRESSION */:\r\n                // mergeProps call, do nothing\r\n                break;\r\n            default:\r\n                // single v-bind\r\n                propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [\r\n                    createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n                        propsExpression\r\n                    ])\r\n                ]);\r\n                break;\r\n        }\r\n    }\r\n    return {\r\n        props: propsExpression,\r\n        directives: runtimeDirectives,\r\n        patchFlag,\r\n        dynamicPropNames,\r\n        shouldUseBlock\r\n    };\r\n}\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties) {\r\n    const knownProps = new Map();\r\n    const deduped = [];\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const prop = properties[i];\r\n        // dynamic keys are always allowed\r\n        if (prop.key.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\r\n            deduped.push(prop);\r\n            continue;\r\n        }\r\n        const name = prop.key.content;\r\n        const existing = knownProps.get(name);\r\n        if (existing) {\r\n            if (name === 'style' || name === 'class' || shared.isOn(name)) {\r\n                mergeAsArray(existing, prop);\r\n            }\r\n            // unexpected duplicate, should have emitted error during parse\r\n        }\r\n        else {\r\n            knownProps.set(name, prop);\r\n            deduped.push(prop);\r\n        }\r\n    }\r\n    return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n    if (existing.value.type === 17 /* NodeTypes.JS_ARRAY_EXPRESSION */) {\r\n        existing.value.elements.push(incoming.value);\r\n    }\r\n    else {\r\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\r\n    }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n    const dirArgs = [];\r\n    const runtime = directiveImportMap.get(dir);\r\n    if (runtime) {\r\n        // built-in directive with runtime\r\n        dirArgs.push(context.helperString(runtime));\r\n    }\r\n    else {\r\n        // user directive.\r\n        // see if we have directives exposed via <script setup>\r\n        const fromSetup = resolveSetupReference('v-' + dir.name, context);\r\n        if (fromSetup) {\r\n            dirArgs.push(fromSetup);\r\n        }\r\n        else {\r\n            // inject statement for resolving directive\r\n            context.helper(RESOLVE_DIRECTIVE);\r\n            context.directives.add(dir.name);\r\n            dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n        }\r\n    }\r\n    const { loc } = dir;\r\n    if (dir.exp)\r\n        dirArgs.push(dir.exp);\r\n    if (dir.arg) {\r\n        if (!dir.exp) {\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        dirArgs.push(dir.arg);\r\n    }\r\n    if (Object.keys(dir.modifiers).length) {\r\n        if (!dir.arg) {\r\n            if (!dir.exp) {\r\n                dirArgs.push(`void 0`);\r\n            }\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        const trueExpression = createSimpleExpression(`true`, false, loc);\r\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\r\n    }\r\n    return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n    let propsNamesString = `[`;\r\n    for (let i = 0, l = props.length; i < l; i++) {\r\n        propsNamesString += JSON.stringify(props[i]);\r\n        if (i < l - 1)\r\n            propsNamesString += ', ';\r\n    }\r\n    return propsNamesString + `]`;\r\n}\r\nfunction isComponentTag(tag) {\r\n    return tag === 'component' || tag === 'Component';\r\n}\n\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\n\nconst transformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { children, loc } = node;\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const slotArgs = [\r\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n            slotName,\r\n            '{}',\r\n            'undefined',\r\n            'true'\r\n        ];\r\n        let expectedLen = 2;\r\n        if (slotProps) {\r\n            slotArgs[2] = slotProps;\r\n            expectedLen = 3;\r\n        }\r\n        if (children.length) {\r\n            slotArgs[3] = createFunctionExpression([], children, false, false, loc);\r\n            expectedLen = 4;\r\n        }\r\n        if (context.scopeId && !context.slotted) {\r\n            expectedLen = 5;\r\n        }\r\n        slotArgs.splice(expectedLen); // remove unused arguments\r\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\r\n    }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n    let slotName = `\"default\"`;\r\n    let slotProps = undefined;\r\n    const nonNameProps = [];\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            if (p.value) {\r\n                if (p.name === 'name') {\r\n                    slotName = JSON.stringify(p.value.content);\r\n                }\r\n                else {\r\n                    p.name = camelize(p.name);\r\n                    nonNameProps.push(p);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\r\n                if (p.exp)\r\n                    slotName = p.exp;\r\n            }\r\n            else {\r\n                if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n                    p.arg.content = camelize(p.arg.content);\r\n                }\r\n                nonNameProps.push(p);\r\n            }\r\n        }\r\n    }\r\n    if (nonNameProps.length > 0) {\r\n        const { props, directives } = buildProps(node, context, nonNameProps, false, false);\r\n        slotProps = props;\r\n        if (directives.length) {\r\n            context.onError(createCompilerError(36 /* ErrorCodes.X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\r\n        }\r\n    }\r\n    return {\r\n        slotName,\r\n        slotProps\r\n    };\r\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(35 /* ErrorCodes.X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            let rawName = arg.content;\r\n            // TODO deprecate @vnodeXXX usage\r\n            if (rawName.startsWith('vue:')) {\r\n                rawName = `vnode-${rawName.slice(4)}`;\r\n            }\r\n            const eventString = node.tagType === 1 /* ElementTypes.COMPONENT */ ||\r\n                rawName.startsWith('vnode') ||\r\n                !/[A-Z]/.test(rawName)\r\n                ? // for component and vnode lifecycle event listeners, auto convert\r\n                    // it to camelCase. See issue #2249\r\n                    shared.toHandlerKey(shared.camelize(rawName))\r\n                // preserve case for plain element listeners that have uppercase\r\n                // letters, as these may be custom elements' custom events\r\n                : `on:${rawName}`;\r\n            eventName = createSimpleExpression(eventString, true, arg.loc);\r\n        }\r\n        else {\r\n            // #2388\r\n            eventName = createCompoundExpression([\r\n                `${context.helperString(TO_HANDLER_KEY)}(`,\r\n                arg,\r\n                `)`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content, context);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        // process the expression since it's been skipped\r\n        if (context.prefixIdentifiers) {\r\n            isInlineStatement && context.addIdentifiers(`$event`);\r\n            exp = dir.exp = processExpression(exp, context, false, hasMultipleStatements);\r\n            isInlineStatement && context.removeIdentifiers(`$event`);\r\n            // with scope analysis, the function is hoistable if it has no reference\r\n            // to scope variables.\r\n            shouldCache =\r\n                context.cacheHandlers &&\r\n                    // unnecessary to cache inside v-once\r\n                    !context.inVOnce &&\r\n                    // runtime constants don't need to be cached\r\n                    // (this is analyzed by compileScript in SFC <script setup>)\r\n                    !(exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && exp.constType > 0) &&\r\n                    // #1541 bail if this is a member exp handler passed to a component -\r\n                    // we need to use the original function to preserve arity,\r\n                    // e.g. <transition> relies on checking cb.length to determine\r\n                    // transition end handling. Inline function is ok since its arity\r\n                    // is preserved even when cached.\r\n                    !(isMemberExp && node.tagType === 1 /* ElementTypes.COMPONENT */) &&\r\n                    // bail if the function references closure variables (v-for, v-slot)\r\n                    // it must be passed fresh to avoid stale values.\r\n                    !hasScopeRef(exp, context.identifiers);\r\n            // If the expression is optimizable and is a member expression pointing\r\n            // to a function, turn it into invocation (and wrap in an arrow function\r\n            // below) so that it always accesses the latest value when called - thus\r\n            // avoiding the need to be patched.\r\n            if (shouldCache && isMemberExp) {\r\n                if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n                    exp.content = `${exp.content} && ${exp.content}(...args)`;\r\n                }\r\n                else {\r\n                    exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\r\n                }\r\n            }\r\n        }\r\n        if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `${isInlineStatement\r\n                    ? context.isTS\r\n                        ? `($event: any)`\r\n                        : `$event`\r\n                    : `${context.isTS ? `\\n//@ts-ignore\\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (shouldCache) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    // mark the key as handler for props normalization check\r\n    ret.props.forEach(p => (p.key.isHandlerKey = true));\r\n    return ret;\r\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nconst transformBind = (dir, _node, context) => {\r\n    const { exp, modifiers, loc } = dir;\r\n    const arg = dir.arg;\r\n    if (arg.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        arg.children.unshift(`(`);\r\n        arg.children.push(`) || \"\"`);\r\n    }\r\n    else if (!arg.isStatic) {\r\n        arg.content = `${arg.content} || \"\"`;\r\n    }\r\n    // .sync is replaced by v-model:arg\r\n    if (modifiers.includes('camel')) {\r\n        if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n            if (arg.isStatic) {\r\n                arg.content = shared.camelize(arg.content);\r\n            }\r\n            else {\r\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n            }\r\n        }\r\n        else {\r\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n            arg.children.push(`)`);\r\n        }\r\n    }\r\n    if (!context.inSSR) {\r\n        if (modifiers.includes('prop')) {\r\n            injectPrefix(arg, '.');\r\n        }\r\n        if (modifiers.includes('attr')) {\r\n            injectPrefix(arg, '^');\r\n        }\r\n    }\r\n    if (!exp ||\r\n        (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ && !exp.content.trim())) {\r\n        context.onError(createCompilerError(34 /* ErrorCodes.X_V_BIND_NO_EXPRESSION */, loc));\r\n        return {\r\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n        };\r\n    }\r\n    return {\r\n        props: [createObjectProperty(arg, exp)]\r\n    };\r\n};\r\nconst injectPrefix = (arg, prefix) => {\r\n    if (arg.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            arg.content = prefix + arg.content;\r\n        }\r\n        else {\r\n            arg.content = `\\`${prefix}\\${${arg.content}}\\``;\r\n        }\r\n    }\r\n    else {\r\n        arg.children.unshift(`'${prefix}' + (`);\r\n        arg.children.push(`)`);\r\n    }\r\n};\n\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nconst transformText = (node, context) => {\r\n    if (node.type === 0 /* NodeTypes.ROOT */ ||\r\n        node.type === 1 /* NodeTypes.ELEMENT */ ||\r\n        node.type === 11 /* NodeTypes.FOR */ ||\r\n        node.type === 10 /* NodeTypes.IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = createCompoundExpression([child], child.loc);\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* NodeTypes.ROOT */ ||\r\n                        (node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n                            node.tagType === 0 /* ElementTypes.ELEMENT */ &&\r\n                            // #3756\r\n                            // custom directives can potentially add DOM elements arbitrarily,\r\n                            // we need to avoid setting textContent of the element at runtime\r\n                            // to avoid accidentally overwriting the DOM elements added\r\n                            // by the user through custom directives.\r\n                            !node.props.find(p => p.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n                                !context.directiveTransforms[p.name]) &&\r\n                            // in compat mode, <template> tags with no special directives\r\n                            // will be rendered as a fragment so its children must be\r\n                            // converted into vnodes.\r\n                            !(node.tag === 'template'))))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* NodeTypes.TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr &&\r\n                        getConstantType(child, context) === 0 /* ConstantTypes.NOT_CONSTANT */) {\r\n                        callArgs.push(1 /* PatchFlags.TEXT */ +\r\n                            (``));\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* NodeTypes.TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\n\nconst seen = new WeakSet();\r\nconst transformOnce = (node, context) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ && findDir(node, 'once', true)) {\r\n        if (seen.has(node) || context.inVOnce) {\r\n            return;\r\n        }\r\n        seen.add(node);\r\n        context.inVOnce = true;\r\n        context.helper(SET_BLOCK_TRACKING);\r\n        return () => {\r\n            context.inVOnce = false;\r\n            const cur = context.currentNode;\r\n            if (cur.codegenNode) {\r\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\r\n            }\r\n        };\r\n    }\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const { exp, arg } = dir;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(41 /* ErrorCodes.X_V_MODEL_NO_EXPRESSION */, dir.loc));\r\n        return createTransformProps();\r\n    }\r\n    const rawExp = exp.loc.source;\r\n    const expString = exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ ? exp.content : rawExp;\r\n    // im SFC <script setup> inline mode, the exp may have been transformed into\r\n    // _unref(exp)\r\n    const bindingType = context.bindingMetadata[rawExp];\r\n    const maybeRef = context.inline &&\r\n        bindingType &&\r\n        bindingType !== \"setup-const\" /* BindingTypes.SETUP_CONST */;\r\n    if (!expString.trim() ||\r\n        (!isMemberExpression(expString, context) && !maybeRef)) {\r\n        context.onError(createCompilerError(42 /* ErrorCodes.X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    if (context.prefixIdentifiers &&\r\n        isSimpleIdentifier(expString) &&\r\n        context.identifiers[expString]) {\r\n        context.onError(createCompilerError(43 /* ErrorCodes.X_V_MODEL_ON_SCOPE_VARIABLE */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\r\n    const eventName = arg\r\n        ? isStaticExp(arg)\r\n            ? `onUpdate:${arg.content}`\r\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n        : `onUpdate:modelValue`;\r\n    let assignmentExp;\r\n    const eventArg = context.isTS ? `($event: any)` : `$event`;\r\n    if (maybeRef) {\r\n        if (bindingType === \"setup-ref\" /* BindingTypes.SETUP_REF */) {\r\n            // v-model used on known ref.\r\n            assignmentExp = createCompoundExpression([\r\n                `${eventArg} => ((`,\r\n                createSimpleExpression(rawExp, false, exp.loc),\r\n                `).value = $event)`\r\n            ]);\r\n        }\r\n        else {\r\n            // v-model used on a potentially ref binding in <script setup> inline mode.\r\n            // the assignment needs to check whether the binding is actually a ref.\r\n            const altAssignment = bindingType === \"setup-let\" /* BindingTypes.SETUP_LET */ ? `${rawExp} = $event` : `null`;\r\n            assignmentExp = createCompoundExpression([\r\n                `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\r\n                createSimpleExpression(rawExp, false, exp.loc),\r\n                `).value = $event : ${altAssignment})`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        assignmentExp = createCompoundExpression([\r\n            `${eventArg} => ((`,\r\n            exp,\r\n            `) = $event)`\r\n        ]);\r\n    }\r\n    const props = [\r\n        // modelValue: foo\r\n        createObjectProperty(propName, dir.exp),\r\n        // \"onUpdate:modelValue\": $event => (foo = $event)\r\n        createObjectProperty(eventName, assignmentExp)\r\n    ];\r\n    // cache v-model handler if applicable (when it doesn't refer any scope vars)\r\n    if (context.prefixIdentifiers &&\r\n        !context.inVOnce &&\r\n        context.cacheHandlers &&\r\n        !hasScopeRef(exp, context.identifiers)) {\r\n        props[1].value = context.cache(props[1].value);\r\n    }\r\n    // modelModifiers: { foo: true, \"bar-baz\": true }\r\n    if (dir.modifiers.length && node.tagType === 1 /* ElementTypes.COMPONENT */) {\r\n        const modifiers = dir.modifiers\r\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n            .join(`, `);\r\n        const modifiersKey = arg\r\n            ? isStaticExp(arg)\r\n                ? `${arg.content}Modifiers`\r\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n            : `modelModifiers`;\r\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2 /* ConstantTypes.CAN_HOIST */)));\r\n    }\r\n    return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n    return { props };\r\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\r\nconst transformFilter = (node, context) => {\r\n    if (!isCompatEnabled(\"COMPILER_FILTER\" /* CompilerDeprecationTypes.COMPILER_FILTERS */, context)) {\r\n        return;\r\n    }\r\n    if (node.type === 5 /* NodeTypes.INTERPOLATION */) {\r\n        // filter rewrite is applied before expression transform so only\r\n        // simple expressions are possible at this stage\r\n        rewriteFilter(node.content, context);\r\n    }\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n        node.props.forEach((prop) => {\r\n            if (prop.type === 7 /* NodeTypes.DIRECTIVE */ &&\r\n                prop.name !== 'for' &&\r\n                prop.exp) {\r\n                rewriteFilter(prop.exp, context);\r\n            }\r\n        });\r\n    }\r\n};\r\nfunction rewriteFilter(node, context) {\r\n    if (node.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        parseFilter(node, context);\r\n    }\r\n    else {\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            const child = node.children[i];\r\n            if (typeof child !== 'object')\r\n                continue;\r\n            if (child.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n                parseFilter(child, context);\r\n            }\r\n            else if (child.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */) {\r\n                rewriteFilter(node, context);\r\n            }\r\n            else if (child.type === 5 /* NodeTypes.INTERPOLATION */) {\r\n                rewriteFilter(child.content, context);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseFilter(node, context) {\r\n    const exp = node.content;\r\n    let inSingle = false;\r\n    let inDouble = false;\r\n    let inTemplateString = false;\r\n    let inRegex = false;\r\n    let curly = 0;\r\n    let square = 0;\r\n    let paren = 0;\r\n    let lastFilterIndex = 0;\r\n    let c, prev, i, expression, filters = [];\r\n    for (i = 0; i < exp.length; i++) {\r\n        prev = c;\r\n        c = exp.charCodeAt(i);\r\n        if (inSingle) {\r\n            if (c === 0x27 && prev !== 0x5c)\r\n                inSingle = false;\r\n        }\r\n        else if (inDouble) {\r\n            if (c === 0x22 && prev !== 0x5c)\r\n                inDouble = false;\r\n        }\r\n        else if (inTemplateString) {\r\n            if (c === 0x60 && prev !== 0x5c)\r\n                inTemplateString = false;\r\n        }\r\n        else if (inRegex) {\r\n            if (c === 0x2f && prev !== 0x5c)\r\n                inRegex = false;\r\n        }\r\n        else if (c === 0x7c && // pipe\r\n            exp.charCodeAt(i + 1) !== 0x7c &&\r\n            exp.charCodeAt(i - 1) !== 0x7c &&\r\n            !curly &&\r\n            !square &&\r\n            !paren) {\r\n            if (expression === undefined) {\r\n                // first filter, end of expression\r\n                lastFilterIndex = i + 1;\r\n                expression = exp.slice(0, i).trim();\r\n            }\r\n            else {\r\n                pushFilter();\r\n            }\r\n        }\r\n        else {\r\n            switch (c) {\r\n                case 0x22:\r\n                    inDouble = true;\r\n                    break; // \"\r\n                case 0x27:\r\n                    inSingle = true;\r\n                    break; // '\r\n                case 0x60:\r\n                    inTemplateString = true;\r\n                    break; // `\r\n                case 0x28:\r\n                    paren++;\r\n                    break; // (\r\n                case 0x29:\r\n                    paren--;\r\n                    break; // )\r\n                case 0x5b:\r\n                    square++;\r\n                    break; // [\r\n                case 0x5d:\r\n                    square--;\r\n                    break; // ]\r\n                case 0x7b:\r\n                    curly++;\r\n                    break; // {\r\n                case 0x7d:\r\n                    curly--;\r\n                    break; // }\r\n            }\r\n            if (c === 0x2f) {\r\n                // /\r\n                let j = i - 1;\r\n                let p;\r\n                // find first non-whitespace prev char\r\n                for (; j >= 0; j--) {\r\n                    p = exp.charAt(j);\r\n                    if (p !== ' ')\r\n                        break;\r\n                }\r\n                if (!p || !validDivisionCharRE.test(p)) {\r\n                    inRegex = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (expression === undefined) {\r\n        expression = exp.slice(0, i).trim();\r\n    }\r\n    else if (lastFilterIndex !== 0) {\r\n        pushFilter();\r\n    }\r\n    function pushFilter() {\r\n        filters.push(exp.slice(lastFilterIndex, i).trim());\r\n        lastFilterIndex = i + 1;\r\n    }\r\n    if (filters.length) {\r\n        for (i = 0; i < filters.length; i++) {\r\n            expression = wrapFilter(expression, filters[i], context);\r\n        }\r\n        node.content = expression;\r\n    }\r\n}\r\nfunction wrapFilter(exp, filter, context) {\r\n    context.helper(RESOLVE_FILTER);\r\n    const i = filter.indexOf('(');\r\n    if (i < 0) {\r\n        context.filters.add(filter);\r\n        return `${toValidAssetId(filter, 'filter')}(${exp})`;\r\n    }\r\n    else {\r\n        const name = filter.slice(0, i);\r\n        const args = filter.slice(i + 1);\r\n        context.filters.add(name);\r\n        return `${toValidAssetId(name, 'filter')}(${exp}${args !== ')' ? ',' + args : args}`;\r\n    }\r\n}\n\nconst seen$1 = new WeakSet();\r\nconst transformMemo = (node, context) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n        const dir = findDir(node, 'memo');\r\n        if (!dir || seen$1.has(node)) {\r\n            return;\r\n        }\r\n        seen$1.add(node);\r\n        return () => {\r\n            const codegenNode = node.codegenNode ||\r\n                context.currentNode.codegenNode;\r\n            if (codegenNode && codegenNode.type === 13 /* NodeTypes.VNODE_CALL */) {\r\n                // non-component sub tree should be turned into a block\r\n                if (node.tagType !== 1 /* ElementTypes.COMPONENT */) {\r\n                    makeBlock(codegenNode, context);\r\n                }\r\n                node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n                    dir.exp,\r\n                    createFunctionExpression(undefined, codegenNode),\r\n                    `_cache`,\r\n                    String(context.cached++)\r\n                ]);\r\n            }\r\n        };\r\n    }\r\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n    return [\r\n        [\r\n            transformOnce,\r\n            transformIf,\r\n            transformMemo,\r\n            transformFor,\r\n            ...([transformFilter] ),\r\n            ...(prefixIdentifiers\r\n                ? [\r\n                    // order is important\r\n                    trackVForSlotScopes,\r\n                    transformExpression\r\n                ]\r\n                : []),\r\n            transformSlotOutlet,\r\n            transformElement,\r\n            trackSlotScopes,\r\n            transformText\r\n        ],\r\n        {\r\n            on: transformOn,\r\n            bind: transformBind,\r\n            model: transformModel\r\n        }\r\n    ];\r\n}\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nfunction baseCompile(template, options = {}) {\r\n    const onError = options.onError || defaultOnError;\r\n    const isModuleMode = options.mode === 'module';\r\n    const prefixIdentifiers = (options.prefixIdentifiers === true || isModuleMode);\r\n    if (!prefixIdentifiers && options.cacheHandlers) {\r\n        onError(createCompilerError(48 /* ErrorCodes.X_CACHE_HANDLER_NOT_SUPPORTED */));\r\n    }\r\n    if (options.scopeId && !isModuleMode) {\r\n        onError(createCompilerError(49 /* ErrorCodes.X_SCOPE_ID_NOT_SUPPORTED */));\r\n    }\r\n    const ast = shared.isString(template) ? baseParse(template, options) : template;\r\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\r\n    if (options.isTS) {\r\n        const { expressionPlugins } = options;\r\n        if (!expressionPlugins || !expressionPlugins.includes('typescript')) {\r\n            options.expressionPlugins = [...(expressionPlugins || []), 'typescript'];\r\n        }\r\n    }\r\n    transform(ast, shared.extend({}, options, {\r\n        prefixIdentifiers,\r\n        nodeTransforms: [\r\n            ...nodeTransforms,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ],\r\n        directiveTransforms: shared.extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\r\n        )\r\n    }));\r\n    return generate(ast, shared.extend({}, options, {\r\n        prefixIdentifiers\r\n    }));\r\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexports.generateCodeFrame = shared.generateCodeFrame;\nexports.BASE_TRANSITION = BASE_TRANSITION;\nexports.CAMELIZE = CAMELIZE;\nexports.CAPITALIZE = CAPITALIZE;\nexports.CREATE_BLOCK = CREATE_BLOCK;\nexports.CREATE_COMMENT = CREATE_COMMENT;\nexports.CREATE_ELEMENT_BLOCK = CREATE_ELEMENT_BLOCK;\nexports.CREATE_ELEMENT_VNODE = CREATE_ELEMENT_VNODE;\nexports.CREATE_SLOTS = CREATE_SLOTS;\nexports.CREATE_STATIC = CREATE_STATIC;\nexports.CREATE_TEXT = CREATE_TEXT;\nexports.CREATE_VNODE = CREATE_VNODE;\nexports.FRAGMENT = FRAGMENT;\nexports.GUARD_REACTIVE_PROPS = GUARD_REACTIVE_PROPS;\nexports.IS_MEMO_SAME = IS_MEMO_SAME;\nexports.IS_REF = IS_REF;\nexports.KEEP_ALIVE = KEEP_ALIVE;\nexports.MERGE_PROPS = MERGE_PROPS;\nexports.NORMALIZE_CLASS = NORMALIZE_CLASS;\nexports.NORMALIZE_PROPS = NORMALIZE_PROPS;\nexports.NORMALIZE_STYLE = NORMALIZE_STYLE;\nexports.OPEN_BLOCK = OPEN_BLOCK;\nexports.POP_SCOPE_ID = POP_SCOPE_ID;\nexports.PUSH_SCOPE_ID = PUSH_SCOPE_ID;\nexports.RENDER_LIST = RENDER_LIST;\nexports.RENDER_SLOT = RENDER_SLOT;\nexports.RESOLVE_COMPONENT = RESOLVE_COMPONENT;\nexports.RESOLVE_DIRECTIVE = RESOLVE_DIRECTIVE;\nexports.RESOLVE_DYNAMIC_COMPONENT = RESOLVE_DYNAMIC_COMPONENT;\nexports.RESOLVE_FILTER = RESOLVE_FILTER;\nexports.SET_BLOCK_TRACKING = SET_BLOCK_TRACKING;\nexports.SUSPENSE = SUSPENSE;\nexports.TELEPORT = TELEPORT;\nexports.TO_DISPLAY_STRING = TO_DISPLAY_STRING;\nexports.TO_HANDLERS = TO_HANDLERS;\nexports.TO_HANDLER_KEY = TO_HANDLER_KEY;\nexports.UNREF = UNREF;\nexports.WITH_CTX = WITH_CTX;\nexports.WITH_DIRECTIVES = WITH_DIRECTIVES;\nexports.WITH_MEMO = WITH_MEMO;\nexports.advancePositionWithClone = advancePositionWithClone;\nexports.advancePositionWithMutation = advancePositionWithMutation;\nexports.assert = assert;\nexports.baseCompile = baseCompile;\nexports.baseParse = baseParse;\nexports.buildDirectiveArgs = buildDirectiveArgs;\nexports.buildProps = buildProps;\nexports.buildSlots = buildSlots;\nexports.checkCompatEnabled = checkCompatEnabled;\nexports.createArrayExpression = createArrayExpression;\nexports.createAssignmentExpression = createAssignmentExpression;\nexports.createBlockStatement = createBlockStatement;\nexports.createCacheExpression = createCacheExpression;\nexports.createCallExpression = createCallExpression;\nexports.createCompilerError = createCompilerError;\nexports.createCompoundExpression = createCompoundExpression;\nexports.createConditionalExpression = createConditionalExpression;\nexports.createForLoopParams = createForLoopParams;\nexports.createFunctionExpression = createFunctionExpression;\nexports.createIfStatement = createIfStatement;\nexports.createInterpolation = createInterpolation;\nexports.createObjectExpression = createObjectExpression;\nexports.createObjectProperty = createObjectProperty;\nexports.createReturnStatement = createReturnStatement;\nexports.createRoot = createRoot;\nexports.createSequenceExpression = createSequenceExpression;\nexports.createSimpleExpression = createSimpleExpression;\nexports.createStructuralDirectiveTransform = createStructuralDirectiveTransform;\nexports.createTemplateLiteral = createTemplateLiteral;\nexports.createTransformContext = createTransformContext;\nexports.createVNodeCall = createVNodeCall;\nexports.extractIdentifiers = extractIdentifiers;\nexports.findDir = findDir;\nexports.findProp = findProp;\nexports.generate = generate;\nexports.getBaseTransformPreset = getBaseTransformPreset;\nexports.getConstantType = getConstantType;\nexports.getInnerRange = getInnerRange;\nexports.getMemoedVNodeCall = getMemoedVNodeCall;\nexports.getVNodeBlockHelper = getVNodeBlockHelper;\nexports.getVNodeHelper = getVNodeHelper;\nexports.hasDynamicKeyVBind = hasDynamicKeyVBind;\nexports.hasScopeRef = hasScopeRef;\nexports.helperNameMap = helperNameMap;\nexports.injectProp = injectProp;\nexports.isBuiltInType = isBuiltInType;\nexports.isCoreComponent = isCoreComponent;\nexports.isFunctionType = isFunctionType;\nexports.isInDestructureAssignment = isInDestructureAssignment;\nexports.isMemberExpression = isMemberExpression;\nexports.isMemberExpressionBrowser = isMemberExpressionBrowser;\nexports.isMemberExpressionNode = isMemberExpressionNode;\nexports.isReferencedIdentifier = isReferencedIdentifier;\nexports.isSimpleIdentifier = isSimpleIdentifier;\nexports.isSlotOutlet = isSlotOutlet;\nexports.isStaticArgOf = isStaticArgOf;\nexports.isStaticExp = isStaticExp;\nexports.isStaticProperty = isStaticProperty;\nexports.isStaticPropertyKey = isStaticPropertyKey;\nexports.isTemplateNode = isTemplateNode;\nexports.isText = isText;\nexports.isVSlot = isVSlot;\nexports.locStub = locStub;\nexports.makeBlock = makeBlock;\nexports.noopDirectiveTransform = noopDirectiveTransform;\nexports.processExpression = processExpression;\nexports.processFor = processFor;\nexports.processIf = processIf;\nexports.processSlotOutlet = processSlotOutlet;\nexports.registerRuntimeHelpers = registerRuntimeHelpers;\nexports.resolveComponentType = resolveComponentType;\nexports.toValidAssetId = toValidAssetId;\nexports.trackSlotScopes = trackSlotScopes;\nexports.trackVForSlotScopes = trackVForSlotScopes;\nexports.transform = transform;\nexports.transformBind = transformBind;\nexports.transformElement = transformElement;\nexports.transformExpression = transformExpression;\nexports.transformModel = transformModel;\nexports.transformOn = transformOn;\nexports.traverseNode = traverseNode;\nexports.walkBlockDeclarations = walkBlockDeclarations;\nexports.walkFunctionParams = walkFunctionParams;\nexports.walkIdentifiers = walkIdentifiers;\nexports.warnDeprecation = warnDeprecation;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/compiler-core.cjs.prod.js')\n} else {\n  module.exports = require('./dist/compiler-core.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar compilerCore = require('@vue/compiler-core');\nvar shared = require('@vue/shared');\n\nconst V_MODEL_RADIO = Symbol(``);\r\nconst V_MODEL_CHECKBOX = Symbol(``);\r\nconst V_MODEL_TEXT = Symbol(``);\r\nconst V_MODEL_SELECT = Symbol(``);\r\nconst V_MODEL_DYNAMIC = Symbol(``);\r\nconst V_ON_WITH_MODIFIERS = Symbol(``);\r\nconst V_ON_WITH_KEYS = Symbol(``);\r\nconst V_SHOW = Symbol(``);\r\nconst TRANSITION = Symbol(``);\r\nconst TRANSITION_GROUP = Symbol(``);\r\ncompilerCore.registerRuntimeHelpers({\r\n    [V_MODEL_RADIO]: `vModelRadio`,\r\n    [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n    [V_MODEL_TEXT]: `vModelText`,\r\n    [V_MODEL_SELECT]: `vModelSelect`,\r\n    [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n    [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n    [V_ON_WITH_KEYS]: `withKeys`,\r\n    [V_SHOW]: `vShow`,\r\n    [TRANSITION]: `Transition`,\r\n    [TRANSITION_GROUP]: `TransitionGroup`\r\n});\n\nvar namedCharacterReferences = {\n\tGT: \">\",\n\tgt: \">\",\n\tLT: \"<\",\n\tlt: \"<\",\n\t\"ac;\": \"\u223E\",\n\t\"af;\": \"\u2061\",\n\tAMP: \"&\",\n\tamp: \"&\",\n\t\"ap;\": \"\u2248\",\n\t\"DD;\": \"\u2145\",\n\t\"dd;\": \"\u2146\",\n\tdeg: \"\u00B0\",\n\t\"ee;\": \"\u2147\",\n\t\"eg;\": \"\u2A9A\",\n\t\"el;\": \"\u2A99\",\n\tETH: \"\u00D0\",\n\teth: \"\u00F0\",\n\t\"gE;\": \"\u2267\",\n\t\"ge;\": \"\u2265\",\n\t\"Gg;\": \"\u22D9\",\n\t\"gg;\": \"\u226B\",\n\t\"gl;\": \"\u2277\",\n\t\"GT;\": \">\",\n\t\"Gt;\": \"\u226B\",\n\t\"gt;\": \">\",\n\t\"ic;\": \"\u2063\",\n\t\"ii;\": \"\u2148\",\n\t\"Im;\": \"\u2111\",\n\t\"in;\": \"\u2208\",\n\t\"it;\": \"\u2062\",\n\t\"lE;\": \"\u2266\",\n\t\"le;\": \"\u2264\",\n\t\"lg;\": \"\u2276\",\n\t\"Ll;\": \"\u22D8\",\n\t\"ll;\": \"\u226A\",\n\t\"LT;\": \"<\",\n\t\"Lt;\": \"\u226A\",\n\t\"lt;\": \"<\",\n\t\"mp;\": \"\u2213\",\n\t\"Mu;\": \"\u039C\",\n\t\"mu;\": \"\u03BC\",\n\t\"ne;\": \"\u2260\",\n\t\"ni;\": \"\u220B\",\n\tnot: \"\u00AC\",\n\t\"Nu;\": \"\u039D\",\n\t\"nu;\": \"\u03BD\",\n\t\"Or;\": \"\u2A54\",\n\t\"or;\": \"\u2228\",\n\t\"oS;\": \"\u24C8\",\n\t\"Pi;\": \"\u03A0\",\n\t\"pi;\": \"\u03C0\",\n\t\"pm;\": \"\u00B1\",\n\t\"Pr;\": \"\u2ABB\",\n\t\"pr;\": \"\u227A\",\n\t\"Re;\": \"\u211C\",\n\tREG: \"\u00AE\",\n\treg: \"\u00AE\",\n\t\"rx;\": \"\u211E\",\n\t\"Sc;\": \"\u2ABC\",\n\t\"sc;\": \"\u227B\",\n\tshy: \"\u00AD\",\n\tuml: \"\u00A8\",\n\t\"wp;\": \"\u2118\",\n\t\"wr;\": \"\u2240\",\n\t\"Xi;\": \"\u039E\",\n\t\"xi;\": \"\u03BE\",\n\tyen: \"\u00A5\",\n\t\"acd;\": \"\u223F\",\n\t\"acE;\": \"\u223E\u0333\",\n\t\"Acy;\": \"\u0410\",\n\t\"acy;\": \"\u0430\",\n\t\"Afr;\": \"\uD835\uDD04\",\n\t\"afr;\": \"\uD835\uDD1E\",\n\t\"AMP;\": \"&\",\n\t\"amp;\": \"&\",\n\t\"And;\": \"\u2A53\",\n\t\"and;\": \"\u2227\",\n\t\"ang;\": \"\u2220\",\n\t\"apE;\": \"\u2A70\",\n\t\"ape;\": \"\u224A\",\n\t\"ast;\": \"*\",\n\tAuml: \"\u00C4\",\n\tauml: \"\u00E4\",\n\t\"Bcy;\": \"\u0411\",\n\t\"bcy;\": \"\u0431\",\n\t\"Bfr;\": \"\uD835\uDD05\",\n\t\"bfr;\": \"\uD835\uDD1F\",\n\t\"bne;\": \"=\u20E5\",\n\t\"bot;\": \"\u22A5\",\n\t\"Cap;\": \"\u22D2\",\n\t\"cap;\": \"\u2229\",\n\tcent: \"\u00A2\",\n\t\"Cfr;\": \"\u212D\",\n\t\"cfr;\": \"\uD835\uDD20\",\n\t\"Chi;\": \"\u03A7\",\n\t\"chi;\": \"\u03C7\",\n\t\"cir;\": \"\u25CB\",\n\tCOPY: \"\u00A9\",\n\tcopy: \"\u00A9\",\n\t\"Cup;\": \"\u22D3\",\n\t\"cup;\": \"\u222A\",\n\t\"Dcy;\": \"\u0414\",\n\t\"dcy;\": \"\u0434\",\n\t\"deg;\": \"\u00B0\",\n\t\"Del;\": \"\u2207\",\n\t\"Dfr;\": \"\uD835\uDD07\",\n\t\"dfr;\": \"\uD835\uDD21\",\n\t\"die;\": \"\u00A8\",\n\t\"div;\": \"\u00F7\",\n\t\"Dot;\": \"\u00A8\",\n\t\"dot;\": \"\u02D9\",\n\t\"Ecy;\": \"\u042D\",\n\t\"ecy;\": \"\u044D\",\n\t\"Efr;\": \"\uD835\uDD08\",\n\t\"efr;\": \"\uD835\uDD22\",\n\t\"egs;\": \"\u2A96\",\n\t\"ell;\": \"\u2113\",\n\t\"els;\": \"\u2A95\",\n\t\"ENG;\": \"\u014A\",\n\t\"eng;\": \"\u014B\",\n\t\"Eta;\": \"\u0397\",\n\t\"eta;\": \"\u03B7\",\n\t\"ETH;\": \"\u00D0\",\n\t\"eth;\": \"\u00F0\",\n\tEuml: \"\u00CB\",\n\teuml: \"\u00EB\",\n\t\"Fcy;\": \"\u0424\",\n\t\"fcy;\": \"\u0444\",\n\t\"Ffr;\": \"\uD835\uDD09\",\n\t\"ffr;\": \"\uD835\uDD23\",\n\t\"gap;\": \"\u2A86\",\n\t\"Gcy;\": \"\u0413\",\n\t\"gcy;\": \"\u0433\",\n\t\"gEl;\": \"\u2A8C\",\n\t\"gel;\": \"\u22DB\",\n\t\"geq;\": \"\u2265\",\n\t\"ges;\": \"\u2A7E\",\n\t\"Gfr;\": \"\uD835\uDD0A\",\n\t\"gfr;\": \"\uD835\uDD24\",\n\t\"ggg;\": \"\u22D9\",\n\t\"gla;\": \"\u2AA5\",\n\t\"glE;\": \"\u2A92\",\n\t\"glj;\": \"\u2AA4\",\n\t\"gnE;\": \"\u2269\",\n\t\"gne;\": \"\u2A88\",\n\t\"Hat;\": \"^\",\n\t\"Hfr;\": \"\u210C\",\n\t\"hfr;\": \"\uD835\uDD25\",\n\t\"Icy;\": \"\u0418\",\n\t\"icy;\": \"\u0438\",\n\t\"iff;\": \"\u21D4\",\n\t\"Ifr;\": \"\u2111\",\n\t\"ifr;\": \"\uD835\uDD26\",\n\t\"Int;\": \"\u222C\",\n\t\"int;\": \"\u222B\",\n\tIuml: \"\u00CF\",\n\tiuml: \"\u00EF\",\n\t\"Jcy;\": \"\u0419\",\n\t\"jcy;\": \"\u0439\",\n\t\"Jfr;\": \"\uD835\uDD0D\",\n\t\"jfr;\": \"\uD835\uDD27\",\n\t\"Kcy;\": \"\u041A\",\n\t\"kcy;\": \"\u043A\",\n\t\"Kfr;\": \"\uD835\uDD0E\",\n\t\"kfr;\": \"\uD835\uDD28\",\n\t\"lap;\": \"\u2A85\",\n\t\"lat;\": \"\u2AAB\",\n\t\"Lcy;\": \"\u041B\",\n\t\"lcy;\": \"\u043B\",\n\t\"lEg;\": \"\u2A8B\",\n\t\"leg;\": \"\u22DA\",\n\t\"leq;\": \"\u2264\",\n\t\"les;\": \"\u2A7D\",\n\t\"Lfr;\": \"\uD835\uDD0F\",\n\t\"lfr;\": \"\uD835\uDD29\",\n\t\"lgE;\": \"\u2A91\",\n\t\"lnE;\": \"\u2268\",\n\t\"lne;\": \"\u2A87\",\n\t\"loz;\": \"\u25CA\",\n\t\"lrm;\": \"\u200E\",\n\t\"Lsh;\": \"\u21B0\",\n\t\"lsh;\": \"\u21B0\",\n\tmacr: \"\u00AF\",\n\t\"Map;\": \"\u2905\",\n\t\"map;\": \"\u21A6\",\n\t\"Mcy;\": \"\u041C\",\n\t\"mcy;\": \"\u043C\",\n\t\"Mfr;\": \"\uD835\uDD10\",\n\t\"mfr;\": \"\uD835\uDD2A\",\n\t\"mho;\": \"\u2127\",\n\t\"mid;\": \"\u2223\",\n\t\"nap;\": \"\u2249\",\n\tnbsp: \"\u00A0\",\n\t\"Ncy;\": \"\u041D\",\n\t\"ncy;\": \"\u043D\",\n\t\"Nfr;\": \"\uD835\uDD11\",\n\t\"nfr;\": \"\uD835\uDD2B\",\n\t\"ngE;\": \"\u2267\u0338\",\n\t\"nge;\": \"\u2271\",\n\t\"nGg;\": \"\u22D9\u0338\",\n\t\"nGt;\": \"\u226B\u20D2\",\n\t\"ngt;\": \"\u226F\",\n\t\"nis;\": \"\u22FC\",\n\t\"niv;\": \"\u220B\",\n\t\"nlE;\": \"\u2266\u0338\",\n\t\"nle;\": \"\u2270\",\n\t\"nLl;\": \"\u22D8\u0338\",\n\t\"nLt;\": \"\u226A\u20D2\",\n\t\"nlt;\": \"\u226E\",\n\t\"Not;\": \"\u2AEC\",\n\t\"not;\": \"\u00AC\",\n\t\"npr;\": \"\u2280\",\n\t\"nsc;\": \"\u2281\",\n\t\"num;\": \"#\",\n\t\"Ocy;\": \"\u041E\",\n\t\"ocy;\": \"\u043E\",\n\t\"Ofr;\": \"\uD835\uDD12\",\n\t\"ofr;\": \"\uD835\uDD2C\",\n\t\"ogt;\": \"\u29C1\",\n\t\"ohm;\": \"\u03A9\",\n\t\"olt;\": \"\u29C0\",\n\t\"ord;\": \"\u2A5D\",\n\tordf: \"\u00AA\",\n\tordm: \"\u00BA\",\n\t\"orv;\": \"\u2A5B\",\n\tOuml: \"\u00D6\",\n\touml: \"\u00F6\",\n\t\"par;\": \"\u2225\",\n\tpara: \"\u00B6\",\n\t\"Pcy;\": \"\u041F\",\n\t\"pcy;\": \"\u043F\",\n\t\"Pfr;\": \"\uD835\uDD13\",\n\t\"pfr;\": \"\uD835\uDD2D\",\n\t\"Phi;\": \"\u03A6\",\n\t\"phi;\": \"\u03C6\",\n\t\"piv;\": \"\u03D6\",\n\t\"prE;\": \"\u2AB3\",\n\t\"pre;\": \"\u2AAF\",\n\t\"Psi;\": \"\u03A8\",\n\t\"psi;\": \"\u03C8\",\n\t\"Qfr;\": \"\uD835\uDD14\",\n\t\"qfr;\": \"\uD835\uDD2E\",\n\tQUOT: \"\\\"\",\n\tquot: \"\\\"\",\n\t\"Rcy;\": \"\u0420\",\n\t\"rcy;\": \"\u0440\",\n\t\"REG;\": \"\u00AE\",\n\t\"reg;\": \"\u00AE\",\n\t\"Rfr;\": \"\u211C\",\n\t\"rfr;\": \"\uD835\uDD2F\",\n\t\"Rho;\": \"\u03A1\",\n\t\"rho;\": \"\u03C1\",\n\t\"rlm;\": \"\u200F\",\n\t\"Rsh;\": \"\u21B1\",\n\t\"rsh;\": \"\u21B1\",\n\t\"scE;\": \"\u2AB4\",\n\t\"sce;\": \"\u2AB0\",\n\t\"Scy;\": \"\u0421\",\n\t\"scy;\": \"\u0441\",\n\tsect: \"\u00A7\",\n\t\"Sfr;\": \"\uD835\uDD16\",\n\t\"sfr;\": \"\uD835\uDD30\",\n\t\"shy;\": \"\u00AD\",\n\t\"sim;\": \"\u223C\",\n\t\"smt;\": \"\u2AAA\",\n\t\"sol;\": \"/\",\n\t\"squ;\": \"\u25A1\",\n\t\"Sub;\": \"\u22D0\",\n\t\"sub;\": \"\u2282\",\n\t\"Sum;\": \"\u2211\",\n\t\"sum;\": \"\u2211\",\n\t\"Sup;\": \"\u22D1\",\n\t\"sup;\": \"\u2283\",\n\tsup1: \"\u00B9\",\n\tsup2: \"\u00B2\",\n\tsup3: \"\u00B3\",\n\t\"Tab;\": \"\\t\",\n\t\"Tau;\": \"\u03A4\",\n\t\"tau;\": \"\u03C4\",\n\t\"Tcy;\": \"\u0422\",\n\t\"tcy;\": \"\u0442\",\n\t\"Tfr;\": \"\uD835\uDD17\",\n\t\"tfr;\": \"\uD835\uDD31\",\n\t\"top;\": \"\u22A4\",\n\t\"Ucy;\": \"\u0423\",\n\t\"ucy;\": \"\u0443\",\n\t\"Ufr;\": \"\uD835\uDD18\",\n\t\"ufr;\": \"\uD835\uDD32\",\n\t\"uml;\": \"\u00A8\",\n\tUuml: \"\u00DC\",\n\tuuml: \"\u00FC\",\n\t\"Vcy;\": \"\u0412\",\n\t\"vcy;\": \"\u0432\",\n\t\"Vee;\": \"\u22C1\",\n\t\"vee;\": \"\u2228\",\n\t\"Vfr;\": \"\uD835\uDD19\",\n\t\"vfr;\": \"\uD835\uDD33\",\n\t\"Wfr;\": \"\uD835\uDD1A\",\n\t\"wfr;\": \"\uD835\uDD34\",\n\t\"Xfr;\": \"\uD835\uDD1B\",\n\t\"xfr;\": \"\uD835\uDD35\",\n\t\"Ycy;\": \"\u042B\",\n\t\"ycy;\": \"\u044B\",\n\t\"yen;\": \"\u00A5\",\n\t\"Yfr;\": \"\uD835\uDD1C\",\n\t\"yfr;\": \"\uD835\uDD36\",\n\tyuml: \"\u00FF\",\n\t\"Zcy;\": \"\u0417\",\n\t\"zcy;\": \"\u0437\",\n\t\"Zfr;\": \"\u2128\",\n\t\"zfr;\": \"\uD835\uDD37\",\n\t\"zwj;\": \"\u200D\",\n\tAcirc: \"\u00C2\",\n\tacirc: \"\u00E2\",\n\tacute: \"\u00B4\",\n\tAElig: \"\u00C6\",\n\taelig: \"\u00E6\",\n\t\"andd;\": \"\u2A5C\",\n\t\"andv;\": \"\u2A5A\",\n\t\"ange;\": \"\u29A4\",\n\t\"Aopf;\": \"\uD835\uDD38\",\n\t\"aopf;\": \"\uD835\uDD52\",\n\t\"apid;\": \"\u224B\",\n\t\"apos;\": \"'\",\n\tAring: \"\u00C5\",\n\taring: \"\u00E5\",\n\t\"Ascr;\": \"\uD835\uDC9C\",\n\t\"ascr;\": \"\uD835\uDCB6\",\n\t\"Auml;\": \"\u00C4\",\n\t\"auml;\": \"\u00E4\",\n\t\"Barv;\": \"\u2AE7\",\n\t\"bbrk;\": \"\u23B5\",\n\t\"Beta;\": \"\u0392\",\n\t\"beta;\": \"\u03B2\",\n\t\"beth;\": \"\u2136\",\n\t\"bNot;\": \"\u2AED\",\n\t\"bnot;\": \"\u2310\",\n\t\"Bopf;\": \"\uD835\uDD39\",\n\t\"bopf;\": \"\uD835\uDD53\",\n\t\"boxH;\": \"\u2550\",\n\t\"boxh;\": \"\u2500\",\n\t\"boxV;\": \"\u2551\",\n\t\"boxv;\": \"\u2502\",\n\t\"Bscr;\": \"\u212C\",\n\t\"bscr;\": \"\uD835\uDCB7\",\n\t\"bsim;\": \"\u223D\",\n\t\"bsol;\": \"\\\\\",\n\t\"bull;\": \"\u2022\",\n\t\"bump;\": \"\u224E\",\n\t\"caps;\": \"\u2229\uFE00\",\n\t\"Cdot;\": \"\u010A\",\n\t\"cdot;\": \"\u010B\",\n\tcedil: \"\u00B8\",\n\t\"cent;\": \"\u00A2\",\n\t\"CHcy;\": \"\u0427\",\n\t\"chcy;\": \"\u0447\",\n\t\"circ;\": \"\u02C6\",\n\t\"cirE;\": \"\u29C3\",\n\t\"cire;\": \"\u2257\",\n\t\"comp;\": \"\u2201\",\n\t\"cong;\": \"\u2245\",\n\t\"Copf;\": \"\u2102\",\n\t\"copf;\": \"\uD835\uDD54\",\n\t\"COPY;\": \"\u00A9\",\n\t\"copy;\": \"\u00A9\",\n\t\"Cscr;\": \"\uD835\uDC9E\",\n\t\"cscr;\": \"\uD835\uDCB8\",\n\t\"csub;\": \"\u2ACF\",\n\t\"csup;\": \"\u2AD0\",\n\t\"cups;\": \"\u222A\uFE00\",\n\t\"Darr;\": \"\u21A1\",\n\t\"dArr;\": \"\u21D3\",\n\t\"darr;\": \"\u2193\",\n\t\"dash;\": \"\u2010\",\n\t\"dHar;\": \"\u2965\",\n\t\"diam;\": \"\u22C4\",\n\t\"DJcy;\": \"\u0402\",\n\t\"djcy;\": \"\u0452\",\n\t\"Dopf;\": \"\uD835\uDD3B\",\n\t\"dopf;\": \"\uD835\uDD55\",\n\t\"Dscr;\": \"\uD835\uDC9F\",\n\t\"dscr;\": \"\uD835\uDCB9\",\n\t\"DScy;\": \"\u0405\",\n\t\"dscy;\": \"\u0455\",\n\t\"dsol;\": \"\u29F6\",\n\t\"dtri;\": \"\u25BF\",\n\t\"DZcy;\": \"\u040F\",\n\t\"dzcy;\": \"\u045F\",\n\t\"ecir;\": \"\u2256\",\n\tEcirc: \"\u00CA\",\n\tecirc: \"\u00EA\",\n\t\"Edot;\": \"\u0116\",\n\t\"eDot;\": \"\u2251\",\n\t\"edot;\": \"\u0117\",\n\t\"emsp;\": \"\u2003\",\n\t\"ensp;\": \"\u2002\",\n\t\"Eopf;\": \"\uD835\uDD3C\",\n\t\"eopf;\": \"\uD835\uDD56\",\n\t\"epar;\": \"\u22D5\",\n\t\"epsi;\": \"\u03B5\",\n\t\"Escr;\": \"\u2130\",\n\t\"escr;\": \"\u212F\",\n\t\"Esim;\": \"\u2A73\",\n\t\"esim;\": \"\u2242\",\n\t\"Euml;\": \"\u00CB\",\n\t\"euml;\": \"\u00EB\",\n\t\"euro;\": \"\u20AC\",\n\t\"excl;\": \"!\",\n\t\"flat;\": \"\u266D\",\n\t\"fnof;\": \"\u0192\",\n\t\"Fopf;\": \"\uD835\uDD3D\",\n\t\"fopf;\": \"\uD835\uDD57\",\n\t\"fork;\": \"\u22D4\",\n\t\"Fscr;\": \"\u2131\",\n\t\"fscr;\": \"\uD835\uDCBB\",\n\t\"Gdot;\": \"\u0120\",\n\t\"gdot;\": \"\u0121\",\n\t\"geqq;\": \"\u2267\",\n\t\"gesl;\": \"\u22DB\uFE00\",\n\t\"GJcy;\": \"\u0403\",\n\t\"gjcy;\": \"\u0453\",\n\t\"gnap;\": \"\u2A8A\",\n\t\"gneq;\": \"\u2A88\",\n\t\"Gopf;\": \"\uD835\uDD3E\",\n\t\"gopf;\": \"\uD835\uDD58\",\n\t\"Gscr;\": \"\uD835\uDCA2\",\n\t\"gscr;\": \"\u210A\",\n\t\"gsim;\": \"\u2273\",\n\t\"gtcc;\": \"\u2AA7\",\n\t\"gvnE;\": \"\u2269\uFE00\",\n\t\"half;\": \"\u00BD\",\n\t\"hArr;\": \"\u21D4\",\n\t\"harr;\": \"\u2194\",\n\t\"hbar;\": \"\u210F\",\n\t\"Hopf;\": \"\u210D\",\n\t\"hopf;\": \"\uD835\uDD59\",\n\t\"Hscr;\": \"\u210B\",\n\t\"hscr;\": \"\uD835\uDCBD\",\n\tIcirc: \"\u00CE\",\n\ticirc: \"\u00EE\",\n\t\"Idot;\": \"\u0130\",\n\t\"IEcy;\": \"\u0415\",\n\t\"iecy;\": \"\u0435\",\n\tiexcl: \"\u00A1\",\n\t\"imof;\": \"\u22B7\",\n\t\"IOcy;\": \"\u0401\",\n\t\"iocy;\": \"\u0451\",\n\t\"Iopf;\": \"\uD835\uDD40\",\n\t\"iopf;\": \"\uD835\uDD5A\",\n\t\"Iota;\": \"\u0399\",\n\t\"iota;\": \"\u03B9\",\n\t\"Iscr;\": \"\u2110\",\n\t\"iscr;\": \"\uD835\uDCBE\",\n\t\"isin;\": \"\u2208\",\n\t\"Iuml;\": \"\u00CF\",\n\t\"iuml;\": \"\u00EF\",\n\t\"Jopf;\": \"\uD835\uDD41\",\n\t\"jopf;\": \"\uD835\uDD5B\",\n\t\"Jscr;\": \"\uD835\uDCA5\",\n\t\"jscr;\": \"\uD835\uDCBF\",\n\t\"KHcy;\": \"\u0425\",\n\t\"khcy;\": \"\u0445\",\n\t\"KJcy;\": \"\u040C\",\n\t\"kjcy;\": \"\u045C\",\n\t\"Kopf;\": \"\uD835\uDD42\",\n\t\"kopf;\": \"\uD835\uDD5C\",\n\t\"Kscr;\": \"\uD835\uDCA6\",\n\t\"kscr;\": \"\uD835\uDCC0\",\n\t\"Lang;\": \"\u27EA\",\n\t\"lang;\": \"\u27E8\",\n\tlaquo: \"\u00AB\",\n\t\"Larr;\": \"\u219E\",\n\t\"lArr;\": \"\u21D0\",\n\t\"larr;\": \"\u2190\",\n\t\"late;\": \"\u2AAD\",\n\t\"lcub;\": \"{\",\n\t\"ldca;\": \"\u2936\",\n\t\"ldsh;\": \"\u21B2\",\n\t\"leqq;\": \"\u2266\",\n\t\"lesg;\": \"\u22DA\uFE00\",\n\t\"lHar;\": \"\u2962\",\n\t\"LJcy;\": \"\u0409\",\n\t\"ljcy;\": \"\u0459\",\n\t\"lnap;\": \"\u2A89\",\n\t\"lneq;\": \"\u2A87\",\n\t\"Lopf;\": \"\uD835\uDD43\",\n\t\"lopf;\": \"\uD835\uDD5D\",\n\t\"lozf;\": \"\u29EB\",\n\t\"lpar;\": \"(\",\n\t\"Lscr;\": \"\u2112\",\n\t\"lscr;\": \"\uD835\uDCC1\",\n\t\"lsim;\": \"\u2272\",\n\t\"lsqb;\": \"[\",\n\t\"ltcc;\": \"\u2AA6\",\n\t\"ltri;\": \"\u25C3\",\n\t\"lvnE;\": \"\u2268\uFE00\",\n\t\"macr;\": \"\u00AF\",\n\t\"male;\": \"\u2642\",\n\t\"malt;\": \"\u2720\",\n\tmicro: \"\u00B5\",\n\t\"mlcp;\": \"\u2ADB\",\n\t\"mldr;\": \"\u2026\",\n\t\"Mopf;\": \"\uD835\uDD44\",\n\t\"mopf;\": \"\uD835\uDD5E\",\n\t\"Mscr;\": \"\u2133\",\n\t\"mscr;\": \"\uD835\uDCC2\",\n\t\"nang;\": \"\u2220\u20D2\",\n\t\"napE;\": \"\u2A70\u0338\",\n\t\"nbsp;\": \"\u00A0\",\n\t\"ncap;\": \"\u2A43\",\n\t\"ncup;\": \"\u2A42\",\n\t\"ngeq;\": \"\u2271\",\n\t\"nges;\": \"\u2A7E\u0338\",\n\t\"ngtr;\": \"\u226F\",\n\t\"nGtv;\": \"\u226B\u0338\",\n\t\"nisd;\": \"\u22FA\",\n\t\"NJcy;\": \"\u040A\",\n\t\"njcy;\": \"\u045A\",\n\t\"nldr;\": \"\u2025\",\n\t\"nleq;\": \"\u2270\",\n\t\"nles;\": \"\u2A7D\u0338\",\n\t\"nLtv;\": \"\u226A\u0338\",\n\t\"nmid;\": \"\u2224\",\n\t\"Nopf;\": \"\u2115\",\n\t\"nopf;\": \"\uD835\uDD5F\",\n\t\"npar;\": \"\u2226\",\n\t\"npre;\": \"\u2AAF\u0338\",\n\t\"nsce;\": \"\u2AB0\u0338\",\n\t\"Nscr;\": \"\uD835\uDCA9\",\n\t\"nscr;\": \"\uD835\uDCC3\",\n\t\"nsim;\": \"\u2241\",\n\t\"nsub;\": \"\u2284\",\n\t\"nsup;\": \"\u2285\",\n\t\"ntgl;\": \"\u2279\",\n\t\"ntlg;\": \"\u2278\",\n\t\"nvap;\": \"\u224D\u20D2\",\n\t\"nvge;\": \"\u2265\u20D2\",\n\t\"nvgt;\": \">\u20D2\",\n\t\"nvle;\": \"\u2264\u20D2\",\n\t\"nvlt;\": \"<\u20D2\",\n\t\"oast;\": \"\u229B\",\n\t\"ocir;\": \"\u229A\",\n\tOcirc: \"\u00D4\",\n\tocirc: \"\u00F4\",\n\t\"odiv;\": \"\u2A38\",\n\t\"odot;\": \"\u2299\",\n\t\"ogon;\": \"\u02DB\",\n\t\"oint;\": \"\u222E\",\n\t\"omid;\": \"\u29B6\",\n\t\"Oopf;\": \"\uD835\uDD46\",\n\t\"oopf;\": \"\uD835\uDD60\",\n\t\"opar;\": \"\u29B7\",\n\t\"ordf;\": \"\u00AA\",\n\t\"ordm;\": \"\u00BA\",\n\t\"oror;\": \"\u2A56\",\n\t\"Oscr;\": \"\uD835\uDCAA\",\n\t\"oscr;\": \"\u2134\",\n\t\"osol;\": \"\u2298\",\n\t\"Ouml;\": \"\u00D6\",\n\t\"ouml;\": \"\u00F6\",\n\t\"para;\": \"\u00B6\",\n\t\"part;\": \"\u2202\",\n\t\"perp;\": \"\u22A5\",\n\t\"phiv;\": \"\u03D5\",\n\t\"plus;\": \"+\",\n\t\"Popf;\": \"\u2119\",\n\t\"popf;\": \"\uD835\uDD61\",\n\tpound: \"\u00A3\",\n\t\"prap;\": \"\u2AB7\",\n\t\"prec;\": \"\u227A\",\n\t\"prnE;\": \"\u2AB5\",\n\t\"prod;\": \"\u220F\",\n\t\"prop;\": \"\u221D\",\n\t\"Pscr;\": \"\uD835\uDCAB\",\n\t\"pscr;\": \"\uD835\uDCC5\",\n\t\"qint;\": \"\u2A0C\",\n\t\"Qopf;\": \"\u211A\",\n\t\"qopf;\": \"\uD835\uDD62\",\n\t\"Qscr;\": \"\uD835\uDCAC\",\n\t\"qscr;\": \"\uD835\uDCC6\",\n\t\"QUOT;\": \"\\\"\",\n\t\"quot;\": \"\\\"\",\n\t\"race;\": \"\u223D\u0331\",\n\t\"Rang;\": \"\u27EB\",\n\t\"rang;\": \"\u27E9\",\n\traquo: \"\u00BB\",\n\t\"Rarr;\": \"\u21A0\",\n\t\"rArr;\": \"\u21D2\",\n\t\"rarr;\": \"\u2192\",\n\t\"rcub;\": \"}\",\n\t\"rdca;\": \"\u2937\",\n\t\"rdsh;\": \"\u21B3\",\n\t\"real;\": \"\u211C\",\n\t\"rect;\": \"\u25AD\",\n\t\"rHar;\": \"\u2964\",\n\t\"rhov;\": \"\u03F1\",\n\t\"ring;\": \"\u02DA\",\n\t\"Ropf;\": \"\u211D\",\n\t\"ropf;\": \"\uD835\uDD63\",\n\t\"rpar;\": \")\",\n\t\"Rscr;\": \"\u211B\",\n\t\"rscr;\": \"\uD835\uDCC7\",\n\t\"rsqb;\": \"]\",\n\t\"rtri;\": \"\u25B9\",\n\t\"scap;\": \"\u2AB8\",\n\t\"scnE;\": \"\u2AB6\",\n\t\"sdot;\": \"\u22C5\",\n\t\"sect;\": \"\u00A7\",\n\t\"semi;\": \";\",\n\t\"sext;\": \"\u2736\",\n\t\"SHcy;\": \"\u0428\",\n\t\"shcy;\": \"\u0448\",\n\t\"sime;\": \"\u2243\",\n\t\"simg;\": \"\u2A9E\",\n\t\"siml;\": \"\u2A9D\",\n\t\"smid;\": \"\u2223\",\n\t\"smte;\": \"\u2AAC\",\n\t\"solb;\": \"\u29C4\",\n\t\"Sopf;\": \"\uD835\uDD4A\",\n\t\"sopf;\": \"\uD835\uDD64\",\n\t\"spar;\": \"\u2225\",\n\t\"Sqrt;\": \"\u221A\",\n\t\"squf;\": \"\u25AA\",\n\t\"Sscr;\": \"\uD835\uDCAE\",\n\t\"sscr;\": \"\uD835\uDCC8\",\n\t\"Star;\": \"\u22C6\",\n\t\"star;\": \"\u2606\",\n\t\"subE;\": \"\u2AC5\",\n\t\"sube;\": \"\u2286\",\n\t\"succ;\": \"\u227B\",\n\t\"sung;\": \"\u266A\",\n\t\"sup1;\": \"\u00B9\",\n\t\"sup2;\": \"\u00B2\",\n\t\"sup3;\": \"\u00B3\",\n\t\"supE;\": \"\u2AC6\",\n\t\"supe;\": \"\u2287\",\n\tszlig: \"\u00DF\",\n\t\"tbrk;\": \"\u23B4\",\n\t\"tdot;\": \"\u20DB\",\n\tTHORN: \"\u00DE\",\n\tthorn: \"\u00FE\",\n\ttimes: \"\u00D7\",\n\t\"tint;\": \"\u222D\",\n\t\"toea;\": \"\u2928\",\n\t\"Topf;\": \"\uD835\uDD4B\",\n\t\"topf;\": \"\uD835\uDD65\",\n\t\"tosa;\": \"\u2929\",\n\t\"trie;\": \"\u225C\",\n\t\"Tscr;\": \"\uD835\uDCAF\",\n\t\"tscr;\": \"\uD835\uDCC9\",\n\t\"TScy;\": \"\u0426\",\n\t\"tscy;\": \"\u0446\",\n\t\"Uarr;\": \"\u219F\",\n\t\"uArr;\": \"\u21D1\",\n\t\"uarr;\": \"\u2191\",\n\tUcirc: \"\u00DB\",\n\tucirc: \"\u00FB\",\n\t\"uHar;\": \"\u2963\",\n\t\"Uopf;\": \"\uD835\uDD4C\",\n\t\"uopf;\": \"\uD835\uDD66\",\n\t\"Upsi;\": \"\u03D2\",\n\t\"upsi;\": \"\u03C5\",\n\t\"Uscr;\": \"\uD835\uDCB0\",\n\t\"uscr;\": \"\uD835\uDCCA\",\n\t\"utri;\": \"\u25B5\",\n\t\"Uuml;\": \"\u00DC\",\n\t\"uuml;\": \"\u00FC\",\n\t\"vArr;\": \"\u21D5\",\n\t\"varr;\": \"\u2195\",\n\t\"Vbar;\": \"\u2AEB\",\n\t\"vBar;\": \"\u2AE8\",\n\t\"Vert;\": \"\u2016\",\n\t\"vert;\": \"|\",\n\t\"Vopf;\": \"\uD835\uDD4D\",\n\t\"vopf;\": \"\uD835\uDD67\",\n\t\"Vscr;\": \"\uD835\uDCB1\",\n\t\"vscr;\": \"\uD835\uDCCB\",\n\t\"Wopf;\": \"\uD835\uDD4E\",\n\t\"wopf;\": \"\uD835\uDD68\",\n\t\"Wscr;\": \"\uD835\uDCB2\",\n\t\"wscr;\": \"\uD835\uDCCC\",\n\t\"xcap;\": \"\u22C2\",\n\t\"xcup;\": \"\u22C3\",\n\t\"xmap;\": \"\u27FC\",\n\t\"xnis;\": \"\u22FB\",\n\t\"Xopf;\": \"\uD835\uDD4F\",\n\t\"xopf;\": \"\uD835\uDD69\",\n\t\"Xscr;\": \"\uD835\uDCB3\",\n\t\"xscr;\": \"\uD835\uDCCD\",\n\t\"xvee;\": \"\u22C1\",\n\t\"YAcy;\": \"\u042F\",\n\t\"yacy;\": \"\u044F\",\n\t\"YIcy;\": \"\u0407\",\n\t\"yicy;\": \"\u0457\",\n\t\"Yopf;\": \"\uD835\uDD50\",\n\t\"yopf;\": \"\uD835\uDD6A\",\n\t\"Yscr;\": \"\uD835\uDCB4\",\n\t\"yscr;\": \"\uD835\uDCCE\",\n\t\"YUcy;\": \"\u042E\",\n\t\"yucy;\": \"\u044E\",\n\t\"Yuml;\": \"\u0178\",\n\t\"yuml;\": \"\u00FF\",\n\t\"Zdot;\": \"\u017B\",\n\t\"zdot;\": \"\u017C\",\n\t\"Zeta;\": \"\u0396\",\n\t\"zeta;\": \"\u03B6\",\n\t\"ZHcy;\": \"\u0416\",\n\t\"zhcy;\": \"\u0436\",\n\t\"Zopf;\": \"\u2124\",\n\t\"zopf;\": \"\uD835\uDD6B\",\n\t\"Zscr;\": \"\uD835\uDCB5\",\n\t\"zscr;\": \"\uD835\uDCCF\",\n\t\"zwnj;\": \"\u200C\",\n\tAacute: \"\u00C1\",\n\taacute: \"\u00E1\",\n\t\"Acirc;\": \"\u00C2\",\n\t\"acirc;\": \"\u00E2\",\n\t\"acute;\": \"\u00B4\",\n\t\"AElig;\": \"\u00C6\",\n\t\"aelig;\": \"\u00E6\",\n\tAgrave: \"\u00C0\",\n\tagrave: \"\u00E0\",\n\t\"aleph;\": \"\u2135\",\n\t\"Alpha;\": \"\u0391\",\n\t\"alpha;\": \"\u03B1\",\n\t\"Amacr;\": \"\u0100\",\n\t\"amacr;\": \"\u0101\",\n\t\"amalg;\": \"\u2A3F\",\n\t\"angle;\": \"\u2220\",\n\t\"angrt;\": \"\u221F\",\n\t\"angst;\": \"\u00C5\",\n\t\"Aogon;\": \"\u0104\",\n\t\"aogon;\": \"\u0105\",\n\t\"Aring;\": \"\u00C5\",\n\t\"aring;\": \"\u00E5\",\n\t\"asymp;\": \"\u2248\",\n\tAtilde: \"\u00C3\",\n\tatilde: \"\u00E3\",\n\t\"awint;\": \"\u2A11\",\n\t\"bcong;\": \"\u224C\",\n\t\"bdquo;\": \"\u201E\",\n\t\"bepsi;\": \"\u03F6\",\n\t\"blank;\": \"\u2423\",\n\t\"blk12;\": \"\u2592\",\n\t\"blk14;\": \"\u2591\",\n\t\"blk34;\": \"\u2593\",\n\t\"block;\": \"\u2588\",\n\t\"boxDL;\": \"\u2557\",\n\t\"boxDl;\": \"\u2556\",\n\t\"boxdL;\": \"\u2555\",\n\t\"boxdl;\": \"\u2510\",\n\t\"boxDR;\": \"\u2554\",\n\t\"boxDr;\": \"\u2553\",\n\t\"boxdR;\": \"\u2552\",\n\t\"boxdr;\": \"\u250C\",\n\t\"boxHD;\": \"\u2566\",\n\t\"boxHd;\": \"\u2564\",\n\t\"boxhD;\": \"\u2565\",\n\t\"boxhd;\": \"\u252C\",\n\t\"boxHU;\": \"\u2569\",\n\t\"boxHu;\": \"\u2567\",\n\t\"boxhU;\": \"\u2568\",\n\t\"boxhu;\": \"\u2534\",\n\t\"boxUL;\": \"\u255D\",\n\t\"boxUl;\": \"\u255C\",\n\t\"boxuL;\": \"\u255B\",\n\t\"boxul;\": \"\u2518\",\n\t\"boxUR;\": \"\u255A\",\n\t\"boxUr;\": \"\u2559\",\n\t\"boxuR;\": \"\u2558\",\n\t\"boxur;\": \"\u2514\",\n\t\"boxVH;\": \"\u256C\",\n\t\"boxVh;\": \"\u256B\",\n\t\"boxvH;\": \"\u256A\",\n\t\"boxvh;\": \"\u253C\",\n\t\"boxVL;\": \"\u2563\",\n\t\"boxVl;\": \"\u2562\",\n\t\"boxvL;\": \"\u2561\",\n\t\"boxvl;\": \"\u2524\",\n\t\"boxVR;\": \"\u2560\",\n\t\"boxVr;\": \"\u255F\",\n\t\"boxvR;\": \"\u255E\",\n\t\"boxvr;\": \"\u251C\",\n\t\"Breve;\": \"\u02D8\",\n\t\"breve;\": \"\u02D8\",\n\tbrvbar: \"\u00A6\",\n\t\"bsemi;\": \"\u204F\",\n\t\"bsime;\": \"\u22CD\",\n\t\"bsolb;\": \"\u29C5\",\n\t\"bumpE;\": \"\u2AAE\",\n\t\"bumpe;\": \"\u224F\",\n\t\"caret;\": \"\u2041\",\n\t\"caron;\": \"\u02C7\",\n\t\"ccaps;\": \"\u2A4D\",\n\tCcedil: \"\u00C7\",\n\tccedil: \"\u00E7\",\n\t\"Ccirc;\": \"\u0108\",\n\t\"ccirc;\": \"\u0109\",\n\t\"ccups;\": \"\u2A4C\",\n\t\"cedil;\": \"\u00B8\",\n\t\"check;\": \"\u2713\",\n\t\"clubs;\": \"\u2663\",\n\t\"Colon;\": \"\u2237\",\n\t\"colon;\": \":\",\n\t\"comma;\": \",\",\n\t\"crarr;\": \"\u21B5\",\n\t\"Cross;\": \"\u2A2F\",\n\t\"cross;\": \"\u2717\",\n\t\"csube;\": \"\u2AD1\",\n\t\"csupe;\": \"\u2AD2\",\n\t\"ctdot;\": \"\u22EF\",\n\t\"cuepr;\": \"\u22DE\",\n\t\"cuesc;\": \"\u22DF\",\n\t\"cupor;\": \"\u2A45\",\n\tcurren: \"\u00A4\",\n\t\"cuvee;\": \"\u22CE\",\n\t\"cuwed;\": \"\u22CF\",\n\t\"cwint;\": \"\u2231\",\n\t\"Dashv;\": \"\u2AE4\",\n\t\"dashv;\": \"\u22A3\",\n\t\"dblac;\": \"\u02DD\",\n\t\"ddarr;\": \"\u21CA\",\n\t\"Delta;\": \"\u0394\",\n\t\"delta;\": \"\u03B4\",\n\t\"dharl;\": \"\u21C3\",\n\t\"dharr;\": \"\u21C2\",\n\t\"diams;\": \"\u2666\",\n\t\"disin;\": \"\u22F2\",\n\tdivide: \"\u00F7\",\n\t\"doteq;\": \"\u2250\",\n\t\"dtdot;\": \"\u22F1\",\n\t\"dtrif;\": \"\u25BE\",\n\t\"duarr;\": \"\u21F5\",\n\t\"duhar;\": \"\u296F\",\n\tEacute: \"\u00C9\",\n\teacute: \"\u00E9\",\n\t\"Ecirc;\": \"\u00CA\",\n\t\"ecirc;\": \"\u00EA\",\n\t\"eDDot;\": \"\u2A77\",\n\t\"efDot;\": \"\u2252\",\n\tEgrave: \"\u00C8\",\n\tegrave: \"\u00E8\",\n\t\"Emacr;\": \"\u0112\",\n\t\"emacr;\": \"\u0113\",\n\t\"empty;\": \"\u2205\",\n\t\"Eogon;\": \"\u0118\",\n\t\"eogon;\": \"\u0119\",\n\t\"eplus;\": \"\u2A71\",\n\t\"epsiv;\": \"\u03F5\",\n\t\"eqsim;\": \"\u2242\",\n\t\"Equal;\": \"\u2A75\",\n\t\"equiv;\": \"\u2261\",\n\t\"erarr;\": \"\u2971\",\n\t\"erDot;\": \"\u2253\",\n\t\"esdot;\": \"\u2250\",\n\t\"exist;\": \"\u2203\",\n\t\"fflig;\": \"\uFB00\",\n\t\"filig;\": \"\uFB01\",\n\t\"fjlig;\": \"fj\",\n\t\"fllig;\": \"\uFB02\",\n\t\"fltns;\": \"\u25B1\",\n\t\"forkv;\": \"\u2AD9\",\n\tfrac12: \"\u00BD\",\n\tfrac14: \"\u00BC\",\n\tfrac34: \"\u00BE\",\n\t\"frasl;\": \"\u2044\",\n\t\"frown;\": \"\u2322\",\n\t\"Gamma;\": \"\u0393\",\n\t\"gamma;\": \"\u03B3\",\n\t\"Gcirc;\": \"\u011C\",\n\t\"gcirc;\": \"\u011D\",\n\t\"gescc;\": \"\u2AA9\",\n\t\"gimel;\": \"\u2137\",\n\t\"gneqq;\": \"\u2269\",\n\t\"gnsim;\": \"\u22E7\",\n\t\"grave;\": \"`\",\n\t\"gsime;\": \"\u2A8E\",\n\t\"gsiml;\": \"\u2A90\",\n\t\"gtcir;\": \"\u2A7A\",\n\t\"gtdot;\": \"\u22D7\",\n\t\"Hacek;\": \"\u02C7\",\n\t\"harrw;\": \"\u21AD\",\n\t\"Hcirc;\": \"\u0124\",\n\t\"hcirc;\": \"\u0125\",\n\t\"hoarr;\": \"\u21FF\",\n\tIacute: \"\u00CD\",\n\tiacute: \"\u00ED\",\n\t\"Icirc;\": \"\u00CE\",\n\t\"icirc;\": \"\u00EE\",\n\t\"iexcl;\": \"\u00A1\",\n\tIgrave: \"\u00CC\",\n\tigrave: \"\u00EC\",\n\t\"iiint;\": \"\u222D\",\n\t\"iiota;\": \"\u2129\",\n\t\"IJlig;\": \"\u0132\",\n\t\"ijlig;\": \"\u0133\",\n\t\"Imacr;\": \"\u012A\",\n\t\"imacr;\": \"\u012B\",\n\t\"image;\": \"\u2111\",\n\t\"imath;\": \"\u0131\",\n\t\"imped;\": \"\u01B5\",\n\t\"infin;\": \"\u221E\",\n\t\"Iogon;\": \"\u012E\",\n\t\"iogon;\": \"\u012F\",\n\t\"iprod;\": \"\u2A3C\",\n\tiquest: \"\u00BF\",\n\t\"isinE;\": \"\u22F9\",\n\t\"isins;\": \"\u22F4\",\n\t\"isinv;\": \"\u2208\",\n\t\"Iukcy;\": \"\u0406\",\n\t\"iukcy;\": \"\u0456\",\n\t\"Jcirc;\": \"\u0134\",\n\t\"jcirc;\": \"\u0135\",\n\t\"jmath;\": \"\u0237\",\n\t\"Jukcy;\": \"\u0404\",\n\t\"jukcy;\": \"\u0454\",\n\t\"Kappa;\": \"\u039A\",\n\t\"kappa;\": \"\u03BA\",\n\t\"lAarr;\": \"\u21DA\",\n\t\"langd;\": \"\u2991\",\n\t\"laquo;\": \"\u00AB\",\n\t\"larrb;\": \"\u21E4\",\n\t\"lates;\": \"\u2AAD\uFE00\",\n\t\"lBarr;\": \"\u290E\",\n\t\"lbarr;\": \"\u290C\",\n\t\"lbbrk;\": \"\u2772\",\n\t\"lbrke;\": \"\u298B\",\n\t\"lceil;\": \"\u2308\",\n\t\"ldquo;\": \"\u201C\",\n\t\"lescc;\": \"\u2AA8\",\n\t\"lhard;\": \"\u21BD\",\n\t\"lharu;\": \"\u21BC\",\n\t\"lhblk;\": \"\u2584\",\n\t\"llarr;\": \"\u21C7\",\n\t\"lltri;\": \"\u25FA\",\n\t\"lneqq;\": \"\u2268\",\n\t\"lnsim;\": \"\u22E6\",\n\t\"loang;\": \"\u27EC\",\n\t\"loarr;\": \"\u21FD\",\n\t\"lobrk;\": \"\u27E6\",\n\t\"lopar;\": \"\u2985\",\n\t\"lrarr;\": \"\u21C6\",\n\t\"lrhar;\": \"\u21CB\",\n\t\"lrtri;\": \"\u22BF\",\n\t\"lsime;\": \"\u2A8D\",\n\t\"lsimg;\": \"\u2A8F\",\n\t\"lsquo;\": \"\u2018\",\n\t\"ltcir;\": \"\u2A79\",\n\t\"ltdot;\": \"\u22D6\",\n\t\"ltrie;\": \"\u22B4\",\n\t\"ltrif;\": \"\u25C2\",\n\t\"mdash;\": \"\u2014\",\n\t\"mDDot;\": \"\u223A\",\n\t\"micro;\": \"\u00B5\",\n\tmiddot: \"\u00B7\",\n\t\"minus;\": \"\u2212\",\n\t\"mumap;\": \"\u22B8\",\n\t\"nabla;\": \"\u2207\",\n\t\"napid;\": \"\u224B\u0338\",\n\t\"napos;\": \"\u0149\",\n\t\"natur;\": \"\u266E\",\n\t\"nbump;\": \"\u224E\u0338\",\n\t\"ncong;\": \"\u2247\",\n\t\"ndash;\": \"\u2013\",\n\t\"neArr;\": \"\u21D7\",\n\t\"nearr;\": \"\u2197\",\n\t\"nedot;\": \"\u2250\u0338\",\n\t\"nesim;\": \"\u2242\u0338\",\n\t\"ngeqq;\": \"\u2267\u0338\",\n\t\"ngsim;\": \"\u2275\",\n\t\"nhArr;\": \"\u21CE\",\n\t\"nharr;\": \"\u21AE\",\n\t\"nhpar;\": \"\u2AF2\",\n\t\"nlArr;\": \"\u21CD\",\n\t\"nlarr;\": \"\u219A\",\n\t\"nleqq;\": \"\u2266\u0338\",\n\t\"nless;\": \"\u226E\",\n\t\"nlsim;\": \"\u2274\",\n\t\"nltri;\": \"\u22EA\",\n\t\"notin;\": \"\u2209\",\n\t\"notni;\": \"\u220C\",\n\t\"npart;\": \"\u2202\u0338\",\n\t\"nprec;\": \"\u2280\",\n\t\"nrArr;\": \"\u21CF\",\n\t\"nrarr;\": \"\u219B\",\n\t\"nrtri;\": \"\u22EB\",\n\t\"nsime;\": \"\u2244\",\n\t\"nsmid;\": \"\u2224\",\n\t\"nspar;\": \"\u2226\",\n\t\"nsubE;\": \"\u2AC5\u0338\",\n\t\"nsube;\": \"\u2288\",\n\t\"nsucc;\": \"\u2281\",\n\t\"nsupE;\": \"\u2AC6\u0338\",\n\t\"nsupe;\": \"\u2289\",\n\tNtilde: \"\u00D1\",\n\tntilde: \"\u00F1\",\n\t\"numsp;\": \"\u2007\",\n\t\"nvsim;\": \"\u223C\u20D2\",\n\t\"nwArr;\": \"\u21D6\",\n\t\"nwarr;\": \"\u2196\",\n\tOacute: \"\u00D3\",\n\toacute: \"\u00F3\",\n\t\"Ocirc;\": \"\u00D4\",\n\t\"ocirc;\": \"\u00F4\",\n\t\"odash;\": \"\u229D\",\n\t\"OElig;\": \"\u0152\",\n\t\"oelig;\": \"\u0153\",\n\t\"ofcir;\": \"\u29BF\",\n\tOgrave: \"\u00D2\",\n\tograve: \"\u00F2\",\n\t\"ohbar;\": \"\u29B5\",\n\t\"olarr;\": \"\u21BA\",\n\t\"olcir;\": \"\u29BE\",\n\t\"oline;\": \"\u203E\",\n\t\"Omacr;\": \"\u014C\",\n\t\"omacr;\": \"\u014D\",\n\t\"Omega;\": \"\u03A9\",\n\t\"omega;\": \"\u03C9\",\n\t\"operp;\": \"\u29B9\",\n\t\"oplus;\": \"\u2295\",\n\t\"orarr;\": \"\u21BB\",\n\t\"order;\": \"\u2134\",\n\tOslash: \"\u00D8\",\n\toslash: \"\u00F8\",\n\tOtilde: \"\u00D5\",\n\totilde: \"\u00F5\",\n\t\"ovbar;\": \"\u233D\",\n\t\"parsl;\": \"\u2AFD\",\n\t\"phone;\": \"\u260E\",\n\t\"plusb;\": \"\u229E\",\n\t\"pluse;\": \"\u2A72\",\n\tplusmn: \"\u00B1\",\n\t\"pound;\": \"\u00A3\",\n\t\"prcue;\": \"\u227C\",\n\t\"Prime;\": \"\u2033\",\n\t\"prime;\": \"\u2032\",\n\t\"prnap;\": \"\u2AB9\",\n\t\"prsim;\": \"\u227E\",\n\t\"quest;\": \"?\",\n\t\"rAarr;\": \"\u21DB\",\n\t\"radic;\": \"\u221A\",\n\t\"rangd;\": \"\u2992\",\n\t\"range;\": \"\u29A5\",\n\t\"raquo;\": \"\u00BB\",\n\t\"rarrb;\": \"\u21E5\",\n\t\"rarrc;\": \"\u2933\",\n\t\"rarrw;\": \"\u219D\",\n\t\"ratio;\": \"\u2236\",\n\t\"RBarr;\": \"\u2910\",\n\t\"rBarr;\": \"\u290F\",\n\t\"rbarr;\": \"\u290D\",\n\t\"rbbrk;\": \"\u2773\",\n\t\"rbrke;\": \"\u298C\",\n\t\"rceil;\": \"\u2309\",\n\t\"rdquo;\": \"\u201D\",\n\t\"reals;\": \"\u211D\",\n\t\"rhard;\": \"\u21C1\",\n\t\"rharu;\": \"\u21C0\",\n\t\"rlarr;\": \"\u21C4\",\n\t\"rlhar;\": \"\u21CC\",\n\t\"rnmid;\": \"\u2AEE\",\n\t\"roang;\": \"\u27ED\",\n\t\"roarr;\": \"\u21FE\",\n\t\"robrk;\": \"\u27E7\",\n\t\"ropar;\": \"\u2986\",\n\t\"rrarr;\": \"\u21C9\",\n\t\"rsquo;\": \"\u2019\",\n\t\"rtrie;\": \"\u22B5\",\n\t\"rtrif;\": \"\u25B8\",\n\t\"sbquo;\": \"\u201A\",\n\t\"sccue;\": \"\u227D\",\n\t\"Scirc;\": \"\u015C\",\n\t\"scirc;\": \"\u015D\",\n\t\"scnap;\": \"\u2ABA\",\n\t\"scsim;\": \"\u227F\",\n\t\"sdotb;\": \"\u22A1\",\n\t\"sdote;\": \"\u2A66\",\n\t\"seArr;\": \"\u21D8\",\n\t\"searr;\": \"\u2198\",\n\t\"setmn;\": \"\u2216\",\n\t\"sharp;\": \"\u266F\",\n\t\"Sigma;\": \"\u03A3\",\n\t\"sigma;\": \"\u03C3\",\n\t\"simeq;\": \"\u2243\",\n\t\"simgE;\": \"\u2AA0\",\n\t\"simlE;\": \"\u2A9F\",\n\t\"simne;\": \"\u2246\",\n\t\"slarr;\": \"\u2190\",\n\t\"smile;\": \"\u2323\",\n\t\"smtes;\": \"\u2AAC\uFE00\",\n\t\"sqcap;\": \"\u2293\",\n\t\"sqcup;\": \"\u2294\",\n\t\"sqsub;\": \"\u228F\",\n\t\"sqsup;\": \"\u2290\",\n\t\"srarr;\": \"\u2192\",\n\t\"starf;\": \"\u2605\",\n\t\"strns;\": \"\u00AF\",\n\t\"subnE;\": \"\u2ACB\",\n\t\"subne;\": \"\u228A\",\n\t\"supnE;\": \"\u2ACC\",\n\t\"supne;\": \"\u228B\",\n\t\"swArr;\": \"\u21D9\",\n\t\"swarr;\": \"\u2199\",\n\t\"szlig;\": \"\u00DF\",\n\t\"Theta;\": \"\u0398\",\n\t\"theta;\": \"\u03B8\",\n\t\"thkap;\": \"\u2248\",\n\t\"THORN;\": \"\u00DE\",\n\t\"thorn;\": \"\u00FE\",\n\t\"Tilde;\": \"\u223C\",\n\t\"tilde;\": \"\u02DC\",\n\t\"times;\": \"\u00D7\",\n\t\"TRADE;\": \"\u2122\",\n\t\"trade;\": \"\u2122\",\n\t\"trisb;\": \"\u29CD\",\n\t\"TSHcy;\": \"\u040B\",\n\t\"tshcy;\": \"\u045B\",\n\t\"twixt;\": \"\u226C\",\n\tUacute: \"\u00DA\",\n\tuacute: \"\u00FA\",\n\t\"Ubrcy;\": \"\u040E\",\n\t\"ubrcy;\": \"\u045E\",\n\t\"Ucirc;\": \"\u00DB\",\n\t\"ucirc;\": \"\u00FB\",\n\t\"udarr;\": \"\u21C5\",\n\t\"udhar;\": \"\u296E\",\n\tUgrave: \"\u00D9\",\n\tugrave: \"\u00F9\",\n\t\"uharl;\": \"\u21BF\",\n\t\"uharr;\": \"\u21BE\",\n\t\"uhblk;\": \"\u2580\",\n\t\"ultri;\": \"\u25F8\",\n\t\"Umacr;\": \"\u016A\",\n\t\"umacr;\": \"\u016B\",\n\t\"Union;\": \"\u22C3\",\n\t\"Uogon;\": \"\u0172\",\n\t\"uogon;\": \"\u0173\",\n\t\"uplus;\": \"\u228E\",\n\t\"upsih;\": \"\u03D2\",\n\t\"UpTee;\": \"\u22A5\",\n\t\"Uring;\": \"\u016E\",\n\t\"uring;\": \"\u016F\",\n\t\"urtri;\": \"\u25F9\",\n\t\"utdot;\": \"\u22F0\",\n\t\"utrif;\": \"\u25B4\",\n\t\"uuarr;\": \"\u21C8\",\n\t\"varpi;\": \"\u03D6\",\n\t\"vBarv;\": \"\u2AE9\",\n\t\"VDash;\": \"\u22AB\",\n\t\"Vdash;\": \"\u22A9\",\n\t\"vDash;\": \"\u22A8\",\n\t\"vdash;\": \"\u22A2\",\n\t\"veeeq;\": \"\u225A\",\n\t\"vltri;\": \"\u22B2\",\n\t\"vnsub;\": \"\u2282\u20D2\",\n\t\"vnsup;\": \"\u2283\u20D2\",\n\t\"vprop;\": \"\u221D\",\n\t\"vrtri;\": \"\u22B3\",\n\t\"Wcirc;\": \"\u0174\",\n\t\"wcirc;\": \"\u0175\",\n\t\"Wedge;\": \"\u22C0\",\n\t\"wedge;\": \"\u2227\",\n\t\"xcirc;\": \"\u25EF\",\n\t\"xdtri;\": \"\u25BD\",\n\t\"xhArr;\": \"\u27FA\",\n\t\"xharr;\": \"\u27F7\",\n\t\"xlArr;\": \"\u27F8\",\n\t\"xlarr;\": \"\u27F5\",\n\t\"xodot;\": \"\u2A00\",\n\t\"xrArr;\": \"\u27F9\",\n\t\"xrarr;\": \"\u27F6\",\n\t\"xutri;\": \"\u25B3\",\n\tYacute: \"\u00DD\",\n\tyacute: \"\u00FD\",\n\t\"Ycirc;\": \"\u0176\",\n\t\"ycirc;\": \"\u0177\",\n\t\"Aacute;\": \"\u00C1\",\n\t\"aacute;\": \"\u00E1\",\n\t\"Abreve;\": \"\u0102\",\n\t\"abreve;\": \"\u0103\",\n\t\"Agrave;\": \"\u00C0\",\n\t\"agrave;\": \"\u00E0\",\n\t\"andand;\": \"\u2A55\",\n\t\"angmsd;\": \"\u2221\",\n\t\"angsph;\": \"\u2222\",\n\t\"apacir;\": \"\u2A6F\",\n\t\"approx;\": \"\u2248\",\n\t\"Assign;\": \"\u2254\",\n\t\"Atilde;\": \"\u00C3\",\n\t\"atilde;\": \"\u00E3\",\n\t\"barvee;\": \"\u22BD\",\n\t\"Barwed;\": \"\u2306\",\n\t\"barwed;\": \"\u2305\",\n\t\"becaus;\": \"\u2235\",\n\t\"bernou;\": \"\u212C\",\n\t\"bigcap;\": \"\u22C2\",\n\t\"bigcup;\": \"\u22C3\",\n\t\"bigvee;\": \"\u22C1\",\n\t\"bkarow;\": \"\u290D\",\n\t\"bottom;\": \"\u22A5\",\n\t\"bowtie;\": \"\u22C8\",\n\t\"boxbox;\": \"\u29C9\",\n\t\"bprime;\": \"\u2035\",\n\t\"brvbar;\": \"\u00A6\",\n\t\"bullet;\": \"\u2022\",\n\t\"Bumpeq;\": \"\u224E\",\n\t\"bumpeq;\": \"\u224F\",\n\t\"Cacute;\": \"\u0106\",\n\t\"cacute;\": \"\u0107\",\n\t\"capand;\": \"\u2A44\",\n\t\"capcap;\": \"\u2A4B\",\n\t\"capcup;\": \"\u2A47\",\n\t\"capdot;\": \"\u2A40\",\n\t\"Ccaron;\": \"\u010C\",\n\t\"ccaron;\": \"\u010D\",\n\t\"Ccedil;\": \"\u00C7\",\n\t\"ccedil;\": \"\u00E7\",\n\t\"circeq;\": \"\u2257\",\n\t\"cirmid;\": \"\u2AEF\",\n\t\"Colone;\": \"\u2A74\",\n\t\"colone;\": \"\u2254\",\n\t\"commat;\": \"@\",\n\t\"compfn;\": \"\u2218\",\n\t\"Conint;\": \"\u222F\",\n\t\"conint;\": \"\u222E\",\n\t\"coprod;\": \"\u2210\",\n\t\"copysr;\": \"\u2117\",\n\t\"cularr;\": \"\u21B6\",\n\t\"CupCap;\": \"\u224D\",\n\t\"cupcap;\": \"\u2A46\",\n\t\"cupcup;\": \"\u2A4A\",\n\t\"cupdot;\": \"\u228D\",\n\t\"curarr;\": \"\u21B7\",\n\t\"curren;\": \"\u00A4\",\n\t\"cylcty;\": \"\u232D\",\n\t\"Dagger;\": \"\u2021\",\n\t\"dagger;\": \"\u2020\",\n\t\"daleth;\": \"\u2138\",\n\t\"Dcaron;\": \"\u010E\",\n\t\"dcaron;\": \"\u010F\",\n\t\"dfisht;\": \"\u297F\",\n\t\"divide;\": \"\u00F7\",\n\t\"divonx;\": \"\u22C7\",\n\t\"dlcorn;\": \"\u231E\",\n\t\"dlcrop;\": \"\u230D\",\n\t\"dollar;\": \"$\",\n\t\"DotDot;\": \"\u20DC\",\n\t\"drcorn;\": \"\u231F\",\n\t\"drcrop;\": \"\u230C\",\n\t\"Dstrok;\": \"\u0110\",\n\t\"dstrok;\": \"\u0111\",\n\t\"Eacute;\": \"\u00C9\",\n\t\"eacute;\": \"\u00E9\",\n\t\"easter;\": \"\u2A6E\",\n\t\"Ecaron;\": \"\u011A\",\n\t\"ecaron;\": \"\u011B\",\n\t\"ecolon;\": \"\u2255\",\n\t\"Egrave;\": \"\u00C8\",\n\t\"egrave;\": \"\u00E8\",\n\t\"egsdot;\": \"\u2A98\",\n\t\"elsdot;\": \"\u2A97\",\n\t\"emptyv;\": \"\u2205\",\n\t\"emsp13;\": \"\u2004\",\n\t\"emsp14;\": \"\u2005\",\n\t\"eparsl;\": \"\u29E3\",\n\t\"eqcirc;\": \"\u2256\",\n\t\"equals;\": \"=\",\n\t\"equest;\": \"\u225F\",\n\t\"Exists;\": \"\u2203\",\n\t\"female;\": \"\u2640\",\n\t\"ffilig;\": \"\uFB03\",\n\t\"ffllig;\": \"\uFB04\",\n\t\"ForAll;\": \"\u2200\",\n\t\"forall;\": \"\u2200\",\n\t\"frac12;\": \"\u00BD\",\n\t\"frac13;\": \"\u2153\",\n\t\"frac14;\": \"\u00BC\",\n\t\"frac15;\": \"\u2155\",\n\t\"frac16;\": \"\u2159\",\n\t\"frac18;\": \"\u215B\",\n\t\"frac23;\": \"\u2154\",\n\t\"frac25;\": \"\u2156\",\n\t\"frac34;\": \"\u00BE\",\n\t\"frac35;\": \"\u2157\",\n\t\"frac38;\": \"\u215C\",\n\t\"frac45;\": \"\u2158\",\n\t\"frac56;\": \"\u215A\",\n\t\"frac58;\": \"\u215D\",\n\t\"frac78;\": \"\u215E\",\n\t\"gacute;\": \"\u01F5\",\n\t\"Gammad;\": \"\u03DC\",\n\t\"gammad;\": \"\u03DD\",\n\t\"Gbreve;\": \"\u011E\",\n\t\"gbreve;\": \"\u011F\",\n\t\"Gcedil;\": \"\u0122\",\n\t\"gesdot;\": \"\u2A80\",\n\t\"gesles;\": \"\u2A94\",\n\t\"gtlPar;\": \"\u2995\",\n\t\"gtrarr;\": \"\u2978\",\n\t\"gtrdot;\": \"\u22D7\",\n\t\"gtrsim;\": \"\u2273\",\n\t\"hairsp;\": \"\u200A\",\n\t\"hamilt;\": \"\u210B\",\n\t\"HARDcy;\": \"\u042A\",\n\t\"hardcy;\": \"\u044A\",\n\t\"hearts;\": \"\u2665\",\n\t\"hellip;\": \"\u2026\",\n\t\"hercon;\": \"\u22B9\",\n\t\"homtht;\": \"\u223B\",\n\t\"horbar;\": \"\u2015\",\n\t\"hslash;\": \"\u210F\",\n\t\"Hstrok;\": \"\u0126\",\n\t\"hstrok;\": \"\u0127\",\n\t\"hybull;\": \"\u2043\",\n\t\"hyphen;\": \"\u2010\",\n\t\"Iacute;\": \"\u00CD\",\n\t\"iacute;\": \"\u00ED\",\n\t\"Igrave;\": \"\u00CC\",\n\t\"igrave;\": \"\u00EC\",\n\t\"iiiint;\": \"\u2A0C\",\n\t\"iinfin;\": \"\u29DC\",\n\t\"incare;\": \"\u2105\",\n\t\"inodot;\": \"\u0131\",\n\t\"intcal;\": \"\u22BA\",\n\t\"iquest;\": \"\u00BF\",\n\t\"isinsv;\": \"\u22F3\",\n\t\"Itilde;\": \"\u0128\",\n\t\"itilde;\": \"\u0129\",\n\t\"Jsercy;\": \"\u0408\",\n\t\"jsercy;\": \"\u0458\",\n\t\"kappav;\": \"\u03F0\",\n\t\"Kcedil;\": \"\u0136\",\n\t\"kcedil;\": \"\u0137\",\n\t\"kgreen;\": \"\u0138\",\n\t\"Lacute;\": \"\u0139\",\n\t\"lacute;\": \"\u013A\",\n\t\"lagran;\": \"\u2112\",\n\t\"Lambda;\": \"\u039B\",\n\t\"lambda;\": \"\u03BB\",\n\t\"langle;\": \"\u27E8\",\n\t\"larrfs;\": \"\u291D\",\n\t\"larrhk;\": \"\u21A9\",\n\t\"larrlp;\": \"\u21AB\",\n\t\"larrpl;\": \"\u2939\",\n\t\"larrtl;\": \"\u21A2\",\n\t\"lAtail;\": \"\u291B\",\n\t\"latail;\": \"\u2919\",\n\t\"lbrace;\": \"{\",\n\t\"lbrack;\": \"[\",\n\t\"Lcaron;\": \"\u013D\",\n\t\"lcaron;\": \"\u013E\",\n\t\"Lcedil;\": \"\u013B\",\n\t\"lcedil;\": \"\u013C\",\n\t\"ldquor;\": \"\u201E\",\n\t\"lesdot;\": \"\u2A7F\",\n\t\"lesges;\": \"\u2A93\",\n\t\"lfisht;\": \"\u297C\",\n\t\"lfloor;\": \"\u230A\",\n\t\"lharul;\": \"\u296A\",\n\t\"llhard;\": \"\u296B\",\n\t\"Lmidot;\": \"\u013F\",\n\t\"lmidot;\": \"\u0140\",\n\t\"lmoust;\": \"\u23B0\",\n\t\"loplus;\": \"\u2A2D\",\n\t\"lowast;\": \"\u2217\",\n\t\"lowbar;\": \"_\",\n\t\"lparlt;\": \"\u2993\",\n\t\"lrhard;\": \"\u296D\",\n\t\"lsaquo;\": \"\u2039\",\n\t\"lsquor;\": \"\u201A\",\n\t\"Lstrok;\": \"\u0141\",\n\t\"lstrok;\": \"\u0142\",\n\t\"lthree;\": \"\u22CB\",\n\t\"ltimes;\": \"\u22C9\",\n\t\"ltlarr;\": \"\u2976\",\n\t\"ltrPar;\": \"\u2996\",\n\t\"mapsto;\": \"\u21A6\",\n\t\"marker;\": \"\u25AE\",\n\t\"mcomma;\": \"\u2A29\",\n\t\"midast;\": \"*\",\n\t\"midcir;\": \"\u2AF0\",\n\t\"middot;\": \"\u00B7\",\n\t\"minusb;\": \"\u229F\",\n\t\"minusd;\": \"\u2238\",\n\t\"mnplus;\": \"\u2213\",\n\t\"models;\": \"\u22A7\",\n\t\"mstpos;\": \"\u223E\",\n\t\"Nacute;\": \"\u0143\",\n\t\"nacute;\": \"\u0144\",\n\t\"nbumpe;\": \"\u224F\u0338\",\n\t\"Ncaron;\": \"\u0147\",\n\t\"ncaron;\": \"\u0148\",\n\t\"Ncedil;\": \"\u0145\",\n\t\"ncedil;\": \"\u0146\",\n\t\"nearhk;\": \"\u2924\",\n\t\"nequiv;\": \"\u2262\",\n\t\"nesear;\": \"\u2928\",\n\t\"nexist;\": \"\u2204\",\n\t\"nltrie;\": \"\u22EC\",\n\t\"notinE;\": \"\u22F9\u0338\",\n\t\"nparsl;\": \"\u2AFD\u20E5\",\n\t\"nprcue;\": \"\u22E0\",\n\t\"nrarrc;\": \"\u2933\u0338\",\n\t\"nrarrw;\": \"\u219D\u0338\",\n\t\"nrtrie;\": \"\u22ED\",\n\t\"nsccue;\": \"\u22E1\",\n\t\"nsimeq;\": \"\u2244\",\n\t\"Ntilde;\": \"\u00D1\",\n\t\"ntilde;\": \"\u00F1\",\n\t\"numero;\": \"\u2116\",\n\t\"nVDash;\": \"\u22AF\",\n\t\"nVdash;\": \"\u22AE\",\n\t\"nvDash;\": \"\u22AD\",\n\t\"nvdash;\": \"\u22AC\",\n\t\"nvHarr;\": \"\u2904\",\n\t\"nvlArr;\": \"\u2902\",\n\t\"nvrArr;\": \"\u2903\",\n\t\"nwarhk;\": \"\u2923\",\n\t\"nwnear;\": \"\u2927\",\n\t\"Oacute;\": \"\u00D3\",\n\t\"oacute;\": \"\u00F3\",\n\t\"Odblac;\": \"\u0150\",\n\t\"odblac;\": \"\u0151\",\n\t\"odsold;\": \"\u29BC\",\n\t\"Ograve;\": \"\u00D2\",\n\t\"ograve;\": \"\u00F2\",\n\t\"ominus;\": \"\u2296\",\n\t\"origof;\": \"\u22B6\",\n\t\"Oslash;\": \"\u00D8\",\n\t\"oslash;\": \"\u00F8\",\n\t\"Otilde;\": \"\u00D5\",\n\t\"otilde;\": \"\u00F5\",\n\t\"Otimes;\": \"\u2A37\",\n\t\"otimes;\": \"\u2297\",\n\t\"parsim;\": \"\u2AF3\",\n\t\"percnt;\": \"%\",\n\t\"period;\": \".\",\n\t\"permil;\": \"\u2030\",\n\t\"phmmat;\": \"\u2133\",\n\t\"planck;\": \"\u210F\",\n\t\"plankv;\": \"\u210F\",\n\t\"plusdo;\": \"\u2214\",\n\t\"plusdu;\": \"\u2A25\",\n\t\"plusmn;\": \"\u00B1\",\n\t\"preceq;\": \"\u2AAF\",\n\t\"primes;\": \"\u2119\",\n\t\"prnsim;\": \"\u22E8\",\n\t\"propto;\": \"\u221D\",\n\t\"prurel;\": \"\u22B0\",\n\t\"puncsp;\": \"\u2008\",\n\t\"qprime;\": \"\u2057\",\n\t\"Racute;\": \"\u0154\",\n\t\"racute;\": \"\u0155\",\n\t\"rangle;\": \"\u27E9\",\n\t\"rarrap;\": \"\u2975\",\n\t\"rarrfs;\": \"\u291E\",\n\t\"rarrhk;\": \"\u21AA\",\n\t\"rarrlp;\": \"\u21AC\",\n\t\"rarrpl;\": \"\u2945\",\n\t\"Rarrtl;\": \"\u2916\",\n\t\"rarrtl;\": \"\u21A3\",\n\t\"rAtail;\": \"\u291C\",\n\t\"ratail;\": \"\u291A\",\n\t\"rbrace;\": \"}\",\n\t\"rbrack;\": \"]\",\n\t\"Rcaron;\": \"\u0158\",\n\t\"rcaron;\": \"\u0159\",\n\t\"Rcedil;\": \"\u0156\",\n\t\"rcedil;\": \"\u0157\",\n\t\"rdquor;\": \"\u201D\",\n\t\"rfisht;\": \"\u297D\",\n\t\"rfloor;\": \"\u230B\",\n\t\"rharul;\": \"\u296C\",\n\t\"rmoust;\": \"\u23B1\",\n\t\"roplus;\": \"\u2A2E\",\n\t\"rpargt;\": \"\u2994\",\n\t\"rsaquo;\": \"\u203A\",\n\t\"rsquor;\": \"\u2019\",\n\t\"rthree;\": \"\u22CC\",\n\t\"rtimes;\": \"\u22CA\",\n\t\"Sacute;\": \"\u015A\",\n\t\"sacute;\": \"\u015B\",\n\t\"Scaron;\": \"\u0160\",\n\t\"scaron;\": \"\u0161\",\n\t\"Scedil;\": \"\u015E\",\n\t\"scedil;\": \"\u015F\",\n\t\"scnsim;\": \"\u22E9\",\n\t\"searhk;\": \"\u2925\",\n\t\"seswar;\": \"\u2929\",\n\t\"sfrown;\": \"\u2322\",\n\t\"SHCHcy;\": \"\u0429\",\n\t\"shchcy;\": \"\u0449\",\n\t\"sigmaf;\": \"\u03C2\",\n\t\"sigmav;\": \"\u03C2\",\n\t\"simdot;\": \"\u2A6A\",\n\t\"smashp;\": \"\u2A33\",\n\t\"SOFTcy;\": \"\u042C\",\n\t\"softcy;\": \"\u044C\",\n\t\"solbar;\": \"\u233F\",\n\t\"spades;\": \"\u2660\",\n\t\"sqcaps;\": \"\u2293\uFE00\",\n\t\"sqcups;\": \"\u2294\uFE00\",\n\t\"sqsube;\": \"\u2291\",\n\t\"sqsupe;\": \"\u2292\",\n\t\"Square;\": \"\u25A1\",\n\t\"square;\": \"\u25A1\",\n\t\"squarf;\": \"\u25AA\",\n\t\"ssetmn;\": \"\u2216\",\n\t\"ssmile;\": \"\u2323\",\n\t\"sstarf;\": \"\u22C6\",\n\t\"subdot;\": \"\u2ABD\",\n\t\"Subset;\": \"\u22D0\",\n\t\"subset;\": \"\u2282\",\n\t\"subsim;\": \"\u2AC7\",\n\t\"subsub;\": \"\u2AD5\",\n\t\"subsup;\": \"\u2AD3\",\n\t\"succeq;\": \"\u2AB0\",\n\t\"supdot;\": \"\u2ABE\",\n\t\"Supset;\": \"\u22D1\",\n\t\"supset;\": \"\u2283\",\n\t\"supsim;\": \"\u2AC8\",\n\t\"supsub;\": \"\u2AD4\",\n\t\"supsup;\": \"\u2AD6\",\n\t\"swarhk;\": \"\u2926\",\n\t\"swnwar;\": \"\u292A\",\n\t\"target;\": \"\u2316\",\n\t\"Tcaron;\": \"\u0164\",\n\t\"tcaron;\": \"\u0165\",\n\t\"Tcedil;\": \"\u0162\",\n\t\"tcedil;\": \"\u0163\",\n\t\"telrec;\": \"\u2315\",\n\t\"there4;\": \"\u2234\",\n\t\"thetav;\": \"\u03D1\",\n\t\"thinsp;\": \"\u2009\",\n\t\"thksim;\": \"\u223C\",\n\t\"timesb;\": \"\u22A0\",\n\t\"timesd;\": \"\u2A30\",\n\t\"topbot;\": \"\u2336\",\n\t\"topcir;\": \"\u2AF1\",\n\t\"tprime;\": \"\u2034\",\n\t\"tridot;\": \"\u25EC\",\n\t\"Tstrok;\": \"\u0166\",\n\t\"tstrok;\": \"\u0167\",\n\t\"Uacute;\": \"\u00DA\",\n\t\"uacute;\": \"\u00FA\",\n\t\"Ubreve;\": \"\u016C\",\n\t\"ubreve;\": \"\u016D\",\n\t\"Udblac;\": \"\u0170\",\n\t\"udblac;\": \"\u0171\",\n\t\"ufisht;\": \"\u297E\",\n\t\"Ugrave;\": \"\u00D9\",\n\t\"ugrave;\": \"\u00F9\",\n\t\"ulcorn;\": \"\u231C\",\n\t\"ulcrop;\": \"\u230F\",\n\t\"urcorn;\": \"\u231D\",\n\t\"urcrop;\": \"\u230E\",\n\t\"Utilde;\": \"\u0168\",\n\t\"utilde;\": \"\u0169\",\n\t\"vangrt;\": \"\u299C\",\n\t\"varphi;\": \"\u03D5\",\n\t\"varrho;\": \"\u03F1\",\n\t\"Vdashl;\": \"\u2AE6\",\n\t\"veebar;\": \"\u22BB\",\n\t\"vellip;\": \"\u22EE\",\n\t\"Verbar;\": \"\u2016\",\n\t\"verbar;\": \"|\",\n\t\"vsubnE;\": \"\u2ACB\uFE00\",\n\t\"vsubne;\": \"\u228A\uFE00\",\n\t\"vsupnE;\": \"\u2ACC\uFE00\",\n\t\"vsupne;\": \"\u228B\uFE00\",\n\t\"Vvdash;\": \"\u22AA\",\n\t\"wedbar;\": \"\u2A5F\",\n\t\"wedgeq;\": \"\u2259\",\n\t\"weierp;\": \"\u2118\",\n\t\"wreath;\": \"\u2240\",\n\t\"xoplus;\": \"\u2A01\",\n\t\"xotime;\": \"\u2A02\",\n\t\"xsqcup;\": \"\u2A06\",\n\t\"xuplus;\": \"\u2A04\",\n\t\"xwedge;\": \"\u22C0\",\n\t\"Yacute;\": \"\u00DD\",\n\t\"yacute;\": \"\u00FD\",\n\t\"Zacute;\": \"\u0179\",\n\t\"zacute;\": \"\u017A\",\n\t\"Zcaron;\": \"\u017D\",\n\t\"zcaron;\": \"\u017E\",\n\t\"zeetrf;\": \"\u2128\",\n\t\"alefsym;\": \"\u2135\",\n\t\"angrtvb;\": \"\u22BE\",\n\t\"angzarr;\": \"\u237C\",\n\t\"asympeq;\": \"\u224D\",\n\t\"backsim;\": \"\u223D\",\n\t\"Because;\": \"\u2235\",\n\t\"because;\": \"\u2235\",\n\t\"bemptyv;\": \"\u29B0\",\n\t\"between;\": \"\u226C\",\n\t\"bigcirc;\": \"\u25EF\",\n\t\"bigodot;\": \"\u2A00\",\n\t\"bigstar;\": \"\u2605\",\n\t\"bnequiv;\": \"\u2261\u20E5\",\n\t\"boxplus;\": \"\u229E\",\n\t\"Cayleys;\": \"\u212D\",\n\t\"Cconint;\": \"\u2230\",\n\t\"ccupssm;\": \"\u2A50\",\n\t\"Cedilla;\": \"\u00B8\",\n\t\"cemptyv;\": \"\u29B2\",\n\t\"cirscir;\": \"\u29C2\",\n\t\"coloneq;\": \"\u2254\",\n\t\"congdot;\": \"\u2A6D\",\n\t\"cudarrl;\": \"\u2938\",\n\t\"cudarrr;\": \"\u2935\",\n\t\"cularrp;\": \"\u293D\",\n\t\"curarrm;\": \"\u293C\",\n\t\"dbkarow;\": \"\u290F\",\n\t\"ddagger;\": \"\u2021\",\n\t\"ddotseq;\": \"\u2A77\",\n\t\"demptyv;\": \"\u29B1\",\n\t\"Diamond;\": \"\u22C4\",\n\t\"diamond;\": \"\u22C4\",\n\t\"digamma;\": \"\u03DD\",\n\t\"dotplus;\": \"\u2214\",\n\t\"DownTee;\": \"\u22A4\",\n\t\"dwangle;\": \"\u29A6\",\n\t\"Element;\": \"\u2208\",\n\t\"Epsilon;\": \"\u0395\",\n\t\"epsilon;\": \"\u03B5\",\n\t\"eqcolon;\": \"\u2255\",\n\t\"equivDD;\": \"\u2A78\",\n\t\"gesdoto;\": \"\u2A82\",\n\t\"gtquest;\": \"\u2A7C\",\n\t\"gtrless;\": \"\u2277\",\n\t\"harrcir;\": \"\u2948\",\n\t\"Implies;\": \"\u21D2\",\n\t\"intprod;\": \"\u2A3C\",\n\t\"isindot;\": \"\u22F5\",\n\t\"larrbfs;\": \"\u291F\",\n\t\"larrsim;\": \"\u2973\",\n\t\"lbrksld;\": \"\u298F\",\n\t\"lbrkslu;\": \"\u298D\",\n\t\"ldrdhar;\": \"\u2967\",\n\t\"LeftTee;\": \"\u22A3\",\n\t\"lesdoto;\": \"\u2A81\",\n\t\"lessdot;\": \"\u22D6\",\n\t\"lessgtr;\": \"\u2276\",\n\t\"lesssim;\": \"\u2272\",\n\t\"lotimes;\": \"\u2A34\",\n\t\"lozenge;\": \"\u25CA\",\n\t\"ltquest;\": \"\u2A7B\",\n\t\"luruhar;\": \"\u2966\",\n\t\"maltese;\": \"\u2720\",\n\t\"minusdu;\": \"\u2A2A\",\n\t\"napprox;\": \"\u2249\",\n\t\"natural;\": \"\u266E\",\n\t\"nearrow;\": \"\u2197\",\n\t\"NewLine;\": \"\\n\",\n\t\"nexists;\": \"\u2204\",\n\t\"NoBreak;\": \"\u2060\",\n\t\"notinva;\": \"\u2209\",\n\t\"notinvb;\": \"\u22F7\",\n\t\"notinvc;\": \"\u22F6\",\n\t\"NotLess;\": \"\u226E\",\n\t\"notniva;\": \"\u220C\",\n\t\"notnivb;\": \"\u22FE\",\n\t\"notnivc;\": \"\u22FD\",\n\t\"npolint;\": \"\u2A14\",\n\t\"npreceq;\": \"\u2AAF\u0338\",\n\t\"nsqsube;\": \"\u22E2\",\n\t\"nsqsupe;\": \"\u22E3\",\n\t\"nsubset;\": \"\u2282\u20D2\",\n\t\"nsucceq;\": \"\u2AB0\u0338\",\n\t\"nsupset;\": \"\u2283\u20D2\",\n\t\"nvinfin;\": \"\u29DE\",\n\t\"nvltrie;\": \"\u22B4\u20D2\",\n\t\"nvrtrie;\": \"\u22B5\u20D2\",\n\t\"nwarrow;\": \"\u2196\",\n\t\"olcross;\": \"\u29BB\",\n\t\"Omicron;\": \"\u039F\",\n\t\"omicron;\": \"\u03BF\",\n\t\"orderof;\": \"\u2134\",\n\t\"orslope;\": \"\u2A57\",\n\t\"OverBar;\": \"\u203E\",\n\t\"pertenk;\": \"\u2031\",\n\t\"planckh;\": \"\u210E\",\n\t\"pluscir;\": \"\u2A22\",\n\t\"plussim;\": \"\u2A26\",\n\t\"plustwo;\": \"\u2A27\",\n\t\"precsim;\": \"\u227E\",\n\t\"Product;\": \"\u220F\",\n\t\"quatint;\": \"\u2A16\",\n\t\"questeq;\": \"\u225F\",\n\t\"rarrbfs;\": \"\u2920\",\n\t\"rarrsim;\": \"\u2974\",\n\t\"rbrksld;\": \"\u298E\",\n\t\"rbrkslu;\": \"\u2990\",\n\t\"rdldhar;\": \"\u2969\",\n\t\"realine;\": \"\u211B\",\n\t\"rotimes;\": \"\u2A35\",\n\t\"ruluhar;\": \"\u2968\",\n\t\"searrow;\": \"\u2198\",\n\t\"simplus;\": \"\u2A24\",\n\t\"simrarr;\": \"\u2972\",\n\t\"subedot;\": \"\u2AC3\",\n\t\"submult;\": \"\u2AC1\",\n\t\"subplus;\": \"\u2ABF\",\n\t\"subrarr;\": \"\u2979\",\n\t\"succsim;\": \"\u227F\",\n\t\"supdsub;\": \"\u2AD8\",\n\t\"supedot;\": \"\u2AC4\",\n\t\"suphsol;\": \"\u27C9\",\n\t\"suphsub;\": \"\u2AD7\",\n\t\"suplarr;\": \"\u297B\",\n\t\"supmult;\": \"\u2AC2\",\n\t\"supplus;\": \"\u2AC0\",\n\t\"swarrow;\": \"\u2199\",\n\t\"topfork;\": \"\u2ADA\",\n\t\"triplus;\": \"\u2A39\",\n\t\"tritime;\": \"\u2A3B\",\n\t\"UpArrow;\": \"\u2191\",\n\t\"Uparrow;\": \"\u21D1\",\n\t\"uparrow;\": \"\u2191\",\n\t\"Upsilon;\": \"\u03A5\",\n\t\"upsilon;\": \"\u03C5\",\n\t\"uwangle;\": \"\u29A7\",\n\t\"vzigzag;\": \"\u299A\",\n\t\"zigrarr;\": \"\u21DD\",\n\t\"andslope;\": \"\u2A58\",\n\t\"angmsdaa;\": \"\u29A8\",\n\t\"angmsdab;\": \"\u29A9\",\n\t\"angmsdac;\": \"\u29AA\",\n\t\"angmsdad;\": \"\u29AB\",\n\t\"angmsdae;\": \"\u29AC\",\n\t\"angmsdaf;\": \"\u29AD\",\n\t\"angmsdag;\": \"\u29AE\",\n\t\"angmsdah;\": \"\u29AF\",\n\t\"angrtvbd;\": \"\u299D\",\n\t\"approxeq;\": \"\u224A\",\n\t\"awconint;\": \"\u2233\",\n\t\"backcong;\": \"\u224C\",\n\t\"barwedge;\": \"\u2305\",\n\t\"bbrktbrk;\": \"\u23B6\",\n\t\"bigoplus;\": \"\u2A01\",\n\t\"bigsqcup;\": \"\u2A06\",\n\t\"biguplus;\": \"\u2A04\",\n\t\"bigwedge;\": \"\u22C0\",\n\t\"boxminus;\": \"\u229F\",\n\t\"boxtimes;\": \"\u22A0\",\n\t\"bsolhsub;\": \"\u27C8\",\n\t\"capbrcup;\": \"\u2A49\",\n\t\"circledR;\": \"\u00AE\",\n\t\"circledS;\": \"\u24C8\",\n\t\"cirfnint;\": \"\u2A10\",\n\t\"clubsuit;\": \"\u2663\",\n\t\"cupbrcap;\": \"\u2A48\",\n\t\"curlyvee;\": \"\u22CE\",\n\t\"cwconint;\": \"\u2232\",\n\t\"DDotrahd;\": \"\u2911\",\n\t\"doteqdot;\": \"\u2251\",\n\t\"DotEqual;\": \"\u2250\",\n\t\"dotminus;\": \"\u2238\",\n\t\"drbkarow;\": \"\u2910\",\n\t\"dzigrarr;\": \"\u27FF\",\n\t\"elinters;\": \"\u23E7\",\n\t\"emptyset;\": \"\u2205\",\n\t\"eqvparsl;\": \"\u29E5\",\n\t\"fpartint;\": \"\u2A0D\",\n\t\"geqslant;\": \"\u2A7E\",\n\t\"gesdotol;\": \"\u2A84\",\n\t\"gnapprox;\": \"\u2A8A\",\n\t\"hksearow;\": \"\u2925\",\n\t\"hkswarow;\": \"\u2926\",\n\t\"imagline;\": \"\u2110\",\n\t\"imagpart;\": \"\u2111\",\n\t\"infintie;\": \"\u29DD\",\n\t\"integers;\": \"\u2124\",\n\t\"Integral;\": \"\u222B\",\n\t\"intercal;\": \"\u22BA\",\n\t\"intlarhk;\": \"\u2A17\",\n\t\"laemptyv;\": \"\u29B4\",\n\t\"ldrushar;\": \"\u294B\",\n\t\"leqslant;\": \"\u2A7D\",\n\t\"lesdotor;\": \"\u2A83\",\n\t\"LessLess;\": \"\u2AA1\",\n\t\"llcorner;\": \"\u231E\",\n\t\"lnapprox;\": \"\u2A89\",\n\t\"lrcorner;\": \"\u231F\",\n\t\"lurdshar;\": \"\u294A\",\n\t\"mapstoup;\": \"\u21A5\",\n\t\"multimap;\": \"\u22B8\",\n\t\"naturals;\": \"\u2115\",\n\t\"ncongdot;\": \"\u2A6D\u0338\",\n\t\"NotEqual;\": \"\u2260\",\n\t\"notindot;\": \"\u22F5\u0338\",\n\t\"NotTilde;\": \"\u2241\",\n\t\"otimesas;\": \"\u2A36\",\n\t\"parallel;\": \"\u2225\",\n\t\"PartialD;\": \"\u2202\",\n\t\"plusacir;\": \"\u2A23\",\n\t\"pointint;\": \"\u2A15\",\n\t\"Precedes;\": \"\u227A\",\n\t\"precneqq;\": \"\u2AB5\",\n\t\"precnsim;\": \"\u22E8\",\n\t\"profalar;\": \"\u232E\",\n\t\"profline;\": \"\u2312\",\n\t\"profsurf;\": \"\u2313\",\n\t\"raemptyv;\": \"\u29B3\",\n\t\"realpart;\": \"\u211C\",\n\t\"RightTee;\": \"\u22A2\",\n\t\"rppolint;\": \"\u2A12\",\n\t\"rtriltri;\": \"\u29CE\",\n\t\"scpolint;\": \"\u2A13\",\n\t\"setminus;\": \"\u2216\",\n\t\"shortmid;\": \"\u2223\",\n\t\"smeparsl;\": \"\u29E4\",\n\t\"sqsubset;\": \"\u228F\",\n\t\"sqsupset;\": \"\u2290\",\n\t\"subseteq;\": \"\u2286\",\n\t\"Succeeds;\": \"\u227B\",\n\t\"succneqq;\": \"\u2AB6\",\n\t\"succnsim;\": \"\u22E9\",\n\t\"SuchThat;\": \"\u220B\",\n\t\"Superset;\": \"\u2283\",\n\t\"supseteq;\": \"\u2287\",\n\t\"thetasym;\": \"\u03D1\",\n\t\"thicksim;\": \"\u223C\",\n\t\"timesbar;\": \"\u2A31\",\n\t\"triangle;\": \"\u25B5\",\n\t\"triminus;\": \"\u2A3A\",\n\t\"trpezium;\": \"\u23E2\",\n\t\"Uarrocir;\": \"\u2949\",\n\t\"ulcorner;\": \"\u231C\",\n\t\"UnderBar;\": \"_\",\n\t\"urcorner;\": \"\u231D\",\n\t\"varkappa;\": \"\u03F0\",\n\t\"varsigma;\": \"\u03C2\",\n\t\"vartheta;\": \"\u03D1\",\n\t\"backprime;\": \"\u2035\",\n\t\"backsimeq;\": \"\u22CD\",\n\t\"Backslash;\": \"\u2216\",\n\t\"bigotimes;\": \"\u2A02\",\n\t\"CenterDot;\": \"\u00B7\",\n\t\"centerdot;\": \"\u00B7\",\n\t\"checkmark;\": \"\u2713\",\n\t\"CircleDot;\": \"\u2299\",\n\t\"complexes;\": \"\u2102\",\n\t\"Congruent;\": \"\u2261\",\n\t\"Coproduct;\": \"\u2210\",\n\t\"dotsquare;\": \"\u22A1\",\n\t\"DoubleDot;\": \"\u00A8\",\n\t\"DownArrow;\": \"\u2193\",\n\t\"Downarrow;\": \"\u21D3\",\n\t\"downarrow;\": \"\u2193\",\n\t\"DownBreve;\": \"\u0311\",\n\t\"gtrapprox;\": \"\u2A86\",\n\t\"gtreqless;\": \"\u22DB\",\n\t\"gvertneqq;\": \"\u2269\uFE00\",\n\t\"heartsuit;\": \"\u2665\",\n\t\"HumpEqual;\": \"\u224F\",\n\t\"LeftArrow;\": \"\u2190\",\n\t\"Leftarrow;\": \"\u21D0\",\n\t\"leftarrow;\": \"\u2190\",\n\t\"LeftFloor;\": \"\u230A\",\n\t\"lesseqgtr;\": \"\u22DA\",\n\t\"LessTilde;\": \"\u2272\",\n\t\"lvertneqq;\": \"\u2268\uFE00\",\n\t\"Mellintrf;\": \"\u2133\",\n\t\"MinusPlus;\": \"\u2213\",\n\t\"ngeqslant;\": \"\u2A7E\u0338\",\n\t\"nleqslant;\": \"\u2A7D\u0338\",\n\t\"NotCupCap;\": \"\u226D\",\n\t\"NotExists;\": \"\u2204\",\n\t\"NotSubset;\": \"\u2282\u20D2\",\n\t\"nparallel;\": \"\u2226\",\n\t\"nshortmid;\": \"\u2224\",\n\t\"nsubseteq;\": \"\u2288\",\n\t\"nsupseteq;\": \"\u2289\",\n\t\"OverBrace;\": \"\u23DE\",\n\t\"pitchfork;\": \"\u22D4\",\n\t\"PlusMinus;\": \"\u00B1\",\n\t\"rationals;\": \"\u211A\",\n\t\"spadesuit;\": \"\u2660\",\n\t\"subseteqq;\": \"\u2AC5\",\n\t\"subsetneq;\": \"\u228A\",\n\t\"supseteqq;\": \"\u2AC6\",\n\t\"supsetneq;\": \"\u228B\",\n\t\"Therefore;\": \"\u2234\",\n\t\"therefore;\": \"\u2234\",\n\t\"ThinSpace;\": \"\u2009\",\n\t\"triangleq;\": \"\u225C\",\n\t\"TripleDot;\": \"\u20DB\",\n\t\"UnionPlus;\": \"\u228E\",\n\t\"varpropto;\": \"\u221D\",\n\t\"Bernoullis;\": \"\u212C\",\n\t\"circledast;\": \"\u229B\",\n\t\"CirclePlus;\": \"\u2295\",\n\t\"complement;\": \"\u2201\",\n\t\"curlywedge;\": \"\u22CF\",\n\t\"eqslantgtr;\": \"\u2A96\",\n\t\"EqualTilde;\": \"\u2242\",\n\t\"Fouriertrf;\": \"\u2131\",\n\t\"gtreqqless;\": \"\u2A8C\",\n\t\"ImaginaryI;\": \"\u2148\",\n\t\"Laplacetrf;\": \"\u2112\",\n\t\"LeftVector;\": \"\u21BC\",\n\t\"lessapprox;\": \"\u2A85\",\n\t\"lesseqqgtr;\": \"\u2A8B\",\n\t\"Lleftarrow;\": \"\u21DA\",\n\t\"lmoustache;\": \"\u23B0\",\n\t\"longmapsto;\": \"\u27FC\",\n\t\"mapstodown;\": \"\u21A7\",\n\t\"mapstoleft;\": \"\u21A4\",\n\t\"nLeftarrow;\": \"\u21CD\",\n\t\"nleftarrow;\": \"\u219A\",\n\t\"NotElement;\": \"\u2209\",\n\t\"NotGreater;\": \"\u226F\",\n\t\"nsubseteqq;\": \"\u2AC5\u0338\",\n\t\"nsupseteqq;\": \"\u2AC6\u0338\",\n\t\"precapprox;\": \"\u2AB7\",\n\t\"Proportion;\": \"\u2237\",\n\t\"RightArrow;\": \"\u2192\",\n\t\"Rightarrow;\": \"\u21D2\",\n\t\"rightarrow;\": \"\u2192\",\n\t\"RightFloor;\": \"\u230B\",\n\t\"rmoustache;\": \"\u23B1\",\n\t\"sqsubseteq;\": \"\u2291\",\n\t\"sqsupseteq;\": \"\u2292\",\n\t\"subsetneqq;\": \"\u2ACB\",\n\t\"succapprox;\": \"\u2AB8\",\n\t\"supsetneqq;\": \"\u2ACC\",\n\t\"ThickSpace;\": \"\u205F\u200A\",\n\t\"TildeEqual;\": \"\u2243\",\n\t\"TildeTilde;\": \"\u2248\",\n\t\"UnderBrace;\": \"\u23DF\",\n\t\"UpArrowBar;\": \"\u2912\",\n\t\"UpTeeArrow;\": \"\u21A5\",\n\t\"upuparrows;\": \"\u21C8\",\n\t\"varepsilon;\": \"\u03F5\",\n\t\"varnothing;\": \"\u2205\",\n\t\"backepsilon;\": \"\u03F6\",\n\t\"blacksquare;\": \"\u25AA\",\n\t\"circledcirc;\": \"\u229A\",\n\t\"circleddash;\": \"\u229D\",\n\t\"CircleMinus;\": \"\u2296\",\n\t\"CircleTimes;\": \"\u2297\",\n\t\"curlyeqprec;\": \"\u22DE\",\n\t\"curlyeqsucc;\": \"\u22DF\",\n\t\"diamondsuit;\": \"\u2666\",\n\t\"eqslantless;\": \"\u2A95\",\n\t\"Equilibrium;\": \"\u21CC\",\n\t\"expectation;\": \"\u2130\",\n\t\"GreaterLess;\": \"\u2277\",\n\t\"LeftCeiling;\": \"\u2308\",\n\t\"LessGreater;\": \"\u2276\",\n\t\"MediumSpace;\": \"\u205F\",\n\t\"NotLessLess;\": \"\u226A\u0338\",\n\t\"NotPrecedes;\": \"\u2280\",\n\t\"NotSucceeds;\": \"\u2281\",\n\t\"NotSuperset;\": \"\u2283\u20D2\",\n\t\"nRightarrow;\": \"\u21CF\",\n\t\"nrightarrow;\": \"\u219B\",\n\t\"OverBracket;\": \"\u23B4\",\n\t\"preccurlyeq;\": \"\u227C\",\n\t\"precnapprox;\": \"\u2AB9\",\n\t\"quaternions;\": \"\u210D\",\n\t\"RightVector;\": \"\u21C0\",\n\t\"Rrightarrow;\": \"\u21DB\",\n\t\"RuleDelayed;\": \"\u29F4\",\n\t\"SmallCircle;\": \"\u2218\",\n\t\"SquareUnion;\": \"\u2294\",\n\t\"straightphi;\": \"\u03D5\",\n\t\"SubsetEqual;\": \"\u2286\",\n\t\"succcurlyeq;\": \"\u227D\",\n\t\"succnapprox;\": \"\u2ABA\",\n\t\"thickapprox;\": \"\u2248\",\n\t\"UpDownArrow;\": \"\u2195\",\n\t\"Updownarrow;\": \"\u21D5\",\n\t\"updownarrow;\": \"\u2195\",\n\t\"VerticalBar;\": \"\u2223\",\n\t\"blacklozenge;\": \"\u29EB\",\n\t\"DownArrowBar;\": \"\u2913\",\n\t\"DownTeeArrow;\": \"\u21A7\",\n\t\"ExponentialE;\": \"\u2147\",\n\t\"exponentiale;\": \"\u2147\",\n\t\"GreaterEqual;\": \"\u2265\",\n\t\"GreaterTilde;\": \"\u2273\",\n\t\"HilbertSpace;\": \"\u210B\",\n\t\"HumpDownHump;\": \"\u224E\",\n\t\"Intersection;\": \"\u22C2\",\n\t\"LeftArrowBar;\": \"\u21E4\",\n\t\"LeftTeeArrow;\": \"\u21A4\",\n\t\"LeftTriangle;\": \"\u22B2\",\n\t\"LeftUpVector;\": \"\u21BF\",\n\t\"NotCongruent;\": \"\u2262\",\n\t\"NotHumpEqual;\": \"\u224F\u0338\",\n\t\"NotLessEqual;\": \"\u2270\",\n\t\"NotLessTilde;\": \"\u2274\",\n\t\"Proportional;\": \"\u221D\",\n\t\"RightCeiling;\": \"\u2309\",\n\t\"risingdotseq;\": \"\u2253\",\n\t\"RoundImplies;\": \"\u2970\",\n\t\"ShortUpArrow;\": \"\u2191\",\n\t\"SquareSubset;\": \"\u228F\",\n\t\"triangledown;\": \"\u25BF\",\n\t\"triangleleft;\": \"\u25C3\",\n\t\"UnderBracket;\": \"\u23B5\",\n\t\"varsubsetneq;\": \"\u228A\uFE00\",\n\t\"varsupsetneq;\": \"\u228B\uFE00\",\n\t\"VerticalLine;\": \"|\",\n\t\"ApplyFunction;\": \"\u2061\",\n\t\"bigtriangleup;\": \"\u25B3\",\n\t\"blacktriangle;\": \"\u25B4\",\n\t\"DifferentialD;\": \"\u2146\",\n\t\"divideontimes;\": \"\u22C7\",\n\t\"DoubleLeftTee;\": \"\u2AE4\",\n\t\"DoubleUpArrow;\": \"\u21D1\",\n\t\"fallingdotseq;\": \"\u2252\",\n\t\"hookleftarrow;\": \"\u21A9\",\n\t\"leftarrowtail;\": \"\u21A2\",\n\t\"leftharpoonup;\": \"\u21BC\",\n\t\"LeftTeeVector;\": \"\u295A\",\n\t\"LeftVectorBar;\": \"\u2952\",\n\t\"LessFullEqual;\": \"\u2266\",\n\t\"LongLeftArrow;\": \"\u27F5\",\n\t\"Longleftarrow;\": \"\u27F8\",\n\t\"longleftarrow;\": \"\u27F5\",\n\t\"looparrowleft;\": \"\u21AB\",\n\t\"measuredangle;\": \"\u2221\",\n\t\"NotEqualTilde;\": \"\u2242\u0338\",\n\t\"NotTildeEqual;\": \"\u2244\",\n\t\"NotTildeTilde;\": \"\u2249\",\n\t\"ntriangleleft;\": \"\u22EA\",\n\t\"Poincareplane;\": \"\u210C\",\n\t\"PrecedesEqual;\": \"\u2AAF\",\n\t\"PrecedesTilde;\": \"\u227E\",\n\t\"RightArrowBar;\": \"\u21E5\",\n\t\"RightTeeArrow;\": \"\u21A6\",\n\t\"RightTriangle;\": \"\u22B3\",\n\t\"RightUpVector;\": \"\u21BE\",\n\t\"shortparallel;\": \"\u2225\",\n\t\"smallsetminus;\": \"\u2216\",\n\t\"SucceedsEqual;\": \"\u2AB0\",\n\t\"SucceedsTilde;\": \"\u227F\",\n\t\"SupersetEqual;\": \"\u2287\",\n\t\"triangleright;\": \"\u25B9\",\n\t\"UpEquilibrium;\": \"\u296E\",\n\t\"upharpoonleft;\": \"\u21BF\",\n\t\"varsubsetneqq;\": \"\u2ACB\uFE00\",\n\t\"varsupsetneqq;\": \"\u2ACC\uFE00\",\n\t\"VerticalTilde;\": \"\u2240\",\n\t\"VeryThinSpace;\": \"\u200A\",\n\t\"curvearrowleft;\": \"\u21B6\",\n\t\"DiacriticalDot;\": \"\u02D9\",\n\t\"doublebarwedge;\": \"\u2306\",\n\t\"DoubleRightTee;\": \"\u22A8\",\n\t\"downdownarrows;\": \"\u21CA\",\n\t\"DownLeftVector;\": \"\u21BD\",\n\t\"GreaterGreater;\": \"\u2AA2\",\n\t\"hookrightarrow;\": \"\u21AA\",\n\t\"HorizontalLine;\": \"\u2500\",\n\t\"InvisibleComma;\": \"\u2063\",\n\t\"InvisibleTimes;\": \"\u2062\",\n\t\"LeftDownVector;\": \"\u21C3\",\n\t\"leftleftarrows;\": \"\u21C7\",\n\t\"LeftRightArrow;\": \"\u2194\",\n\t\"Leftrightarrow;\": \"\u21D4\",\n\t\"leftrightarrow;\": \"\u2194\",\n\t\"leftthreetimes;\": \"\u22CB\",\n\t\"LessSlantEqual;\": \"\u2A7D\",\n\t\"LongRightArrow;\": \"\u27F6\",\n\t\"Longrightarrow;\": \"\u27F9\",\n\t\"longrightarrow;\": \"\u27F6\",\n\t\"looparrowright;\": \"\u21AC\",\n\t\"LowerLeftArrow;\": \"\u2199\",\n\t\"NestedLessLess;\": \"\u226A\",\n\t\"NotGreaterLess;\": \"\u2279\",\n\t\"NotLessGreater;\": \"\u2278\",\n\t\"NotSubsetEqual;\": \"\u2288\",\n\t\"NotVerticalBar;\": \"\u2224\",\n\t\"nshortparallel;\": \"\u2226\",\n\t\"ntriangleright;\": \"\u22EB\",\n\t\"OpenCurlyQuote;\": \"\u2018\",\n\t\"ReverseElement;\": \"\u220B\",\n\t\"rightarrowtail;\": \"\u21A3\",\n\t\"rightharpoonup;\": \"\u21C0\",\n\t\"RightTeeVector;\": \"\u295B\",\n\t\"RightVectorBar;\": \"\u2953\",\n\t\"ShortDownArrow;\": \"\u2193\",\n\t\"ShortLeftArrow;\": \"\u2190\",\n\t\"SquareSuperset;\": \"\u2290\",\n\t\"TildeFullEqual;\": \"\u2245\",\n\t\"trianglelefteq;\": \"\u22B4\",\n\t\"upharpoonright;\": \"\u21BE\",\n\t\"UpperLeftArrow;\": \"\u2196\",\n\t\"ZeroWidthSpace;\": \"\u200B\",\n\t\"bigtriangledown;\": \"\u25BD\",\n\t\"circlearrowleft;\": \"\u21BA\",\n\t\"CloseCurlyQuote;\": \"\u2019\",\n\t\"ContourIntegral;\": \"\u222E\",\n\t\"curvearrowright;\": \"\u21B7\",\n\t\"DoubleDownArrow;\": \"\u21D3\",\n\t\"DoubleLeftArrow;\": \"\u21D0\",\n\t\"downharpoonleft;\": \"\u21C3\",\n\t\"DownRightVector;\": \"\u21C1\",\n\t\"leftharpoondown;\": \"\u21BD\",\n\t\"leftrightarrows;\": \"\u21C6\",\n\t\"LeftRightVector;\": \"\u294E\",\n\t\"LeftTriangleBar;\": \"\u29CF\",\n\t\"LeftUpTeeVector;\": \"\u2960\",\n\t\"LeftUpVectorBar;\": \"\u2958\",\n\t\"LowerRightArrow;\": \"\u2198\",\n\t\"nLeftrightarrow;\": \"\u21CE\",\n\t\"nleftrightarrow;\": \"\u21AE\",\n\t\"NotGreaterEqual;\": \"\u2271\",\n\t\"NotGreaterTilde;\": \"\u2275\",\n\t\"NotHumpDownHump;\": \"\u224E\u0338\",\n\t\"NotLeftTriangle;\": \"\u22EA\",\n\t\"NotSquareSubset;\": \"\u228F\u0338\",\n\t\"ntrianglelefteq;\": \"\u22EC\",\n\t\"OverParenthesis;\": \"\u23DC\",\n\t\"RightDownVector;\": \"\u21C2\",\n\t\"rightleftarrows;\": \"\u21C4\",\n\t\"rightsquigarrow;\": \"\u219D\",\n\t\"rightthreetimes;\": \"\u22CC\",\n\t\"ShortRightArrow;\": \"\u2192\",\n\t\"straightepsilon;\": \"\u03F5\",\n\t\"trianglerighteq;\": \"\u22B5\",\n\t\"UpperRightArrow;\": \"\u2197\",\n\t\"vartriangleleft;\": \"\u22B2\",\n\t\"circlearrowright;\": \"\u21BB\",\n\t\"DiacriticalAcute;\": \"\u00B4\",\n\t\"DiacriticalGrave;\": \"`\",\n\t\"DiacriticalTilde;\": \"\u02DC\",\n\t\"DoubleRightArrow;\": \"\u21D2\",\n\t\"DownArrowUpArrow;\": \"\u21F5\",\n\t\"downharpoonright;\": \"\u21C2\",\n\t\"EmptySmallSquare;\": \"\u25FB\",\n\t\"GreaterEqualLess;\": \"\u22DB\",\n\t\"GreaterFullEqual;\": \"\u2267\",\n\t\"LeftAngleBracket;\": \"\u27E8\",\n\t\"LeftUpDownVector;\": \"\u2951\",\n\t\"LessEqualGreater;\": \"\u22DA\",\n\t\"NonBreakingSpace;\": \"\u00A0\",\n\t\"NotPrecedesEqual;\": \"\u2AAF\u0338\",\n\t\"NotRightTriangle;\": \"\u22EB\",\n\t\"NotSucceedsEqual;\": \"\u2AB0\u0338\",\n\t\"NotSucceedsTilde;\": \"\u227F\u0338\",\n\t\"NotSupersetEqual;\": \"\u2289\",\n\t\"ntrianglerighteq;\": \"\u22ED\",\n\t\"rightharpoondown;\": \"\u21C1\",\n\t\"rightrightarrows;\": \"\u21C9\",\n\t\"RightTriangleBar;\": \"\u29D0\",\n\t\"RightUpTeeVector;\": \"\u295C\",\n\t\"RightUpVectorBar;\": \"\u2954\",\n\t\"twoheadleftarrow;\": \"\u219E\",\n\t\"UnderParenthesis;\": \"\u23DD\",\n\t\"UpArrowDownArrow;\": \"\u21C5\",\n\t\"vartriangleright;\": \"\u22B3\",\n\t\"blacktriangledown;\": \"\u25BE\",\n\t\"blacktriangleleft;\": \"\u25C2\",\n\t\"DoubleUpDownArrow;\": \"\u21D5\",\n\t\"DoubleVerticalBar;\": \"\u2225\",\n\t\"DownLeftTeeVector;\": \"\u295E\",\n\t\"DownLeftVectorBar;\": \"\u2956\",\n\t\"FilledSmallSquare;\": \"\u25FC\",\n\t\"GreaterSlantEqual;\": \"\u2A7E\",\n\t\"LeftDoubleBracket;\": \"\u27E6\",\n\t\"LeftDownTeeVector;\": \"\u2961\",\n\t\"LeftDownVectorBar;\": \"\u2959\",\n\t\"leftrightharpoons;\": \"\u21CB\",\n\t\"LeftTriangleEqual;\": \"\u22B4\",\n\t\"NegativeThinSpace;\": \"\u200B\",\n\t\"NotGreaterGreater;\": \"\u226B\u0338\",\n\t\"NotLessSlantEqual;\": \"\u2A7D\u0338\",\n\t\"NotNestedLessLess;\": \"\u2AA1\u0338\",\n\t\"NotReverseElement;\": \"\u220C\",\n\t\"NotSquareSuperset;\": \"\u2290\u0338\",\n\t\"NotTildeFullEqual;\": \"\u2247\",\n\t\"RightAngleBracket;\": \"\u27E9\",\n\t\"rightleftharpoons;\": \"\u21CC\",\n\t\"RightUpDownVector;\": \"\u294F\",\n\t\"SquareSubsetEqual;\": \"\u2291\",\n\t\"twoheadrightarrow;\": \"\u21A0\",\n\t\"VerticalSeparator;\": \"\u2758\",\n\t\"blacktriangleright;\": \"\u25B8\",\n\t\"DownRightTeeVector;\": \"\u295F\",\n\t\"DownRightVectorBar;\": \"\u2957\",\n\t\"LongLeftRightArrow;\": \"\u27F7\",\n\t\"Longleftrightarrow;\": \"\u27FA\",\n\t\"longleftrightarrow;\": \"\u27F7\",\n\t\"NegativeThickSpace;\": \"\u200B\",\n\t\"NotLeftTriangleBar;\": \"\u29CF\u0338\",\n\t\"PrecedesSlantEqual;\": \"\u227C\",\n\t\"ReverseEquilibrium;\": \"\u21CB\",\n\t\"RightDoubleBracket;\": \"\u27E7\",\n\t\"RightDownTeeVector;\": \"\u295D\",\n\t\"RightDownVectorBar;\": \"\u2955\",\n\t\"RightTriangleEqual;\": \"\u22B5\",\n\t\"SquareIntersection;\": \"\u2293\",\n\t\"SucceedsSlantEqual;\": \"\u227D\",\n\t\"DoubleLongLeftArrow;\": \"\u27F8\",\n\t\"DownLeftRightVector;\": \"\u2950\",\n\t\"LeftArrowRightArrow;\": \"\u21C6\",\n\t\"leftrightsquigarrow;\": \"\u21AD\",\n\t\"NegativeMediumSpace;\": \"\u200B\",\n\t\"NotGreaterFullEqual;\": \"\u2267\u0338\",\n\t\"NotRightTriangleBar;\": \"\u29D0\u0338\",\n\t\"RightArrowLeftArrow;\": \"\u21C4\",\n\t\"SquareSupersetEqual;\": \"\u2292\",\n\t\"CapitalDifferentialD;\": \"\u2145\",\n\t\"DoubleLeftRightArrow;\": \"\u21D4\",\n\t\"DoubleLongRightArrow;\": \"\u27F9\",\n\t\"EmptyVerySmallSquare;\": \"\u25AB\",\n\t\"NestedGreaterGreater;\": \"\u226B\",\n\t\"NotDoubleVerticalBar;\": \"\u2226\",\n\t\"NotGreaterSlantEqual;\": \"\u2A7E\u0338\",\n\t\"NotLeftTriangleEqual;\": \"\u22EC\",\n\t\"NotSquareSubsetEqual;\": \"\u22E2\",\n\t\"OpenCurlyDoubleQuote;\": \"\u201C\",\n\t\"ReverseUpEquilibrium;\": \"\u296F\",\n\t\"CloseCurlyDoubleQuote;\": \"\u201D\",\n\t\"DoubleContourIntegral;\": \"\u222F\",\n\t\"FilledVerySmallSquare;\": \"\u25AA\",\n\t\"NegativeVeryThinSpace;\": \"\u200B\",\n\t\"NotPrecedesSlantEqual;\": \"\u22E0\",\n\t\"NotRightTriangleEqual;\": \"\u22ED\",\n\t\"NotSucceedsSlantEqual;\": \"\u22E1\",\n\t\"DiacriticalDoubleAcute;\": \"\u02DD\",\n\t\"NotSquareSupersetEqual;\": \"\u22E3\",\n\t\"NotNestedGreaterGreater;\": \"\u2AA2\u0338\",\n\t\"ClockwiseContourIntegral;\": \"\u2232\",\n\t\"DoubleLongLeftRightArrow;\": \"\u27FA\",\n\t\"CounterClockwiseContourIntegral;\": \"\u2233\"\n};\n\n// lazy compute this to make this file tree-shakable for browser\r\nlet maxCRNameLength;\r\nconst decodeHtml = (rawText, asAttr) => {\r\n    let offset = 0;\r\n    const end = rawText.length;\r\n    let decodedText = '';\r\n    function advance(length) {\r\n        offset += length;\r\n        rawText = rawText.slice(length);\r\n    }\r\n    while (offset < end) {\r\n        const head = /&(?:#x?)?/i.exec(rawText);\r\n        if (!head || offset + head.index >= end) {\r\n            const remaining = end - offset;\r\n            decodedText += rawText.slice(0, remaining);\r\n            advance(remaining);\r\n            break;\r\n        }\r\n        // Advance to the \"&\".\r\n        decodedText += rawText.slice(0, head.index);\r\n        advance(head.index);\r\n        if (head[0] === '&') {\r\n            // Named character reference.\r\n            let name = '';\r\n            let value = undefined;\r\n            if (/[0-9a-z]/i.test(rawText[1])) {\r\n                if (!maxCRNameLength) {\r\n                    maxCRNameLength = Object.keys(namedCharacterReferences).reduce((max, name) => Math.max(max, name.length), 0);\r\n                }\r\n                for (let length = maxCRNameLength; !value && length > 0; --length) {\r\n                    name = rawText.slice(1, 1 + length);\r\n                    value = namedCharacterReferences[name];\r\n                }\r\n                if (value) {\r\n                    const semi = name.endsWith(';');\r\n                    if (asAttr &&\r\n                        !semi &&\r\n                        /[=a-z0-9]/i.test(rawText[name.length + 1] || '')) {\r\n                        decodedText += '&' + name;\r\n                        advance(1 + name.length);\r\n                    }\r\n                    else {\r\n                        decodedText += value;\r\n                        advance(1 + name.length);\r\n                    }\r\n                }\r\n                else {\r\n                    decodedText += '&' + name;\r\n                    advance(1 + name.length);\r\n                }\r\n            }\r\n            else {\r\n                decodedText += '&';\r\n                advance(1);\r\n            }\r\n        }\r\n        else {\r\n            // Numeric character reference.\r\n            const hex = head[0] === '&#x';\r\n            const pattern = hex ? /^&#x([0-9a-f]+);?/i : /^&#([0-9]+);?/;\r\n            const body = pattern.exec(rawText);\r\n            if (!body) {\r\n                decodedText += head[0];\r\n                advance(head[0].length);\r\n            }\r\n            else {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\r\n                let cp = Number.parseInt(body[1], hex ? 16 : 10);\r\n                if (cp === 0) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if (cp > 0x10ffff) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if (cp >= 0xd800 && cp <= 0xdfff) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if ((cp >= 0xfdd0 && cp <= 0xfdef) || (cp & 0xfffe) === 0xfffe) ;\r\n                else if ((cp >= 0x01 && cp <= 0x08) ||\r\n                    cp === 0x0b ||\r\n                    (cp >= 0x0d && cp <= 0x1f) ||\r\n                    (cp >= 0x7f && cp <= 0x9f)) {\r\n                    cp = CCR_REPLACEMENTS[cp] || cp;\r\n                }\r\n                decodedText += String.fromCodePoint(cp);\r\n                advance(body[0].length);\r\n            }\r\n        }\r\n    }\r\n    return decodedText;\r\n};\r\n// https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\r\nconst CCR_REPLACEMENTS = {\r\n    0x80: 0x20ac,\r\n    0x82: 0x201a,\r\n    0x83: 0x0192,\r\n    0x84: 0x201e,\r\n    0x85: 0x2026,\r\n    0x86: 0x2020,\r\n    0x87: 0x2021,\r\n    0x88: 0x02c6,\r\n    0x89: 0x2030,\r\n    0x8a: 0x0160,\r\n    0x8b: 0x2039,\r\n    0x8c: 0x0152,\r\n    0x8e: 0x017d,\r\n    0x91: 0x2018,\r\n    0x92: 0x2019,\r\n    0x93: 0x201c,\r\n    0x94: 0x201d,\r\n    0x95: 0x2022,\r\n    0x96: 0x2013,\r\n    0x97: 0x2014,\r\n    0x98: 0x02dc,\r\n    0x99: 0x2122,\r\n    0x9a: 0x0161,\r\n    0x9b: 0x203a,\r\n    0x9c: 0x0153,\r\n    0x9e: 0x017e,\r\n    0x9f: 0x0178\r\n};\n\nconst isRawTextContainer = /*#__PURE__*/ shared.makeMap('style,iframe,script,noscript', true);\r\nconst parserOptions = {\r\n    isVoidTag: shared.isVoidTag,\r\n    isNativeTag: tag => shared.isHTMLTag(tag) || shared.isSVGTag(tag),\r\n    isPreTag: tag => tag === 'pre',\r\n    decodeEntities: decodeHtml,\r\n    isBuiltInComponent: (tag) => {\r\n        if (compilerCore.isBuiltInType(tag, `Transition`)) {\r\n            return TRANSITION;\r\n        }\r\n        else if (compilerCore.isBuiltInType(tag, `TransitionGroup`)) {\r\n            return TRANSITION_GROUP;\r\n        }\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n    getNamespace(tag, parent) {\r\n        let ns = parent ? parent.ns : 0 /* DOMNamespaces.HTML */;\r\n        if (parent && ns === 2 /* DOMNamespaces.MATH_ML */) {\r\n            if (parent.tag === 'annotation-xml') {\r\n                if (tag === 'svg') {\r\n                    return 1 /* DOMNamespaces.SVG */;\r\n                }\r\n                if (parent.props.some(a => a.type === 6 /* NodeTypes.ATTRIBUTE */ &&\r\n                    a.name === 'encoding' &&\r\n                    a.value != null &&\r\n                    (a.value.content === 'text/html' ||\r\n                        a.value.content === 'application/xhtml+xml'))) {\r\n                    ns = 0 /* DOMNamespaces.HTML */;\r\n                }\r\n            }\r\n            else if (/^m(?:[ions]|text)$/.test(parent.tag) &&\r\n                tag !== 'mglyph' &&\r\n                tag !== 'malignmark') {\r\n                ns = 0 /* DOMNamespaces.HTML */;\r\n            }\r\n        }\r\n        else if (parent && ns === 1 /* DOMNamespaces.SVG */) {\r\n            if (parent.tag === 'foreignObject' ||\r\n                parent.tag === 'desc' ||\r\n                parent.tag === 'title') {\r\n                ns = 0 /* DOMNamespaces.HTML */;\r\n            }\r\n        }\r\n        if (ns === 0 /* DOMNamespaces.HTML */) {\r\n            if (tag === 'svg') {\r\n                return 1 /* DOMNamespaces.SVG */;\r\n            }\r\n            if (tag === 'math') {\r\n                return 2 /* DOMNamespaces.MATH_ML */;\r\n            }\r\n        }\r\n        return ns;\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n    getTextMode({ tag, ns }) {\r\n        if (ns === 0 /* DOMNamespaces.HTML */) {\r\n            if (tag === 'textarea' || tag === 'title') {\r\n                return 1 /* TextModes.RCDATA */;\r\n            }\r\n            if (isRawTextContainer(tag)) {\r\n                return 2 /* TextModes.RAWTEXT */;\r\n            }\r\n        }\r\n        return 0 /* TextModes.DATA */;\r\n    }\r\n};\n\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nconst transformStyle = node => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */) {\r\n        node.props.forEach((p, i) => {\r\n            if (p.type === 6 /* NodeTypes.ATTRIBUTE */ && p.name === 'style' && p.value) {\r\n                // replace p with an expression node\r\n                node.props[i] = {\r\n                    type: 7 /* NodeTypes.DIRECTIVE */,\r\n                    name: `bind`,\r\n                    arg: compilerCore.createSimpleExpression(`style`, true, p.loc),\r\n                    exp: parseInlineCSS(p.value.content, p.loc),\r\n                    modifiers: [],\r\n                    loc: p.loc\r\n                };\r\n            }\r\n        });\r\n    }\r\n};\r\nconst parseInlineCSS = (cssText, loc) => {\r\n    const normalized = shared.parseStringStyle(cssText);\r\n    return compilerCore.createSimpleExpression(JSON.stringify(normalized), false, loc, 3 /* ConstantTypes.CAN_STRINGIFY */);\r\n};\n\nfunction createDOMCompilerError(code, loc) {\r\n    return compilerCore.createCompilerError(code, loc, DOMErrorMessages );\r\n}\r\nconst DOMErrorMessages = {\r\n    [50 /* DOMErrorCodes.X_V_HTML_NO_EXPRESSION */]: `v-html is missing expression.`,\r\n    [51 /* DOMErrorCodes.X_V_HTML_WITH_CHILDREN */]: `v-html will override element children.`,\r\n    [52 /* DOMErrorCodes.X_V_TEXT_NO_EXPRESSION */]: `v-text is missing expression.`,\r\n    [53 /* DOMErrorCodes.X_V_TEXT_WITH_CHILDREN */]: `v-text will override element children.`,\r\n    [54 /* DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT */]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\r\n    [55 /* DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT */]: `v-model argument is not supported on plain elements.`,\r\n    [56 /* DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT */]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\r\n    [57 /* DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE */]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\r\n    [58 /* DOMErrorCodes.X_V_SHOW_NO_EXPRESSION */]: `v-show is missing expression.`,\r\n    [59 /* DOMErrorCodes.X_TRANSITION_INVALID_CHILDREN */]: `<Transition> expects exactly one child element or component.`,\r\n    [60 /* DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG */]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\r\n};\n\nconst transformVHtml = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(50 /* DOMErrorCodes.X_V_HTML_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(51 /* DOMErrorCodes.X_V_HTML_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            compilerCore.createObjectProperty(compilerCore.createSimpleExpression(`innerHTML`, true, loc), exp || compilerCore.createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformVText = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(52 /* DOMErrorCodes.X_V_TEXT_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(53 /* DOMErrorCodes.X_V_TEXT_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            compilerCore.createObjectProperty(compilerCore.createSimpleExpression(`textContent`, true), exp\r\n                ? compilerCore.getConstantType(exp, context) > 0\r\n                    ? exp\r\n                    : compilerCore.createCallExpression(context.helperString(compilerCore.TO_DISPLAY_STRING), [exp], loc)\r\n                : compilerCore.createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const baseResult = compilerCore.transformModel(dir, node, context);\r\n    // base transform has errors OR component v-model (only need props)\r\n    if (!baseResult.props.length || node.tagType === 1 /* ElementTypes.COMPONENT */) {\r\n        return baseResult;\r\n    }\r\n    if (dir.arg) {\r\n        context.onError(createDOMCompilerError(55 /* DOMErrorCodes.X_V_MODEL_ARG_ON_ELEMENT */, dir.arg.loc));\r\n    }\r\n    const { tag } = node;\r\n    const isCustomElement = context.isCustomElement(tag);\r\n    if (tag === 'input' ||\r\n        tag === 'textarea' ||\r\n        tag === 'select' ||\r\n        isCustomElement) {\r\n        let directiveToUse = V_MODEL_TEXT;\r\n        let isInvalidType = false;\r\n        if (tag === 'input' || isCustomElement) {\r\n            const type = compilerCore.findProp(node, `type`);\r\n            if (type) {\r\n                if (type.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n                    // :type=\"foo\"\r\n                    directiveToUse = V_MODEL_DYNAMIC;\r\n                }\r\n                else if (type.value) {\r\n                    switch (type.value.content) {\r\n                        case 'radio':\r\n                            directiveToUse = V_MODEL_RADIO;\r\n                            break;\r\n                        case 'checkbox':\r\n                            directiveToUse = V_MODEL_CHECKBOX;\r\n                            break;\r\n                        case 'file':\r\n                            isInvalidType = true;\r\n                            context.onError(createDOMCompilerError(56 /* DOMErrorCodes.X_V_MODEL_ON_FILE_INPUT_ELEMENT */, dir.loc));\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else if (compilerCore.hasDynamicKeyVBind(node)) {\r\n                // element has bindings with dynamic keys, which can possibly contain\r\n                // \"type\".\r\n                directiveToUse = V_MODEL_DYNAMIC;\r\n            }\r\n            else ;\r\n        }\r\n        else if (tag === 'select') {\r\n            directiveToUse = V_MODEL_SELECT;\r\n        }\r\n        else ;\r\n        // inject runtime directive\r\n        // by returning the helper symbol via needRuntime\r\n        // the import will replaced a resolveDirective call.\r\n        if (!isInvalidType) {\r\n            baseResult.needRuntime = context.helper(directiveToUse);\r\n        }\r\n    }\r\n    else {\r\n        context.onError(createDOMCompilerError(54 /* DOMErrorCodes.X_V_MODEL_ON_INVALID_ELEMENT */, dir.loc));\r\n    }\r\n    // native vmodel doesn't need the `modelValue` props since they are also\r\n    // passed to the runtime as `binding.value`. removing it reduces code size.\r\n    baseResult.props = baseResult.props.filter(p => !(p.key.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n        p.key.content === 'modelValue'));\r\n    return baseResult;\r\n};\n\nconst isEventOptionModifier = /*#__PURE__*/ shared.makeMap(`passive,once,capture`);\r\nconst isNonKeyModifier = /*#__PURE__*/ shared.makeMap(\r\n// event propagation management\r\n`stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`);\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ shared.makeMap('left,right');\r\nconst isKeyboardEvent = /*#__PURE__*/ shared.makeMap(`onkeyup,onkeydown,onkeypress`, true);\r\nconst resolveModifiers = (key, modifiers, context, loc) => {\r\n    const keyModifiers = [];\r\n    const nonKeyModifiers = [];\r\n    const eventOptionModifiers = [];\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n        const modifier = modifiers[i];\r\n        if (modifier === 'native' &&\r\n            compilerCore.checkCompatEnabled(\"COMPILER_V_ON_NATIVE\" /* CompilerDeprecationTypes.COMPILER_V_ON_NATIVE */, context, loc)) {\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else if (isEventOptionModifier(modifier)) {\r\n            // eventOptionModifiers: modifiers for addEventListener() options,\r\n            // e.g. .passive & .capture\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else {\r\n            // runtimeModifiers: modifiers that needs runtime guards\r\n            if (maybeKeyModifier(modifier)) {\r\n                if (compilerCore.isStaticExp(key)) {\r\n                    if (isKeyboardEvent(key.content)) {\r\n                        keyModifiers.push(modifier);\r\n                    }\r\n                    else {\r\n                        nonKeyModifiers.push(modifier);\r\n                    }\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n            }\r\n            else {\r\n                if (isNonKeyModifier(modifier)) {\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        keyModifiers,\r\n        nonKeyModifiers,\r\n        eventOptionModifiers\r\n    };\r\n};\r\nconst transformClick = (key, event) => {\r\n    const isStaticClick = compilerCore.isStaticExp(key) && key.content.toLowerCase() === 'onclick';\r\n    return isStaticClick\r\n        ? compilerCore.createSimpleExpression(event, true)\r\n        : key.type !== 4 /* NodeTypes.SIMPLE_EXPRESSION */\r\n            ? compilerCore.createCompoundExpression([\r\n                `(`,\r\n                key,\r\n                `) === \"onClick\" ? \"${event}\" : (`,\r\n                key,\r\n                `)`\r\n            ])\r\n            : key;\r\n};\r\nconst transformOn = (dir, node, context) => {\r\n    return compilerCore.transformOn(dir, node, context, baseResult => {\r\n        const { modifiers } = dir;\r\n        if (!modifiers.length)\r\n            return baseResult;\r\n        let { key, value: handlerExp } = baseResult.props[0];\r\n        const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);\r\n        // normalize click.right and click.middle since they don't actually fire\r\n        if (nonKeyModifiers.includes('right')) {\r\n            key = transformClick(key, `onContextmenu`);\r\n        }\r\n        if (nonKeyModifiers.includes('middle')) {\r\n            key = transformClick(key, `onMouseup`);\r\n        }\r\n        if (nonKeyModifiers.length) {\r\n            handlerExp = compilerCore.createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n                handlerExp,\r\n                JSON.stringify(nonKeyModifiers)\r\n            ]);\r\n        }\r\n        if (keyModifiers.length &&\r\n            // if event name is dynamic, always wrap with keys guard\r\n            (!compilerCore.isStaticExp(key) || isKeyboardEvent(key.content))) {\r\n            handlerExp = compilerCore.createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n                handlerExp,\r\n                JSON.stringify(keyModifiers)\r\n            ]);\r\n        }\r\n        if (eventOptionModifiers.length) {\r\n            const modifierPostfix = eventOptionModifiers.map(shared.capitalize).join('');\r\n            key = compilerCore.isStaticExp(key)\r\n                ? compilerCore.createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n                : compilerCore.createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\r\n        }\r\n        return {\r\n            props: [compilerCore.createObjectProperty(key, handlerExp)]\r\n        };\r\n    });\r\n};\n\nconst transformShow = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(58 /* DOMErrorCodes.X_V_SHOW_NO_EXPRESSION */, loc));\r\n    }\r\n    return {\r\n        props: [],\r\n        needRuntime: context.helper(V_SHOW)\r\n    };\r\n};\n\n/**\r\n * This module is Node-only.\r\n */\r\n/**\r\n * Regex for replacing placeholders for embedded constant variables\r\n * (e.g. import URL string constants generated by compiler-sfc)\r\n */\r\nconst expReplaceRE = /__VUE_EXP_START__(.*?)__VUE_EXP_END__/g;\r\n/**\r\n * Turn eligible hoisted static trees into stringified static nodes, e.g.\r\n *\r\n * ```js\r\n * const _hoisted_1 = createStaticVNode(`<div class=\"foo\">bar</div>`)\r\n * ```\r\n *\r\n * A single static vnode can contain stringified content for **multiple**\r\n * consecutive nodes (element and plain text), called a \"chunk\".\r\n * `@vue/runtime-dom` will create the content via innerHTML in a hidden\r\n * container element and insert all the nodes in place. The call must also\r\n * provide the number of nodes contained in the chunk so that during hydration\r\n * we can know how many nodes the static vnode should adopt.\r\n *\r\n * The optimization scans a children list that contains hoisted nodes, and\r\n * tries to find the largest chunk of consecutive hoisted nodes before running\r\n * into a non-hoisted node or the end of the list. A chunk is then converted\r\n * into a single static vnode and replaces the hoisted expression of the first\r\n * node in the chunk. Other nodes in the chunk are considered \"merged\" and\r\n * therefore removed from both the hoist list and the children array.\r\n *\r\n * This optimization is only performed in Node.js.\r\n */\r\nconst stringifyStatic = (children, context, parent) => {\r\n    // bail stringification for slot content\r\n    if (context.scopes.vSlot > 0) {\r\n        return;\r\n    }\r\n    let nc = 0; // current node count\r\n    let ec = 0; // current element with binding count\r\n    const currentChunk = [];\r\n    const stringifyCurrentChunk = (currentIndex) => {\r\n        if (nc >= 20 /* StringifyThresholds.NODE_COUNT */ ||\r\n            ec >= 5 /* StringifyThresholds.ELEMENT_WITH_BINDING_COUNT */) {\r\n            // combine all currently eligible nodes into a single static vnode call\r\n            const staticCall = compilerCore.createCallExpression(context.helper(compilerCore.CREATE_STATIC), [\r\n                JSON.stringify(currentChunk.map(node => stringifyNode(node, context)).join('')).replace(expReplaceRE, `\" + $1 + \"`),\r\n                // the 2nd argument indicates the number of DOM nodes this static vnode\r\n                // will insert / hydrate\r\n                String(currentChunk.length)\r\n            ]);\r\n            // replace the first node's hoisted expression with the static vnode call\r\n            replaceHoist(currentChunk[0], staticCall, context);\r\n            if (currentChunk.length > 1) {\r\n                for (let i = 1; i < currentChunk.length; i++) {\r\n                    // for the merged nodes, set their hoisted expression to null\r\n                    replaceHoist(currentChunk[i], null, context);\r\n                }\r\n                // also remove merged nodes from children\r\n                const deleteCount = currentChunk.length - 1;\r\n                children.splice(currentIndex - currentChunk.length + 1, deleteCount);\r\n                return deleteCount;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    let i = 0;\r\n    for (; i < children.length; i++) {\r\n        const child = children[i];\r\n        const hoisted = getHoistedNode(child);\r\n        if (hoisted) {\r\n            // presence of hoisted means child must be a stringifiable node\r\n            const node = child;\r\n            const result = analyzeNode(node);\r\n            if (result) {\r\n                // node is stringifiable, record state\r\n                nc += result[0];\r\n                ec += result[1];\r\n                currentChunk.push(node);\r\n                continue;\r\n            }\r\n        }\r\n        // we only reach here if we ran into a node that is not stringifiable\r\n        // check if currently analyzed nodes meet criteria for stringification.\r\n        // adjust iteration index\r\n        i -= stringifyCurrentChunk(i);\r\n        // reset state\r\n        nc = 0;\r\n        ec = 0;\r\n        currentChunk.length = 0;\r\n    }\r\n    // in case the last node was also stringifiable\r\n    stringifyCurrentChunk(i);\r\n};\r\nconst getHoistedNode = (node) => ((node.type === 1 /* NodeTypes.ELEMENT */ && node.tagType === 0 /* ElementTypes.ELEMENT */) ||\r\n    node.type == 12 /* NodeTypes.TEXT_CALL */) &&\r\n    node.codegenNode &&\r\n    node.codegenNode.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */ &&\r\n    node.codegenNode.hoisted;\r\nconst dataAriaRE = /^(data|aria)-/;\r\nconst isStringifiableAttr = (name, ns) => {\r\n    return ((ns === 0 /* DOMNamespaces.HTML */\r\n        ? shared.isKnownHtmlAttr(name)\r\n        : ns === 1 /* DOMNamespaces.SVG */\r\n            ? shared.isKnownSvgAttr(name)\r\n            : false) || dataAriaRE.test(name));\r\n};\r\nconst replaceHoist = (node, replacement, context) => {\r\n    const hoistToReplace = node.codegenNode.hoisted;\r\n    context.hoists[context.hoists.indexOf(hoistToReplace)] = replacement;\r\n};\r\nconst isNonStringifiable = /*#__PURE__*/ shared.makeMap(`caption,thead,tr,th,tbody,td,tfoot,colgroup,col`);\r\n/**\r\n * for a hoisted node, analyze it and return:\r\n * - false: bailed (contains non-stringifiable props or runtime constant)\r\n * - [nc, ec] where\r\n *   - nc is the number of nodes inside\r\n *   - ec is the number of element with bindings inside\r\n */\r\nfunction analyzeNode(node) {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ && isNonStringifiable(node.tag)) {\r\n        return false;\r\n    }\r\n    if (node.type === 12 /* NodeTypes.TEXT_CALL */) {\r\n        return [1, 0];\r\n    }\r\n    let nc = 1; // node count\r\n    let ec = node.props.length > 0 ? 1 : 0; // element w/ binding count\r\n    let bailed = false;\r\n    const bail = () => {\r\n        bailed = true;\r\n        return false;\r\n    };\r\n    // TODO: check for cases where using innerHTML will result in different\r\n    // output compared to imperative node insertions.\r\n    // probably only need to check for most common case\r\n    // i.e. non-phrasing-content tags inside `<p>`\r\n    function walk(node) {\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const p = node.props[i];\r\n            // bail on non-attr bindings\r\n            if (p.type === 6 /* NodeTypes.ATTRIBUTE */ &&\r\n                !isStringifiableAttr(p.name, node.ns)) {\r\n                return bail();\r\n            }\r\n            if (p.type === 7 /* NodeTypes.DIRECTIVE */ && p.name === 'bind') {\r\n                // bail on non-attr bindings\r\n                if (p.arg &&\r\n                    (p.arg.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */ ||\r\n                        (p.arg.isStatic && !isStringifiableAttr(p.arg.content, node.ns)))) {\r\n                    return bail();\r\n                }\r\n                if (p.exp &&\r\n                    (p.exp.type === 8 /* NodeTypes.COMPOUND_EXPRESSION */ ||\r\n                        p.exp.constType < 3 /* ConstantTypes.CAN_STRINGIFY */)) {\r\n                    return bail();\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            nc++;\r\n            const child = node.children[i];\r\n            if (child.type === 1 /* NodeTypes.ELEMENT */) {\r\n                if (child.props.length > 0) {\r\n                    ec++;\r\n                }\r\n                walk(child);\r\n                if (bailed) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    return walk(node) ? [nc, ec] : false;\r\n}\r\nfunction stringifyNode(node, context) {\r\n    if (shared.isString(node)) {\r\n        return node;\r\n    }\r\n    if (shared.isSymbol(node)) {\r\n        return ``;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* NodeTypes.ELEMENT */:\r\n            return stringifyElement(node, context);\r\n        case 2 /* NodeTypes.TEXT */:\r\n            return shared.escapeHtml(node.content);\r\n        case 3 /* NodeTypes.COMMENT */:\r\n            return `<!--${shared.escapeHtml(node.content)}-->`;\r\n        case 5 /* NodeTypes.INTERPOLATION */:\r\n            return shared.escapeHtml(shared.toDisplayString(evaluateConstant(node.content)));\r\n        case 8 /* NodeTypes.COMPOUND_EXPRESSION */:\r\n            return shared.escapeHtml(evaluateConstant(node));\r\n        case 12 /* NodeTypes.TEXT_CALL */:\r\n            return stringifyNode(node.content, context);\r\n        default:\r\n            // static trees will not contain if/for nodes\r\n            return '';\r\n    }\r\n}\r\nfunction stringifyElement(node, context) {\r\n    let res = `<${node.tag}`;\r\n    let innerHTML = '';\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* NodeTypes.ATTRIBUTE */) {\r\n            res += ` ${p.name}`;\r\n            if (p.value) {\r\n                res += `=\"${shared.escapeHtml(p.value.content)}\"`;\r\n            }\r\n        }\r\n        else if (p.type === 7 /* NodeTypes.DIRECTIVE */) {\r\n            if (p.name === 'bind') {\r\n                const exp = p.exp;\r\n                if (exp.content[0] === '_') {\r\n                    // internally generated string constant references\r\n                    // e.g. imported URL strings via compiler-sfc transformAssetUrl plugin\r\n                    res += ` ${p.arg.content}=\"__VUE_EXP_START__${exp.content}__VUE_EXP_END__\"`;\r\n                    continue;\r\n                }\r\n                // constant v-bind, e.g. :foo=\"1\"\r\n                let evaluated = evaluateConstant(exp);\r\n                if (evaluated != null) {\r\n                    const arg = p.arg && p.arg.content;\r\n                    if (arg === 'class') {\r\n                        evaluated = shared.normalizeClass(evaluated);\r\n                    }\r\n                    else if (arg === 'style') {\r\n                        evaluated = shared.stringifyStyle(shared.normalizeStyle(evaluated));\r\n                    }\r\n                    res += ` ${p.arg.content}=\"${shared.escapeHtml(evaluated)}\"`;\r\n                }\r\n            }\r\n            else if (p.name === 'html') {\r\n                // #5439 v-html with constant value\r\n                // not sure why would anyone do this but it can happen\r\n                innerHTML = evaluateConstant(p.exp);\r\n            }\r\n            else if (p.name === 'text') {\r\n                innerHTML = shared.escapeHtml(shared.toDisplayString(evaluateConstant(p.exp)));\r\n            }\r\n        }\r\n    }\r\n    if (context.scopeId) {\r\n        res += ` ${context.scopeId}`;\r\n    }\r\n    res += `>`;\r\n    if (innerHTML) {\r\n        res += innerHTML;\r\n    }\r\n    else {\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            res += stringifyNode(node.children[i], context);\r\n        }\r\n    }\r\n    if (!shared.isVoidTag(node.tag)) {\r\n        res += `</${node.tag}>`;\r\n    }\r\n    return res;\r\n}\r\n// __UNSAFE__\r\n// Reason: eval.\r\n// It's technically safe to eval because only constant expressions are possible\r\n// here, e.g. `{{ 1 }}` or `{{ 'foo' }}`\r\n// in addition, constant exps bail on presence of parens so you can't even\r\n// run JSFuck in here. But we mark it unsafe for security review purposes.\r\n// (see compiler-core/src/transforms/transformExpression)\r\nfunction evaluateConstant(exp) {\r\n    if (exp.type === 4 /* NodeTypes.SIMPLE_EXPRESSION */) {\r\n        return new Function(`return ${exp.content}`)();\r\n    }\r\n    else {\r\n        // compound\r\n        let res = ``;\r\n        exp.children.forEach(c => {\r\n            if (shared.isString(c) || shared.isSymbol(c)) {\r\n                return;\r\n            }\r\n            if (c.type === 2 /* NodeTypes.TEXT */) {\r\n                res += c.content;\r\n            }\r\n            else if (c.type === 5 /* NodeTypes.INTERPOLATION */) {\r\n                res += shared.toDisplayString(evaluateConstant(c.content));\r\n            }\r\n            else {\r\n                res += evaluateConstant(c);\r\n            }\r\n        });\r\n        return res;\r\n    }\r\n}\n\nconst ignoreSideEffectTags = (node, context) => {\r\n    if (node.type === 1 /* NodeTypes.ELEMENT */ &&\r\n        node.tagType === 0 /* ElementTypes.ELEMENT */ &&\r\n        (node.tag === 'script' || node.tag === 'style')) {\r\n        context.onError(createDOMCompilerError(60 /* DOMErrorCodes.X_IGNORED_SIDE_EFFECT_TAG */, node.loc));\r\n        context.removeNode();\r\n    }\r\n};\n\nconst DOMNodeTransforms = [\r\n    transformStyle,\r\n    ...([])\r\n];\r\nconst DOMDirectiveTransforms = {\r\n    cloak: compilerCore.noopDirectiveTransform,\r\n    html: transformVHtml,\r\n    text: transformVText,\r\n    model: transformModel,\r\n    on: transformOn,\r\n    show: transformShow\r\n};\r\nfunction compile(template, options = {}) {\r\n    return compilerCore.baseCompile(template, shared.extend({}, parserOptions, options, {\r\n        nodeTransforms: [\r\n            // ignore <script> and <tag>\r\n            // this is not put inside DOMNodeTransforms because that list is used\r\n            // by compiler-ssr to generate vnode fallback branches\r\n            ignoreSideEffectTags,\r\n            ...DOMNodeTransforms,\r\n            ...(options.nodeTransforms || [])\r\n        ],\r\n        directiveTransforms: shared.extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),\r\n        transformHoist: stringifyStatic\r\n    }));\r\n}\r\nfunction parse(template, options = {}) {\r\n    return compilerCore.baseParse(template, shared.extend({}, parserOptions, options));\r\n}\n\nObject.keys(compilerCore).forEach(function (k) {\n  if (k !== 'default') exports[k] = compilerCore[k];\n});\nexports.DOMDirectiveTransforms = DOMDirectiveTransforms;\nexports.DOMNodeTransforms = DOMNodeTransforms;\nexports.TRANSITION = TRANSITION;\nexports.TRANSITION_GROUP = TRANSITION_GROUP;\nexports.V_MODEL_CHECKBOX = V_MODEL_CHECKBOX;\nexports.V_MODEL_DYNAMIC = V_MODEL_DYNAMIC;\nexports.V_MODEL_RADIO = V_MODEL_RADIO;\nexports.V_MODEL_SELECT = V_MODEL_SELECT;\nexports.V_MODEL_TEXT = V_MODEL_TEXT;\nexports.V_ON_WITH_KEYS = V_ON_WITH_KEYS;\nexports.V_ON_WITH_MODIFIERS = V_ON_WITH_MODIFIERS;\nexports.V_SHOW = V_SHOW;\nexports.compile = compile;\nexports.createDOMCompilerError = createDOMCompilerError;\nexports.parse = parse;\nexports.parserOptions = parserOptions;\nexports.transformStyle = transformStyle;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/compiler-dom.cjs.prod.js')\n} else {\n  module.exports = require('./dist/compiler-dom.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar shared = require('@vue/shared');\n\nlet activeEffectScope;\r\nclass EffectScope {\r\n    constructor(detached = false) {\r\n        /**\r\n         * @internal\r\n         */\r\n        this.active = true;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.effects = [];\r\n        /**\r\n         * @internal\r\n         */\r\n        this.cleanups = [];\r\n        if (!detached && activeEffectScope) {\r\n            this.parent = activeEffectScope;\r\n            this.index =\r\n                (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;\r\n        }\r\n    }\r\n    run(fn) {\r\n        if (this.active) {\r\n            const currentEffectScope = activeEffectScope;\r\n            try {\r\n                activeEffectScope = this;\r\n                return fn();\r\n            }\r\n            finally {\r\n                activeEffectScope = currentEffectScope;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * This should only be called on non-detached scopes\r\n     * @internal\r\n     */\r\n    on() {\r\n        activeEffectScope = this;\r\n    }\r\n    /**\r\n     * This should only be called on non-detached scopes\r\n     * @internal\r\n     */\r\n    off() {\r\n        activeEffectScope = this.parent;\r\n    }\r\n    stop(fromParent) {\r\n        if (this.active) {\r\n            let i, l;\r\n            for (i = 0, l = this.effects.length; i < l; i++) {\r\n                this.effects[i].stop();\r\n            }\r\n            for (i = 0, l = this.cleanups.length; i < l; i++) {\r\n                this.cleanups[i]();\r\n            }\r\n            if (this.scopes) {\r\n                for (i = 0, l = this.scopes.length; i < l; i++) {\r\n                    this.scopes[i].stop(true);\r\n                }\r\n            }\r\n            // nested scope, dereference from parent to avoid memory leaks\r\n            if (this.parent && !fromParent) {\r\n                // optimized O(1) removal\r\n                const last = this.parent.scopes.pop();\r\n                if (last && last !== this) {\r\n                    this.parent.scopes[this.index] = last;\r\n                    last.index = this.index;\r\n                }\r\n            }\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\nfunction effectScope(detached) {\r\n    return new EffectScope(detached);\r\n}\r\nfunction recordEffectScope(effect, scope = activeEffectScope) {\r\n    if (scope && scope.active) {\r\n        scope.effects.push(effect);\r\n    }\r\n}\r\nfunction getCurrentScope() {\r\n    return activeEffectScope;\r\n}\r\nfunction onScopeDispose(fn) {\r\n    if (activeEffectScope) {\r\n        activeEffectScope.cleanups.push(fn);\r\n    }\r\n}\n\nconst createDep = (effects) => {\r\n    const dep = new Set(effects);\r\n    dep.w = 0;\r\n    dep.n = 0;\r\n    return dep;\r\n};\r\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\r\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\r\nconst initDepMarkers = ({ deps }) => {\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].w |= trackOpBit; // set was tracked\r\n        }\r\n    }\r\n};\r\nconst finalizeDepMarkers = (effect) => {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        let ptr = 0;\r\n        for (let i = 0; i < deps.length; i++) {\r\n            const dep = deps[i];\r\n            if (wasTracked(dep) && !newTracked(dep)) {\r\n                dep.delete(effect);\r\n            }\r\n            else {\r\n                deps[ptr++] = dep;\r\n            }\r\n            // clear bits\r\n            dep.w &= ~trackOpBit;\r\n            dep.n &= ~trackOpBit;\r\n        }\r\n        deps.length = ptr;\r\n    }\r\n};\n\nconst targetMap = new WeakMap();\r\n// The number of effects currently being tracked recursively.\r\nlet effectTrackDepth = 0;\r\nlet trackOpBit = 1;\r\n/**\r\n * The bitwise track markers support at most 30 levels of recursion.\r\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\r\n * When recursion depth is greater, fall back to using a full cleanup.\r\n */\r\nconst maxMarkerBits = 30;\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol('');\r\nconst MAP_KEY_ITERATE_KEY = Symbol('');\r\nclass ReactiveEffect {\r\n    constructor(fn, scheduler = null, scope) {\r\n        this.fn = fn;\r\n        this.scheduler = scheduler;\r\n        this.active = true;\r\n        this.deps = [];\r\n        this.parent = undefined;\r\n        recordEffectScope(this, scope);\r\n    }\r\n    run() {\r\n        if (!this.active) {\r\n            return this.fn();\r\n        }\r\n        let parent = activeEffect;\r\n        let lastShouldTrack = shouldTrack;\r\n        while (parent) {\r\n            if (parent === this) {\r\n                return;\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        try {\r\n            this.parent = activeEffect;\r\n            activeEffect = this;\r\n            shouldTrack = true;\r\n            trackOpBit = 1 << ++effectTrackDepth;\r\n            if (effectTrackDepth <= maxMarkerBits) {\r\n                initDepMarkers(this);\r\n            }\r\n            else {\r\n                cleanupEffect(this);\r\n            }\r\n            return this.fn();\r\n        }\r\n        finally {\r\n            if (effectTrackDepth <= maxMarkerBits) {\r\n                finalizeDepMarkers(this);\r\n            }\r\n            trackOpBit = 1 << --effectTrackDepth;\r\n            activeEffect = this.parent;\r\n            shouldTrack = lastShouldTrack;\r\n            this.parent = undefined;\r\n            if (this.deferStop) {\r\n                this.stop();\r\n            }\r\n        }\r\n    }\r\n    stop() {\r\n        // stopped while running itself - defer the cleanup\r\n        if (activeEffect === this) {\r\n            this.deferStop = true;\r\n        }\r\n        else if (this.active) {\r\n            cleanupEffect(this);\r\n            if (this.onStop) {\r\n                this.onStop();\r\n            }\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\nfunction cleanupEffect(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nfunction effect(fn, options) {\r\n    if (fn.effect) {\r\n        fn = fn.effect.fn;\r\n    }\r\n    const _effect = new ReactiveEffect(fn);\r\n    if (options) {\r\n        shared.extend(_effect, options);\r\n        if (options.scope)\r\n            recordEffectScope(_effect, options.scope);\r\n    }\r\n    if (!options || !options.lazy) {\r\n        _effect.run();\r\n    }\r\n    const runner = _effect.run.bind(_effect);\r\n    runner.effect = _effect;\r\n    return runner;\r\n}\r\nfunction stop(runner) {\r\n    runner.effect.stop();\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (shouldTrack && activeEffect) {\r\n        let depsMap = targetMap.get(target);\r\n        if (!depsMap) {\r\n            targetMap.set(target, (depsMap = new Map()));\r\n        }\r\n        let dep = depsMap.get(key);\r\n        if (!dep) {\r\n            depsMap.set(key, (dep = createDep()));\r\n        }\r\n        trackEffects(dep);\r\n    }\r\n}\r\nfunction trackEffects(dep, debuggerEventExtraInfo) {\r\n    let shouldTrack = false;\r\n    if (effectTrackDepth <= maxMarkerBits) {\r\n        if (!newTracked(dep)) {\r\n            dep.n |= trackOpBit; // set newly tracked\r\n            shouldTrack = !wasTracked(dep);\r\n        }\r\n    }\r\n    else {\r\n        // Full cleanup mode.\r\n        shouldTrack = !dep.has(activeEffect);\r\n    }\r\n    if (shouldTrack) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    let deps = [];\r\n    if (type === \"clear\" /* TriggerOpTypes.CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        deps = [...depsMap.values()];\r\n    }\r\n    else if (key === 'length' && shared.isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                deps.push(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            deps.push(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* TriggerOpTypes.ADD */:\r\n                if (!shared.isArray(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                    if (shared.isMap(target)) {\r\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (shared.isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    deps.push(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* TriggerOpTypes.DELETE */:\r\n                if (!shared.isArray(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                    if (shared.isMap(target)) {\r\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* TriggerOpTypes.SET */:\r\n                if (shared.isMap(target)) {\r\n                    deps.push(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    if (deps.length === 1) {\r\n        if (deps[0]) {\r\n            {\r\n                triggerEffects(deps[0]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const effects = [];\r\n        for (const dep of deps) {\r\n            if (dep) {\r\n                effects.push(...dep);\r\n            }\r\n        }\r\n        {\r\n            triggerEffects(createDep(effects));\r\n        }\r\n    }\r\n}\r\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\r\n    // spread into array for stabilization\r\n    const effects = shared.isArray(dep) ? dep : [...dep];\r\n    for (const effect of effects) {\r\n        if (effect.computed) {\r\n            triggerEffect(effect);\r\n        }\r\n    }\r\n    for (const effect of effects) {\r\n        if (!effect.computed) {\r\n            triggerEffect(effect);\r\n        }\r\n    }\r\n}\r\nfunction triggerEffect(effect, debuggerEventExtraInfo) {\r\n    if (effect !== activeEffect || effect.allowRecurse) {\r\n        if (effect.scheduler) {\r\n            effect.scheduler();\r\n        }\r\n        else {\r\n            effect.run();\r\n        }\r\n    }\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ shared.makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(\r\n/*#__PURE__*/\r\nObject.getOwnPropertyNames(Symbol)\r\n    // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\r\n    // but accessing them on Symbol leads to TypeError because Symbol is a strict mode\r\n    // function\r\n    .filter(key => key !== 'arguments' && key !== 'caller')\r\n    .map(key => Symbol[key])\r\n    .filter(shared.isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations();\r\nfunction createArrayInstrumentations() {\r\n    const instrumentations = {};\r\n    ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            const arr = toRaw(this);\r\n            for (let i = 0, l = this.length; i < l; i++) {\r\n                track(arr, \"get\" /* TrackOpTypes.GET */, i + '');\r\n            }\r\n            // we run the method using the original args first (which may be reactive)\r\n            const res = arr[key](...args);\r\n            if (res === -1 || res === false) {\r\n                // if that didn't work, run it again using raw values.\r\n                return arr[key](...args.map(toRaw));\r\n            }\r\n            else {\r\n                return res;\r\n            }\r\n        };\r\n    });\r\n    ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            pauseTracking();\r\n            const res = toRaw(this)[key].apply(this, args);\r\n            resetTracking();\r\n            return res;\r\n        };\r\n    });\r\n    return instrumentations;\r\n}\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_isShallow\" /* ReactiveFlags.IS_SHALLOW */) {\r\n            return shallow;\r\n        }\r\n        else if (key === \"__v_raw\" /* ReactiveFlags.RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = shared.isArray(target);\r\n        if (!isReadonly && targetIsArray && shared.hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (shared.isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* TrackOpTypes.GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - skip unwrap for Array + integer key.\r\n            return targetIsArray && shared.isIntegerKey(key) ? res : res.value;\r\n        }\r\n        if (shared.isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        let oldValue = target[key];\r\n        if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\r\n            return false;\r\n        }\r\n        if (!shallow) {\r\n            if (!isShallow(value) && !isReadonly(value)) {\r\n                oldValue = toRaw(oldValue);\r\n                value = toRaw(value);\r\n            }\r\n            if (!shared.isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = shared.isArray(target) && shared.isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : shared.hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* TriggerOpTypes.ADD */, key, value);\r\n            }\r\n            else if (shared.hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* TriggerOpTypes.SET */, key, value);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = shared.hasOwn(target, key);\r\n    target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* TriggerOpTypes.DELETE */, key, undefined);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!shared.isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* TrackOpTypes.HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* TrackOpTypes.ITERATE */, shared.isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = /*#__PURE__*/ shared.extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = /*#__PURE__*/ shared.extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* ReactiveFlags.RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (!isReadonly) {\r\n        if (key !== rawKey) {\r\n            track(rawTarget, \"get\" /* TrackOpTypes.GET */, key);\r\n        }\r\n        track(rawTarget, \"get\" /* TrackOpTypes.GET */, rawKey);\r\n    }\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n    else if (target !== rawTarget) {\r\n        // #3602 readonly(reactive(Map))\r\n        // ensure that the nested reactive `Map` can do tracking for itself\r\n        target.get(key);\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* ReactiveFlags.RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (!isReadonly) {\r\n        if (key !== rawKey) {\r\n            track(rawTarget, \"has\" /* TrackOpTypes.HAS */, key);\r\n        }\r\n        track(rawTarget, \"has\" /* TrackOpTypes.HAS */, rawKey);\r\n    }\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* ReactiveFlags.RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* TrackOpTypes.ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* TriggerOpTypes.ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* TriggerOpTypes.ADD */, key, value);\r\n    }\r\n    else if (shared.hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* TriggerOpTypes.SET */, key, value);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* TriggerOpTypes.DELETE */, key, undefined);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* TriggerOpTypes.CLEAR */, undefined, undefined);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* ReactiveFlags.RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* TrackOpTypes.ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* ReactiveFlags.RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = shared.isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* TrackOpTypes.ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        return type === \"delete\" /* TriggerOpTypes.DELETE */ ? false : this;\r\n    };\r\n}\r\nfunction createInstrumentations() {\r\n    const mutableInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, false)\r\n    };\r\n    const shallowInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, false, true);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, true)\r\n    };\r\n    const readonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* TriggerOpTypes.ADD */),\r\n        set: createReadonlyMethod(\"set\" /* TriggerOpTypes.SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* TriggerOpTypes.DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* TriggerOpTypes.CLEAR */),\r\n        forEach: createForEach(true, false)\r\n    };\r\n    const shallowReadonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* TriggerOpTypes.ADD */),\r\n        set: createReadonlyMethod(\"set\" /* TriggerOpTypes.SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* TriggerOpTypes.DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* TriggerOpTypes.CLEAR */),\r\n        forEach: createForEach(true, true)\r\n    };\r\n    const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\n    iteratorMethods.forEach(method => {\r\n        mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n        readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n        shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n        shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n    });\r\n    return [\r\n        mutableInstrumentations,\r\n        readonlyInstrumentations,\r\n        shallowInstrumentations,\r\n        shallowReadonlyInstrumentations\r\n    ];\r\n}\r\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/ createInstrumentations();\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* ReactiveFlags.RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(shared.hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n};\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* TargetType.COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* TargetType.COLLECTION */;\r\n        default:\r\n            return 0 /* TargetType.INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* ReactiveFlags.SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* TargetType.INVALID */\r\n        : targetTypeMap(shared.toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (isReadonly(target)) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!shared.isObject(target)) {\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* ReactiveFlags.RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only specific value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* TargetType.INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* TargetType.COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* ReactiveFlags.RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */]);\r\n}\r\nfunction isShallow(value) {\r\n    return !!(value && value[\"__v_isShallow\" /* ReactiveFlags.IS_SHALLOW */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    const raw = observed && observed[\"__v_raw\" /* ReactiveFlags.RAW */];\r\n    return raw ? toRaw(raw) : observed;\r\n}\r\nfunction markRaw(value) {\r\n    shared.def(value, \"__v_skip\" /* ReactiveFlags.SKIP */, true);\r\n    return value;\r\n}\r\nconst toReactive = (value) => shared.isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => shared.isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref) {\r\n    if (shouldTrack && activeEffect) {\r\n        ref = toRaw(ref);\r\n        {\r\n            trackEffects(ref.dep || (ref.dep = createDep()));\r\n        }\r\n    }\r\n}\r\nfunction triggerRefValue(ref, newVal) {\r\n    ref = toRaw(ref);\r\n    if (ref.dep) {\r\n        {\r\n            triggerEffects(ref.dep);\r\n        }\r\n    }\r\n}\r\nfunction isRef(r) {\r\n    return !!(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value, false);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nfunction createRef(rawValue, shallow) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nclass RefImpl {\r\n    constructor(value, __v_isShallow) {\r\n        this.__v_isShallow = __v_isShallow;\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        this._rawValue = __v_isShallow ? value : toRaw(value);\r\n        this._value = __v_isShallow ? value : toReactive(value);\r\n    }\r\n    get value() {\r\n        trackRefValue(this);\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\r\n        newVal = useDirectValue ? newVal : toRaw(newVal);\r\n        if (shared.hasChanged(newVal, this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = useDirectValue ? newVal : toReactive(newVal);\r\n            triggerRefValue(this);\r\n        }\r\n    }\r\n}\r\nfunction triggerRef(ref) {\r\n    triggerRefValue(ref);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => trackRefValue(this), () => triggerRefValue(this));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    const ret = shared.isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key, _defaultValue) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this._defaultValue = _defaultValue;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        const val = this._object[this._key];\r\n        return val === undefined ? this._defaultValue : val;\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key, defaultValue) {\r\n    const val = object[key];\r\n    return isRef(val)\r\n        ? val\r\n        : new ObjectRefImpl(object, key, defaultValue);\r\n}\n\nvar _a;\r\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly, isSSR) {\r\n        this._setter = _setter;\r\n        this.dep = undefined;\r\n        this.__v_isRef = true;\r\n        this[_a] = false;\r\n        this._dirty = true;\r\n        this.effect = new ReactiveEffect(getter, () => {\r\n            if (!this._dirty) {\r\n                this._dirty = true;\r\n                triggerRefValue(this);\r\n            }\r\n        });\r\n        this.effect.computed = this;\r\n        this.effect.active = this._cacheable = !isSSR;\r\n        this[\"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        trackRefValue(self);\r\n        if (self._dirty || !self._cacheable) {\r\n            self._dirty = false;\r\n            self._value = self.effect.run();\r\n        }\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\n_a = \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */;\r\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\r\n    let getter;\r\n    let setter;\r\n    const onlyGetter = shared.isFunction(getterOrOptions);\r\n    if (onlyGetter) {\r\n        getter = getterOrOptions;\r\n        setter = shared.NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\r\n    return cRef;\r\n}\n\nvar _a$1;\r\nconst tick = /*#__PURE__*/ Promise.resolve();\r\nconst queue = [];\r\nlet queued = false;\r\nconst scheduler = (fn) => {\r\n    queue.push(fn);\r\n    if (!queued) {\r\n        queued = true;\r\n        tick.then(flush);\r\n    }\r\n};\r\nconst flush = () => {\r\n    for (let i = 0; i < queue.length; i++) {\r\n        queue[i]();\r\n    }\r\n    queue.length = 0;\r\n    queued = false;\r\n};\r\nclass DeferredComputedRefImpl {\r\n    constructor(getter) {\r\n        this.dep = undefined;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this[_a$1] = true;\r\n        let compareTarget;\r\n        let hasCompareTarget = false;\r\n        let scheduled = false;\r\n        this.effect = new ReactiveEffect(getter, (computedTrigger) => {\r\n            if (this.dep) {\r\n                if (computedTrigger) {\r\n                    compareTarget = this._value;\r\n                    hasCompareTarget = true;\r\n                }\r\n                else if (!scheduled) {\r\n                    const valueToCompare = hasCompareTarget ? compareTarget : this._value;\r\n                    scheduled = true;\r\n                    hasCompareTarget = false;\r\n                    scheduler(() => {\r\n                        if (this.effect.active && this._get() !== valueToCompare) {\r\n                            triggerRefValue(this);\r\n                        }\r\n                        scheduled = false;\r\n                    });\r\n                }\r\n                // chained upstream computeds are notified synchronously to ensure\r\n                // value invalidation in case of sync access; normal effects are\r\n                // deferred to be triggered in scheduler.\r\n                for (const e of this.dep) {\r\n                    if (e.computed instanceof DeferredComputedRefImpl) {\r\n                        e.scheduler(true /* computedTrigger */);\r\n                    }\r\n                }\r\n            }\r\n            this._dirty = true;\r\n        });\r\n        this.effect.computed = this;\r\n    }\r\n    _get() {\r\n        if (this._dirty) {\r\n            this._dirty = false;\r\n            return (this._value = this.effect.run());\r\n        }\r\n        return this._value;\r\n    }\r\n    get value() {\r\n        trackRefValue(this);\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        return toRaw(this)._get();\r\n    }\r\n}\r\n_a$1 = \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */;\r\nfunction deferredComputed(getter) {\r\n    return new DeferredComputedRefImpl(getter);\r\n}\n\nexports.EffectScope = EffectScope;\nexports.ITERATE_KEY = ITERATE_KEY;\nexports.ReactiveEffect = ReactiveEffect;\nexports.computed = computed;\nexports.customRef = customRef;\nexports.deferredComputed = deferredComputed;\nexports.effect = effect;\nexports.effectScope = effectScope;\nexports.enableTracking = enableTracking;\nexports.getCurrentScope = getCurrentScope;\nexports.isProxy = isProxy;\nexports.isReactive = isReactive;\nexports.isReadonly = isReadonly;\nexports.isRef = isRef;\nexports.isShallow = isShallow;\nexports.markRaw = markRaw;\nexports.onScopeDispose = onScopeDispose;\nexports.pauseTracking = pauseTracking;\nexports.proxyRefs = proxyRefs;\nexports.reactive = reactive;\nexports.readonly = readonly;\nexports.ref = ref;\nexports.resetTracking = resetTracking;\nexports.shallowReactive = shallowReactive;\nexports.shallowReadonly = shallowReadonly;\nexports.shallowRef = shallowRef;\nexports.stop = stop;\nexports.toRaw = toRaw;\nexports.toRef = toRef;\nexports.toRefs = toRefs;\nexports.track = track;\nexports.trigger = trigger;\nexports.triggerRef = triggerRef;\nexports.unref = unref;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/reactivity.cjs.prod.js')\n} else {\n  module.exports = require('./dist/reactivity.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar reactivity = require('@vue/reactivity');\nvar shared = require('@vue/shared');\n\nconst stack = [];\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    reactivity.pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* ErrorCodes.APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    reactivity.resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (shared.isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (reactivity.isRef(value)) {\r\n        value = formatProp(key, reactivity.toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (shared.isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = reactivity.toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (shared.isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && shared.isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* ErrorCodes.APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = /*#__PURE__*/ Promise.resolve();\r\nlet currentFlushPromise = null;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(id) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < id ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if (!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) {\r\n        if (job.id == null) {\r\n            queue.push(job);\r\n        }\r\n        else {\r\n            queue.splice(findInsertionIndex(job.id), 0, job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    if (!shared.isArray(cb)) {\r\n        if (!activePostFlushCbs ||\r\n            !activePostFlushCbs.includes(cb, cb.allowRecurse ? postFlushIndex + 1 : postFlushIndex)) {\r\n            pendingPostFlushCbs.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingPostFlushCbs.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction flushPreFlushCbs(seen, \r\n// if currently flushing, skip the current job itself\r\ni = isFlushing ? flushIndex + 1 : 0) {\r\n    for (; i < queue.length; i++) {\r\n        const cb = queue[i];\r\n        if (cb && cb.pre) {\r\n            queue.splice(i, 1);\r\n            i--;\r\n            cb();\r\n        }\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nconst comparator = (a, b) => {\r\n    const diff = getId(a) - getId(b);\r\n    if (diff === 0) {\r\n        if (a.pre && !b.pre)\r\n            return -1;\r\n        if (b.pre && !a.pre)\r\n            return 1;\r\n    }\r\n    return diff;\r\n};\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort(comparator);\r\n    // conditional usage of checkRecursiveUpdate must be determined out of\r\n    // try ... catch block since Rollup by default de-optimizes treeshaking\r\n    // inside try-catch. This can leave all warning code unshaked. Although\r\n    // they would get eventually shaken by a minifier like terser, some minifiers\r\n    // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\r\n    const check = shared.NOOP;\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job && job.active !== false) {\r\n                if (false && check(job)) ;\r\n                // console.log(`running:`, job.id)\r\n                callWithErrorHandling(job, null, 14 /* ErrorCodes.SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs();\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs();\r\n        }\r\n    }\r\n}\n\nlet buffer = [];\r\nfunction setDevtoolsHook(hook, target) {\r\n    var _a, _b;\r\n    exports.devtools = hook;\r\n    if (exports.devtools) {\r\n        exports.devtools.enabled = true;\r\n        buffer.forEach(({ event, args }) => exports.devtools.emit(event, ...args));\r\n        buffer = [];\r\n    }\r\n    else if (\r\n    // handle late devtools injection - only do this if we are in an actual\r\n    // browser environment to avoid the timer handle stalling test runner exit\r\n    // (#4815)\r\n    typeof window !== 'undefined' &&\r\n        // some envs mock window but not fully\r\n        window.HTMLElement &&\r\n        // also exclude jsdom\r\n        !((_b = (_a = window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) === null || _b === void 0 ? void 0 : _b.includes('jsdom'))) {\r\n        const replay = (target.__VUE_DEVTOOLS_HOOK_REPLAY__ =\r\n            target.__VUE_DEVTOOLS_HOOK_REPLAY__ || []);\r\n        replay.push((newHook) => {\r\n            setDevtoolsHook(newHook, target);\r\n        });\r\n        // clear buffer after 3s - the user probably doesn't have devtools installed\r\n        // at all, and keeping the buffer will cause memory leaks (#4738)\r\n        setTimeout(() => {\r\n            if (!exports.devtools) {\r\n                target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\r\n                buffer = [];\r\n            }\r\n        }, 3000);\r\n    }\r\n    else {\r\n        buffer = [];\r\n    }\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    if (instance.isUnmounted)\r\n        return;\r\n    const props = instance.vnode.props || shared.EMPTY_OBJ;\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || shared.EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        if (number) {\r\n            args = rawArgs.map(shared.toNumber);\r\n        }\r\n    }\r\n    let handlerName;\r\n    let handler = props[(handlerName = shared.toHandlerKey(event))] ||\r\n        // also try camelCase event handler (#2249)\r\n        props[(handlerName = shared.toHandlerKey(shared.camelize(event)))];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handler = props[(handlerName = shared.toHandlerKey(shared.hyphenate(event)))];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* ErrorCodes.COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            instance.emitted = {};\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        instance.emitted[handlerName] = true;\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* ErrorCodes.COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.emitsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached !== undefined) {\r\n        return cached;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (!shared.isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                shared.extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        if (shared.isObject(comp)) {\r\n            cache.set(comp, null);\r\n        }\r\n        return null;\r\n    }\r\n    if (shared.isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        shared.extend(normalized, raw);\r\n    }\r\n    if (shared.isObject(comp)) {\r\n        cache.set(comp, normalized);\r\n    }\r\n    return normalized;\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !shared.isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (shared.hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        shared.hasOwn(options, shared.hyphenate(key)) ||\r\n        shared.hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot // false only\r\n) {\r\n    if (!ctx)\r\n        return fn;\r\n    // already normalized\r\n    if (fn._n) {\r\n        return fn;\r\n    }\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we disable block tracking and\r\n        // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n        // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n        // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(-1);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(1);\r\n        }\r\n        return res;\r\n    };\r\n    // mark normalized to avoid duplicated wrapping\r\n    renderFnWithContext._n = true;\r\n    // mark this as compiled by default\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    // disable block tracking by default\r\n    renderFnWithContext._d = true;\r\n    return renderFnWithContext;\r\n}\n\nfunction markAttrsAccessed() {\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx, inheritAttrs } = instance;\r\n    let result;\r\n    let fallthroughAttrs;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    try {\r\n        if (vnode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if (false && attrs === props) ;\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, false\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* ErrorCodes.RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    // attr merging\r\n    // in dev mode, comments are preserved, and it's possible for a template\r\n    // to have comments along side the root element which makes it a fragment\r\n    let root = result;\r\n    if (fallthroughAttrs && inheritAttrs !== false) {\r\n        const keys = Object.keys(fallthroughAttrs);\r\n        const { shapeFlag } = root;\r\n        if (keys.length) {\r\n            if (shapeFlag & (1 /* ShapeFlags.ELEMENT */ | 6 /* ShapeFlags.COMPONENT */)) {\r\n                if (propsOptions && keys.some(shared.isModelListener)) {\r\n                    // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                    // prop, it indicates this component expects to handle v-model and\r\n                    // it should not fallthrough.\r\n                    // related: #1543, #1643, #1989\r\n                    fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                }\r\n                root = cloneVNode(root, fallthroughAttrs);\r\n            }\r\n        }\r\n    }\r\n    // inherit directives\r\n    if (vnode.dirs) {\r\n        // clone before mutating since the root may be a hoisted vnode\r\n        root = cloneVNode(root);\r\n        root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n    }\r\n    // inherit transition data\r\n    if (vnode.transition) {\r\n        root.transition = vnode.transition;\r\n    }\r\n    {\r\n        result = root;\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || shared.isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!shared.isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* PatchFlags.DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* PatchFlags.FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PatchFlags.PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary,\r\n    normalize: normalizeSuspenseChildren\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl );\r\nfunction triggerEvent(vnode, name) {\r\n    const eventListener = vnode.props && vnode.props[name];\r\n    if (shared.isFunction(eventListener)) {\r\n        eventListener();\r\n    }\r\n}\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // invoke @fallback event\r\n        triggerEvent(vnode, 'onPending');\r\n        triggerEvent(vnode, 'onFallback');\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            triggerEvent(n2, 'onPending');\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = shared.toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* MoveType.ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* MoveType.ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            triggerEvent(vnode, 'onResolve');\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            triggerEvent(vnode, 'onFallback');\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            suspense.isInFallback = true;\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* ErrorCodes.SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    const isSlotChildren = shapeFlag & 32 /* ShapeFlags.SLOTS_CHILDREN */;\r\n    vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);\r\n    vnode.ssFallback = isSlotChildren\r\n        ? normalizeSuspenseSlot(children.fallback)\r\n        : createVNode(Comment);\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    let block;\r\n    if (shared.isFunction(s)) {\r\n        const trackBlock = isBlockTreeEnabled && s._c;\r\n        if (trackBlock) {\r\n            // disableTracking: false\r\n            // allow block tracking for compiled slots\r\n            // (see ./componentRenderContext.ts)\r\n            s._d = false;\r\n            openBlock();\r\n        }\r\n        s = s();\r\n        if (trackBlock) {\r\n            s._d = true;\r\n            block = currentBlock;\r\n            closeBlock();\r\n        }\r\n    }\r\n    if (shared.isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        s = singleChild;\r\n    }\r\n    s = normalizeVNode(s);\r\n    if (block && !s.dynamicChildren) {\r\n        s.dynamicChildren = block.filter(c => c !== s);\r\n    }\r\n    return s;\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (shared.isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) ;\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the instance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && shared.isFunction(defaultValue)\r\n                ? defaultValue.call(instance.proxy)\r\n                : defaultValue;\r\n        }\r\n        else ;\r\n    }\r\n}\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\nfunction watchPostEffect(effect, options) {\r\n    return doWatch(effect, null, ({ flush: 'post' }));\r\n}\r\nfunction watchSyncEffect(effect, options) {\r\n    return doWatch(effect, null, ({ flush: 'sync' }));\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = shared.EMPTY_OBJ) {\r\n    const instance = currentInstance;\r\n    let getter;\r\n    let forceTrigger = false;\r\n    let isMultiSource = false;\r\n    if (reactivity.isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = reactivity.isShallow(source);\r\n    }\r\n    else if (reactivity.isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (shared.isArray(source)) {\r\n        isMultiSource = true;\r\n        forceTrigger = source.some(s => reactivity.isReactive(s) || reactivity.isShallow(s));\r\n        getter = () => source.map(s => {\r\n            if (reactivity.isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (reactivity.isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (shared.isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* ErrorCodes.WATCH_GETTER */);\r\n            }\r\n            else ;\r\n        });\r\n    }\r\n    else if (shared.isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* ErrorCodes.WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* ErrorCodes.WATCH_CALLBACK */, [onCleanup]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = shared.NOOP;\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onCleanup = (fn) => {\r\n        cleanup = effect.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* ErrorCodes.WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    // in SSR there is no need to setup an actual effect, and it should be noop\r\n    // unless it's eager\r\n    if (isInSSRComponentSetup) {\r\n        // we will also not call the invalidate callback (+ runner is not set up)\r\n        onCleanup = shared.NOOP;\r\n        if (!cb) {\r\n            getter();\r\n        }\r\n        else if (immediate) {\r\n            callWithAsyncErrorHandling(cb, instance, 3 /* ErrorCodes.WATCH_CALLBACK */, [\r\n                getter(),\r\n                isMultiSource ? [] : undefined,\r\n                onCleanup\r\n            ]);\r\n        }\r\n        return shared.NOOP;\r\n    }\r\n    let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!effect.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = effect.run();\r\n            if (deep ||\r\n                forceTrigger ||\r\n                (isMultiSource\r\n                    ? newValue.some((v, i) => shared.hasChanged(v, oldValue[i]))\r\n                    : shared.hasChanged(newValue, oldValue)) ||\r\n                (false  )) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* ErrorCodes.WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onCleanup\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            effect.run();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job; // the scheduler function gets called directly\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        job.pre = true;\r\n        if (instance)\r\n            job.id = instance.uid;\r\n        scheduler = () => queueJob(job);\r\n    }\r\n    const effect = new reactivity.ReactiveEffect(getter, scheduler);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = effect.run();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(effect.run.bind(effect), instance && instance.suspense);\r\n    }\r\n    else {\r\n        effect.run();\r\n    }\r\n    return () => {\r\n        effect.stop();\r\n        if (instance && instance.scope) {\r\n            shared.remove(instance.scope.effects, effect);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, value, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = shared.isString(source)\r\n        ? source.includes('.')\r\n            ? createPathGetter(publicThis, source)\r\n            : () => publicThis[source]\r\n        : source.bind(publicThis, publicThis);\r\n    let cb;\r\n    if (shared.isFunction(value)) {\r\n        cb = value;\r\n    }\r\n    else {\r\n        cb = value.handler;\r\n        options = value;\r\n    }\r\n    const cur = currentInstance;\r\n    setCurrentInstance(this);\r\n    const res = doWatch(getter, cb.bind(publicThis), options);\r\n    if (cur) {\r\n        setCurrentInstance(cur);\r\n    }\r\n    else {\r\n        unsetCurrentInstance();\r\n    }\r\n    return res;\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction traverse(value, seen) {\r\n    if (!shared.isObject(value) || value[\"__v_skip\" /* ReactiveFlags.SKIP */]) {\r\n        return value;\r\n    }\r\n    seen = seen || new Set();\r\n    if (seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (reactivity.isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (shared.isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (shared.isSet(value) || shared.isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else if (shared.isPlainObject(value)) {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            let child = children[0];\r\n            if (children.length > 1) {\r\n                // locate first non-comment child\r\n                for (const c of children) {\r\n                    if (c.type !== Comment) {\r\n                        child = c;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = reactivity.toRaw(props);\r\n            const { mode } = rawProps;\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* ErrorCodes.TRANSITION_HOOK */, args);\r\n    };\r\n    const callAsyncHook = (hook, args) => {\r\n        const done = args[1];\r\n        callHook(hook, args);\r\n        if (shared.isArray(hook)) {\r\n            if (hook.every(hook => hook.length <= 1))\r\n                done();\r\n        }\r\n        else if (hook.length <= 1) {\r\n            done();\r\n        }\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                callAsyncHook(hook, [el, done]);\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                callAsyncHook(onLeave, [el, done]);\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* ShapeFlags.COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        let child = children[i];\r\n        // #5360 inherit parent key in case of <template v-for>\r\n        const key = parentKey == null\r\n            ? child.key\r\n            : String(parentKey) + String(child.key != null ? child.key : i);\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* PatchFlags.KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment, key));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(key != null ? cloneVNode(child, { key }) : child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* PatchFlags.BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return shared.isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (shared.isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest =\r\n                loader()\r\n                    .catch(err => {\r\n                    err = err instanceof Error ? err : new Error(String(err));\r\n                    if (userOnError) {\r\n                        return new Promise((resolve, reject) => {\r\n                            const userRetry = () => resolve(retry());\r\n                            const userFail = () => reject(err);\r\n                            userOnError(err, userRetry, userFail, retries + 1);\r\n                        });\r\n                    }\r\n                    else {\r\n                        throw err;\r\n                    }\r\n                })\r\n                    .then((comp) => {\r\n                    if (thisRequest !== pendingRequest && pendingRequest) {\r\n                        return pendingRequest;\r\n                    }\r\n                    // interop module default\r\n                    if (comp &&\r\n                        (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                        comp = comp.default;\r\n                    }\r\n                    resolvedComp = comp;\r\n                    return comp;\r\n                })));\r\n    };\r\n    return defineComponent({\r\n        name: 'AsyncComponentWrapper',\r\n        __asyncLoader: load,\r\n        get __asyncResolved() {\r\n            return resolvedComp;\r\n        },\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ErrorCodes.ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (isInSSRComponentSetup)) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = reactivity.ref(false);\r\n            const error = reactivity.ref();\r\n            const delayed = reactivity.ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n                if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n                    // parent is keep-alive, force update so the loaded component's\r\n                    // name is taken into account\r\n                    queueJob(instance.parent.update);\r\n                }\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children, shapeFlag }, parent }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return () => {\r\n                const children = slots.default && slots.default();\r\n                return children && children.length === 1 ? children[0] : children;\r\n            };\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* MoveType.ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    shared.invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* MoveType.LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    shared.invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense, true);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            // for async components, name check should be based in its loaded\r\n            // inner component if available\r\n            const name = getComponentName(isAsyncWrapper(vnode)\r\n                ? vnode.type.__asyncResolved || {}\r\n                : comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return isSuspense(rawVNode.type) ? rawVNode : vnode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (shared.isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (shared.isString(pattern)) {\r\n        return pattern.split(',').includes(name);\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* LifecycleHooks.ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* LifecycleHooks.DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            return hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        shared.remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                reactivity.pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                unsetCurrentInstance();\r\n                reactivity.resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n(!isInSSRComponentSetup || lifecycle === \"sp\" /* LifecycleHooks.SERVER_PREFETCH */) &&\r\n    injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* LifecycleHooks.BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* LifecycleHooks.MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* LifecycleHooks.BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* LifecycleHooks.UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* LifecycleHooks.BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* LifecycleHooks.UNMOUNTED */);\r\nconst onServerPrefetch = createHook(\"sp\" /* LifecycleHooks.SERVER_PREFETCH */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* LifecycleHooks.RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* LifecycleHooks.RENDER_TRACKED */);\r\nfunction onErrorCaptured(hook, target = currentInstance) {\r\n    injectHook(\"ec\" /* LifecycleHooks.ERROR_CAPTURED */, hook, target);\r\n}\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        return vnode;\r\n    }\r\n    const instance = getExposeProxy(internalInstance) ||\r\n        internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = shared.EMPTY_OBJ] = directives[i];\r\n        if (shared.isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        if (dir.deep) {\r\n            traverse(value);\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        let hook = binding.dir[name];\r\n        if (hook) {\r\n            // disable tracking inside all lifecycle hooks\r\n            // since they can potentially be called inside effects.\r\n            reactivity.pauseTracking();\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* ErrorCodes.DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n            reactivity.resetTracking();\r\n        }\r\n    }\r\n}\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (shared.isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component, false /* do not include inferred name to avoid breaking existing code */);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === shared.camelize(name) ||\r\n                    selfName === shared.capitalize(shared.camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first which is resolved for options API\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        return res;\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[shared.camelize(name)] ||\r\n            registry[shared.capitalize(shared.camelize(name))]));\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem, cache, index) {\r\n    let ret;\r\n    const cached = (cache && cache[index]);\r\n    if (shared.isArray(source) || shared.isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i, undefined, cached && cached[i]);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i, undefined, cached && cached[i]);\r\n        }\r\n    }\r\n    else if (shared.isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, (item, i) => renderItem(item, i, undefined, cached && cached[i]));\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i, cached && cached[i]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    if (cache) {\r\n        cache[index] = ret;\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (shared.isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.key\r\n                ? (...args) => {\r\n                    const res = slot.fn(...args);\r\n                    res.key = slot.key;\r\n                    return res;\r\n                }\r\n                : slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    if (currentRenderingInstance.isCE ||\r\n        (currentRenderingInstance.parent &&\r\n            isAsyncWrapper(currentRenderingInstance.parent) &&\r\n            currentRenderingInstance.parent.isCE)) {\r\n        return createVNode('slot', name === 'default' ? null : { name }, fallback && fallback());\r\n    }\r\n    let slot = slots[name];\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    if (slot && slot._c) {\r\n        slot._d = false;\r\n    }\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, {\r\n        key: props.key ||\r\n            // slot content array of a dynamic conditional slot may have a branch\r\n            // key attached in the `createSlots` helper, respect that\r\n            (validSlotContent && validSlotContent.key) ||\r\n            `_${name}`\r\n    }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* SlotFlags.STABLE */\r\n        ? 64 /* PatchFlags.STABLE_FRAGMENT */\r\n        : -2 /* PatchFlags.BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    if (slot && slot._c) {\r\n        slot._d = true;\r\n    }\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj, preserveCaseIfNecessary) {\r\n    const ret = {};\r\n    for (const key in obj) {\r\n        ret[preserveCaseIfNecessary && /[A-Z]/.test(key)\r\n            ? `on:${key}`\r\n            : shared.toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return getExposeProxy(i) || i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = \r\n// Move PURE marker to new line to workaround compiler discarding it\r\n// due to type annotation\r\n/*#__PURE__*/ shared.extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => (i.props),\r\n    $attrs: i => (i.attrs),\r\n    $slots: i => (i.slots),\r\n    $refs: i => (i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (resolveMergedOptions(i) ),\r\n    $forceUpdate: i => i.f || (i.f = () => queueJob(i.update)),\r\n    $nextTick: i => i.n || (i.n = nextTick.bind(i.proxy)),\r\n    $watch: i => (instanceWatch.bind(i) )\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 1 /* AccessTypes.SETUP */:\r\n                        return setupState[key];\r\n                    case 2 /* AccessTypes.DATA */:\r\n                        return data[key];\r\n                    case 4 /* AccessTypes.CONTEXT */:\r\n                        return ctx[key];\r\n                    case 3 /* AccessTypes.PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== shared.EMPTY_OBJ && shared.hasOwn(setupState, key)) {\r\n                accessCache[key] = 1 /* AccessTypes.SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) {\r\n                accessCache[key] = 2 /* AccessTypes.DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                shared.hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 3 /* AccessTypes.PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== shared.EMPTY_OBJ && shared.hasOwn(ctx, key)) {\r\n                accessCache[key] = 4 /* AccessTypes.CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (shouldCacheAccess) {\r\n                accessCache[key] = 0 /* AccessTypes.OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                reactivity.track(instance, \"get\" /* TrackOpTypes.GET */, key);\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== shared.EMPTY_OBJ && shared.hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 4 /* AccessTypes.CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            shared.hasOwn(globalProperties, key))) {\r\n            {\r\n                return globalProperties[key];\r\n            }\r\n        }\r\n        else ;\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== shared.EMPTY_OBJ && shared.hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n            return true;\r\n        }\r\n        else if (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) {\r\n            data[key] = value;\r\n            return true;\r\n        }\r\n        else if (shared.hasOwn(instance.props, key)) {\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            return false;\r\n        }\r\n        else {\r\n            {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (!!accessCache[key] ||\r\n            (data !== shared.EMPTY_OBJ && shared.hasOwn(data, key)) ||\r\n            (setupState !== shared.EMPTY_OBJ && shared.hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && shared.hasOwn(normalizedProps, key)) ||\r\n            shared.hasOwn(ctx, key) ||\r\n            shared.hasOwn(publicPropertiesMap, key) ||\r\n            shared.hasOwn(appContext.config.globalProperties, key));\r\n    },\r\n    defineProperty(target, key, descriptor) {\r\n        if (descriptor.get != null) {\r\n            // invalidate key cache of a getter based property #5417\r\n            target._.accessCache[key] = 0;\r\n        }\r\n        else if (shared.hasOwn(descriptor, 'value')) {\r\n            this.set(target, key, descriptor.value, null);\r\n        }\r\n        return Reflect.defineProperty(target, key, descriptor);\r\n    }\r\n};\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ shared.extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !shared.isGloballyWhitelisted(key);\r\n        return has;\r\n    }\r\n});\n\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance) {\r\n    const options = resolveMergedOptions(instance);\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    // do not cache property access on public proxy during state initialization\r\n    shouldCacheAccess = false;\r\n    // call beforeCreate first before accessing other options since\r\n    // the hook may mutate resolved options (#2791)\r\n    if (options.beforeCreate) {\r\n        callHook(options.beforeCreate, instance, \"bc\" /* LifecycleHooks.BEFORE_CREATE */);\r\n    }\r\n    const { \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // lifecycle\r\n    created, beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, serverPrefetch, \r\n    // public API\r\n    expose, inheritAttrs, \r\n    // assets\r\n    components, directives, filters } = options;\r\n    const checkDuplicateProperties = null;\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        resolveInjections(injectOptions, ctx, checkDuplicateProperties, instance.appContext.config.unwrapInjectedRef);\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (shared.isFunction(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define\r\n                // methods to the proxy target, and those are read-only but\r\n                // reconfigurable, so it needs to be redefined here\r\n                {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (dataOptions) {\r\n        const data = dataOptions.call(publicThis, publicThis);\r\n        if (!shared.isObject(data)) ;\r\n        else {\r\n            instance.data = reactivity.reactive(data);\r\n        }\r\n    }\r\n    // state initialization complete at this point - start caching access\r\n    shouldCacheAccess = true;\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = shared.isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : shared.isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : shared.NOOP;\r\n            const set = !shared.isFunction(opt) && shared.isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : shared.NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        for (const key in watchOptions) {\r\n            createWatcher(watchOptions[key], ctx, publicThis, key);\r\n        }\r\n    }\r\n    if (provideOptions) {\r\n        const provides = shared.isFunction(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        Reflect.ownKeys(provides).forEach(key => {\r\n            provide(key, provides[key]);\r\n        });\r\n    }\r\n    if (created) {\r\n        callHook(created, instance, \"c\" /* LifecycleHooks.CREATED */);\r\n    }\r\n    function registerLifecycleHook(register, hook) {\r\n        if (shared.isArray(hook)) {\r\n            hook.forEach(_hook => register(_hook.bind(publicThis)));\r\n        }\r\n        else if (hook) {\r\n            register(hook.bind(publicThis));\r\n        }\r\n    }\r\n    registerLifecycleHook(onBeforeMount, beforeMount);\r\n    registerLifecycleHook(onMounted, mounted);\r\n    registerLifecycleHook(onBeforeUpdate, beforeUpdate);\r\n    registerLifecycleHook(onUpdated, updated);\r\n    registerLifecycleHook(onActivated, activated);\r\n    registerLifecycleHook(onDeactivated, deactivated);\r\n    registerLifecycleHook(onErrorCaptured, errorCaptured);\r\n    registerLifecycleHook(onRenderTracked, renderTracked);\r\n    registerLifecycleHook(onRenderTriggered, renderTriggered);\r\n    registerLifecycleHook(onBeforeUnmount, beforeUnmount);\r\n    registerLifecycleHook(onUnmounted, unmounted);\r\n    registerLifecycleHook(onServerPrefetch, serverPrefetch);\r\n    if (shared.isArray(expose)) {\r\n        if (expose.length) {\r\n            const exposed = instance.exposed || (instance.exposed = {});\r\n            expose.forEach(key => {\r\n                Object.defineProperty(exposed, key, {\r\n                    get: () => publicThis[key],\r\n                    set: val => (publicThis[key] = val)\r\n                });\r\n            });\r\n        }\r\n        else if (!instance.exposed) {\r\n            instance.exposed = {};\r\n        }\r\n    }\r\n    // options that are handled when creating the instance but also need to be\r\n    // applied from mixins\r\n    if (render && instance.render === shared.NOOP) {\r\n        instance.render = render;\r\n    }\r\n    if (inheritAttrs != null) {\r\n        instance.inheritAttrs = inheritAttrs;\r\n    }\r\n    // asset options.\r\n    if (components)\r\n        instance.components = components;\r\n    if (directives)\r\n        instance.directives = directives;\r\n}\r\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = shared.NOOP, unwrapRef = false) {\r\n    if (shared.isArray(injectOptions)) {\r\n        injectOptions = normalizeInject(injectOptions);\r\n    }\r\n    for (const key in injectOptions) {\r\n        const opt = injectOptions[key];\r\n        let injected;\r\n        if (shared.isObject(opt)) {\r\n            if ('default' in opt) {\r\n                injected = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n            }\r\n            else {\r\n                injected = inject(opt.from || key);\r\n            }\r\n        }\r\n        else {\r\n            injected = inject(opt);\r\n        }\r\n        if (reactivity.isRef(injected)) {\r\n            // TODO remove the check in 3.3\r\n            if (unwrapRef) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    get: () => injected.value,\r\n                    set: v => (injected.value = v)\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = injected;\r\n            }\r\n        }\r\n        else {\r\n            ctx[key] = injected;\r\n        }\r\n    }\r\n}\r\nfunction callHook(hook, instance, type) {\r\n    callWithAsyncErrorHandling(shared.isArray(hook)\r\n        ? hook.map(h => h.bind(instance.proxy))\r\n        : hook.bind(instance.proxy), instance, type);\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (shared.isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (shared.isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n    }\r\n    else if (shared.isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (shared.isObject(raw)) {\r\n        if (shared.isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = shared.isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (shared.isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n        }\r\n    }\r\n    else ;\r\n}\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nfunction resolveMergedOptions(instance) {\r\n    const base = instance.type;\r\n    const { mixins, extends: extendsOptions } = base;\r\n    const { mixins: globalMixins, optionsCache: cache, config: { optionMergeStrategies } } = instance.appContext;\r\n    const cached = cache.get(base);\r\n    let resolved;\r\n    if (cached) {\r\n        resolved = cached;\r\n    }\r\n    else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n        {\r\n            resolved = base;\r\n        }\r\n    }\r\n    else {\r\n        resolved = {};\r\n        if (globalMixins.length) {\r\n            globalMixins.forEach(m => mergeOptions(resolved, m, optionMergeStrategies, true));\r\n        }\r\n        mergeOptions(resolved, base, optionMergeStrategies);\r\n    }\r\n    if (shared.isObject(base)) {\r\n        cache.set(base, resolved);\r\n    }\r\n    return resolved;\r\n}\r\nfunction mergeOptions(to, from, strats, asMixin = false) {\r\n    const { mixins, extends: extendsOptions } = from;\r\n    if (extendsOptions) {\r\n        mergeOptions(to, extendsOptions, strats, true);\r\n    }\r\n    if (mixins) {\r\n        mixins.forEach((m) => mergeOptions(to, m, strats, true));\r\n    }\r\n    for (const key in from) {\r\n        if (asMixin && key === 'expose') ;\r\n        else {\r\n            const strat = internalOptionMergeStrats[key] || (strats && strats[key]);\r\n            to[key] = strat ? strat(to[key], from[key]) : from[key];\r\n        }\r\n    }\r\n    return to;\r\n}\r\nconst internalOptionMergeStrats = {\r\n    data: mergeDataFn,\r\n    props: mergeObjectOptions,\r\n    emits: mergeObjectOptions,\r\n    // objects\r\n    methods: mergeObjectOptions,\r\n    computed: mergeObjectOptions,\r\n    // lifecycle\r\n    beforeCreate: mergeAsArray,\r\n    created: mergeAsArray,\r\n    beforeMount: mergeAsArray,\r\n    mounted: mergeAsArray,\r\n    beforeUpdate: mergeAsArray,\r\n    updated: mergeAsArray,\r\n    beforeDestroy: mergeAsArray,\r\n    beforeUnmount: mergeAsArray,\r\n    destroyed: mergeAsArray,\r\n    unmounted: mergeAsArray,\r\n    activated: mergeAsArray,\r\n    deactivated: mergeAsArray,\r\n    errorCaptured: mergeAsArray,\r\n    serverPrefetch: mergeAsArray,\r\n    // assets\r\n    components: mergeObjectOptions,\r\n    directives: mergeObjectOptions,\r\n    // watch\r\n    watch: mergeWatchOptions,\r\n    // provide / inject\r\n    provide: mergeDataFn,\r\n    inject: mergeInject\r\n};\r\nfunction mergeDataFn(to, from) {\r\n    if (!from) {\r\n        return to;\r\n    }\r\n    if (!to) {\r\n        return from;\r\n    }\r\n    return function mergedDataFn() {\r\n        return (shared.extend)(shared.isFunction(to) ? to.call(this, this) : to, shared.isFunction(from) ? from.call(this, this) : from);\r\n    };\r\n}\r\nfunction mergeInject(to, from) {\r\n    return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\r\n}\r\nfunction normalizeInject(raw) {\r\n    if (shared.isArray(raw)) {\r\n        const res = {};\r\n        for (let i = 0; i < raw.length; i++) {\r\n            res[raw[i]] = raw[i];\r\n        }\r\n        return res;\r\n    }\r\n    return raw;\r\n}\r\nfunction mergeAsArray(to, from) {\r\n    return to ? [...new Set([].concat(to, from))] : from;\r\n}\r\nfunction mergeObjectOptions(to, from) {\r\n    return to ? shared.extend(shared.extend(Object.create(null), to), from) : from;\r\n}\r\nfunction mergeWatchOptions(to, from) {\r\n    if (!to)\r\n        return from;\r\n    if (!from)\r\n        return to;\r\n    const merged = shared.extend(Object.create(null), to);\r\n    for (const key in from) {\r\n        merged[key] = mergeAsArray(to[key], from[key]);\r\n    }\r\n    return merged;\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    shared.def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // ensure all declared prop keys are present\r\n    for (const key in instance.propsOptions[0]) {\r\n        if (!(key in props)) {\r\n            props[key] = undefined;\r\n        }\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : reactivity.shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = reactivity.toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* PatchFlags.FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PatchFlags.PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                let key = propsToUpdate[i];\r\n                // skip if the prop key is a declared emit event listener\r\n                if (isEmitListener(instance.emitsOptions, key)) {\r\n                    continue;\r\n                }\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (shared.hasOwn(attrs, key)) {\r\n                        if (value !== attrs[key]) {\r\n                            attrs[key] = value;\r\n                            hasAttrsChanged = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        const camelizedKey = shared.camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    if (value !== attrs[key]) {\r\n                        attrs[key] = value;\r\n                        hasAttrsChanged = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        if (setFullProps(instance, rawProps, props, attrs)) {\r\n            hasAttrsChanged = true;\r\n        }\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!shared.hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = shared.hyphenate(key)) === key || !shared.hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps ||\r\n                    (!shared.hasOwn(rawProps, key) &&\r\n                        (!false ))) {\r\n                    delete attrs[key];\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    if (hasAttrsChanged) {\r\n        reactivity.trigger(instance, \"set\" /* TriggerOpTypes.SET */, '$attrs');\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    let rawCastValues;\r\n    if (rawProps) {\r\n        for (let key in rawProps) {\r\n            // key, ref are reserved and never passed down\r\n            if (shared.isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            const value = rawProps[key];\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && shared.hasOwn(options, (camelKey = shared.camelize(key)))) {\r\n                if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n                    props[camelKey] = value;\r\n                }\r\n                else {\r\n                    (rawCastValues || (rawCastValues = {}))[camelKey] = value;\r\n                }\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                if (!(key in attrs) || value !== attrs[key]) {\r\n                    attrs[key] = value;\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = reactivity.toRaw(props);\r\n        const castValues = rawCastValues || shared.EMPTY_OBJ;\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !shared.hasOwn(castValues, key));\r\n        }\r\n    }\r\n    return hasAttrsChanged;\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = shared.hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && shared.isFunction(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue.call(null, props);\r\n                    unsetCurrentInstance();\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* BooleanFlags.shouldCast */]) {\r\n            if (isAbsent && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* BooleanFlags.shouldCastTrue */] &&\r\n                (value === '' || value === shared.hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.propsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (!shared.isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            shared.extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        if (shared.isObject(comp)) {\r\n            cache.set(comp, shared.EMPTY_ARR);\r\n        }\r\n        return shared.EMPTY_ARR;\r\n    }\r\n    if (shared.isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            const normalizedKey = shared.camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = shared.EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        for (const key in raw) {\r\n            const normalizedKey = shared.camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    shared.isArray(opt) || shared.isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* BooleanFlags.shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* BooleanFlags.shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || shared.hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const res = [normalized, needCastKeys];\r\n    if (shared.isObject(comp)) {\r\n        cache.set(comp, res);\r\n    }\r\n    return res;\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : ctor === null ? 'null' : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (shared.isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (shared.isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => shared.isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => {\r\n    if (rawSlot._n) {\r\n        // already normalized - #5353\r\n        return rawSlot;\r\n    }\r\n    const normalized = withCtx((...args) => {\r\n        return normalizeSlotValue(rawSlot(...args));\r\n    }, ctx);\r\n    normalized._c = false;\r\n    return normalized;\r\n};\r\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (shared.isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* ShapeFlags.SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n            // we should avoid the proxy object polluting the slots of the internal instance\r\n            instance.slots = reactivity.toRaw(children);\r\n            // make compiler marker non-enumerable\r\n            shared.def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    shared.def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children, optimized) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = shared.EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* ShapeFlags.SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if (optimized && type === 1 /* SlotFlags.STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                shared.extend(slots, children);\r\n                // #2893\r\n                // when rendering the optimized slots by manually written render function,\r\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n                // i.e. let the `renderSlot` create the bailed Fragment\r\n                if (!optimized && type === 1 /* SlotFlags.STABLE */) {\r\n                    delete slots._;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: shared.NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            errorHandler: undefined,\r\n            warnHandler: undefined,\r\n            compilerOptions: {}\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null),\r\n        optionsCache: new WeakMap(),\r\n        propsCache: new WeakMap(),\r\n        emitsCache: new WeakMap()\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (!shared.isFunction(rootComponent)) {\r\n            rootComponent = { ...rootComponent };\r\n        }\r\n        if (rootProps != null && !shared.isObject(rootProps)) {\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            _instance: null,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) ;\r\n                else if (plugin && shared.isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (shared.isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else ;\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    return getExposeProxy(vnode.component) || vnode.component.proxy;\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    delete app._container.__vue_app__;\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\n/**\r\n * Function for handling a template ref\r\n */\r\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\r\n    if (shared.isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (shared.isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));\r\n        return;\r\n    }\r\n    if (isAsyncWrapper(vnode) && !isUnmount) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    const refValue = vnode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */\r\n        ? getExposeProxy(vnode.component) || vnode.component.proxy\r\n        : vnode.el;\r\n    const value = isUnmount ? null : refValue;\r\n    const { i: owner, r: ref } = rawRef;\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === shared.EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // dynamic ref changed. unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (shared.isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (shared.hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (reactivity.isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (shared.isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* ErrorCodes.FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else {\r\n        const _isString = shared.isString(ref);\r\n        const _isRef = reactivity.isRef(ref);\r\n        if (_isString || _isRef) {\r\n            const doSet = () => {\r\n                if (rawRef.f) {\r\n                    const existing = _isString ? refs[ref] : ref.value;\r\n                    if (isUnmount) {\r\n                        shared.isArray(existing) && shared.remove(existing, refValue);\r\n                    }\r\n                    else {\r\n                        if (!shared.isArray(existing)) {\r\n                            if (_isString) {\r\n                                refs[ref] = [refValue];\r\n                                if (shared.hasOwn(setupState, ref)) {\r\n                                    setupState[ref] = refs[ref];\r\n                                }\r\n                            }\r\n                            else {\r\n                                ref.value = [refValue];\r\n                                if (rawRef.k)\r\n                                    refs[rawRef.k] = ref.value;\r\n                            }\r\n                        }\r\n                        else if (!existing.includes(refValue)) {\r\n                            existing.push(refValue);\r\n                        }\r\n                    }\r\n                }\r\n                else if (_isString) {\r\n                    refs[ref] = value;\r\n                    if (shared.hasOwn(setupState, ref)) {\r\n                        setupState[ref] = value;\r\n                    }\r\n                }\r\n                else if (_isRef) {\r\n                    ref.value = value;\r\n                    if (rawRef.k)\r\n                        refs[rawRef.k] = value;\r\n                }\r\n                else ;\r\n            };\r\n            if (value) {\r\n                doSet.id = -1;\r\n                queuePostRenderEffect(doSet, parentSuspense);\r\n            }\r\n            else {\r\n                doSet();\r\n            }\r\n        }\r\n    }\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* DOMNodeTypes.COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, createText, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if (!container.hasChildNodes()) {\r\n            patch(null, vnode, container);\r\n            flushPostFlushCbs();\r\n            container._vnode = vnode;\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag, patchFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        if (patchFlag === -2 /* PatchFlags.BAIL */) {\r\n            optimized = false;\r\n            vnode.dynamicChildren = null;\r\n        }\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* DOMNodeTypes.TEXT */) {\r\n                    // #5728 empty text node inside a slot can cause hydration failure\r\n                    // because the server rendered HTML won't contain a text node\r\n                    if (vnode.children === '') {\r\n                        insert((vnode.el = createText('')), parentNode(node), node);\r\n                        nextNode = node;\r\n                    }\r\n                    else {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* DOMNodeTypes.COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* DOMNodeTypes.ELEMENT */ && domType !== 3 /* DOMNodeTypes.TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children +=\r\n                                nextNode.nodeType === 1 /* DOMNodeTypes.ELEMENT */\r\n                                    ? nextNode.outerHTML\r\n                                    : nextNode.data;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ShapeFlags.ELEMENT */) {\r\n                    if (domType !== 1 /* DOMNodeTypes.ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                    // #4293 teleport as component root\r\n                    if (nextNode &&\r\n                        isComment(nextNode) &&\r\n                        nextNode.data === 'teleport end') {\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    // #3787\r\n                    // if component is async, it may get moved / unmounted before its\r\n                    // inner component is loaded, so we need to give it a placeholder\r\n                    // vnode that matches its adopted DOM.\r\n                    if (isAsyncWrapper(vnode)) {\r\n                        let subTree;\r\n                        if (isFragmentStart) {\r\n                            subTree = createVNode(Fragment);\r\n                            subTree.anchor = nextNode\r\n                                ? nextNode.previousSibling\r\n                                : container.lastChild;\r\n                        }\r\n                        else {\r\n                            subTree =\r\n                                node.nodeType === 3 ? createTextVNode('') : createVNode('div');\r\n                        }\r\n                        subTree.el = node;\r\n                        vnode.component.subTree = subTree;\r\n                    }\r\n                }\r\n                else if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\r\n                    if (domType !== 8 /* DOMNodeTypes.COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else ;\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { type, props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // #4006 for form elements with non-string v-model value bindings\r\n        // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n        const forcePatchValue = (type === 'input' && dirs) || type === 'option';\r\n        // skip props & children if this is hoisted static nodes\r\n        // #5405 in dev, always hydrate children for HMR\r\n        if (forcePatchValue || patchFlag !== -1 /* PatchFlags.HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (forcePatchValue ||\r\n                    !optimized ||\r\n                    patchFlag & (16 /* PatchFlags.FULL_PROPS */ | 32 /* PatchFlags.HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if ((forcePatchValue && key.endsWith('value')) ||\r\n                            (shared.isOn(key) && !shared.isReservedProp(key))) {\r\n                            patchProp(el, key, null, props[key], false, undefined, parentComponent);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick, false, undefined, parentComponent);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    const target = shared.getGlobalThis();\r\n    target.__VUE__ = true;\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = shared.NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = !!n2.dynamicChildren) => {\r\n        if (n1 === n2) {\r\n            return;\r\n        }\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* PatchFlags.BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ShapeFlags.ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else ;\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG, n2.el, n2.anchor);\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        if (vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* PatchFlags.HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (key !== 'value' && !shared.isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                /**\r\n                 * Special case for setting value on DOM elements:\r\n                 * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\r\n                 * - it needs to be forced (#1471)\r\n                 * #2353 proposes adding another renderer option to configure this, but\r\n                 * the properties affects are so finite it is worth special casing it\r\n                 * here to reduce the complexity. (Special casing it also should not\r\n                 * affect non-DOM renderers)\r\n                 */\r\n                if ('value' in props) {\r\n                    hostPatchProp(el, 'value', null, props.value);\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* PatchFlags.FULL_PROPS */;\r\n        const oldProps = n1.props || shared.EMPTY_OBJ;\r\n        const newProps = n2.props || shared.EMPTY_OBJ;\r\n        let vnodeHook;\r\n        // disable recurse in beforeUpdate hooks\r\n        parentComponent && toggleRecurse(parentComponent, false);\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        parentComponent && toggleRecurse(parentComponent, true);\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* PatchFlags.FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* PatchFlags.CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* PatchFlags.STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PatchFlags.PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        // #1471 force patch value\r\n                        if (next !== prev || key === 'value') {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* PatchFlags.TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // oldVNode may be an errored async setup() component inside Suspense\r\n            // which will not have a mounted element\r\n            oldVNode.el &&\r\n                // - In the case of a Fragment, we need to provide the actual parent\r\n                // of the Fragment itself so it can move its children.\r\n                (oldVNode.type === Fragment ||\r\n                    // - In the case of different nodes, there is going to be a replacement\r\n                    // which also requires the correct parent container\r\n                    !isSameVNodeType(oldVNode, newVNode) ||\r\n                    // - In the case of a component, it could contain anything.\r\n                    oldVNode.shapeFlag & (6 /* ShapeFlags.COMPONENT */ | 64 /* ShapeFlags.TELEPORT */))\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (shared.isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                // defer patching value\r\n                if (next !== prev && key !== 'value') {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== shared.EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!shared.isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n            if ('value' in newProps) {\r\n                hostPatchProp(el, 'value', oldProps.value, newProps.value);\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* PatchFlags.STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        {\r\n            setupComponent(instance);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        const componentUpdateFn = () => {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\r\n                toggleRecurse(instance, false);\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    shared.invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if (!isAsyncWrapperVNode &&\r\n                    (vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                toggleRecurse(instance, true);\r\n                if (el && hydrateNode) {\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    const hydrateSubTree = () => {\r\n                        instance.subTree = renderComponentRoot(instance);\r\n                        hydrateNode(el, instance.subTree, instance, parentSuspense, null);\r\n                    };\r\n                    if (isAsyncWrapperVNode) {\r\n                        initialVNode.type.__asyncLoader().then(\r\n                        // note: we are moving the render call into an async callback,\r\n                        // which means it won't track dependencies - but it's ok because\r\n                        // a server-rendered async wrapper is already in resolved state\r\n                        // and it will never need to change.\r\n                        () => !instance.isUnmounted && hydrateSubTree());\r\n                    }\r\n                    else {\r\n                        hydrateSubTree();\r\n                    }\r\n                }\r\n                else {\r\n                    const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if (!isAsyncWrapperVNode &&\r\n                    (vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                if (initialVNode.shapeFlag & 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */ ||\r\n                    (parent &&\r\n                        isAsyncWrapper(parent.vnode) &&\r\n                        parent.vnode.shapeFlag & 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */)) {\r\n                    instance.a && queuePostRenderEffect(instance.a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                // Disallow component effect recursion during pre-lifecycle hooks.\r\n                toggleRecurse(instance, false);\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    shared.invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                toggleRecurse(instance, true);\r\n                const nextTree = renderComponentRoot(instance);\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);\r\n                }\r\n            }\r\n        };\r\n        // create reactive effect for rendering\r\n        const effect = (instance.effect = new reactivity.ReactiveEffect(componentUpdateFn, () => queueJob(update), instance.scope // track it in component's effect scope\r\n        ));\r\n        const update = (instance.update = () => effect.run());\r\n        update.id = instance.uid;\r\n        // allowRecurse\r\n        // #1801, #2043 component render effects should allow recursive updates\r\n        toggleRecurse(instance, true);\r\n        update();\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children, optimized);\r\n        reactivity.pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs();\r\n        reactivity.resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* PatchFlags.KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* PatchFlags.UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || shared.EMPTY_ARR;\r\n        c2 = c2 || shared.EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : shared.EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* MoveType.REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* MoveType.REORDER */ &&\r\n            shapeFlag & 1 /* ShapeFlags.ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* MoveType.ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode, true);\r\n        }\r\n        if (shapeFlag & 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ShapeFlags.ELEMENT */ && dirs;\r\n        const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\r\n        let vnodeHook;\r\n        if (shouldInvokeVnodeHook &&\r\n            (vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            else if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* PatchFlags.STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                patchFlag &\r\n                    (128 /* PatchFlags.KEYED_FRAGMENT */ | 256 /* PatchFlags.UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((shouldInvokeVnodeHook &&\r\n            (vnodeHook = props && props.onVnodeUnmounted)) ||\r\n            shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            {\r\n                removeFragment(el, anchor);\r\n            }\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ShapeFlags.ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        const { bum, scope, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            shared.invokeArrayFns(bum);\r\n        }\r\n        // stop effects in component scope\r\n        scope.stop();\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            // so that scheduler will no longer invoke it\r\n            update.active = false;\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPreFlushCbs();\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction toggleRecurse({ effect, update }, allowed) {\r\n    effect.allowRecurse = update.allowRecurse = allowed;\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always be moved. Therefore, in order to ensure correct move\r\n * position, el should be inherited from previous nodes.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (shared.isArray(ch1) && shared.isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ShapeFlags.ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* PatchFlags.HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = (u + v) >> 1;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (shared.isString(targetSelector)) {\r\n        if (!select) {\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        let { shapeFlag, children, dynamicChildren } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = createText(''));\r\n            const mainAnchor = (n2.anchor = createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TeleportMoveTypes.TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TeleportMoveTypes.TARGET_CHANGE */);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TeleportMoveTypes.TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    const child = children[i];\r\n                    unmount(child, parentComponent, parentSuspense, true, !!child.dynamicChildren);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* TeleportMoveTypes.REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TeleportMoveTypes.TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* TeleportMoveTypes.REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* MoveType.REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                // lookahead until we find the target anchor\r\n                // we cannot rely on return value of hydrateChildren() because there\r\n                // could be nested teleports\r\n                let targetAnchor = targetNode;\r\n                while (targetAnchor) {\r\n                    targetAnchor = nextSibling(targetAnchor);\r\n                    if (targetAnchor &&\r\n                        targetAnchor.nodeType === 8 &&\r\n                        targetAnchor.data === 'teleport anchor') {\r\n                        vnode.targetAnchor = targetAnchor;\r\n                        target._lpa =\r\n                            vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n                        break;\r\n                    }\r\n                }\r\n                hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst Fragment = Symbol(undefined);\r\nconst Text = Symbol(undefined);\r\nconst Comment = Symbol(undefined);\r\nconst Static = Symbol(undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet isBlockTreeEnabled = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    isBlockTreeEnabled += value;\r\n}\r\nfunction setupBlock(vnode) {\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren =\r\n        isBlockTreeEnabled > 0 ? currentBlock || shared.EMPTY_ARR : null;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\r\n    return setupBlock(createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, true /* isBlock */));\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    return setupBlock(createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */));\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n}\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref, ref_key, ref_for }) => {\r\n    return (ref != null\r\n        ? shared.isString(ref) || reactivity.isRef(ref) || shared.isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for }\r\n            : ref\r\n        : null);\r\n};\r\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1 /* ShapeFlags.ELEMENT */, isBlockNode = false, needFullChildrenNormalization = false) {\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    if (needFullChildrenNormalization) {\r\n        normalizeChildren(vnode, children);\r\n        // normalize suspense children\r\n        if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\r\n            type.normalize(vnode);\r\n        }\r\n    }\r\n    else if (children) {\r\n        // compiled element vnode - if children is passed, only possible types are\r\n        // string or Array.\r\n        vnode.shapeFlag |= shared.isString(children)\r\n            ? 8 /* ShapeFlags.TEXT_CHILDREN */\r\n            : 16 /* ShapeFlags.ARRAY_CHILDREN */;\r\n    }\r\n    // track vnode for block tree\r\n    if (isBlockTreeEnabled > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (vnode.patchFlag > 0 || shapeFlag & 6 /* ShapeFlags.COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        vnode.patchFlag !== 32 /* PatchFlags.HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nconst createVNode = (_createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\r\n            if (cloned.shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\r\n                currentBlock[currentBlock.indexOf(type)] = cloned;\r\n            }\r\n            else {\r\n                currentBlock.push(cloned);\r\n            }\r\n        }\r\n        cloned.patchFlag |= -2 /* PatchFlags.BAIL */;\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        props = guardReactiveProps(props);\r\n        let { class: klass, style } = props;\r\n        if (klass && !shared.isString(klass)) {\r\n            props.class = shared.normalizeClass(klass);\r\n        }\r\n        if (shared.isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (reactivity.isProxy(style) && !shared.isArray(style)) {\r\n                style = shared.extend({}, style);\r\n            }\r\n            props.style = shared.normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = shared.isString(type)\r\n        ? 1 /* ShapeFlags.ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* ShapeFlags.SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* ShapeFlags.TELEPORT */\r\n                : shared.isObject(type)\r\n                    ? 4 /* ShapeFlags.STATEFUL_COMPONENT */\r\n                    : shared.isFunction(type)\r\n                        ? 2 /* ShapeFlags.FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    return createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, isBlockNode, true);\r\n}\r\nfunction guardReactiveProps(props) {\r\n    if (!props)\r\n        return null;\r\n    return reactivity.isProxy(props) || InternalObjectKey in props\r\n        ? shared.extend({}, props)\r\n        : props;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    const cloned = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? shared.isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: preserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* PatchFlags.FULL_PROPS */\r\n                : patchFlag | 16 /* PatchFlags.FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (shared.isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, \r\n        // #3666, avoid reference pollution when reusing vnode\r\n        child.slice());\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return cloneIfMounted(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null || child.memo ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (shared.isArray(children)) {\r\n        type = 16 /* ShapeFlags.ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & (1 /* ShapeFlags.ELEMENT */ | 64 /* ShapeFlags.TELEPORT */)) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && (slot._d = false);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && (slot._d = true);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* ShapeFlags.SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* SlotFlags.FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.slots._ === 1 /* SlotFlags.STABLE */) {\r\n                    children._ = 1 /* SlotFlags.STABLE */;\r\n                }\r\n                else {\r\n                    children._ = 2 /* SlotFlags.DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (shared.isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* ShapeFlags.SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\r\n            type = 16 /* ShapeFlags.ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* ShapeFlags.TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = {};\r\n    for (let i = 0; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = shared.normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = shared.normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (shared.isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (incoming &&\r\n                    existing !== incoming &&\r\n                    !(shared.isArray(existing) && existing.includes(incoming))) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, incoming)\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* ErrorCodes.VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        effect: null,\r\n        update: null,\r\n        scope: new reactivity.EffectScope(true /* detached */),\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        exposeProxy: null,\r\n        withProxy: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resolved assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: shared.EMPTY_OBJ,\r\n        // inheritAttrs\r\n        inheritAttrs: type.inheritAttrs,\r\n        // state\r\n        ctx: shared.EMPTY_OBJ,\r\n        data: shared.EMPTY_OBJ,\r\n        props: shared.EMPTY_OBJ,\r\n        attrs: shared.EMPTY_OBJ,\r\n        slots: shared.EMPTY_OBJ,\r\n        refs: shared.EMPTY_OBJ,\r\n        setupState: shared.EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null,\r\n        sp: null\r\n    };\r\n    {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    // apply custom element special handling\r\n    if (vnode.ce) {\r\n        vnode.ce(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n    instance.scope.on();\r\n};\r\nconst unsetCurrentInstance = () => {\r\n    currentInstance && currentInstance.scope.off();\r\n    currentInstance = null;\r\n};\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = reactivity.markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        setCurrentInstance(instance);\r\n        reactivity.pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* ErrorCodes.SETUP_FUNCTION */, [instance.props, setupContext]);\r\n        reactivity.resetTracking();\r\n        unsetCurrentInstance();\r\n        if (shared.isPromise(setupResult)) {\r\n            setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* ErrorCodes.SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (shared.isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        if (instance.type.__ssrInlineRender) {\r\n            // when the function's name is `ssrRender` (compiled by SFC inline mode),\r\n            // set it as ssrRender instead.\r\n            instance.ssrRender = setupResult;\r\n        }\r\n        else {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (shared.isObject(setupResult)) {\r\n        instance.setupState = reactivity.proxyRefs(setupResult);\r\n    }\r\n    else ;\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\nlet installWithProxy;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n    installWithProxy = i => {\r\n        if (i.render._rc) {\r\n            i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    };\r\n}\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    // could be already set when returned from setup()\r\n    if (!instance.render) {\r\n        // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\r\n        // is done by server-renderer\r\n        if (!isSSR && compile && !Component.render) {\r\n            const template = Component.template ||\r\n                resolveMergedOptions(instance).template;\r\n            if (template) {\r\n                const { isCustomElement, compilerOptions } = instance.appContext.config;\r\n                const { delimiters, compilerOptions: componentCompilerOptions } = Component;\r\n                const finalCompilerOptions = shared.extend(shared.extend({\r\n                    isCustomElement,\r\n                    delimiters\r\n                }, compilerOptions), componentCompilerOptions);\r\n                Component.render = compile(template, finalCompilerOptions);\r\n            }\r\n        }\r\n        instance.render = (Component.render || shared.NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (installWithProxy) {\r\n            installWithProxy(instance);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    {\r\n        setCurrentInstance(instance);\r\n        reactivity.pauseTracking();\r\n        applyOptions(instance);\r\n        reactivity.resetTracking();\r\n        unsetCurrentInstance();\r\n    }\r\n}\r\nfunction createAttrsProxy(instance) {\r\n    return new Proxy(instance.attrs, {\r\n            get(target, key) {\r\n                reactivity.track(instance, \"get\" /* TrackOpTypes.GET */, '$attrs');\r\n                return target[key];\r\n            }\r\n        });\r\n}\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        instance.exposed = exposed || {};\r\n    };\r\n    let attrs;\r\n    {\r\n        return {\r\n            get attrs() {\r\n                return attrs || (attrs = createAttrsProxy(instance));\r\n            },\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\nfunction getExposeProxy(instance) {\r\n    if (instance.exposed) {\r\n        return (instance.exposeProxy ||\r\n            (instance.exposeProxy = new Proxy(reactivity.proxyRefs(reactivity.markRaw(instance.exposed)), {\r\n                get(target, key) {\r\n                    if (key in target) {\r\n                        return target[key];\r\n                    }\r\n                    else if (key in publicPropertiesMap) {\r\n                        return publicPropertiesMap[key](instance);\r\n                    }\r\n                }\r\n            })));\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component, includeInferred = true) {\r\n    return shared.isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name || (includeInferred && Component.__name);\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return shared.isFunction(value) && '__vccOpts' in value;\r\n}\n\nconst computed = ((getterOrOptions, debugOptions) => {\r\n    // @ts-ignore\r\n    return reactivity.computed(getterOrOptions, debugOptions, isInSSRComponentSetup);\r\n});\n\n// implementation\r\nfunction defineProps() {\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmits() {\r\n    return null;\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. variables inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nfunction defineExpose(exposed) {\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` declaration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nfunction withDefaults(props, defaults) {\r\n    return null;\r\n}\r\nfunction useSlots() {\r\n    return getContext().slots;\r\n}\r\nfunction useAttrs() {\r\n    return getContext().attrs;\r\n}\r\nfunction getContext() {\r\n    const i = getCurrentInstance();\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nfunction mergeDefaults(raw, defaults) {\r\n    const props = shared.isArray(raw)\r\n        ? raw.reduce((normalized, p) => ((normalized[p] = {}), normalized), {})\r\n        : raw;\r\n    for (const key in defaults) {\r\n        const opt = props[key];\r\n        if (opt) {\r\n            if (shared.isArray(opt) || shared.isFunction(opt)) {\r\n                props[key] = { type: opt, default: defaults[key] };\r\n            }\r\n            else {\r\n                opt.default = defaults[key];\r\n            }\r\n        }\r\n        else if (opt === null) {\r\n            props[key] = { default: defaults[key] };\r\n        }\r\n        else ;\r\n    }\r\n    return props;\r\n}\r\n/**\r\n * Used to create a proxy for the rest element when destructuring props with\r\n * defineProps().\r\n * @internal\r\n */\r\nfunction createPropsRestProxy(props, excludedKeys) {\r\n    const ret = {};\r\n    for (const key in props) {\r\n        if (!excludedKeys.includes(key)) {\r\n            Object.defineProperty(ret, key, {\r\n                enumerable: true,\r\n                get: () => props[key]\r\n            });\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nfunction withAsyncContext(getAwaitable) {\r\n    const ctx = getCurrentInstance();\r\n    let awaitable = getAwaitable();\r\n    unsetCurrentInstance();\r\n    if (shared.isPromise(awaitable)) {\r\n        awaitable = awaitable.catch(e => {\r\n            setCurrentInstance(ctx);\r\n            throw e;\r\n        });\r\n    }\r\n    return [awaitable, () => setCurrentInstance(ctx)];\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (shared.isObject(propsOrChildren) && !shared.isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol(``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    {\r\n        return;\r\n    }\r\n}\n\nfunction withMemo(memo, render, cache, index) {\r\n    const cached = cache[index];\r\n    if (cached && isMemoSame(cached, memo)) {\r\n        return cached;\r\n    }\r\n    const ret = render();\r\n    // shallow clone\r\n    ret.memo = memo.slice();\r\n    return (cache[index] = ret);\r\n}\r\nfunction isMemoSame(cached, memo) {\r\n    const prev = cached.memo;\r\n    if (prev.length != memo.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < prev.length; i++) {\r\n        if (shared.hasChanged(prev[i], memo[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    // make sure to let parent block track it when returning cached\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(cached);\r\n    }\r\n    return true;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.2.39\";\r\nconst _ssrUtils = {\r\n    createComponentInstance,\r\n    setupComponent,\r\n    renderComponentRoot,\r\n    setCurrentRenderingInstance,\r\n    isVNode,\r\n    normalizeVNode\r\n};\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in ssr-possible builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (_ssrUtils );\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nconst resolveFilter = null;\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nconst compatUtils = (null);\n\nexports.EffectScope = reactivity.EffectScope;\nexports.ReactiveEffect = reactivity.ReactiveEffect;\nexports.customRef = reactivity.customRef;\nexports.effect = reactivity.effect;\nexports.effectScope = reactivity.effectScope;\nexports.getCurrentScope = reactivity.getCurrentScope;\nexports.isProxy = reactivity.isProxy;\nexports.isReactive = reactivity.isReactive;\nexports.isReadonly = reactivity.isReadonly;\nexports.isRef = reactivity.isRef;\nexports.isShallow = reactivity.isShallow;\nexports.markRaw = reactivity.markRaw;\nexports.onScopeDispose = reactivity.onScopeDispose;\nexports.proxyRefs = reactivity.proxyRefs;\nexports.reactive = reactivity.reactive;\nexports.readonly = reactivity.readonly;\nexports.ref = reactivity.ref;\nexports.shallowReactive = reactivity.shallowReactive;\nexports.shallowReadonly = reactivity.shallowReadonly;\nexports.shallowRef = reactivity.shallowRef;\nexports.stop = reactivity.stop;\nexports.toRaw = reactivity.toRaw;\nexports.toRef = reactivity.toRef;\nexports.toRefs = reactivity.toRefs;\nexports.triggerRef = reactivity.triggerRef;\nexports.unref = reactivity.unref;\nexports.camelize = shared.camelize;\nexports.capitalize = shared.capitalize;\nexports.normalizeClass = shared.normalizeClass;\nexports.normalizeProps = shared.normalizeProps;\nexports.normalizeStyle = shared.normalizeStyle;\nexports.toDisplayString = shared.toDisplayString;\nexports.toHandlerKey = shared.toHandlerKey;\nexports.BaseTransition = BaseTransition;\nexports.Comment = Comment;\nexports.Fragment = Fragment;\nexports.KeepAlive = KeepAlive;\nexports.Static = Static;\nexports.Suspense = Suspense;\nexports.Teleport = Teleport;\nexports.Text = Text;\nexports.callWithAsyncErrorHandling = callWithAsyncErrorHandling;\nexports.callWithErrorHandling = callWithErrorHandling;\nexports.cloneVNode = cloneVNode;\nexports.compatUtils = compatUtils;\nexports.computed = computed;\nexports.createBlock = createBlock;\nexports.createCommentVNode = createCommentVNode;\nexports.createElementBlock = createElementBlock;\nexports.createElementVNode = createBaseVNode;\nexports.createHydrationRenderer = createHydrationRenderer;\nexports.createPropsRestProxy = createPropsRestProxy;\nexports.createRenderer = createRenderer;\nexports.createSlots = createSlots;\nexports.createStaticVNode = createStaticVNode;\nexports.createTextVNode = createTextVNode;\nexports.createVNode = createVNode;\nexports.defineAsyncComponent = defineAsyncComponent;\nexports.defineComponent = defineComponent;\nexports.defineEmits = defineEmits;\nexports.defineExpose = defineExpose;\nexports.defineProps = defineProps;\nexports.getCurrentInstance = getCurrentInstance;\nexports.getTransitionRawChildren = getTransitionRawChildren;\nexports.guardReactiveProps = guardReactiveProps;\nexports.h = h;\nexports.handleError = handleError;\nexports.initCustomFormatter = initCustomFormatter;\nexports.inject = inject;\nexports.isMemoSame = isMemoSame;\nexports.isRuntimeOnly = isRuntimeOnly;\nexports.isVNode = isVNode;\nexports.mergeDefaults = mergeDefaults;\nexports.mergeProps = mergeProps;\nexports.nextTick = nextTick;\nexports.onActivated = onActivated;\nexports.onBeforeMount = onBeforeMount;\nexports.onBeforeUnmount = onBeforeUnmount;\nexports.onBeforeUpdate = onBeforeUpdate;\nexports.onDeactivated = onDeactivated;\nexports.onErrorCaptured = onErrorCaptured;\nexports.onMounted = onMounted;\nexports.onRenderTracked = onRenderTracked;\nexports.onRenderTriggered = onRenderTriggered;\nexports.onServerPrefetch = onServerPrefetch;\nexports.onUnmounted = onUnmounted;\nexports.onUpdated = onUpdated;\nexports.openBlock = openBlock;\nexports.popScopeId = popScopeId;\nexports.provide = provide;\nexports.pushScopeId = pushScopeId;\nexports.queuePostFlushCb = queuePostFlushCb;\nexports.registerRuntimeCompiler = registerRuntimeCompiler;\nexports.renderList = renderList;\nexports.renderSlot = renderSlot;\nexports.resolveComponent = resolveComponent;\nexports.resolveDirective = resolveDirective;\nexports.resolveDynamicComponent = resolveDynamicComponent;\nexports.resolveFilter = resolveFilter;\nexports.resolveTransitionHooks = resolveTransitionHooks;\nexports.setBlockTracking = setBlockTracking;\nexports.setDevtoolsHook = setDevtoolsHook;\nexports.setTransitionHooks = setTransitionHooks;\nexports.ssrContextKey = ssrContextKey;\nexports.ssrUtils = ssrUtils;\nexports.toHandlers = toHandlers;\nexports.transformVNodeArgs = transformVNodeArgs;\nexports.useAttrs = useAttrs;\nexports.useSSRContext = useSSRContext;\nexports.useSlots = useSlots;\nexports.useTransitionState = useTransitionState;\nexports.version = version;\nexports.warn = warn;\nexports.watch = watch;\nexports.watchEffect = watchEffect;\nexports.watchPostEffect = watchPostEffect;\nexports.watchSyncEffect = watchSyncEffect;\nexports.withAsyncContext = withAsyncContext;\nexports.withCtx = withCtx;\nexports.withDefaults = withDefaults;\nexports.withDirectives = withDirectives;\nexports.withMemo = withMemo;\nexports.withScopeId = withScopeId;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/runtime-core.cjs.prod.js')\n} else {\n  module.exports = require('./dist/runtime-core.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar runtimeCore = require('@vue/runtime-core');\nvar shared = require('@vue/shared');\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nconst templateContainer = doc && /*#__PURE__*/ doc.createElement('template');\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is, props) => {\r\n        const el = isSVG\r\n            ? doc.createElementNS(svgNS, tag)\r\n            : doc.createElement(tag, is ? { is } : undefined);\r\n        if (tag === 'select' && props && props.multiple != null) {\r\n            el.setAttribute('multiple', props.multiple);\r\n        }\r\n        return el;\r\n    },\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        const cloned = el.cloneNode(true);\r\n        // #3072\r\n        // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n        // - normally, elements using `:value` bindings will not be hoisted, but if\r\n        //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n        //   hoisted.\r\n        // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n        //   cloneNode() does not copy the custom property we attached.\r\n        // - This may need to account for other custom DOM properties we attach to\r\n        //   elements in addition to `_value` in the future.\r\n        if (`_value` in el) {\r\n            cloned._value = el._value;\r\n        }\r\n        return cloned;\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG, start, end) {\r\n        // <parent> before | first ... last | anchor </parent>\r\n        const before = anchor ? anchor.previousSibling : parent.lastChild;\r\n        // #5308 can only take cached path if:\r\n        // - has a single root node\r\n        // - nextSibling info is still available\r\n        if (start && (start === end || start.nextSibling)) {\r\n            // cached\r\n            while (true) {\r\n                parent.insertBefore(start.cloneNode(true), anchor);\r\n                if (start === end || !(start = start.nextSibling))\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            // fresh insert\r\n            templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\r\n            const template = templateContainer.content;\r\n            if (isSVG) {\r\n                // remove outer svg wrapper\r\n                const wrapper = template.firstChild;\r\n                while (wrapper.firstChild) {\r\n                    template.appendChild(wrapper.firstChild);\r\n                }\r\n                template.removeChild(wrapper);\r\n            }\r\n            parent.insertBefore(template, anchor);\r\n        }\r\n        return [\r\n            // first\r\n            before ? before.nextSibling : parent.firstChild,\r\n            // last\r\n            anchor ? anchor.previousSibling : parent.lastChild\r\n        ];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    // directly setting className should be faster than setAttribute in theory\r\n    // if this is an element during a transition, take the temporary transition\r\n    // classes into account.\r\n    const transitionClasses = el._vtc;\r\n    if (transitionClasses) {\r\n        value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(' ');\r\n    }\r\n    if (value == null) {\r\n        el.removeAttribute('class');\r\n    }\r\n    else if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    const isCssString = shared.isString(next);\r\n    if (next && !isCssString) {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !shared.isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const currentDisplay = style.display;\r\n        if (isCssString) {\r\n            if (prev !== next) {\r\n                style.cssText = next;\r\n            }\r\n        }\r\n        else if (prev) {\r\n            el.removeAttribute('style');\r\n        }\r\n        // indicates that the `display` of the element is controlled by `v-show`,\r\n        // so we always keep the current `display` value regardless of the `style`\r\n        // value, thus handing over control to `v-show`.\r\n        if ('_vod' in el) {\r\n            style.display = currentDisplay;\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (shared.isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (val == null)\r\n            val = '';\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(shared.hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = runtimeCore.camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = shared.capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG, instance) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = shared.isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && !shared.includeBooleanAttr(value))) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' &&\r\n        el.tagName !== 'PROGRESS' &&\r\n        // custom elements may use _value internally\r\n        !el.tagName.includes('-')) {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue ||\r\n            // #4956: always set for OPTION elements because its value falls back to\r\n            // textContent if no value attribute is present. And setting .value for\r\n            // OPTION has no side effect\r\n            el.tagName === 'OPTION') {\r\n            el.value = newValue;\r\n        }\r\n        if (value == null) {\r\n            el.removeAttribute(key);\r\n        }\r\n        return;\r\n    }\r\n    let needRemove = false;\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            value = shared.includeBooleanAttr(value);\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            value = '';\r\n            needRemove = true;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\r\n            value = 0;\r\n            needRemove = true;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw,\r\n    // some properties has getter, no setter, will error in 'use strict'\r\n    // eg. <select :type=\"null\"></select> <select :willValidate=\"null\"></select>\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n    }\r\n    needRemove && el.removeAttribute(key);\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nconst [_getNow, skipTimestampCheck] = /*#__PURE__*/ (() => {\r\n    let _getNow = Date.now;\r\n    let skipTimestampCheck = false;\r\n    if (typeof window !== 'undefined') {\r\n        // Determine what event timestamp the browser is using. Annoyingly, the\r\n        // timestamp can either be hi-res (relative to page load) or low-res\r\n        // (relative to UNIX epoch), so in order to compare time we have to use the\r\n        // same timestamp type when saving the flush timestamp.\r\n        if (Date.now() > document.createEvent('Event').timeStamp) {\r\n            // if the low-res timestamp which is bigger than the event timestamp\r\n            // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n            // and we need to use the hi-res version for event listeners as well.\r\n            _getNow = performance.now.bind(performance);\r\n        }\r\n        // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n        // and does not fire microtasks in between event propagation, so safe to exclude.\r\n        const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i);\r\n        skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53);\r\n    }\r\n    return [_getNow, skipTimestampCheck];\r\n})();\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = /*#__PURE__*/ Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    const event = name[2] === ':' ? name.slice(3) : shared.hyphenate(name.slice(2));\r\n    return [event, options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n            runtimeCore.callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* ErrorCodes.NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (shared.isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    if (key === 'class') {\r\n        patchClass(el, nextValue, isSVG);\r\n    }\r\n    else if (key === 'style') {\r\n        patchStyle(el, prevValue, nextValue);\r\n    }\r\n    else if (shared.isOn(key)) {\r\n        // ignore v-model listeners\r\n        if (!shared.isModelListener(key)) {\r\n            patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n        }\r\n    }\r\n    else if (key[0] === '.'\r\n        ? ((key = key.slice(1)), true)\r\n        : key[0] === '^'\r\n            ? ((key = key.slice(1)), false)\r\n            : shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n        patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n    }\r\n    else {\r\n        // special case for <input v-model type=\"checkbox\"> with\r\n        // :true-value & :false-value\r\n        // store value as dom properties since non-string values will be\r\n        // stringified.\r\n        if (key === 'true-value') {\r\n            el._trueValue = nextValue;\r\n        }\r\n        else if (key === 'false-value') {\r\n            el._falseValue = nextValue;\r\n        }\r\n        patchAttr(el, key, nextValue, isSVG);\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML & textContent\r\n        if (key === 'innerHTML' || key === 'textContent') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && shared.isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // these are enumerated attrs, however their corresponding DOM properties\r\n    // are actually booleans - this leads to setting it with a string \"false\"\r\n    // value leading it to be coerced to `true`, so we need to always treat\r\n    // them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable' || key === 'translate') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && shared.isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction defineCustomElement(options, hydrate) {\r\n    const Comp = runtimeCore.defineComponent(options);\r\n    class VueCustomElement extends VueElement {\r\n        constructor(initialProps) {\r\n            super(Comp, initialProps, hydrate);\r\n        }\r\n    }\r\n    VueCustomElement.def = Comp;\r\n    return VueCustomElement;\r\n}\r\nconst defineSSRCustomElement = ((options) => {\r\n    // @ts-ignore\r\n    return defineCustomElement(options, hydrate);\r\n});\r\nconst BaseClass = (typeof HTMLElement !== 'undefined' ? HTMLElement : class {\r\n});\r\nclass VueElement extends BaseClass {\r\n    constructor(_def, _props = {}, hydrate) {\r\n        super();\r\n        this._def = _def;\r\n        this._props = _props;\r\n        /**\r\n         * @internal\r\n         */\r\n        this._instance = null;\r\n        this._connected = false;\r\n        this._resolved = false;\r\n        this._numberProps = null;\r\n        if (this.shadowRoot && hydrate) {\r\n            hydrate(this._createVNode(), this.shadowRoot);\r\n        }\r\n        else {\r\n            this.attachShadow({ mode: 'open' });\r\n        }\r\n    }\r\n    connectedCallback() {\r\n        this._connected = true;\r\n        if (!this._instance) {\r\n            this._resolveDef();\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        this._connected = false;\r\n        runtimeCore.nextTick(() => {\r\n            if (!this._connected) {\r\n                render(null, this.shadowRoot);\r\n                this._instance = null;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * resolve inner component definition (handle possible async component)\r\n     */\r\n    _resolveDef() {\r\n        if (this._resolved) {\r\n            return;\r\n        }\r\n        this._resolved = true;\r\n        // set initial attrs\r\n        for (let i = 0; i < this.attributes.length; i++) {\r\n            this._setAttr(this.attributes[i].name);\r\n        }\r\n        // watch future attr changes\r\n        new MutationObserver(mutations => {\r\n            for (const m of mutations) {\r\n                this._setAttr(m.attributeName);\r\n            }\r\n        }).observe(this, { attributes: true });\r\n        const resolve = (def) => {\r\n            const { props, styles } = def;\r\n            const hasOptions = !shared.isArray(props);\r\n            const rawKeys = props ? (hasOptions ? Object.keys(props) : props) : [];\r\n            // cast Number-type props set before resolve\r\n            let numberProps;\r\n            if (hasOptions) {\r\n                for (const key in this._props) {\r\n                    const opt = props[key];\r\n                    if (opt === Number || (opt && opt.type === Number)) {\r\n                        this._props[key] = shared.toNumber(this._props[key]);\r\n                        (numberProps || (numberProps = Object.create(null)))[key] = true;\r\n                    }\r\n                }\r\n            }\r\n            this._numberProps = numberProps;\r\n            // check if there are props set pre-upgrade or connect\r\n            for (const key of Object.keys(this)) {\r\n                if (key[0] !== '_') {\r\n                    this._setProp(key, this[key], true, false);\r\n                }\r\n            }\r\n            // defining getter/setters on prototype\r\n            for (const key of rawKeys.map(shared.camelize)) {\r\n                Object.defineProperty(this, key, {\r\n                    get() {\r\n                        return this._getProp(key);\r\n                    },\r\n                    set(val) {\r\n                        this._setProp(key, val);\r\n                    }\r\n                });\r\n            }\r\n            // apply CSS\r\n            this._applyStyles(styles);\r\n            // initial render\r\n            this._update();\r\n        };\r\n        const asyncDef = this._def.__asyncLoader;\r\n        if (asyncDef) {\r\n            asyncDef().then(resolve);\r\n        }\r\n        else {\r\n            resolve(this._def);\r\n        }\r\n    }\r\n    _setAttr(key) {\r\n        let value = this.getAttribute(key);\r\n        if (this._numberProps && this._numberProps[key]) {\r\n            value = shared.toNumber(value);\r\n        }\r\n        this._setProp(shared.camelize(key), value, false);\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _getProp(key) {\r\n        return this._props[key];\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _setProp(key, val, shouldReflect = true, shouldUpdate = true) {\r\n        if (val !== this._props[key]) {\r\n            this._props[key] = val;\r\n            if (shouldUpdate && this._instance) {\r\n                this._update();\r\n            }\r\n            // reflect\r\n            if (shouldReflect) {\r\n                if (val === true) {\r\n                    this.setAttribute(shared.hyphenate(key), '');\r\n                }\r\n                else if (typeof val === 'string' || typeof val === 'number') {\r\n                    this.setAttribute(shared.hyphenate(key), val + '');\r\n                }\r\n                else if (!val) {\r\n                    this.removeAttribute(shared.hyphenate(key));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _update() {\r\n        render(this._createVNode(), this.shadowRoot);\r\n    }\r\n    _createVNode() {\r\n        const vnode = runtimeCore.createVNode(this._def, shared.extend({}, this._props));\r\n        if (!this._instance) {\r\n            vnode.ce = instance => {\r\n                this._instance = instance;\r\n                instance.isCE = true;\r\n                // intercept emit\r\n                instance.emit = (event, ...args) => {\r\n                    this.dispatchEvent(new CustomEvent(event, {\r\n                        detail: args\r\n                    }));\r\n                };\r\n                // locate nearest Vue custom element parent for provide/inject\r\n                let parent = this;\r\n                while ((parent =\r\n                    parent && (parent.parentNode || parent.host))) {\r\n                    if (parent instanceof VueElement) {\r\n                        instance.parent = parent._instance;\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        return vnode;\r\n    }\r\n    _applyStyles(styles) {\r\n        if (styles) {\r\n            styles.forEach(css => {\r\n                const s = document.createElement('style');\r\n                s.textContent = css;\r\n                this.shadowRoot.appendChild(s);\r\n            });\r\n        }\r\n    }\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = runtimeCore.getCurrentInstance();\r\n        if (!instance) {\r\n            return shared.EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            return shared.EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            return shared.EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    return;\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => runtimeCore.h(runtimeCore.BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props =\r\n    /*#__PURE__*/ shared.extend({}, runtimeCore.BaseTransition.props, DOMTransitionPropsValidators));\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (hook, args = []) => {\r\n    if (shared.isArray(hook)) {\r\n        hook.forEach(h => h(...args));\r\n    }\r\n    else if (hook) {\r\n        hook(...args);\r\n    }\r\n};\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (hook) => {\r\n    return hook\r\n        ? shared.isArray(hook)\r\n            ? hook.some(h => h.length > 1)\r\n            : hook.length > 1\r\n        : false;\r\n};\r\nfunction resolveTransitionProps(rawProps) {\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (rawProps.css === false) {\r\n        return baseProps;\r\n    }\r\n    const { name = 'v', type, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        el._isLeaving = false;\r\n        removeTransitionClass(el, leaveFromClass);\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            callHook(hook, [el, resolve]);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!hasExplicitCallback(hook)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return shared.extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            callHook(onBeforeEnter, [el]);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            callHook(onBeforeAppear, [el]);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            el._isLeaving = true;\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                if (!el._isLeaving) {\r\n                    // cancelled\r\n                    return;\r\n                }\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!hasExplicitCallback(onLeave)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            callHook(onLeave, [el, resolve]);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            callHook(onEnterCancelled, [el]);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            callHook(onAppearCancelled, [el]);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            callHook(onLeaveCancelled, [el]);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (shared.isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = shared.toNumber(val);\r\n    return res;\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ shared.extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = runtimeCore.getCurrentInstance();\r\n        const state = runtimeCore.useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        runtimeCore.onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = runtimeCore.toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            let tag = rawProps.tag || runtimeCore.Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? runtimeCore.getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    runtimeCore.setTransitionHooks(child, runtimeCore.resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    runtimeCore.setTransitionHooks(child, runtimeCore.resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return runtimeCore.createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1 ? root : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'] ||\r\n        (false );\r\n    return shared.isArray(fn) ? value => shared.invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        target.dispatchEvent(new Event('input'));\r\n    }\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || (vnode.props && vnode.props.type === 'number');\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            if (castToNumber) {\r\n                domValue = shared.toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el && el.type !== 'range') {\r\n            if (lazy) {\r\n                return;\r\n            }\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && shared.toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    // #4096 array checkboxes need to be deep traversed\r\n    deep: true,\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (shared.isArray(modelValue)) {\r\n                const index = shared.looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (shared.isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (shared.isArray(value)) {\r\n        el.checked = shared.looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (shared.isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = shared.looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = shared.looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = shared.looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    // <select multiple> value need to be deep traversed\r\n    deep: true,\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = shared.isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? shared.toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !shared.isArray(value) && !shared.isSet(value)) {\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (shared.isArray(value)) {\r\n                option.selected = shared.looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (shared.looseEqual(getValue(option), value)) {\r\n                if (el.selectedIndex !== i)\r\n                    el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple && el.selectedIndex !== -1) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction resolveDynamicModel(tagName, type) {\r\n    switch (tagName) {\r\n        case 'SELECT':\r\n            return vModelSelect;\r\n        case 'TEXTAREA':\r\n            return vModelText;\r\n        default:\r\n            switch (type) {\r\n                case 'checkbox':\r\n                    return vModelCheckbox;\r\n                case 'radio':\r\n                    return vModelRadio;\r\n                default:\r\n                    return vModelText;\r\n            }\r\n    }\r\n}\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    const modelToUse = resolveDynamicModel(el.tagName, vnode.props && vnode.props.type);\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nfunction initVModelForSSR() {\r\n    vModelText.getSSRProps = ({ value }) => ({ value });\r\n    vModelRadio.getSSRProps = ({ value }, vnode) => {\r\n        if (vnode.props && shared.looseEqual(vnode.props.value, value)) {\r\n            return { checked: true };\r\n        }\r\n    };\r\n    vModelCheckbox.getSSRProps = ({ value }, vnode) => {\r\n        if (shared.isArray(value)) {\r\n            if (vnode.props && shared.looseIndexOf(value, vnode.props.value) > -1) {\r\n                return { checked: true };\r\n            }\r\n        }\r\n        else if (shared.isSet(value)) {\r\n            if (vnode.props && value.has(vnode.props.value)) {\r\n                return { checked: true };\r\n            }\r\n        }\r\n        else if (value) {\r\n            return { checked: true };\r\n        }\r\n    };\r\n    vModelDynamic.getSSRProps = (binding, vnode) => {\r\n        if (typeof vnode.type !== 'string') {\r\n            return;\r\n        }\r\n        const modelToUse = resolveDynamicModel(\r\n        // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\r\n        vnode.type.toUpperCase(), vnode.props && vnode.props.type);\r\n        if (modelToUse.getSSRProps) {\r\n            return modelToUse.getSSRProps(binding, vnode);\r\n        }\r\n    };\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event)) {\r\n            return;\r\n        }\r\n        const eventKey = shared.hyphenate(event.key);\r\n        if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return fn(event);\r\n        }\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\r\n// SSR vnode transforms, only used when user includes client-oriented render\r\n// function in SSR\r\nfunction initVShowForSSR() {\r\n    vShow.getSSRProps = ({ value }) => {\r\n        if (!value) {\r\n            return { style: { display: 'none' } };\r\n        }\r\n    };\r\n}\n\nconst rendererOptions = /*#__PURE__*/ shared.extend({ patchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return (renderer ||\r\n        (renderer = runtimeCore.createRenderer(rendererOptions)));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : runtimeCore.createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!shared.isFunction(component) && !component.render && !component.template) {\r\n            // __UNSAFE__\r\n            // Reason: potential execution of JS expressions in in-DOM template.\r\n            // The user must make sure the in-DOM template is trusted. If it's\r\n            // rendered by the server, the template should not contain any user data.\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container, false, container instanceof SVGElement);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true, container instanceof SVGElement);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction normalizeContainer(container) {\r\n    if (shared.isString(container)) {\r\n        const res = document.querySelector(container);\r\n        return res;\r\n    }\r\n    return container;\r\n}\r\nlet ssrDirectiveInitialized = false;\r\n/**\r\n * @internal\r\n */\r\nconst initDirectivesForSSR = () => {\r\n        if (!ssrDirectiveInitialized) {\r\n            ssrDirectiveInitialized = true;\r\n            initVModelForSSR();\r\n            initVShowForSSR();\r\n        }\r\n    }\r\n    ;\n\nObject.keys(runtimeCore).forEach(function (k) {\n  if (k !== 'default') exports[k] = runtimeCore[k];\n});\nexports.Transition = Transition;\nexports.TransitionGroup = TransitionGroup;\nexports.VueElement = VueElement;\nexports.createApp = createApp;\nexports.createSSRApp = createSSRApp;\nexports.defineCustomElement = defineCustomElement;\nexports.defineSSRCustomElement = defineSSRCustomElement;\nexports.hydrate = hydrate;\nexports.initDirectivesForSSR = initDirectivesForSSR;\nexports.render = render;\nexports.useCssModule = useCssModule;\nexports.useCssVars = useCssVars;\nexports.vModelCheckbox = vModelCheckbox;\nexports.vModelDynamic = vModelDynamic;\nexports.vModelRadio = vModelRadio;\nexports.vModelSelect = vModelSelect;\nexports.vModelText = vModelText;\nexports.vShow = vShow;\nexports.withKeys = withKeys;\nexports.withModifiers = withModifiers;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/runtime-dom.cjs.prod.js')\n} else {\n  module.exports = require('./dist/runtime-dom.cjs.js')\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar compilerDom = require('@vue/compiler-dom');\nvar runtimeDom = require('@vue/runtime-dom');\nvar shared = require('@vue/shared');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar runtimeDom__namespace = /*#__PURE__*/_interopNamespace(runtimeDom);\n\n// This entry is the \"full-build\" that includes both the runtime\r\nconst compileCache = Object.create(null);\r\nfunction compileToFunction(template, options) {\r\n    if (!shared.isString(template)) {\r\n        if (template.nodeType) {\r\n            template = template.innerHTML;\r\n        }\r\n        else {\r\n            return shared.NOOP;\r\n        }\r\n    }\r\n    const key = template;\r\n    const cached = compileCache[key];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    if (template[0] === '#') {\r\n        const el = document.querySelector(template);\r\n        // __UNSAFE__\r\n        // Reason: potential execution of JS expressions in in-DOM template.\r\n        // The user must make sure the in-DOM template is trusted. If it's rendered\r\n        // by the server, the template should not contain any user data.\r\n        template = el ? el.innerHTML : ``;\r\n    }\r\n    const opts = shared.extend({\r\n        hoistStatic: true,\r\n        onError: undefined,\r\n        onWarn: shared.NOOP\r\n    }, options);\r\n    if (!opts.isCustomElement && typeof customElements !== 'undefined') {\r\n        opts.isCustomElement = tag => !!customElements.get(tag);\r\n    }\r\n    const { code } = compilerDom.compile(template, opts);\r\n    // The wildcard import results in a huge object with every export\r\n    // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n    // In the global build we know `Vue` is available globally so we can avoid\r\n    // the wildcard object.\r\n    const render = (new Function('Vue', code)(runtimeDom__namespace));\r\n    render._rc = true;\r\n    return (compileCache[key] = render);\r\n}\r\nruntimeDom.registerRuntimeCompiler(compileToFunction);\n\nObject.keys(runtimeDom).forEach(function (k) {\n  if (k !== 'default') exports[k] = runtimeDom[k];\n});\nexports.compile = compileToFunction;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/vue.cjs.prod.js')\n} else {\n  module.exports = require('./dist/vue.cjs.js')\n}\n", "import { createApp, watchEffect } from \"vue\";\nimport { createPinia } from \"pinia\";\n//import { useStore } from \"./store\";\nimport TffProcessComponent from \"./components/TffProcess.vue\";\nimport { registerGlobalComponents } from \"./globals.js\";\n\nclass TffProcess {\n\tconstructor({ wrapper, page, docname }) {\n\t\tconsole.log(\"llega\");\n\t\tthis.$wrapper = $(wrapper);\n\t\tthis.page = page;\n\t\tthis.docname = docname;\n\t\tthis.read_only = false;\n\t\tthis.get_document();\n\t\tthis.get_doctype_transaction();\n\t\tthis.doctype_url = this.doctype_transaction.toLowerCase().replace(\" \", \"-\");\n\t\tthis.site_path = this.get_base_url();\n\t\tthis.urlpdf = this.site_path + this.document.document_pdf;\n\t\t//'http://192.168.1.65:8000/private/files/tff_factLineas.pdf';\n\t\tif (!this.document.recorded_transaction){\n\t\t\tthis.urldoctype = this.site_path + \"/app/\" + \n\t\t\tthis.doctype_url + \"/new\";\n\t\t} else {\n\t\t\tthis.urldoctype = this.site_path + \"/app/\" + \n\t\t\tthis.doctype_url + \"/\" + this.document.name_transaction;\n\t\t}\n\t\tconsole.log(this.urldoctype);\n\t\t//'http://192.168.1.65:8000/app/contact/new-contact-1';\n\t\tthis.init();\n\t}\n\n\tinit(refresh) {\n\t\t// set page title\n\t\tthis.page.set_title(__(\"Transactional Process: {0}\", [this.document.name]));\n\t\tthis.setup_page_actions();\n\t\t!refresh && this.setup_app();\n\t\t//this.watch_changes();\n\t}\n\n\tasync setup_page_actions() {\n\t\t// clear actions\n\t\tthis.page.clear_actions();\n\t\tthis.page.clear_menu();\n\t\tthis.page.clear_custom_actions();\n\n\t\t// setup page actions\n\t\tthis.primary_btn = this.page.set_primary_action(__(\"Save\"), () =>\n\t\t\tthis.store.save_changes()\n\t\t);\n\t}\n\n\tsetup_app() {\n\t\t// create a pinia instance\n\t\tlet pinia = createPinia();\n\n\t\t// create a vue instance\n\t\tlet app = createApp(TffProcessComponent, {\n\t\t\turlpdf: this.urlpdf,\n      \t\turldoctype: this.urldoctype\n\t\t});\n\t\tSetVueGlobals(app);\n\t\tapp.use(pinia);\n\n\t\t// create a store\n\t\t//this.store = useStore();\n\t\t//this.store.doctype = this.doctype;\n\t\t//this.store.is_customize_form = this.customize;\n\t\t//this.store.page = this.page;\n\n\t\t// register global components\n\t\tregisterGlobalComponents(app);\n\n\t\t// mount the app\n\t\tthis.$tff_process = app.mount(this.$wrapper.get(0));\n\t}\n\n\twatch_changes() {\n\t\twatchEffect(() => {\n\t\t\tif (this.store.dirty) {\n\t\t\t\tthis.page.set_indicator(__(\"Not Saved\"), \"orange\");\n\t\t\t\tthis.reset_changes_btn.show();\n\t\t\t} else {\n\t\t\t\tthis.page.clear_indicator();\n\t\t\t\tthis.reset_changes_btn.hide();\n\t\t\t}\n\n\t\t\t// toggle doctype / customize form btn based on url\n\t\t\tthis.customize_form_btn.toggle(!this.store.is_customize_form);\n\t\t\tthis.doctype_form_btn.toggle(this.store.is_customize_form);\n\n\t\t\t// hide customize form & Go to customize form btn\n\t\t\tif (\n\t\t\t\tthis.store.doc &&\n\t\t\t\t(this.store.doc.custom ||\n\t\t\t\t\tthis.store.doc.issingle ||\n\t\t\t\t\tin_list(frappe.model.core_doctypes_list, this.doctype))\n\t\t\t) {\n\t\t\t\tthis.customize_form_btn.hide();\n\t\t\t\tif (this.doctype != \"Customize Form\") {\n\t\t\t\t\tthis.go_to_customize_form_btn.hide();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// show Go to {0} List or Go to {0} button\n\t\t\tif (this.store.doc && !this.store.doc.istable) {\n\t\t\t\tlet label = this.store.doc.issingle\n\t\t\t\t\t? __(\"Go to {0}\", [__(this.doctype)])\n\t\t\t\t\t: __(\"Go to {0} List\", [__(this.doctype)]);\n\n\t\t\t\tthis.go_to_doctype_list_btn.text(label);\n\t\t\t}\n\n\t\t\t// toggle preview btn text\n\t\t\tthis.preview_btn.text(this.store.preview ? __(\"Hide Preview\") : __(\"Show Preview\"));\n\n\t\t\t// toggle primary btn and show indicator based on read_only state\n\t\t\tthis.primary_btn.toggle(!this.store.read_only);\n\t\t\tif (this.store.read_only) {\n\t\t\t\tlet message = this.store.preview ? __(\"Preview Mode\") : __(\"Read Only\");\n\t\t\t\tthis.page.set_indicator(message, \"orange\");\n\t\t\t}\n\t\t});\n\t}\n\n\tget_document() {\n\t\tvar me = this;\n\t\tfrappe.call({\n\t\t\tmethod: \"pibitff.pibitff.doctype.tff_document.tff_document.get_document\",\n\t\t\targs: { document_name: this.docname, },\n\t\t\tasync: false,\n\t\t\tcallback: function (r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tme.document = r.message;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n\n\tget_doctype_transaction() {\n\t\tif (this.document.recorded_transaction && this.document.doctype_transaction ) {\n\t\t\tthis.doctype_transaction = this.document.doctype_transaction;\n\t\t} else {\n\t\t\tvar me = this;\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"pibitff.pibitff.doctype.tff_document.tff_document.get_doctype\",\n\t\t\t\targs: { document_classification: this.document.document_classification, },\n\t\t\t\tasync: false,\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tme.doctype_transaction = r.message;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tget_base_url() {\n\t\t// var url= (frappe.base_url || window.location.href).split('#')[0].split('?')[0].split('desk')[0];\n\t\tvar url = frappe.base_url || window.location.origin;\n\t\tif (url.substr(url.length - 1, 1) == \"/\") url = url.substr(0, url.length - 1);\n\t\treturn url;\n\t}\n}\n\nfrappe.provide(\"frappe.ui\");\nfrappe.ui.TffProcess = TffProcess;\nexport default TffProcess;", "import * as Vue from 'vue'\n\nvar isVue2 = false\nvar isVue3 = true\nvar Vue2 = undefined\n\nfunction install() {}\n\nexport function set(target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key)\n    target.splice(key, 1, val)\n    return val\n  }\n  target[key] = val\n  return val\n}\n\nexport function del(target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1)\n    return\n  }\n  delete target[key]\n}\n\nexport * from 'vue'\nexport {\n  Vue,\n  Vue2,\n  isVue2,\n  isVue3,\n  install,\n}\n", "import { initCustomFormatter, warn } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\n\nfunction initDev() {\r\n    {\r\n        initCustomFormatter();\r\n    }\r\n}\n\n// This entry exports the runtime only, and is built as\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    initDev();\r\n}\r\nconst compile = () => {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Runtime compilation is not supported in this build of Vue.` +\r\n            (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                ) /* should not happen */);\r\n    }\r\n};\n\nexport { compile };\n", "export function getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nexport function getTarget() {\n    // @ts-ignore\n    return (typeof navigator !== 'undefined' && typeof window !== 'undefined')\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\nexport const isProxyAvailable = typeof Proxy === 'function';\n", "export const HOOK_SETUP = 'devtools-plugin:setup';\nexport const HOOK_PLUGIN_SETTINGS_SET = 'plugin:settings:set';\n", "let supported;\nlet perf;\nexport function isPerformanceSupported() {\n    var _a;\n    if (supported !== undefined) {\n        return supported;\n    }\n    if (typeof window !== 'undefined' && window.performance) {\n        supported = true;\n        perf = window.performance;\n    }\n    else if (typeof global !== 'undefined' && ((_a = global.perf_hooks) === null || _a === void 0 ? void 0 : _a.performance)) {\n        supported = true;\n        perf = global.perf_hooks.performance;\n    }\n    else {\n        supported = false;\n    }\n    return supported;\n}\nexport function now() {\n    return isPerformanceSupported() ? perf.now() : Date.now();\n}\n", "import { HOOK_PLUGIN_SETTINGS_SET } from './const.js';\nimport { now } from './time.js';\nexport class ApiProxy {\n    constructor(plugin, hook) {\n        this.target = null;\n        this.targetQueue = [];\n        this.onQueue = [];\n        this.plugin = plugin;\n        this.hook = hook;\n        const defaultSettings = {};\n        if (plugin.settings) {\n            for (const id in plugin.settings) {\n                const item = plugin.settings[id];\n                defaultSettings[id] = item.defaultValue;\n            }\n        }\n        const localSettingsSaveId = `__vue-devtools-plugin-settings__${plugin.id}`;\n        let currentSettings = Object.assign({}, defaultSettings);\n        try {\n            const raw = localStorage.getItem(localSettingsSaveId);\n            const data = JSON.parse(raw);\n            Object.assign(currentSettings, data);\n        }\n        catch (e) {\n            // noop\n        }\n        this.fallbacks = {\n            getSettings() {\n                return currentSettings;\n            },\n            setSettings(value) {\n                try {\n                    localStorage.setItem(localSettingsSaveId, JSON.stringify(value));\n                }\n                catch (e) {\n                    // noop\n                }\n                currentSettings = value;\n            },\n            now() {\n                return now();\n            },\n        };\n        if (hook) {\n            hook.on(HOOK_PLUGIN_SETTINGS_SET, (pluginId, value) => {\n                if (pluginId === this.plugin.id) {\n                    this.fallbacks.setSettings(value);\n                }\n            });\n        }\n        this.proxiedOn = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target.on[prop];\n                }\n                else {\n                    return (...args) => {\n                        this.onQueue.push({\n                            method: prop,\n                            args,\n                        });\n                    };\n                }\n            },\n        });\n        this.proxiedTarget = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target[prop];\n                }\n                else if (prop === 'on') {\n                    return this.proxiedOn;\n                }\n                else if (Object.keys(this.fallbacks).includes(prop)) {\n                    return (...args) => {\n                        this.targetQueue.push({\n                            method: prop,\n                            args,\n                            resolve: () => { },\n                        });\n                        return this.fallbacks[prop](...args);\n                    };\n                }\n                else {\n                    return (...args) => {\n                        return new Promise(resolve => {\n                            this.targetQueue.push({\n                                method: prop,\n                                args,\n                                resolve,\n                            });\n                        });\n                    };\n                }\n            },\n        });\n    }\n    async setRealTarget(target) {\n        this.target = target;\n        for (const item of this.onQueue) {\n            this.target.on[item.method](...item.args);\n        }\n        for (const item of this.targetQueue) {\n            item.resolve(await this.target[item.method](...item.args));\n        }\n    }\n}\n", "import { getTarget, getDevtoolsGlobalHook, isProxyAvailable } from './env.js';\nimport { HOOK_SETUP } from './const.js';\nimport { ApiProxy } from './proxy.js';\nexport * from './api/index.js';\nexport * from './plugin.js';\nexport * from './time.js';\nexport function setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const descriptor = pluginDescriptor;\n    const target = getTarget();\n    const hook = getDevtoolsGlobalHook();\n    const enableProxy = isProxyAvailable && descriptor.enableEarlyProxy;\n    if (hook && (target.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__ || !enableProxy)) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const proxy = enableProxy ? new ApiProxy(descriptor, hook) : null;\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor: descriptor,\n            setupFn,\n            proxy,\n        });\n        if (proxy)\n            setupFn(proxy.proxiedTarget);\n    }\n}\n", "/*!\n  * pinia v2.0.23\n  * (c) 2022 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, toRaw, watch, unref, markRaw, effectScope, ref, isVue2, isRef, isReactive, set, onUnmounted, reactive, toRef, del, nextTick, computed, toRefs } from 'vue-demi';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\n/**\r\n * setActivePinia must be called to handle SSR at the top of functions like\r\n * `fetch`, `setup`, `serverPrefetch` and others\r\n */\r\nlet activePinia;\r\n/**\r\n * Sets or unsets the active pinia. Used in SSR and internally when calling\r\n * actions and getters\r\n *\r\n * @param pinia - Pinia instance\r\n */\r\nconst setActivePinia = (pinia) => (activePinia = pinia);\r\n/**\r\n * Get the currently active pinia if there is any.\r\n */\r\nconst getActivePinia = () => (getCurrentInstance() && inject(piniaSymbol)) || activePinia;\r\nconst piniaSymbol = ((process.env.NODE_ENV !== 'production') ? Symbol('pinia') : /* istanbul ignore next */ Symbol());\n\nfunction isPlainObject(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\no) {\r\n    return (o &&\r\n        typeof o === 'object' &&\r\n        Object.prototype.toString.call(o) === '[object Object]' &&\r\n        typeof o.toJSON !== 'function');\r\n}\r\n// type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }\r\n// TODO: can we change these to numbers?\r\n/**\r\n * Possible types for SubscriptionCallback\r\n */\r\nvar MutationType;\r\n(function (MutationType) {\r\n    /**\r\n     * Direct mutation of the state:\r\n     *\r\n     * - `store.name = 'new name'`\r\n     * - `store.$state.name = 'new name'`\r\n     * - `store.list.push('new item')`\r\n     */\r\n    MutationType[\"direct\"] = \"direct\";\r\n    /**\r\n     * Mutated the state with `$patch` and an object\r\n     *\r\n     * - `store.$patch({ name: 'newName' })`\r\n     */\r\n    MutationType[\"patchObject\"] = \"patch object\";\r\n    /**\r\n     * Mutated the state with `$patch` and a function\r\n     *\r\n     * - `store.$patch(state => state.name = 'newName')`\r\n     */\r\n    MutationType[\"patchFunction\"] = \"patch function\";\r\n    // maybe reset? for $state = {} and $reset\r\n})(MutationType || (MutationType = {}));\n\nconst IS_CLIENT = typeof window !== 'undefined';\r\n/**\r\n * Should we add the devtools plugins.\r\n * - only if dev mode or forced through the prod devtools flag\r\n * - not in test\r\n * - only if window exists (could change in the future)\r\n */\r\nconst USE_DEVTOOLS = ((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test') && IS_CLIENT;\n\n/*\r\n * FileSaver.js A saveAs() FileSaver implementation.\r\n *\r\n * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin\r\n * Morote.\r\n *\r\n * License : MIT\r\n */\r\n// The one and only way of getting global scope in all environments\r\n// https://stackoverflow.com/q/3277182/1008999\r\nconst _global = /*#__PURE__*/ (() => typeof window === 'object' && window.window === window\r\n    ? window\r\n    : typeof self === 'object' && self.self === self\r\n        ? self\r\n        : typeof global === 'object' && global.global === global\r\n            ? global\r\n            : typeof globalThis === 'object'\r\n                ? globalThis\r\n                : { HTMLElement: null })();\r\nfunction bom(blob, { autoBom = false } = {}) {\r\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\r\n    // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\r\n    if (autoBom &&\r\n        /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\r\n        return new Blob([String.fromCharCode(0xfeff), blob], { type: blob.type });\r\n    }\r\n    return blob;\r\n}\r\nfunction download(url, name, opts) {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url);\r\n    xhr.responseType = 'blob';\r\n    xhr.onload = function () {\r\n        saveAs(xhr.response, name, opts);\r\n    };\r\n    xhr.onerror = function () {\r\n        console.error('could not download file');\r\n    };\r\n    xhr.send();\r\n}\r\nfunction corsEnabled(url) {\r\n    const xhr = new XMLHttpRequest();\r\n    // use sync to avoid popup blocker\r\n    xhr.open('HEAD', url, false);\r\n    try {\r\n        xhr.send();\r\n    }\r\n    catch (e) { }\r\n    return xhr.status >= 200 && xhr.status <= 299;\r\n}\r\n// `a.click()` doesn't work for all browsers (#465)\r\nfunction click(node) {\r\n    try {\r\n        node.dispatchEvent(new MouseEvent('click'));\r\n    }\r\n    catch (e) {\r\n        const evt = document.createEvent('MouseEvents');\r\n        evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\r\n        node.dispatchEvent(evt);\r\n    }\r\n}\r\nconst _navigator = \r\n typeof navigator === 'object' ? navigator : { userAgent: '' };\r\n// Detect WebView inside a native macOS app by ruling out all browsers\r\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\r\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\r\nconst isMacOSWebView = /*#__PURE__*/ (() => /Macintosh/.test(_navigator.userAgent) &&\r\n    /AppleWebKit/.test(_navigator.userAgent) &&\r\n    !/Safari/.test(_navigator.userAgent))();\r\nconst saveAs = !IS_CLIENT\r\n    ? () => { } // noop\r\n    : // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program\r\n        typeof HTMLAnchorElement !== 'undefined' &&\r\n            'download' in HTMLAnchorElement.prototype &&\r\n            !isMacOSWebView\r\n            ? downloadSaveAs\r\n            : // Use msSaveOrOpenBlob as a second approach\r\n                'msSaveOrOpenBlob' in _navigator\r\n                    ? msSaveAs\r\n                    : // Fallback to using FileReader and a popup\r\n                        fileSaverSaveAs;\r\nfunction downloadSaveAs(blob, name = 'download', opts) {\r\n    const a = document.createElement('a');\r\n    a.download = name;\r\n    a.rel = 'noopener'; // tabnabbing\r\n    // TODO: detect chrome extensions & packaged apps\r\n    // a.target = '_blank'\r\n    if (typeof blob === 'string') {\r\n        // Support regular links\r\n        a.href = blob;\r\n        if (a.origin !== location.origin) {\r\n            if (corsEnabled(a.href)) {\r\n                download(blob, name, opts);\r\n            }\r\n            else {\r\n                a.target = '_blank';\r\n                click(a);\r\n            }\r\n        }\r\n        else {\r\n            click(a);\r\n        }\r\n    }\r\n    else {\r\n        // Support blobs\r\n        a.href = URL.createObjectURL(blob);\r\n        setTimeout(function () {\r\n            URL.revokeObjectURL(a.href);\r\n        }, 4e4); // 40s\r\n        setTimeout(function () {\r\n            click(a);\r\n        }, 0);\r\n    }\r\n}\r\nfunction msSaveAs(blob, name = 'download', opts) {\r\n    if (typeof blob === 'string') {\r\n        if (corsEnabled(blob)) {\r\n            download(blob, name, opts);\r\n        }\r\n        else {\r\n            const a = document.createElement('a');\r\n            a.href = blob;\r\n            a.target = '_blank';\r\n            setTimeout(function () {\r\n                click(a);\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        // @ts-ignore: works on windows\r\n        navigator.msSaveOrOpenBlob(bom(blob, opts), name);\r\n    }\r\n}\r\nfunction fileSaverSaveAs(blob, name, opts, popup) {\r\n    // Open a popup immediately do go around popup blocker\r\n    // Mostly only available on user interaction and the fileReader is async so...\r\n    popup = popup || open('', '_blank');\r\n    if (popup) {\r\n        popup.document.title = popup.document.body.innerText = 'downloading...';\r\n    }\r\n    if (typeof blob === 'string')\r\n        return download(blob, name, opts);\r\n    const force = blob.type === 'application/octet-stream';\r\n    const isSafari = /constructor/i.test(String(_global.HTMLElement)) || 'safari' in _global;\r\n    const isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\r\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) &&\r\n        typeof FileReader !== 'undefined') {\r\n        // Safari doesn't allow downloading of blob URLs\r\n        const reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            let url = reader.result;\r\n            if (typeof url !== 'string') {\r\n                popup = null;\r\n                throw new Error('Wrong reader.result type');\r\n            }\r\n            url = isChromeIOS\r\n                ? url\r\n                : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\r\n            if (popup) {\r\n                popup.location.href = url;\r\n            }\r\n            else {\r\n                location.assign(url);\r\n            }\r\n            popup = null; // reverse-tabnabbing #460\r\n        };\r\n        reader.readAsDataURL(blob);\r\n    }\r\n    else {\r\n        const url = URL.createObjectURL(blob);\r\n        if (popup)\r\n            popup.location.assign(url);\r\n        else\r\n            location.href = url;\r\n        popup = null; // reverse-tabnabbing #460\r\n        setTimeout(function () {\r\n            URL.revokeObjectURL(url);\r\n        }, 4e4); // 40s\r\n    }\r\n}\n\n/**\r\n * Shows a toast or console.log\r\n *\r\n * @param message - message to log\r\n * @param type - different color of the tooltip\r\n */\r\nfunction toastMessage(message, type) {\r\n    const piniaMessage = '\uD83C\uDF4D ' + message;\r\n    if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\r\n        __VUE_DEVTOOLS_TOAST__(piniaMessage, type);\r\n    }\r\n    else if (type === 'error') {\r\n        console.error(piniaMessage);\r\n    }\r\n    else if (type === 'warn') {\r\n        console.warn(piniaMessage);\r\n    }\r\n    else {\r\n        console.log(piniaMessage);\r\n    }\r\n}\r\nfunction isPinia(o) {\r\n    return '_a' in o && 'install' in o;\r\n}\n\nfunction checkClipboardAccess() {\r\n    if (!('clipboard' in navigator)) {\r\n        toastMessage(`Your browser doesn't support the Clipboard API`, 'error');\r\n        return true;\r\n    }\r\n}\r\nfunction checkNotFocusedError(error) {\r\n    if (error instanceof Error &&\r\n        error.message.toLowerCase().includes('document is not focused')) {\r\n        toastMessage('You need to activate the \"Emulate a focused page\" setting in the \"Rendering\" panel of devtools.', 'warn');\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nasync function actionGlobalCopyState(pinia) {\r\n    if (checkClipboardAccess())\r\n        return;\r\n    try {\r\n        await navigator.clipboard.writeText(JSON.stringify(pinia.state.value));\r\n        toastMessage('Global state copied to clipboard.');\r\n    }\r\n    catch (error) {\r\n        if (checkNotFocusedError(error))\r\n            return;\r\n        toastMessage(`Failed to serialize the state. Check the console for more details.`, 'error');\r\n        console.error(error);\r\n    }\r\n}\r\nasync function actionGlobalPasteState(pinia) {\r\n    if (checkClipboardAccess())\r\n        return;\r\n    try {\r\n        pinia.state.value = JSON.parse(await navigator.clipboard.readText());\r\n        toastMessage('Global state pasted from clipboard.');\r\n    }\r\n    catch (error) {\r\n        if (checkNotFocusedError(error))\r\n            return;\r\n        toastMessage(`Failed to deserialize the state from clipboard. Check the console for more details.`, 'error');\r\n        console.error(error);\r\n    }\r\n}\r\nasync function actionGlobalSaveState(pinia) {\r\n    try {\r\n        saveAs(new Blob([JSON.stringify(pinia.state.value)], {\r\n            type: 'text/plain;charset=utf-8',\r\n        }), 'pinia-state.json');\r\n    }\r\n    catch (error) {\r\n        toastMessage(`Failed to export the state as JSON. Check the console for more details.`, 'error');\r\n        console.error(error);\r\n    }\r\n}\r\nlet fileInput;\r\nfunction getFileOpener() {\r\n    if (!fileInput) {\r\n        fileInput = document.createElement('input');\r\n        fileInput.type = 'file';\r\n        fileInput.accept = '.json';\r\n    }\r\n    function openFile() {\r\n        return new Promise((resolve, reject) => {\r\n            fileInput.onchange = async () => {\r\n                const files = fileInput.files;\r\n                if (!files)\r\n                    return resolve(null);\r\n                const file = files.item(0);\r\n                if (!file)\r\n                    return resolve(null);\r\n                return resolve({ text: await file.text(), file });\r\n            };\r\n            // @ts-ignore: TODO: changed from 4.3 to 4.4\r\n            fileInput.oncancel = () => resolve(null);\r\n            fileInput.onerror = reject;\r\n            fileInput.click();\r\n        });\r\n    }\r\n    return openFile;\r\n}\r\nasync function actionGlobalOpenStateFile(pinia) {\r\n    try {\r\n        const open = await getFileOpener();\r\n        const result = await open();\r\n        if (!result)\r\n            return;\r\n        const { text, file } = result;\r\n        pinia.state.value = JSON.parse(text);\r\n        toastMessage(`Global state imported from \"${file.name}\".`);\r\n    }\r\n    catch (error) {\r\n        toastMessage(`Failed to export the state as JSON. Check the console for more details.`, 'error');\r\n        console.error(error);\r\n    }\r\n}\n\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\nconst PINIA_ROOT_LABEL = '\uD83C\uDF4D Pinia (root)';\r\nconst PINIA_ROOT_ID = '_root';\r\nfunction formatStoreForInspectorTree(store) {\r\n    return isPinia(store)\r\n        ? {\r\n            id: PINIA_ROOT_ID,\r\n            label: PINIA_ROOT_LABEL,\r\n        }\r\n        : {\r\n            id: store.$id,\r\n            label: store.$id,\r\n        };\r\n}\r\nfunction formatStoreForInspectorState(store) {\r\n    if (isPinia(store)) {\r\n        const storeNames = Array.from(store._s.keys());\r\n        const storeMap = store._s;\r\n        const state = {\r\n            state: storeNames.map((storeId) => ({\r\n                editable: true,\r\n                key: storeId,\r\n                value: store.state.value[storeId],\r\n            })),\r\n            getters: storeNames\r\n                .filter((id) => storeMap.get(id)._getters)\r\n                .map((id) => {\r\n                const store = storeMap.get(id);\r\n                return {\r\n                    editable: false,\r\n                    key: id,\r\n                    value: store._getters.reduce((getters, key) => {\r\n                        getters[key] = store[key];\r\n                        return getters;\r\n                    }, {}),\r\n                };\r\n            }),\r\n        };\r\n        return state;\r\n    }\r\n    const state = {\r\n        state: Object.keys(store.$state).map((key) => ({\r\n            editable: true,\r\n            key,\r\n            value: store.$state[key],\r\n        })),\r\n    };\r\n    // avoid adding empty getters\r\n    if (store._getters && store._getters.length) {\r\n        state.getters = store._getters.map((getterName) => ({\r\n            editable: false,\r\n            key: getterName,\r\n            value: store[getterName],\r\n        }));\r\n    }\r\n    if (store._customProperties.size) {\r\n        state.customProperties = Array.from(store._customProperties).map((key) => ({\r\n            editable: true,\r\n            key,\r\n            value: store[key],\r\n        }));\r\n    }\r\n    return state;\r\n}\r\nfunction formatEventData(events) {\r\n    if (!events)\r\n        return {};\r\n    if (Array.isArray(events)) {\r\n        // TODO: handle add and delete for arrays and objects\r\n        return events.reduce((data, event) => {\r\n            data.keys.push(event.key);\r\n            data.operations.push(event.type);\r\n            data.oldValue[event.key] = event.oldValue;\r\n            data.newValue[event.key] = event.newValue;\r\n            return data;\r\n        }, {\r\n            oldValue: {},\r\n            keys: [],\r\n            operations: [],\r\n            newValue: {},\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            operation: formatDisplay(events.type),\r\n            key: formatDisplay(events.key),\r\n            oldValue: events.oldValue,\r\n            newValue: events.newValue,\r\n        };\r\n    }\r\n}\r\nfunction formatMutationType(type) {\r\n    switch (type) {\r\n        case MutationType.direct:\r\n            return 'mutation';\r\n        case MutationType.patchFunction:\r\n            return '$patch';\r\n        case MutationType.patchObject:\r\n            return '$patch';\r\n        default:\r\n            return 'unknown';\r\n    }\r\n}\n\n// timeline can be paused when directly changing the state\r\nlet isTimelineActive = true;\r\nconst componentStateTypes = [];\r\nconst MUTATIONS_LAYER_ID = 'pinia:mutations';\r\nconst INSPECTOR_ID = 'pinia';\r\n/**\r\n * Gets the displayed name of a store in devtools\r\n *\r\n * @param id - id of the store\r\n * @returns a formatted string\r\n */\r\nconst getStoreType = (id) => '\uD83C\uDF4D ' + id;\r\n/**\r\n * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab\r\n * as soon as it is added to the application.\r\n *\r\n * @param app - Vue application\r\n * @param pinia - pinia instance\r\n */\r\nfunction registerPiniaDevtools(app, pinia) {\r\n    setupDevtoolsPlugin({\r\n        id: 'dev.esm.pinia',\r\n        label: 'Pinia \uD83C\uDF4D',\r\n        logo: 'https://pinia.vuejs.org/logo.svg',\r\n        packageName: 'pinia',\r\n        homepage: 'https://pinia.vuejs.org',\r\n        componentStateTypes,\r\n        app,\r\n    }, (api) => {\r\n        if (typeof api.now !== 'function') {\r\n            toastMessage('You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\r\n        }\r\n        api.addTimelineLayer({\r\n            id: MUTATIONS_LAYER_ID,\r\n            label: `Pinia \uD83C\uDF4D`,\r\n            color: 0xe5df88,\r\n        });\r\n        api.addInspector({\r\n            id: INSPECTOR_ID,\r\n            label: 'Pinia \uD83C\uDF4D',\r\n            icon: 'storage',\r\n            treeFilterPlaceholder: 'Search stores',\r\n            actions: [\r\n                {\r\n                    icon: 'content_copy',\r\n                    action: () => {\r\n                        actionGlobalCopyState(pinia);\r\n                    },\r\n                    tooltip: 'Serialize and copy the state',\r\n                },\r\n                {\r\n                    icon: 'content_paste',\r\n                    action: async () => {\r\n                        await actionGlobalPasteState(pinia);\r\n                        api.sendInspectorTree(INSPECTOR_ID);\r\n                        api.sendInspectorState(INSPECTOR_ID);\r\n                    },\r\n                    tooltip: 'Replace the state with the content of your clipboard',\r\n                },\r\n                {\r\n                    icon: 'save',\r\n                    action: () => {\r\n                        actionGlobalSaveState(pinia);\r\n                    },\r\n                    tooltip: 'Save the state as a JSON file',\r\n                },\r\n                {\r\n                    icon: 'folder_open',\r\n                    action: async () => {\r\n                        await actionGlobalOpenStateFile(pinia);\r\n                        api.sendInspectorTree(INSPECTOR_ID);\r\n                        api.sendInspectorState(INSPECTOR_ID);\r\n                    },\r\n                    tooltip: 'Import the state from a JSON file',\r\n                },\r\n            ],\r\n            nodeActions: [\r\n                {\r\n                    icon: 'restore',\r\n                    tooltip: 'Reset the state (option store only)',\r\n                    action: (nodeId) => {\r\n                        const store = pinia._s.get(nodeId);\r\n                        if (!store) {\r\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it wasn't found.`, 'warn');\r\n                        }\r\n                        else if (!store._isOptionsAPI) {\r\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it's a setup store.`, 'warn');\r\n                        }\r\n                        else {\r\n                            store.$reset();\r\n                            toastMessage(`Store \"${nodeId}\" reset.`);\r\n                        }\r\n                    },\r\n                },\r\n            ],\r\n        });\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            const proxy = (payload.componentInstance &&\r\n                payload.componentInstance.proxy);\r\n            if (proxy && proxy._pStores) {\r\n                const piniaStores = payload.componentInstance.proxy._pStores;\r\n                Object.values(piniaStores).forEach((store) => {\r\n                    payload.instanceData.state.push({\r\n                        type: getStoreType(store.$id),\r\n                        key: 'state',\r\n                        editable: true,\r\n                        value: store._isOptionsAPI\r\n                            ? {\r\n                                _custom: {\r\n                                    value: toRaw(store.$state),\r\n                                    actions: [\r\n                                        {\r\n                                            icon: 'restore',\r\n                                            tooltip: 'Reset the state of this store',\r\n                                            action: () => store.$reset(),\r\n                                        },\r\n                                    ],\r\n                                },\r\n                            }\r\n                            : // NOTE: workaround to unwrap transferred refs\r\n                                Object.keys(store.$state).reduce((state, key) => {\r\n                                    state[key] = store.$state[key];\r\n                                    return state;\r\n                                }, {}),\r\n                    });\r\n                    if (store._getters && store._getters.length) {\r\n                        payload.instanceData.state.push({\r\n                            type: getStoreType(store.$id),\r\n                            key: 'getters',\r\n                            editable: false,\r\n                            value: store._getters.reduce((getters, key) => {\r\n                                try {\r\n                                    getters[key] = store[key];\r\n                                }\r\n                                catch (error) {\r\n                                    // @ts-expect-error: we just want to show it in devtools\r\n                                    getters[key] = error;\r\n                                }\r\n                                return getters;\r\n                            }, {}),\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        api.on.getInspectorTree((payload) => {\r\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\r\n                let stores = [pinia];\r\n                stores = stores.concat(Array.from(pinia._s.values()));\r\n                payload.rootNodes = (payload.filter\r\n                    ? stores.filter((store) => '$id' in store\r\n                        ? store.$id\r\n                            .toLowerCase()\r\n                            .includes(payload.filter.toLowerCase())\r\n                        : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase()))\r\n                    : stores).map(formatStoreForInspectorTree);\r\n            }\r\n        });\r\n        api.on.getInspectorState((payload) => {\r\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\r\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\r\n                    ? pinia\r\n                    : pinia._s.get(payload.nodeId);\r\n                if (!inspectedStore) {\r\n                    // this could be the selected store restored for a different project\r\n                    // so it's better not to say anything here\r\n                    return;\r\n                }\r\n                if (inspectedStore) {\r\n                    payload.state = formatStoreForInspectorState(inspectedStore);\r\n                }\r\n            }\r\n        });\r\n        api.on.editInspectorState((payload, ctx) => {\r\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\r\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\r\n                    ? pinia\r\n                    : pinia._s.get(payload.nodeId);\r\n                if (!inspectedStore) {\r\n                    return toastMessage(`store \"${payload.nodeId}\" not found`, 'error');\r\n                }\r\n                const { path } = payload;\r\n                if (!isPinia(inspectedStore)) {\r\n                    // access only the state\r\n                    if (path.length !== 1 ||\r\n                        !inspectedStore._customProperties.has(path[0]) ||\r\n                        path[0] in inspectedStore.$state) {\r\n                        path.unshift('$state');\r\n                    }\r\n                }\r\n                else {\r\n                    // Root access, we can omit the `.value` because the devtools API does it for us\r\n                    path.unshift('state');\r\n                }\r\n                isTimelineActive = false;\r\n                payload.set(inspectedStore, path, payload.state.value);\r\n                isTimelineActive = true;\r\n            }\r\n        });\r\n        api.on.editComponentState((payload) => {\r\n            if (payload.type.startsWith('\uD83C\uDF4D')) {\r\n                const storeId = payload.type.replace(/^\uD83C\uDF4D\\s*/, '');\r\n                const store = pinia._s.get(storeId);\r\n                if (!store) {\r\n                    return toastMessage(`store \"${storeId}\" not found`, 'error');\r\n                }\r\n                const { path } = payload;\r\n                if (path[0] !== 'state') {\r\n                    return toastMessage(`Invalid path for store \"${storeId}\":\\n${path}\\nOnly state can be modified.`);\r\n                }\r\n                // rewrite the first entry to be able to directly set the state as\r\n                // well as any other path\r\n                path[0] = '$state';\r\n                isTimelineActive = false;\r\n                payload.set(store, path, payload.state.value);\r\n                isTimelineActive = true;\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction addStoreToDevtools(app, store) {\r\n    if (!componentStateTypes.includes(getStoreType(store.$id))) {\r\n        componentStateTypes.push(getStoreType(store.$id));\r\n    }\r\n    setupDevtoolsPlugin({\r\n        id: 'dev.esm.pinia',\r\n        label: 'Pinia \uD83C\uDF4D',\r\n        logo: 'https://pinia.vuejs.org/logo.svg',\r\n        packageName: 'pinia',\r\n        homepage: 'https://pinia.vuejs.org',\r\n        componentStateTypes,\r\n        app,\r\n        settings: {\r\n            logStoreChanges: {\r\n                label: 'Notify about new/deleted stores',\r\n                type: 'boolean',\r\n                defaultValue: true,\r\n            },\r\n            // useEmojis: {\r\n            //   label: 'Use emojis in messages \u26A1\uFE0F',\r\n            //   type: 'boolean',\r\n            //   defaultValue: true,\r\n            // },\r\n        },\r\n    }, (api) => {\r\n        // gracefully handle errors\r\n        const now = typeof api.now === 'function' ? api.now.bind(api) : Date.now;\r\n        store.$onAction(({ after, onError, name, args }) => {\r\n            const groupId = runningActionId++;\r\n            api.addTimelineEvent({\r\n                layerId: MUTATIONS_LAYER_ID,\r\n                event: {\r\n                    time: now(),\r\n                    title: '\uD83D\uDEEB ' + name,\r\n                    subtitle: 'start',\r\n                    data: {\r\n                        store: formatDisplay(store.$id),\r\n                        action: formatDisplay(name),\r\n                        args,\r\n                    },\r\n                    groupId,\r\n                },\r\n            });\r\n            after((result) => {\r\n                activeAction = undefined;\r\n                api.addTimelineEvent({\r\n                    layerId: MUTATIONS_LAYER_ID,\r\n                    event: {\r\n                        time: now(),\r\n                        title: '\uD83D\uDEEC ' + name,\r\n                        subtitle: 'end',\r\n                        data: {\r\n                            store: formatDisplay(store.$id),\r\n                            action: formatDisplay(name),\r\n                            args,\r\n                            result,\r\n                        },\r\n                        groupId,\r\n                    },\r\n                });\r\n            });\r\n            onError((error) => {\r\n                activeAction = undefined;\r\n                api.addTimelineEvent({\r\n                    layerId: MUTATIONS_LAYER_ID,\r\n                    event: {\r\n                        time: now(),\r\n                        logType: 'error',\r\n                        title: '\uD83D\uDCA5 ' + name,\r\n                        subtitle: 'end',\r\n                        data: {\r\n                            store: formatDisplay(store.$id),\r\n                            action: formatDisplay(name),\r\n                            args,\r\n                            error,\r\n                        },\r\n                        groupId,\r\n                    },\r\n                });\r\n            });\r\n        }, true);\r\n        store._customProperties.forEach((name) => {\r\n            watch(() => unref(store[name]), (newValue, oldValue) => {\r\n                api.notifyComponentUpdate();\r\n                api.sendInspectorState(INSPECTOR_ID);\r\n                if (isTimelineActive) {\r\n                    api.addTimelineEvent({\r\n                        layerId: MUTATIONS_LAYER_ID,\r\n                        event: {\r\n                            time: now(),\r\n                            title: 'Change',\r\n                            subtitle: name,\r\n                            data: {\r\n                                newValue,\r\n                                oldValue,\r\n                            },\r\n                            groupId: activeAction,\r\n                        },\r\n                    });\r\n                }\r\n            }, { deep: true });\r\n        });\r\n        store.$subscribe(({ events, type }, state) => {\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorState(INSPECTOR_ID);\r\n            if (!isTimelineActive)\r\n                return;\r\n            // rootStore.state[store.id] = state\r\n            const eventData = {\r\n                time: now(),\r\n                title: formatMutationType(type),\r\n                data: {\r\n                    store: formatDisplay(store.$id),\r\n                    ...formatEventData(events),\r\n                },\r\n                groupId: activeAction,\r\n            };\r\n            // reset for the next mutation\r\n            activeAction = undefined;\r\n            if (type === MutationType.patchFunction) {\r\n                eventData.subtitle = '\u2935\uFE0F';\r\n            }\r\n            else if (type === MutationType.patchObject) {\r\n                eventData.subtitle = '\uD83E\uDDE9';\r\n            }\r\n            else if (events && !Array.isArray(events)) {\r\n                eventData.subtitle = events.type;\r\n            }\r\n            if (events) {\r\n                eventData.data['rawEvent(s)'] = {\r\n                    _custom: {\r\n                        display: 'DebuggerEvent',\r\n                        type: 'object',\r\n                        tooltip: 'raw DebuggerEvent[]',\r\n                        value: events,\r\n                    },\r\n                };\r\n            }\r\n            api.addTimelineEvent({\r\n                layerId: MUTATIONS_LAYER_ID,\r\n                event: eventData,\r\n            });\r\n        }, { detached: true, flush: 'sync' });\r\n        const hotUpdate = store._hotUpdate;\r\n        store._hotUpdate = markRaw((newStore) => {\r\n            hotUpdate(newStore);\r\n            api.addTimelineEvent({\r\n                layerId: MUTATIONS_LAYER_ID,\r\n                event: {\r\n                    time: now(),\r\n                    title: '\uD83D\uDD25 ' + store.$id,\r\n                    subtitle: 'HMR update',\r\n                    data: {\r\n                        store: formatDisplay(store.$id),\r\n                        info: formatDisplay(`HMR update`),\r\n                    },\r\n                },\r\n            });\r\n            // update the devtools too\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(INSPECTOR_ID);\r\n            api.sendInspectorState(INSPECTOR_ID);\r\n        });\r\n        const { $dispose } = store;\r\n        store.$dispose = () => {\r\n            $dispose();\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(INSPECTOR_ID);\r\n            api.sendInspectorState(INSPECTOR_ID);\r\n            api.getSettings().logStoreChanges &&\r\n                toastMessage(`Disposed \"${store.$id}\" store \uD83D\uDDD1`);\r\n        };\r\n        // trigger an update so it can display new registered stores\r\n        api.notifyComponentUpdate();\r\n        api.sendInspectorTree(INSPECTOR_ID);\r\n        api.sendInspectorState(INSPECTOR_ID);\r\n        api.getSettings().logStoreChanges &&\r\n            toastMessage(`\"${store.$id}\" store installed \uD83C\uDD95`);\r\n    });\r\n}\r\nlet runningActionId = 0;\r\nlet activeAction;\r\n/**\r\n * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the\r\n * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state\r\n * mutation to the action.\r\n *\r\n * @param store - store to patch\r\n * @param actionNames - list of actionst to patch\r\n */\r\nfunction patchActionForGrouping(store, actionNames) {\r\n    // original actions of the store as they are given by pinia. We are going to override them\r\n    const actions = actionNames.reduce((storeActions, actionName) => {\r\n        // use toRaw to avoid tracking #541\r\n        storeActions[actionName] = toRaw(store)[actionName];\r\n        return storeActions;\r\n    }, {});\r\n    for (const actionName in actions) {\r\n        store[actionName] = function () {\r\n            // setActivePinia(store._p)\r\n            // the running action id is incremented in a before action hook\r\n            const _actionId = runningActionId;\r\n            const trackedStore = new Proxy(store, {\r\n                get(...args) {\r\n                    activeAction = _actionId;\r\n                    return Reflect.get(...args);\r\n                },\r\n                set(...args) {\r\n                    activeAction = _actionId;\r\n                    return Reflect.set(...args);\r\n                },\r\n            });\r\n            return actions[actionName].apply(trackedStore, arguments);\r\n        };\r\n    }\r\n}\r\n/**\r\n * pinia.use(devtoolsPlugin)\r\n */\r\nfunction devtoolsPlugin({ app, store, options }) {\r\n    // HMR module\r\n    if (store.$id.startsWith('__hot:')) {\r\n        return;\r\n    }\r\n    // detect option api vs setup api\r\n    if (options.state) {\r\n        store._isOptionsAPI = true;\r\n    }\r\n    // only wrap actions in option-defined stores as this technique relies on\r\n    // wrapping the context of the action with a proxy\r\n    if (typeof options.state === 'function') {\r\n        patchActionForGrouping(\r\n        // @ts-expect-error: can cast the store...\r\n        store, Object.keys(options.actions));\r\n        const originalHotUpdate = store._hotUpdate;\r\n        // Upgrade the HMR to also update the new actions\r\n        toRaw(store)._hotUpdate = function (newStore) {\r\n            originalHotUpdate.apply(this, arguments);\r\n            patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions));\r\n        };\r\n    }\r\n    addStoreToDevtools(app, \r\n    // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?\r\n    store);\r\n}\n\n/**\r\n * Creates a Pinia instance to be used by the application\r\n */\r\nfunction createPinia() {\r\n    const scope = effectScope(true);\r\n    // NOTE: here we could check the window object for a state and directly set it\r\n    // if there is anything like it with Vue 3 SSR\r\n    const state = scope.run(() => ref({}));\r\n    let _p = [];\r\n    // plugins added before calling app.use(pinia)\r\n    let toBeInstalled = [];\r\n    const pinia = markRaw({\r\n        install(app) {\r\n            // this allows calling useStore() outside of a component setup after\r\n            // installing pinia's plugin\r\n            setActivePinia(pinia);\r\n            if (!isVue2) {\r\n                pinia._a = app;\r\n                app.provide(piniaSymbol, pinia);\r\n                app.config.globalProperties.$pinia = pinia;\r\n                /* istanbul ignore else */\r\n                if (USE_DEVTOOLS) {\r\n                    registerPiniaDevtools(app, pinia);\r\n                }\r\n                toBeInstalled.forEach((plugin) => _p.push(plugin));\r\n                toBeInstalled = [];\r\n            }\r\n        },\r\n        use(plugin) {\r\n            if (!this._a && !isVue2) {\r\n                toBeInstalled.push(plugin);\r\n            }\r\n            else {\r\n                _p.push(plugin);\r\n            }\r\n            return this;\r\n        },\r\n        _p,\r\n        // it's actually undefined here\r\n        // @ts-expect-error\r\n        _a: null,\r\n        _e: scope,\r\n        _s: new Map(),\r\n        state,\r\n    });\r\n    // pinia devtools rely on dev only features so they cannot be forced unless\r\n    // the dev build of Vue is used. Avoid old browsers like IE11.\r\n    if (USE_DEVTOOLS && typeof Proxy !== 'undefined') {\r\n        pinia.use(devtoolsPlugin);\r\n    }\r\n    return pinia;\r\n}\n\n/**\r\n * Checks if a function is a `StoreDefinition`.\r\n *\r\n * @param fn - object to test\r\n * @returns true if `fn` is a StoreDefinition\r\n */\r\nconst isUseStore = (fn) => {\r\n    return typeof fn === 'function' && typeof fn.$id === 'string';\r\n};\r\n/**\r\n * Mutates in place `newState` with `oldState` to _hot update_ it. It will\r\n * remove any key not existing in `newState` and recursively merge plain\r\n * objects.\r\n *\r\n * @param newState - new state object to be patched\r\n * @param oldState - old state that should be used to patch newState\r\n * @returns - newState\r\n */\r\nfunction patchObject(newState, oldState) {\r\n    // no need to go through symbols because they cannot be serialized anyway\r\n    for (const key in oldState) {\r\n        const subPatch = oldState[key];\r\n        // skip the whole sub tree\r\n        if (!(key in newState)) {\r\n            continue;\r\n        }\r\n        const targetValue = newState[key];\r\n        if (isPlainObject(targetValue) &&\r\n            isPlainObject(subPatch) &&\r\n            !isRef(subPatch) &&\r\n            !isReactive(subPatch)) {\r\n            newState[key] = patchObject(targetValue, subPatch);\r\n        }\r\n        else {\r\n            // objects are either a bit more complex (e.g. refs) or primitives, so we\r\n            // just set the whole thing\r\n            if (isVue2) {\r\n                set(newState, key, subPatch);\r\n            }\r\n            else {\r\n                newState[key] = subPatch;\r\n            }\r\n        }\r\n    }\r\n    return newState;\r\n}\r\n/**\r\n * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.\r\n *\r\n * @example\r\n * ```js\r\n * const useUser = defineStore(...)\r\n * if (import.meta.hot) {\r\n *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))\r\n * }\r\n * ```\r\n *\r\n * @param initialUseStore - return of the defineStore to hot update\r\n * @param hot - `import.meta.hot`\r\n */\r\nfunction acceptHMRUpdate(initialUseStore, hot) {\r\n    // strip as much as possible from iife.prod\r\n    if (!(process.env.NODE_ENV !== 'production')) {\r\n        return () => { };\r\n    }\r\n    return (newModule) => {\r\n        const pinia = hot.data.pinia || initialUseStore._pinia;\r\n        if (!pinia) {\r\n            // this store is still not used\r\n            return;\r\n        }\r\n        // preserve the pinia instance across loads\r\n        hot.data.pinia = pinia;\r\n        // console.log('got data', newStore)\r\n        for (const exportName in newModule) {\r\n            const useStore = newModule[exportName];\r\n            // console.log('checking for', exportName)\r\n            if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {\r\n                // console.log('Accepting update for', useStore.$id)\r\n                const id = useStore.$id;\r\n                if (id !== initialUseStore.$id) {\r\n                    console.warn(`The id of the store changed from \"${initialUseStore.$id}\" to \"${id}\". Reloading.`);\r\n                    // return import.meta.hot.invalidate()\r\n                    return hot.invalidate();\r\n                }\r\n                const existingStore = pinia._s.get(id);\r\n                if (!existingStore) {\r\n                    console.log(`[Pinia]: skipping hmr because store doesn't exist yet`);\r\n                    return;\r\n                }\r\n                useStore(pinia, existingStore);\r\n            }\r\n        }\r\n    };\r\n}\n\nconst noop = () => { };\r\nfunction addSubscription(subscriptions, callback, detached, onCleanup = noop) {\r\n    subscriptions.push(callback);\r\n    const removeSubscription = () => {\r\n        const idx = subscriptions.indexOf(callback);\r\n        if (idx > -1) {\r\n            subscriptions.splice(idx, 1);\r\n            onCleanup();\r\n        }\r\n    };\r\n    if (!detached && getCurrentInstance()) {\r\n        onUnmounted(removeSubscription);\r\n    }\r\n    return removeSubscription;\r\n}\r\nfunction triggerSubscriptions(subscriptions, ...args) {\r\n    subscriptions.slice().forEach((callback) => {\r\n        callback(...args);\r\n    });\r\n}\n\nfunction mergeReactiveObjects(target, patchToApply) {\r\n    // Handle Map instances\r\n    if (target instanceof Map && patchToApply instanceof Map) {\r\n        patchToApply.forEach((value, key) => target.set(key, value));\r\n    }\r\n    // Handle Set instances\r\n    if (target instanceof Set && patchToApply instanceof Set) {\r\n        patchToApply.forEach(target.add, target);\r\n    }\r\n    // no need to go through symbols because they cannot be serialized anyway\r\n    for (const key in patchToApply) {\r\n        if (!patchToApply.hasOwnProperty(key))\r\n            continue;\r\n        const subPatch = patchToApply[key];\r\n        const targetValue = target[key];\r\n        if (isPlainObject(targetValue) &&\r\n            isPlainObject(subPatch) &&\r\n            target.hasOwnProperty(key) &&\r\n            !isRef(subPatch) &&\r\n            !isReactive(subPatch)) {\r\n            // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might\r\n            // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that\r\n            // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.\r\n            target[key] = mergeReactiveObjects(targetValue, subPatch);\r\n        }\r\n        else {\r\n            // @ts-expect-error: subPatch is a valid value\r\n            target[key] = subPatch;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nconst skipHydrateSymbol = (process.env.NODE_ENV !== 'production')\r\n    ? Symbol('pinia:skipHydration')\r\n    : /* istanbul ignore next */ Symbol();\r\nconst skipHydrateMap = /*#__PURE__*/ new WeakMap();\r\n/**\r\n * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a\r\n * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.\r\n *\r\n * @param obj - target object\r\n * @returns obj\r\n */\r\nfunction skipHydrate(obj) {\r\n    return isVue2\r\n        ? // in @vue/composition-api, the refs are sealed so defineProperty doesn't work...\r\n            /* istanbul ignore next */ skipHydrateMap.set(obj, 1) && obj\r\n        : Object.defineProperty(obj, skipHydrateSymbol, {});\r\n}\r\n/**\r\n * Returns whether a value should be hydrated\r\n *\r\n * @param obj - target variable\r\n * @returns true if `obj` should be hydrated\r\n */\r\nfunction shouldHydrate(obj) {\r\n    return isVue2\r\n        ? /* istanbul ignore next */ !skipHydrateMap.has(obj)\r\n        : !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);\r\n}\r\nconst { assign } = Object;\r\nfunction isComputed(o) {\r\n    return !!(isRef(o) && o.effect);\r\n}\r\nfunction createOptionsStore(id, options, pinia, hot) {\r\n    const { state, actions, getters } = options;\r\n    const initialState = pinia.state.value[id];\r\n    let store;\r\n    function setup() {\r\n        if (!initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\r\n            /* istanbul ignore if */\r\n            if (isVue2) {\r\n                set(pinia.state.value, id, state ? state() : {});\r\n            }\r\n            else {\r\n                pinia.state.value[id] = state ? state() : {};\r\n            }\r\n        }\r\n        // avoid creating a state in pinia.state.value\r\n        const localState = (process.env.NODE_ENV !== 'production') && hot\r\n            ? // use ref() to unwrap refs inside state TODO: check if this is still necessary\r\n                toRefs(ref(state ? state() : {}).value)\r\n            : toRefs(pinia.state.value[id]);\r\n        return assign(localState, actions, Object.keys(getters || {}).reduce((computedGetters, name) => {\r\n            if ((process.env.NODE_ENV !== 'production') && name in localState) {\r\n                console.warn(`[\uD83C\uDF4D]: A getter cannot have the same name as another state property. Rename one of them. Found with \"${name}\" in store \"${id}\".`);\r\n            }\r\n            computedGetters[name] = markRaw(computed(() => {\r\n                setActivePinia(pinia);\r\n                // it was created just before\r\n                const store = pinia._s.get(id);\r\n                // allow cross using stores\r\n                /* istanbul ignore next */\r\n                if (isVue2 && !store._r)\r\n                    return;\r\n                // @ts-expect-error\r\n                // return getters![name].call(context, context)\r\n                // TODO: avoid reading the getter while assigning with a global variable\r\n                return getters[name].call(store, store);\r\n            }));\r\n            return computedGetters;\r\n        }, {}));\r\n    }\r\n    store = createSetupStore(id, setup, options, pinia, hot, true);\r\n    store.$reset = function $reset() {\r\n        const newState = state ? state() : {};\r\n        // we use a patch to group all changes into one single subscription\r\n        this.$patch(($state) => {\r\n            assign($state, newState);\r\n        });\r\n    };\r\n    return store;\r\n}\r\nfunction createSetupStore($id, setup, options = {}, pinia, hot, isOptionsStore) {\r\n    let scope;\r\n    const optionsForPlugin = assign({ actions: {} }, options);\r\n    /* istanbul ignore if */\r\n    // @ts-expect-error: active is an internal property\r\n    if ((process.env.NODE_ENV !== 'production') && !pinia._e.active) {\r\n        throw new Error('Pinia destroyed');\r\n    }\r\n    // watcher options for $subscribe\r\n    const $subscribeOptions = {\r\n        deep: true,\r\n        // flush: 'post',\r\n    };\r\n    /* istanbul ignore else */\r\n    if ((process.env.NODE_ENV !== 'production') && !isVue2) {\r\n        $subscribeOptions.onTrigger = (event) => {\r\n            /* istanbul ignore else */\r\n            if (isListening) {\r\n                debuggerEvents = event;\r\n                // avoid triggering this while the store is being built and the state is being set in pinia\r\n            }\r\n            else if (isListening == false && !store._hotUpdating) {\r\n                // let patch send all the events together later\r\n                /* istanbul ignore else */\r\n                if (Array.isArray(debuggerEvents)) {\r\n                    debuggerEvents.push(event);\r\n                }\r\n                else {\r\n                    console.error('\uD83C\uDF4D debuggerEvents should be an array. This is most likely an internal Pinia bug.');\r\n                }\r\n            }\r\n        };\r\n    }\r\n    // internal state\r\n    let isListening; // set to true at the end\r\n    let isSyncListening; // set to true at the end\r\n    let subscriptions = markRaw([]);\r\n    let actionSubscriptions = markRaw([]);\r\n    let debuggerEvents;\r\n    const initialState = pinia.state.value[$id];\r\n    // avoid setting the state for option stores if it is set\r\n    // by the setup\r\n    if (!isOptionsStore && !initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\r\n        /* istanbul ignore if */\r\n        if (isVue2) {\r\n            set(pinia.state.value, $id, {});\r\n        }\r\n        else {\r\n            pinia.state.value[$id] = {};\r\n        }\r\n    }\r\n    const hotState = ref({});\r\n    // avoid triggering too many listeners\r\n    // https://github.com/vuejs/pinia/issues/1129\r\n    let activeListener;\r\n    function $patch(partialStateOrMutator) {\r\n        let subscriptionMutation;\r\n        isListening = isSyncListening = false;\r\n        // reset the debugger events since patches are sync\r\n        /* istanbul ignore else */\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            debuggerEvents = [];\r\n        }\r\n        if (typeof partialStateOrMutator === 'function') {\r\n            partialStateOrMutator(pinia.state.value[$id]);\r\n            subscriptionMutation = {\r\n                type: MutationType.patchFunction,\r\n                storeId: $id,\r\n                events: debuggerEvents,\r\n            };\r\n        }\r\n        else {\r\n            mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);\r\n            subscriptionMutation = {\r\n                type: MutationType.patchObject,\r\n                payload: partialStateOrMutator,\r\n                storeId: $id,\r\n                events: debuggerEvents,\r\n            };\r\n        }\r\n        const myListenerId = (activeListener = Symbol());\r\n        nextTick().then(() => {\r\n            if (activeListener === myListenerId) {\r\n                isListening = true;\r\n            }\r\n        });\r\n        isSyncListening = true;\r\n        // because we paused the watcher, we need to manually call the subscriptions\r\n        triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);\r\n    }\r\n    /* istanbul ignore next */\r\n    const $reset = (process.env.NODE_ENV !== 'production')\r\n        ? () => {\r\n            throw new Error(`\uD83C\uDF4D: Store \"${$id}\" is built using the setup syntax and does not implement $reset().`);\r\n        }\r\n        : noop;\r\n    function $dispose() {\r\n        scope.stop();\r\n        subscriptions = [];\r\n        actionSubscriptions = [];\r\n        pinia._s.delete($id);\r\n    }\r\n    /**\r\n     * Wraps an action to handle subscriptions.\r\n     *\r\n     * @param name - name of the action\r\n     * @param action - action to wrap\r\n     * @returns a wrapped action to handle subscriptions\r\n     */\r\n    function wrapAction(name, action) {\r\n        return function () {\r\n            setActivePinia(pinia);\r\n            const args = Array.from(arguments);\r\n            const afterCallbackList = [];\r\n            const onErrorCallbackList = [];\r\n            function after(callback) {\r\n                afterCallbackList.push(callback);\r\n            }\r\n            function onError(callback) {\r\n                onErrorCallbackList.push(callback);\r\n            }\r\n            // @ts-expect-error\r\n            triggerSubscriptions(actionSubscriptions, {\r\n                args,\r\n                name,\r\n                store,\r\n                after,\r\n                onError,\r\n            });\r\n            let ret;\r\n            try {\r\n                ret = action.apply(this && this.$id === $id ? this : store, args);\r\n                // handle sync errors\r\n            }\r\n            catch (error) {\r\n                triggerSubscriptions(onErrorCallbackList, error);\r\n                throw error;\r\n            }\r\n            if (ret instanceof Promise) {\r\n                return ret\r\n                    .then((value) => {\r\n                    triggerSubscriptions(afterCallbackList, value);\r\n                    return value;\r\n                })\r\n                    .catch((error) => {\r\n                    triggerSubscriptions(onErrorCallbackList, error);\r\n                    return Promise.reject(error);\r\n                });\r\n            }\r\n            // allow the afterCallback to override the return value\r\n            triggerSubscriptions(afterCallbackList, ret);\r\n            return ret;\r\n        };\r\n    }\r\n    const _hmrPayload = /*#__PURE__*/ markRaw({\r\n        actions: {},\r\n        getters: {},\r\n        state: [],\r\n        hotState,\r\n    });\r\n    const partialStore = {\r\n        _p: pinia,\r\n        // _s: scope,\r\n        $id,\r\n        $onAction: addSubscription.bind(null, actionSubscriptions),\r\n        $patch,\r\n        $reset,\r\n        $subscribe(callback, options = {}) {\r\n            const removeSubscription = addSubscription(subscriptions, callback, options.detached, () => stopWatcher());\r\n            const stopWatcher = scope.run(() => watch(() => pinia.state.value[$id], (state) => {\r\n                if (options.flush === 'sync' ? isSyncListening : isListening) {\r\n                    callback({\r\n                        storeId: $id,\r\n                        type: MutationType.direct,\r\n                        events: debuggerEvents,\r\n                    }, state);\r\n                }\r\n            }, assign({}, $subscribeOptions, options)));\r\n            return removeSubscription;\r\n        },\r\n        $dispose,\r\n    };\r\n    /* istanbul ignore if */\r\n    if (isVue2) {\r\n        // start as non ready\r\n        partialStore._r = false;\r\n    }\r\n    const store = reactive((process.env.NODE_ENV !== 'production') || USE_DEVTOOLS\r\n        ? assign({\r\n            _hmrPayload,\r\n            _customProperties: markRaw(new Set()), // devtools custom properties\r\n        }, partialStore\r\n        // must be added later\r\n        // setupStore\r\n        )\r\n        : partialStore);\r\n    // store the partial store now so the setup of stores can instantiate each other before they are finished without\r\n    // creating infinite loops.\r\n    pinia._s.set($id, store);\r\n    // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped\r\n    const setupStore = pinia._e.run(() => {\r\n        scope = effectScope();\r\n        return scope.run(() => setup());\r\n    });\r\n    // overwrite existing actions to support $onAction\r\n    for (const key in setupStore) {\r\n        const prop = setupStore[key];\r\n        if ((isRef(prop) && !isComputed(prop)) || isReactive(prop)) {\r\n            // mark it as a piece of state to be serialized\r\n            if ((process.env.NODE_ENV !== 'production') && hot) {\r\n                set(hotState.value, key, toRef(setupStore, key));\r\n                // createOptionStore directly sets the state in pinia.state.value so we\r\n                // can just skip that\r\n            }\r\n            else if (!isOptionsStore) {\r\n                // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created\r\n                if (initialState && shouldHydrate(prop)) {\r\n                    if (isRef(prop)) {\r\n                        prop.value = initialState[key];\r\n                    }\r\n                    else {\r\n                        // probably a reactive object, lets recursively assign\r\n                        // @ts-expect-error: prop is unknown\r\n                        mergeReactiveObjects(prop, initialState[key]);\r\n                    }\r\n                }\r\n                // transfer the ref to the pinia state to keep everything in sync\r\n                /* istanbul ignore if */\r\n                if (isVue2) {\r\n                    set(pinia.state.value[$id], key, prop);\r\n                }\r\n                else {\r\n                    pinia.state.value[$id][key] = prop;\r\n                }\r\n            }\r\n            /* istanbul ignore else */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                _hmrPayload.state.push(key);\r\n            }\r\n            // action\r\n        }\r\n        else if (typeof prop === 'function') {\r\n            // @ts-expect-error: we are overriding the function we avoid wrapping if\r\n            const actionValue = (process.env.NODE_ENV !== 'production') && hot ? prop : wrapAction(key, prop);\r\n            // this a hot module replacement store because the hotUpdate method needs\r\n            // to do it with the right context\r\n            /* istanbul ignore if */\r\n            if (isVue2) {\r\n                set(setupStore, key, actionValue);\r\n            }\r\n            else {\r\n                // @ts-expect-error\r\n                setupStore[key] = actionValue;\r\n            }\r\n            /* istanbul ignore else */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                _hmrPayload.actions[key] = prop;\r\n            }\r\n            // list actions so they can be used in plugins\r\n            // @ts-expect-error\r\n            optionsForPlugin.actions[key] = prop;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            // add getters for devtools\r\n            if (isComputed(prop)) {\r\n                _hmrPayload.getters[key] = isOptionsStore\r\n                    ? // @ts-expect-error\r\n                        options.getters[key]\r\n                    : prop;\r\n                if (IS_CLIENT) {\r\n                    const getters = setupStore._getters ||\r\n                        // @ts-expect-error: same\r\n                        (setupStore._getters = markRaw([]));\r\n                    getters.push(key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // add the state, getters, and action properties\r\n    /* istanbul ignore if */\r\n    if (isVue2) {\r\n        Object.keys(setupStore).forEach((key) => {\r\n            set(store, key, setupStore[key]);\r\n        });\r\n    }\r\n    else {\r\n        assign(store, setupStore);\r\n        // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.\r\n        // Make `storeToRefs()` work with `reactive()` #799\r\n        assign(toRaw(store), setupStore);\r\n    }\r\n    // use this instead of a computed with setter to be able to create it anywhere\r\n    // without linking the computed lifespan to wherever the store is first\r\n    // created.\r\n    Object.defineProperty(store, '$state', {\r\n        get: () => ((process.env.NODE_ENV !== 'production') && hot ? hotState.value : pinia.state.value[$id]),\r\n        set: (state) => {\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production') && hot) {\r\n                throw new Error('cannot set hotState');\r\n            }\r\n            $patch(($state) => {\r\n                assign($state, state);\r\n            });\r\n        },\r\n    });\r\n    // add the hotUpdate before plugins to allow them to override it\r\n    /* istanbul ignore else */\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        store._hotUpdate = markRaw((newStore) => {\r\n            store._hotUpdating = true;\r\n            newStore._hmrPayload.state.forEach((stateKey) => {\r\n                if (stateKey in store.$state) {\r\n                    const newStateTarget = newStore.$state[stateKey];\r\n                    const oldStateSource = store.$state[stateKey];\r\n                    if (typeof newStateTarget === 'object' &&\r\n                        isPlainObject(newStateTarget) &&\r\n                        isPlainObject(oldStateSource)) {\r\n                        patchObject(newStateTarget, oldStateSource);\r\n                    }\r\n                    else {\r\n                        // transfer the ref\r\n                        newStore.$state[stateKey] = oldStateSource;\r\n                    }\r\n                }\r\n                // patch direct access properties to allow store.stateProperty to work as\r\n                // store.$state.stateProperty\r\n                set(store, stateKey, toRef(newStore.$state, stateKey));\r\n            });\r\n            // remove deleted state properties\r\n            Object.keys(store.$state).forEach((stateKey) => {\r\n                if (!(stateKey in newStore.$state)) {\r\n                    del(store, stateKey);\r\n                }\r\n            });\r\n            // avoid devtools logging this as a mutation\r\n            isListening = false;\r\n            isSyncListening = false;\r\n            pinia.state.value[$id] = toRef(newStore._hmrPayload, 'hotState');\r\n            isSyncListening = true;\r\n            nextTick().then(() => {\r\n                isListening = true;\r\n            });\r\n            for (const actionName in newStore._hmrPayload.actions) {\r\n                const action = newStore[actionName];\r\n                set(store, actionName, wrapAction(actionName, action));\r\n            }\r\n            // TODO: does this work in both setup and option store?\r\n            for (const getterName in newStore._hmrPayload.getters) {\r\n                const getter = newStore._hmrPayload.getters[getterName];\r\n                const getterValue = isOptionsStore\r\n                    ? // special handling of options api\r\n                        computed(() => {\r\n                            setActivePinia(pinia);\r\n                            return getter.call(store, store);\r\n                        })\r\n                    : getter;\r\n                set(store, getterName, getterValue);\r\n            }\r\n            // remove deleted getters\r\n            Object.keys(store._hmrPayload.getters).forEach((key) => {\r\n                if (!(key in newStore._hmrPayload.getters)) {\r\n                    del(store, key);\r\n                }\r\n            });\r\n            // remove old actions\r\n            Object.keys(store._hmrPayload.actions).forEach((key) => {\r\n                if (!(key in newStore._hmrPayload.actions)) {\r\n                    del(store, key);\r\n                }\r\n            });\r\n            // update the values used in devtools and to allow deleting new properties later on\r\n            store._hmrPayload = newStore._hmrPayload;\r\n            store._getters = newStore._getters;\r\n            store._hotUpdating = false;\r\n        });\r\n    }\r\n    if (USE_DEVTOOLS) {\r\n        const nonEnumerable = {\r\n            writable: true,\r\n            configurable: true,\r\n            // avoid warning on devtools trying to display this property\r\n            enumerable: false,\r\n        };\r\n        ['_p', '_hmrPayload', '_getters', '_customProperties'].forEach((p) => {\r\n            Object.defineProperty(store, p, {\r\n                value: store[p],\r\n                ...nonEnumerable,\r\n            });\r\n        });\r\n    }\r\n    /* istanbul ignore if */\r\n    if (isVue2) {\r\n        // mark the store as ready before plugins\r\n        store._r = true;\r\n    }\r\n    // apply all plugins\r\n    pinia._p.forEach((extender) => {\r\n        /* istanbul ignore else */\r\n        if (USE_DEVTOOLS) {\r\n            const extensions = scope.run(() => extender({\r\n                store,\r\n                app: pinia._a,\r\n                pinia,\r\n                options: optionsForPlugin,\r\n            }));\r\n            Object.keys(extensions || {}).forEach((key) => store._customProperties.add(key));\r\n            assign(store, extensions);\r\n        }\r\n        else {\r\n            assign(store, scope.run(() => extender({\r\n                store,\r\n                app: pinia._a,\r\n                pinia,\r\n                options: optionsForPlugin,\r\n            })));\r\n        }\r\n    });\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        store.$state &&\r\n        typeof store.$state === 'object' &&\r\n        typeof store.$state.constructor === 'function' &&\r\n        !store.$state.constructor.toString().includes('[native code]')) {\r\n        console.warn(`[\uD83C\uDF4D]: The \"state\" must be a plain object. It cannot be\\n` +\r\n            `\\tstate: () => new MyClass()\\n` +\r\n            `Found in store \"${store.$id}\".`);\r\n    }\r\n    // only apply hydrate to option stores with an initial state in pinia\r\n    if (initialState &&\r\n        isOptionsStore &&\r\n        options.hydrate) {\r\n        options.hydrate(store.$state, initialState);\r\n    }\r\n    isListening = true;\r\n    isSyncListening = true;\r\n    return store;\r\n}\r\nfunction defineStore(\r\n// TODO: add proper types from above\r\nidOrOptions, setup, setupOptions) {\r\n    let id;\r\n    let options;\r\n    const isSetupStore = typeof setup === 'function';\r\n    if (typeof idOrOptions === 'string') {\r\n        id = idOrOptions;\r\n        // the option store setup will contain the actual options in this case\r\n        options = isSetupStore ? setupOptions : setup;\r\n    }\r\n    else {\r\n        options = idOrOptions;\r\n        id = idOrOptions.id;\r\n    }\r\n    function useStore(pinia, hot) {\r\n        const currentInstance = getCurrentInstance();\r\n        pinia =\r\n            // in test mode, ignore the argument provided as we can always retrieve a\r\n            // pinia instance with getActivePinia()\r\n            ((process.env.NODE_ENV === 'test') && activePinia && activePinia._testing ? null : pinia) ||\r\n                (currentInstance && inject(piniaSymbol));\r\n        if (pinia)\r\n            setActivePinia(pinia);\r\n        if ((process.env.NODE_ENV !== 'production') && !activePinia) {\r\n            throw new Error(`[\uD83C\uDF4D]: getActivePinia was called with no active Pinia. Did you forget to install pinia?\\n` +\r\n                `\\tconst pinia = createPinia()\\n` +\r\n                `\\tapp.use(pinia)\\n` +\r\n                `This will fail in production.`);\r\n        }\r\n        pinia = activePinia;\r\n        if (!pinia._s.has(id)) {\r\n            // creating the store registers it in `pinia._s`\r\n            if (isSetupStore) {\r\n                createSetupStore(id, setup, options, pinia);\r\n            }\r\n            else {\r\n                createOptionsStore(id, options, pinia);\r\n            }\r\n            /* istanbul ignore else */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                // @ts-expect-error: not the right inferred type\r\n                useStore._pinia = pinia;\r\n            }\r\n        }\r\n        const store = pinia._s.get(id);\r\n        if ((process.env.NODE_ENV !== 'production') && hot) {\r\n            const hotId = '__hot:' + id;\r\n            const newStore = isSetupStore\r\n                ? createSetupStore(hotId, setup, options, pinia, true)\r\n                : createOptionsStore(hotId, assign({}, options), pinia, true);\r\n            hot._hotUpdate(newStore);\r\n            // cleanup the state properties and the store from the cache\r\n            delete pinia.state.value[hotId];\r\n            pinia._s.delete(hotId);\r\n        }\r\n        // save stores in instances to access them devtools\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            IS_CLIENT &&\r\n            currentInstance &&\r\n            currentInstance.proxy &&\r\n            // avoid adding stores that are just built for hot module replacement\r\n            !hot) {\r\n            const vm = currentInstance.proxy;\r\n            const cache = '_pStores' in vm ? vm._pStores : (vm._pStores = {});\r\n            cache[id] = store;\r\n        }\r\n        // StoreGeneric cannot be casted towards Store\r\n        return store;\r\n    }\r\n    useStore.$id = id;\r\n    return useStore;\r\n}\n\nlet mapStoreSuffix = 'Store';\r\n/**\r\n * Changes the suffix added by `mapStores()`. Can be set to an empty string.\r\n * Defaults to `\"Store\"`. Make sure to extend the MapStoresCustomization\r\n * interface if you are using TypeScript.\r\n *\r\n * @param suffix - new suffix\r\n */\r\nfunction setMapStoreSuffix(suffix // could be 'Store' but that would be annoying for JS\r\n) {\r\n    mapStoreSuffix = suffix;\r\n}\r\n/**\r\n * Allows using stores without the composition API (`setup()`) by generating an\r\n * object to be spread in the `computed` field of a component. It accepts a list\r\n * of store definitions.\r\n *\r\n * @example\r\n * ```js\r\n * export default {\r\n *   computed: {\r\n *     // other computed properties\r\n *     ...mapStores(useUserStore, useCartStore)\r\n *   },\r\n *\r\n *   created() {\r\n *     this.userStore // store with id \"user\"\r\n *     this.cartStore // store with id \"cart\"\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * @param stores - list of stores to map to an object\r\n */\r\nfunction mapStores(...stores) {\r\n    if ((process.env.NODE_ENV !== 'production') && Array.isArray(stores[0])) {\r\n        console.warn(`[\uD83C\uDF4D]: Directly pass all stores to \"mapStores()\" without putting them in an array:\\n` +\r\n            `Replace\\n` +\r\n            `\\tmapStores([useAuthStore, useCartStore])\\n` +\r\n            `with\\n` +\r\n            `\\tmapStores(useAuthStore, useCartStore)\\n` +\r\n            `This will fail in production if not fixed.`);\r\n        stores = stores[0];\r\n    }\r\n    return stores.reduce((reduced, useStore) => {\r\n        // @ts-expect-error: $id is added by defineStore\r\n        reduced[useStore.$id + mapStoreSuffix] = function () {\r\n            return useStore(this.$pinia);\r\n        };\r\n        return reduced;\r\n    }, {});\r\n}\r\n/**\r\n * Allows using state and getters from one store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `computed` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\r\nfunction mapState(useStore, keysOrMapper) {\r\n    return Array.isArray(keysOrMapper)\r\n        ? keysOrMapper.reduce((reduced, key) => {\r\n            reduced[key] = function () {\r\n                return useStore(this.$pinia)[key];\r\n            };\r\n            return reduced;\r\n        }, {})\r\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\r\n            // @ts-expect-error\r\n            reduced[key] = function () {\r\n                const store = useStore(this.$pinia);\r\n                const storeKey = keysOrMapper[key];\r\n                // for some reason TS is unable to infer the type of storeKey to be a\r\n                // function\r\n                return typeof storeKey === 'function'\r\n                    ? storeKey.call(this, store)\r\n                    : store[storeKey];\r\n            };\r\n            return reduced;\r\n        }, {});\r\n}\r\n/**\r\n * Alias for `mapState()`. You should use `mapState()` instead.\r\n * @deprecated use `mapState()` instead.\r\n */\r\nconst mapGetters = mapState;\r\n/**\r\n * Allows directly using actions from your store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `methods` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\r\nfunction mapActions(useStore, keysOrMapper) {\r\n    return Array.isArray(keysOrMapper)\r\n        ? keysOrMapper.reduce((reduced, key) => {\r\n            // @ts-expect-error\r\n            reduced[key] = function (...args) {\r\n                return useStore(this.$pinia)[key](...args);\r\n            };\r\n            return reduced;\r\n        }, {})\r\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\r\n            // @ts-expect-error\r\n            reduced[key] = function (...args) {\r\n                return useStore(this.$pinia)[keysOrMapper[key]](...args);\r\n            };\r\n            return reduced;\r\n        }, {});\r\n}\r\n/**\r\n * Allows using state and getters from one store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `computed` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\r\nfunction mapWritableState(useStore, keysOrMapper) {\r\n    return Array.isArray(keysOrMapper)\r\n        ? keysOrMapper.reduce((reduced, key) => {\r\n            // @ts-ignore\r\n            reduced[key] = {\r\n                get() {\r\n                    return useStore(this.$pinia)[key];\r\n                },\r\n                set(value) {\r\n                    // it's easier to type it here as any\r\n                    return (useStore(this.$pinia)[key] = value);\r\n                },\r\n            };\r\n            return reduced;\r\n        }, {})\r\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\r\n            // @ts-ignore\r\n            reduced[key] = {\r\n                get() {\r\n                    return useStore(this.$pinia)[keysOrMapper[key]];\r\n                },\r\n                set(value) {\r\n                    // it's easier to type it here as any\r\n                    return (useStore(this.$pinia)[keysOrMapper[key]] = value);\r\n                },\r\n            };\r\n            return reduced;\r\n        }, {});\r\n}\n\n/**\r\n * Creates an object of references with all the state, getters, and plugin-added\r\n * state properties of the store. Similar to `toRefs()` but specifically\r\n * designed for Pinia stores so methods and non reactive properties are\r\n * completely ignored.\r\n *\r\n * @param store - store to extract the refs from\r\n */\r\nfunction storeToRefs(store) {\r\n    // See https://github.com/vuejs/pinia/issues/852\r\n    // It's easier to just use toRefs() even if it includes more stuff\r\n    if (isVue2) {\r\n        // @ts-expect-error: toRefs include methods and others\r\n        return toRefs(store);\r\n    }\r\n    else {\r\n        store = toRaw(store);\r\n        const refs = {};\r\n        for (const key in store) {\r\n            const value = store[key];\r\n            if (isRef(value) || isReactive(value)) {\r\n                // @ts-expect-error: the key is state or getter\r\n                refs[key] =\r\n                    // ---\r\n                    toRef(store, key);\r\n            }\r\n        }\r\n        return refs;\r\n    }\r\n}\n\n/**\r\n * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need\r\n * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:\r\n * https://pinia.vuejs.org/ssr/nuxt.html.\r\n *\r\n * @example\r\n * ```js\r\n * import Vue from 'vue'\r\n * import { PiniaVuePlugin, createPinia } from 'pinia'\r\n *\r\n * Vue.use(PiniaVuePlugin)\r\n * const pinia = createPinia()\r\n *\r\n * new Vue({\r\n *   el: '#app',\r\n *   // ...\r\n *   pinia,\r\n * })\r\n * ```\r\n *\r\n * @param _Vue - `Vue` imported from 'vue'.\r\n */\r\nconst PiniaVuePlugin = function (_Vue) {\r\n    // Equivalent of\r\n    // app.config.globalProperties.$pinia = pinia\r\n    _Vue.mixin({\r\n        beforeCreate() {\r\n            const options = this.$options;\r\n            if (options.pinia) {\r\n                const pinia = options.pinia;\r\n                // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31\r\n                /* istanbul ignore else */\r\n                if (!this._provided) {\r\n                    const provideCache = {};\r\n                    Object.defineProperty(this, '_provided', {\r\n                        get: () => provideCache,\r\n                        set: (v) => Object.assign(provideCache, v),\r\n                    });\r\n                }\r\n                this._provided[piniaSymbol] = pinia;\r\n                // propagate the pinia instance in an SSR friendly way\r\n                // avoid adding it to nuxt twice\r\n                /* istanbul ignore else */\r\n                if (!this.$pinia) {\r\n                    this.$pinia = pinia;\r\n                }\r\n                pinia._a = this;\r\n                if (IS_CLIENT) {\r\n                    // this allows calling useStore() outside of a component setup after\r\n                    // installing pinia's plugin\r\n                    setActivePinia(pinia);\r\n                }\r\n                if (USE_DEVTOOLS) {\r\n                    registerPiniaDevtools(pinia._a, pinia);\r\n                }\r\n            }\r\n            else if (!this.$pinia && options.parent && options.parent.$pinia) {\r\n                this.$pinia = options.parent.$pinia;\r\n            }\r\n        },\r\n        destroyed() {\r\n            delete this._pStores;\r\n        },\r\n    });\r\n};\n\nexport { MutationType, PiniaVuePlugin, acceptHMRUpdate, createPinia, defineStore, getActivePinia, mapActions, mapGetters, mapState, mapStores, mapWritableState, setActivePinia, setMapStoreSuffix, skipHydrate, storeToRefs };\n", "<template>\n    <div class=\"wrapper\">\n        <iframe :src=urlpdf></iframe>\n        <iframe :src=urldoctype></iframe>\n    </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    urlpdf: String,\n    urldoctype: String\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.wrapper {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  display: flex;\n  flex-wrap: wrap;\n  background-color: DodgerBlue;\n}\n\n.wrapper > iframe{\n  background-color: #f1f1f1;\n  width: 49%;\n  height: 480px;\n  margin: 0.5%;\n  line-height: 1500%;\n}\n</style>", "import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-9d91b0ed\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"wrapper\" }\nconst _hoisted_2 = [\"src\"]\nconst _hoisted_3 = [\"src\"]\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"iframe\", { src: $props.urlpdf }, null, 8 /* PROPS */, _hoisted_2),\n    _createElementVNode(\"iframe\", { src: $props.urldoctype }, null, 8 /* PROPS */, _hoisted_3)\n  ]))\n}", "import script from \"/home/frappe/frappe-bench/apps/pibitff/pibitff/public/js/tff_process/components/TffProcess.vue?type=script\";import \"/home/frappe/frappe-bench/apps/pibitff/pibitff/public/js/tff_process/components/TffProcess.vue?type=style&index=0\";import { render } from \"/home/frappe/frappe-bench/apps/pibitff/pibitff/public/js/tff_process/components/TffProcess.vue?type=template\"; script.render = render;script.__file = \"../pibitff/pibitff/public/js/tff_process/components/TffProcess.vue\";script.__scopeId = \"data-v-9d91b0ed\";export default script;"],
  "mappings": "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AG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,KAAK,GAAG,EAAE,KAAK,IAAI,KAAK,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,MAAM,GAAG,KAAK,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,KAAK,IAAI,KAAK,KAAK,EAAE,IAAz7C,EAE7B,GAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,GAA/tB,EAK9B,YAAuB,EAAc,EAAiC,CACpE,GAAI,GAAM,MACV,OAAS,GAAI,EAAG,EAAS,EAAI,OAAQ,EAAI,EAAQ,GAAK,EAAG,CAEvD,GADA,GAAO,EAAI,GACP,EAAM,EAAM,MAAO,GAGvB,GADA,GAAO,EAAI,EAAI,GACX,GAAO,EAAM,MAAO,EACzB,CACD,MAAO,EACR,CAIM,YAA2B,EAAuB,CACvD,MAAI,GAAI,GAAgC,IAAP,GAC7B,GAAI,GAAiC,GACrC,EAAI,GAAgC,IAAP,GAC7B,GAAI,IAAiC,GACrC,GAAQ,MAER,GAAQ,KAAQ,GAAwB,KAAK,OAAO,aAAa,CAApB,CAA7B,EAGb,GAAc,EAAM,EAAP,CACrB,CAIM,YAA0B,EAAuB,CACtD,MAAI,GAAI,GAA4B,IAAP,GACzB,EAAI,GAA2B,GAC/B,EAAI,GAAgC,GACpC,GAAI,GAAiC,GACrC,EAAI,GAAgC,IAAP,GAC7B,GAAI,IAAiC,GACrC,GAAQ,MACH,GAAQ,KAAQ,GAAmB,KAAK,OAAO,aAAa,CAApB,CAAxB,EAGvB,GAAc,EAAM,EAAP,GACb,GAAc,EAAM,EAAP,CAEhB,CChFD,GAAM,IAAgB,CACpB,QAAS,CACP,QACA,OACA,QACA,WACA,WACA,UACA,KACA,OACA,UACA,MACA,WACA,KACA,SACA,SACA,QACA,MACA,MACA,QACA,QACA,OACA,MACA,OACA,QACA,QACA,UACA,SACA,SACA,OACA,OACA,QACA,KACA,aACA,SACA,OACA,QAnCO,EAqCT,OAAQ,CACN,aACA,YACA,MACA,UACA,UACA,YACA,SACA,SACA,OATM,EAWR,WAAY,CAAC,OAAQ,WAAT,CAjDQ,EAmDhB,GAAW,GAAI,KAAI,GAAc,OAAtB,EACX,GAAyB,GAAI,KAAI,GAAc,MAAtB,EACzB,GAA6B,GAAI,KAAI,GAAc,UAAtB,EAK5B,YAAwB,EAAc,EAA4B,CACvE,MAAQ,IAAY,IAAS,SAAY,IAAS,MACnD,CAOM,YAA8B,EAAc,EAA4B,CAC7E,MAAO,IAAe,EAAM,CAAP,GAAoB,GAAuB,IAAI,CAA3B,CAC1C,CAMM,YAAsC,EAAuB,CAClE,MAAO,IAA2B,IAAI,CAA/B,CACR,CAOM,YACL,EACA,EACS,CACT,MACE,IAAqB,EAAM,CAAP,GAAoB,GAA6B,CAAD,CAEvE,CAEM,YAAmB,EAAuB,CAC/C,MAAO,IAAS,IAAI,CAAb,CACR,CC5EM,YACL,EACA,EACA,EACS,CACT,MACE,KAAO,IACP,IAAI,IACJ,GAAkB,CAAD,CAEpB,CAOD,GAAM,IAAsB,GAAI,KAAI,CAClC,QACA,OACA,QACA,WACA,WACA,UACA,KACA,OACA,UACA,MACA,WACA,KACA,SACA,SACA,QACA,MACA,MACA,QACA,QACA,OACA,MACA,OACA,QACA,QACA,UACA,SACA,SACA,OACA,OACA,QACA,KACA,aACA,SACA,OACA,SAEA,aACA,YACA,MACA,UACA,UACA,YACA,SACA,SACA,QAEA,OACA,YAEA,OACA,OAnDkC,CAAR,EAsDrB,YAA2B,EAAuB,CACvD,MAAO,IAAoB,IAAI,CAAxB,CACR,CC1FM,GAAM,IAAqB,EACrB,GAAqB,EACrB,GAAqB,EACrB,GAAqB,EACrB,GAAqB,EACrB,GAAqB,GACrB,GAAqB,GACrB,GAAqB,GACrB,GAAqB,IACrB,GAAqB,IACrB,GAAY,GAAgB,GAAiB,GAgB7C,GAA6B,EAC7B,GAA6B,EAE7B,GAA6B,EAC7B,GAA6B,EAC7B,GAA6B,GAI7B,GAA6B,GAC7B,GAA6B,IAC7B,GAA6B,IAC7B,GAA6B,IAC7B,GAA6B,KAC7B,GAA6B,KAC7B,GAA6B,KAK7B,GAAqB,GAAkB,GAAiB,GAAsB,GAC9E,GAAqB,GAAkB,EAAiB,GAAsB,EAC9E,GAAqB,GAAkB,EAAiB,GAAsB,EAC9E,GAAqB,GAAkB,EAAiB,GAAsB,EAC9E,GAAqB,EAAkB,GAAiB,EAAsB,GAC9E,GAAqB,EAAkB,GAAiB,EAAsB,EAC9E,GAAqB,GAAkB,GAAiB,GAAsB,GAC9E,GAAqB,EAAkD,GAGvE,GAAqB,EAAyD,GAC9E,GAAqB,GAAkB,EAAiB,EAAsB,GAE9E,GAAqB,GAAkB,GACvC,GAAqB,EAAyD,GAC9E,GAAqB,EAAkB,GAAiB,EAAsB,GAE9E,GAAuB,GAgBvB,GAA4B,EAC5B,GAA4B,EAC5B,GAA4B,EAC5B,GAA8B,GAA4B,GAG1D,GAAgC,GAA4B,GAC5D,GAAgC,GAA4B,GAC5D,GAAgC,GAChC,GAAgC,GAChC,GAAgC,ECpEtC,QAAY,CASjB,YAAY,EAAmB,CAAA,KAN/B,IAAmB,GAAI,KAMQ,KAJ/B,QAAuB,GAAI,KAII,KAF/B,UAAyB,GAAI,KAG3B,KAAK,MAAQ,CACd,CAXgB,EAgBJ,QAAiD,CAM9D,YAAY,EAAmB,EAAmB,CAAA,KALlD,OAKkD,OAAA,KAJlD,WAA4B,CAAA,EAIsB,KAHlD,SAGkD,OAAA,KAFlD,iBAA0C,GAAI,KAG5C,KAAK,OAAS,EACd,KAAK,SAAW,CACjB,IAEG,aAAa,CACf,MAAQ,MAAK,qBAAL,EAA8B,IAAkB,CACzD,IACG,aAAa,CACf,MAAQ,MAAK,sBAAL,EAA+B,IAAe,CACvD,IACG,mBAAmB,CACrB,MAAQ,MAAK,sBAAL,EAA+B,IAAsB,CAC9D,IACG,UAAU,CACZ,MAAQ,MAAK,sBAAL,EAA+B,IAAe,CACvD,IACG,kCAAkC,CACpC,GAAM,GAAQ,KAAK,sBAAL,EACd,MAAQ,GAAQ,IAAe,GAAM,GAAQ,MAAoB,CAClE,IACG,gBAAgB,CAClB,OAAS,GAAI,KAAK,WAAW,OAAS,GAAK,IAAK,CAC9C,GAAM,CAAE,SAAU,KAAK,WAAW,GAClC,GAAI,EAAQ,GACV,MAAO,GAET,GAAI,EAAS,IAAY,IAEvB,MAAO,EAEV,CACF,IACG,qBAAqB,CACvB,MAAQ,MAAK,sBAAL,EAA+B,IAAkB,CAC1D,IACG,sBAAsB,CACxB,MAAO,MAAK,2BAA2B,KAAK,aAAL,CAAhC,CACR,CAED,YAAY,EAA0B,CACpC,MAAO,IAAI,IAAM,CAAV,CACR,CAED,MAAM,EAAmB,CAGvB,KAAK,WAAW,KAAK,KAAK,YAAY,CAAjB,CAArB,CACD,CAED,MAAmB,CAEjB,MAAO,AADO,MAAK,WAAW,IAAhB,EACD,KACd,CAKD,2BAA2B,EAAwB,CACjD,MAAO,CAAC,CACN,GAAM,MAAS,IAAiB,KAC/B,CAAC,KAAK,OAAO,UAAY,EAAM,MAAQ,GAE3C,CAED,YAAY,EAAc,EAA2B,EAAe,CAClE,GAAI,GAAQ,KAAK,aAAL,EACZ,GAAI,EAAc,IAAsB,EAAc,GACpD,KAAK,0BAA0B,EAAO,EAAM,EAAa,CAAzD,EAEA,AAAI,EAAc,GAChB,EAAM,UAAU,IAAI,CAApB,EAEA,EAAM,QAAQ,IAAI,CAAlB,EAGE,EAAc,IAChB,KAAK,mBAAmB,EAAO,CAA/B,UAEO,EAAc,GACvB,OAAS,GAAI,KAAK,WAAW,OAAS,EAAG,GAAK,GAC5C,GAAQ,KAAK,WAAW,GACxB,KAAK,0BAA0B,EAAO,EAAM,EAAa,CAAzD,EACA,EAAM,IAAI,IAAI,CAAd,EACA,KAAK,mBAAmB,EAAO,CAA/B,EAEI,IAAM,MAAQ,KAN6B,EAAE,EAMjD,CAGJ,AAAI,KAAK,OAAO,UAAY,EAAM,MAAQ,IACxC,KAAK,iBAAiB,OAAO,CAA7B,CAEH,CAED,mBAAmB,EAAe,EAAc,CAC9C,AAAI,KAAK,OAAO,UAAY,EAAM,MAAQ,IACxC,KAAK,iBAAiB,OAAO,CAA7B,CAEH,CAED,0BACE,EACA,EACA,EACA,EACA,CACA,AAAI,KAAK,oBAAoB,EAAO,EAAM,CAAtC,GACF,KAAK,OAAO,MAAM,EAAO,iBAAkB,CACzC,GAAI,EACJ,eAAgB,EAFlB,CAKH,CAED,oBACE,EACA,EACA,EACS,CACT,MAAM,GAAc,GAEhB,EAAc,GAEd,EAAM,QAAQ,IAAI,CAAlB,GACA,EAAM,UAAU,IAAI,CAApB,GACA,EAAM,IAAI,IAAI,CAAd,EAIA,EAAc,GAEd,EAAM,QAAQ,IAAI,CAAlB,GACC,CAAC,KAAK,2BAA2B,CAAhC,GAA0C,EAAM,IAAI,IAAI,CAAd,EAK7C,EAAM,QAAQ,IAAI,CAAlB,GACC,CACE,GAAM,MAAQ,IACd,EAAM,QAAQ,OAAd,EAAuB,KAAvB,EAA8B,QAAU,IAE3C,CAAC,KAAK,2BAA2B,CAAhC,GAA0C,EAAM,UAAU,IAAI,CAApB,EAvBD,EAyB9C,CAED,iBAAiB,EAAkB,CACjC,GAAM,CAAE,QAAS,EACX,EAAgB,KAAK,WAAW,GACtC,AACE,CAAC,EAAc,QAAQ,IAAI,CAA1B,GACD,CAAC,EAAc,IAAI,IAAI,CAAtB,GAID,CAAC,EAAc,UAAU,IAAI,CAA5B,GAED,KAAK,iBAAiB,IAAI,EAAM,EAAG,IAAI,KAAvC,CAEH,CAED,cAAuB,CACrB,MAAO,MAAK,WAAW,KAAK,WAAW,OAAS,EACjD,CAED,sBAAmC,CACjC,OAAS,GAAI,KAAK,WAAW,OAAS,GAAK,IAAK,CAC9C,GAAM,CAAE,SAAU,KAAK,WAAW,GAClC,GAAI,EAAQ,GACV,MAAO,EAEV,CACF,CAGD,uBAAoC,CAClC,OAAS,GAAI,KAAK,WAAW,OAAS,GAAK,IAAK,CAC9C,GAAM,CAAE,SAAU,KAAK,WAAW,GAClC,GAAI,EAAS,IAAY,KAAgB,CAAE,GAAQ,IACjD,MAAO,EAEV,CACF,CA5L6D,EC7BhE,gBAAwB,GAAM,CAAA,eAAA,EAAA,CAAA,MAAA,GAAA,CAAA,EAAA,KAE5B,iBAAgC,GAAI,IAFR,CAAA,EAKf,gBAA+B,GAAwB,CACpE,YAAY,EAA8B,CACxC,MAAO,IAAI,IAAU,CAAd,CACR,CAED,YAAY,EAAc,EAA2B,EAAe,CAClE,GAAM,GAAQ,KAAK,aAAL,EACd,GAAI,EAAc,GAA4B,CAC5C,KAAK,0BAA0B,EAAO,EAAM,EAAa,CAAzD,EACA,KAAK,mBAAmB,EAAO,CAA/B,EACA,EAAM,iBAAiB,IAAI,CAA3B,EACA,MACD,CAED,MAAM,YAAY,EAAM,EAAa,CAArC,CACD,CAED,oBACE,EACA,EACA,EACS,CACT,MAAI,OAAM,oBAAoB,EAAO,EAAM,CAAvC,EAA4D,GAE5D,EAAc,GAEd,CAAC,EAAM,iBAAiB,IAAI,CAA3B,GACA,GAAM,QAAQ,IAAI,CAAlB,GAA2B,EAAM,UAAU,IAAI,CAApB,GAIzB,EACR,CAED,iBAAiB,EAAkB,CACjC,AAAK,KAAK,WAAW,GAAG,iBAAiB,IAAI,EAAG,IAA3C,GACH,MAAM,iBAAiB,CAAvB,CAEH,CAtCmE,ECFvD,QAAiB,CAAA,aAAA,CAAA,KAa9B,kBAA6B,GAbC,KAc9B,4BAAuC,EAdT,CA2B9B,UAAU,EAAqC,CAC7C,GAAI,MAAO,IAAiB,SAC1B,MAAO,MAAK,QAAQ,IAAI,CAAjB,EACF,CACL,GAAM,CAAC,EAAY,GAAiB,EACpC,GAAI,CAAC,KAAK,UAAU,CAAf,EACH,MAAO,GAET,GAAM,GAAgB,KAAK,QAAQ,IAAI,CAAjB,EACtB,OAAW,KAAO,QAAO,KACvB,CADgB,EAGhB,GAAI,IAAA,KAAA,OAAA,EAAgB,MAAS,EAAc,GACzC,MAAO,GAGX,MAAO,EACR,CACF,CAED,gBAGE,EAAoB,EAAkB,CAAA,GAAA,GACtC,MAAQ,GAAA,KAAK,QAAQ,IAAI,CAAjB,IAAR,KAAA,OAAO,EACL,EAEH,CAtD6B,ECuBhC,YAA6B,EAAoB,EAA0B,CACzE,AAAI,EAAK,mBAAqB,OAC5B,EAAK,iBAAmB,EAExB,EAAK,iBAAiB,QAAQ,GAAG,CAAjC,CAEH,CAUD,YAA4B,EAAoB,EAA0B,CACxE,AAAI,EAAK,kBAAoB,OAC3B,EAAK,gBAAkB,EAEvB,EAAK,gBAAgB,QAAQ,GAAG,CAAhC,CAEH,CAUM,YACL,EACA,EACA,CACA,AAAI,EAAK,gBAAkB,OACzB,EAAK,cAAgB,EAErB,EAAK,cAAc,QAAQ,GAAG,CAA9B,CAEH,CAWD,YACE,EACA,EACA,EACA,CACA,GAAI,GAAc,KACd,EAAI,EAAS,OACjB,KAAO,IAAgB,MAAQ,EAAI,GACjC,EAAc,EAAS,EAAE,GAE3B,AAAI,IAAgB,MAAQ,EAAY,MAAQ,EAAU,MACxD,GAAiB,EAAM,EAAU,QAAjB,EAEhB,GAAoB,EAAa,EAAU,QAAxB,CAEtB,CAGc,oBAA6B,GAAW,CACrD,WAAW,EAAwB,CACjC,AAAI,KAAK,UAAU,GAAQ,IAAI,SAAW,KAAK,UAC/C,KAAK,MAAM,SAAS,KAAK,CAAzB,CACD,CAUD,eAAe,EAAkB,CAC/B,GAAM,CAAE,gBAAiB,KAAK,MACxB,EAAqB,EAAa,OACxC,GAAI,IAAuB,EAAG,OAC9B,GAAI,GAAI,EAAqB,EACvB,EAAgB,EAAa,GAEnC,AAAI,EAAc,QAAU,EAAK,KAC/B,GAAc,YAAc,EAC5B,KAGF,GAAM,CAAE,MAAO,GAAc,EAE7B,KAAO,GAAK,EAAG,IAAK,CAClB,GAAM,GAAY,EAAa,GACzB,EAAa,EAAU,IAC7B,GAAI,EAAa,EAOf,EAAU,eAAiB,EAC3B,KAAK,gBAAgB,CAArB,EACA,EAAa,OAAO,EAAG,CAAvB,MACK,CACL,AAAI,IAAe,GACjB,GAAU,aAAe,GAG3B,KACD,CACF,CACF,CAQD,gBAAgB,EAA8B,CAC5C,GAAM,CAAE,YAAa,EACrB,GAAI,EAAU,cAAgB,MAAQ,EAAU,eAAiB,KAC/D,AAAI,EAAU,cAAgB,MAC5B,GAAoB,EAAU,YAAa,CAAxB,EAEjB,EAAU,eAAiB,MAC7B,GAAmB,EAAU,aAAc,CAAzB,MAEf,CAEL,GAAM,CAAE,eAAgB,EAAM,MAAO,GAAiB,EACtD,GAAI,KAAK,MAAM,WAAW,EAAe,CAArC,IAAA,GAIF,OAAQ,EAAK,UACN,uBACA,oBACA,mBACH,GAAoB,EAAM,EAAK,WAAY,CAAxB,EACnB,UACG,qBACA,yBACH,GAAoB,EAAM,EAAK,UAAW,CAAvB,EACnB,UACG,0BACA,yBACA,8BACA,mBACA,kBACA,qBACH,GAAoB,EAAM,EAAK,OAAQ,CAApB,EACnB,UACG,sBACA,mBACA,kBACH,GAAoB,EAAM,EAAK,SAAU,CAAtB,EACnB,UACG,6BACA,oBACH,GAAoB,EAAM,EAAK,WAAY,CAAxB,EACnB,cAEA,GAAiB,EAAM,CAAP,MAIpB,IAAiB,EAAM,CAAP,CAEnB,CACF,CAUD,2BAA4B,CAC1B,GAAM,CAAE,gBAAiB,KAAK,MAC9B,OAAS,GAAI,EAAa,OAAS,EAAG,GAAK,EAAG,IAC5C,KAAK,gBAAgB,EAAa,EAAlC,EAEF,KAAK,MAAM,aAAe,CAAA,CAC3B,CAoBD,kCAAkC,EAAY,CAC5C,GAAM,CAAE,gBAAiB,KAAK,MACxB,CAAE,UAAW,EACnB,GAAI,IAAW,EAAG,OAClB,GAAM,GAAY,EAAa,EAAS,GACxC,AAAI,EAAU,cAAgB,GAC5B,GAAU,YAAc,KAE3B,CAaD,wBAAwB,EAAY,EAAe,EAAa,CAC9D,GAAM,CAAE,gBAAiB,KAAK,MACxB,EAAqB,EAAa,OACxC,GAAI,IAAuB,EAAG,OAC9B,GAAI,GAAI,EAAqB,EAE7B,KAAO,GAAK,EAAG,IAAK,CAClB,GAAM,GAAY,EAAa,GACzB,EAAa,EAAU,IAG7B,GAAI,AAFiB,EAAU,QAEV,EACnB,EAAU,YAAc,UACf,IAAe,EACxB,EAAU,aAAe,UAChB,EAAa,EACtB,KAEH,CACF,CAxLoD,ECtG1C,GAAY,yBACZ,GAAa,GAAI,QAAO,GAAU,OAAQ,GAA7B,EAGnB,YAAmB,EAAuB,CAC/C,OAAQ,OACN,QACA,QACA,UACA,MACE,MAAO,WAGP,MAAO,GAEZ,CAEM,GAAM,IAAiB,gCAEjB,GACX,iDAMW,GAA4B,GAAI,QAI3C,OAGE,GAAqB,OACrB,QAGA,2CAA2C,OAC7C,GAZuC,EAgBlC,YAAsB,EAAuB,CAClD,OAAQ,OACD,OACA,QACA,QACL,QACA,SACA,UACK,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,OACH,MAAO,WAGP,MAAO,GAEZ,CChDc,YAAY,CAAA,aAAA,CAAA,KACzB,OADyB,OAAA,KAEzB,QAFyB,OAAA,KAGzB,UAHyB,OAAA,KAOzB,SAPyB,OAAA,KAQzB,OARyB,OAAA,KAuBzB,OAA4B,CAAA,EAvBH,KA0BzB,iBAA2B,GA1BF,KAgCzB,UAAsB,CAAA,EAhCG,KAwCzB,0BAAsC,CAAA,EAxCb,KA2CzB,uBAAkC,GA3CT,KA4CzB,OAAkB,GA5CO,KA6CzB,mBAA8B,GA7CL,KA8CzB,eAA0B,GA9CD,KA+CzB,iBAA4B,GA/CH,KAgDzB,gBAA2B,GAhDF,KAiDzB,kCAA6C,GAjDpB,KAoDzB,aAAkC,CAChC,yBAA0B,EAC1B,cAAe,MAtDQ,KA0DzB,UAAqB,GA1DI,KA2DzB,2BAAsC,GA3Db,KA8DzB,OAIK,CAAA,EAlEoB,KAuEzB,eAA4C,CAAC,CAAA,CAAD,EAvEnB,KA0EzB,SAA6B,CAAA,EA1EJ,KA6EzB,aAAyC,CAAA,EA7EhB,KAgFzB,IAAc,EAhFW,KAoFzB,KApFyB,IAAA,KAuFzB,MAAa,KAvFY,KA0FzB,MAAgB,EA1FS,KA2FzB,IAAc,EA3FW,KA+FzB,cAA0B,KA/FD,KAiGzB,gBAA4B,KAjGH,KAkGzB,aAAuB,EAlGE,KAsGzB,QAA6B,CAAC,GAAG,KAAJ,EAtGJ,KAwGzB,mBAA8B,GAxGL,KA6GzB,YAAuB,GA7GE,KAuHzB,aAA6D,GAAI,KAvHxC,KA0HzB,aAAuB,CA1HE,CAUzB,KAAK,CAAE,aAAY,aAAY,YAAW,eAA8B,CACtE,KAAK,OACH,IAAe,GACX,GACA,IAAe,GACf,GACA,IAAe,SAErB,KAAK,QAAU,EACf,KAAK,UAAY,CAAC,EAClB,KAAK,SAAW,KAAK,OAAS,GAAI,IAAS,EAAW,EAAa,CAArC,CAC/B,CAuGD,aAAwB,CACtB,MAAO,IAAI,IAAS,KAAK,QAAS,KAAK,IAAM,KAAK,UAAW,KAAK,GAA3D,CACR,CAED,MAAM,EAA6B,CACjC,GAAM,GAAQ,GAAI,IACZ,EAAO,OAAO,KAAK,IAAZ,EACb,OAAS,GAAI,EAAG,EAAS,EAAK,OAAQ,EAAI,EAAQ,IAAK,CACrD,GAAM,GAAM,EAAK,GACb,EAAM,KAAK,GAEf,AAAI,CAAC,GAAc,MAAM,QAAQ,CAAd,GACjB,GAAM,EAAI,MAAJ,GAIR,EAAM,GAAO,CACd,CAED,MAAO,EACR,CAhJwB,KC1B3B,SAAiB,EAAM,CACrB,MAAO,IAAI,IAAc,GAAzB,EACD,EAEK,GAAoC,CACxC,UAAW,GAAI,KAAY,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,GAAA,CAAhB,EAUX,IAAK,GAAI,KAAY,CAAhB,GAAA,GAAA,GAAA,GAAA,CAAA,CAXmC,EAmBpC,GAAmC,CAEvC,IAAM,GAAe,IAAA,IAA2B,IAFT,GAKvC,IAAM,GAAe,GAAA,IAA0B,GALR,GAQvC,IAAM,GAAe,GAAA,IAA0B,GARR,GAWvC,IAAM,GACH,GAAA,IAA0B,GAA3B,IACC,GAAE,IAA4B,GAAE,IAChC,GAAE,IAA4B,GAAE,GAdI,EAyBlC,YACL,EACA,EACA,EACA,EACA,EACA,EACA,CACA,GAAM,GAAa,EACb,EAAmB,EACnB,EAAiB,EAEnB,EAAM,GACN,EAAkB,GAClB,EAAa,EACX,CAAE,UAAW,EACnB,OAAS,CACP,GAAI,GAAO,EAAQ,CACjB,EAAO,aAAa,EAAY,EAAkB,CAAlD,EACA,GAAO,EAAM,MAAM,EAAY,CAAxB,EACP,KACD,CACD,GAAM,GAAK,EAAM,WAAW,CAAjB,EACX,GAAI,GAAY,EAAM,EAAI,EAAO,CAAlB,EAAwB,CACrC,GAAO,EAAM,MAAM,EAAY,CAAxB,EACP,KACD,CACD,GAAI,IAAE,GAA0B,CAC9B,GAAO,EAAM,MAAM,EAAY,CAAxB,EACP,GAAI,GACJ,AAAC,EACC,GAAI,EACJ,MACA,YACA,SAJD,EAKG,GACF,EACA,EACA,EACA,EACA,IAAS,WACT,CANiB,GAQnB,AAAI,IAAY,KACd,EAAkB,GAElB,GAAO,EAET,EAAa,CACd,KAAM,AACL,KAAE,MACF,IAAE,KAEF,GAAE,EACF,EAAE,EACF,EAAY,GACP,AAAI,IAAE,IAA2B,IAAE,GACxC,AAAI,IAAS,WACX,IAAO,EAAM,MAAM,EAAY,CAAxB,EAA+B;EACtC,EAAE,EAEA,IAAE,IACF,EAAM,WAAW,CAAjB,IAAA,IAEA,EAAE,EAEJ,EAAE,EACF,EAAa,EAAY,GAEzB,EAAO,aAAa,EAAY,EAAkB,CAAlD,EAGF,EAAE,CAEL,CACD,MAAO,CAAE,MAAK,IAAK,EAAK,kBAAiB,YAAW,UACrD,CAED,YACE,EACA,EACA,EACA,EACA,CACA,MAAI,KAAS,WAET,IAAE,IACD,IAAA,IACC,EAAM,WAAW,EAAM,CAAvB,IAHJ,IAOA,IAAQ,KAAS,SAAT,GAAA,GAEX,CAOD,YACE,EACA,EACA,EACA,EACA,EACA,EACA,CACA,GAAM,GAAiB,CAAC,EACxB,IAEA,GAAM,GAAO,GAAuB,EAAE,MAAK,KAAI,YAAW,SAAtB,GAE9B,EAAK,EAAM,WAAW,GAAjB,EACX,OAAQ,OACN,KACE,MAAO,GAAI;CAAD,MACZ,KACE,MAAO,GAAI,IAAD,MACZ,KAA2B,CACzB,GAAI,GACJ,MAAC,CAAE,OAAM,KAAR,EAAgB,GACf,EACA,EACA,EACA,EACA,EACA,GACA,EACA,CAR0B,EAUrB,EAAI,IAAS,KAAO,KAAO,OAAO,aAAa,CAApB,CAAxB,CACX,KACD,KAA2B,CACzB,GAAI,GACJ,MAAC,CAAE,OAAM,KAAR,EAAgB,GACf,EACA,EACA,EACA,EACA,EACA,CAN4B,EAQvB,EAAI,IAAS,KAAO,KAAO,OAAO,cAAc,CAArB,CAAxB,CACX,KACD,KACE,MAAO,GAAI,GAAD,MACZ,IACE,MAAO,GAAI,IAAD,MACZ,KACE,MAAO,GAAI,IAAD,MACZ,KACE,MAAO,GAAI,IAAD,MACZ,IACE,AAAI,EAAM,WAAW,CAAjB,IAAA,IACF,EAAE,MAGN,IACE,EAAY,EACZ,EAAE,MAEJ,UACA,MACE,MAAO,GAAI,EAAD,MACZ,QACA,IACE,GAAI,EACF,MAAO,GAAI,IAAD,EAEV,EAAO,oBAAoB,EAAM,EAAG,EAAW,CAA/C,UAIF,GAAI,GAAE,IAAwB,GAAE,GAAsB,CACpD,GAAM,GAAW,EAAM,EAGnB,EAAW,AAFD,EAAM,MAAM,EAAU,EAAM,CAA5B,EAA+B,MAAM,SAArC,EAEO,GAEjB,EAAQ,SAAS,EAAU,CAAX,EACpB,AAAI,EAAQ,KACV,GAAW,EAAS,MAAM,EAAG,EAAlB,EACX,EAAQ,SAAS,EAAU,CAAX,GAElB,GAAO,EAAS,OAAS,EACzB,GAAM,GAAO,EAAM,WAAW,CAAjB,EACb,GACE,IAAa,KACb,IADA,IAEA,IAAI,GACJ,CACA,GAAI,EACF,MAAO,GAAI,IAAD,EAEV,EAAO,oBAAoB,EAAU,EAAW,CAAhD,CAEH,CAED,MAAO,GAAI,OAAO,aAAa,CAApB,CAAD,CACX,CAED,MAAO,GAAI,OAAO,aAAa,CAApB,CAAD,EAEf,CAOD,YACE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,CACA,GAAM,GAAa,EACf,EACJ,MAAC,CAAE,IAAG,KAAL,EAAa,GACZ,EACA,EACA,EACA,EACA,GACA,EACA,EACA,GACA,CATmB,EAWjB,IAAM,MACR,CAAI,EACF,EAAO,sBAAsB,EAAY,EAAW,CAApD,EAEA,EAAM,EAAa,GAGhB,CAAE,KAAM,EAAG,MACnB,CAuBM,YACL,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,CACA,GAAM,GAAQ,EACR,EACJ,IAAU,GACN,GAAkC,IAClC,GAAkC,UAClC,EACJ,IAAU,GACN,GAAiC,IACjC,IAAU,GACV,GAAiC,IACjC,IAAU,EACV,GAAiC,IACjC,GAAiC,IAEnC,EAAU,GACV,EAAQ,EAEZ,OAAS,GAAI,EAAG,EAAI,GAAO,KAAO,IAAW,EAAK,EAAI,EAAG,EAAE,EAAG,CAC5D,GAAM,GAAO,EAAM,WAAW,CAAjB,EACT,EAEJ,GAAI,IAAA,IAAiC,IAAsB,OAAQ,CACjE,GAAM,GAAO,EAAM,WAAW,EAAM,CAAvB,EACP,EAAO,EAAM,WAAW,EAAM,CAAvB,EAEb,AAAK,EAGH,QAAO,MAAM,CAAb,GACA,CAAC,EAAiB,CAAD,GACjB,EAAkB,IAAI,CAAtB,GACA,EAAkB,IAAI,CAAtB,IAEA,EAAO,2BAA2B,EAAK,EAAW,CAAlD,EAPA,EAAO,iCAAiC,EAAK,EAAW,CAAxD,EAWF,EAAE,EACF,QACD,CAWD,GATA,AAAI,GAAI,GACN,EAAM,EAAI,GAAV,GACK,AAAI,GAAI,GACb,EAAM,EAAI,GAAV,GACK,AAAI,GAAkB,CAAlB,EACT,EAAM,EAAN,GAEA,EAAM,IAEJ,GAAO,EAGT,GAAI,GAAO,GAAK,EAAO,aAAa,EAAK,EAAW,EAAS,CAA7C,EACd,EAAM,UACG,EACT,EAAM,EACN,EAAU,OAEV,OAGJ,EAAE,EACF,EAAQ,EAAQ,EAAQ,CACzB,CACD,MAAI,KAAQ,GAAU,GAAO,MAAQ,EAAM,IAAU,GAAQ,EACpD,CAAE,EAAG,KAAM,OAGb,CAAE,EAAG,EAAO,MACpB,CAMM,YACL,EACA,EACA,EACA,EACA,EACA,EACA,CACA,GAAM,GAAK,EAAM,WAAW,CAAjB,EACP,EAEJ,GAAI,IAAE,KAaJ,GAZA,EAAE,EACD,CAAE,OAAM,OAAQ,GACf,EACA,EACA,EACA,EACA,EAAM,QAAQ,IAAK,CAAnB,EAA0B,EAC1B,GACA,EACA,CAR0B,EAU5B,EAAE,EACE,IAAS,MAAQ,EAAO,QAC1B,GAAI,EACF,EAAO,iBAAiB,EAAK,EAAW,CAAxC,MAEA,OAAO,CAAE,KAAM,KAAM,WAIzB,AAAC,EAAE,OAAM,KAAR,EAAgB,GACf,EACA,EACA,EACA,EACA,EACA,GACA,EACA,CAR0B,GAW9B,MAAO,CAAE,OAAM,MAChB,yBC/YD,YAAuB,EAAa,EAAmB,EAAiB,CACtE,MAAO,IAAI,IAAS,EAAS,EAAM,EAAW,CAAvC,CACR,CAED,GAAM,IAAoB,GAAI,KAAI,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,CAAR,EAgBnB,QAAY,CACjB,YAAY,EAAc,CACxB,KAAK,KAAO,EAAM,KAClB,KAAK,MAAQ,EAAM,MACnB,KAAK,MAAQ,EAAM,MACnB,KAAK,IAAM,EAAM,IACjB,KAAK,IAAM,GAAI,IAAe,EAAM,SAAU,EAAM,MAAzC,CACZ,CAPgB,EAkBJ,gBAAiC,GAAe,CAM7D,YAAY,EAAkB,EAAe,CAC3C,MAAA,EAD2C,KAL7C,YAK6C,OAAA,KAF7C,OAAmC,CAAA,EAEU,KA26C7C,sBAA0C,CACxC,aAAc,CAAC,EAAK,EAAW,EAAS,IACjC,KAAK,QAAQ,cAElB,MAAK,MAAM,EAAO,aAAc,CAC9B,GAAI,GAAc,EAAK,EAAW,CAAjB,EACjB,QAFF,EAKO,IAPiC,GAS1C,iCAAkC,KAAK,aACrC,EAAO,gCADyB,EAGlC,2BAA4B,KAAK,aAC/B,EAAO,0BADmB,GAz7Ce,KA87C7C,4BACK,OAAA,OAAA,CAAA,EAAA,KAAK,sBA/7CmC,CAg8C3C,sBAAuB,KAAK,aAAa,EAAO,qBAAzB,EACvB,iBAAkB,KAAK,aAAa,EAAO,gBAAzB,CAj8CyB,CAAA,EAAA,KAo8C7C,wCACK,OAAA,OAAA,CAAA,EAAA,KAAK,4BAr8CmC,CAs8C3C,oBAAqB,CAAC,EAAK,EAAW,IAAY,CAChD,KAAK,uBAAuB,EAAO,oBAAqB,CACtD,GAAI,GAAc,EAAK,EAAW,CAAjB,EADnB,GAIF,aAAc,CAAC,EAAK,EAAW,IAAY,CACzC,KAAM,MAAK,MAAM,EAAO,mBAAoB,CAE1C,GAAI,GAAc,EAAM,EAAG,EAAW,CAArB,CAFyB,CAAtC,CAIP,CAh9C0C,CAAA,EAAA,KAm9C7C,0CACK,OAAA,OAAA,CAAA,EAAA,KAAK,4BAp9CmC,CAq9C3C,oBAAqB,KAAK,aAAa,EAAO,mBAAzB,EACrB,aAAc,CAAC,EAAK,EAAW,IAAY,CACzC,KAAM,MAAK,MAAM,EAAO,qBAAsB,CAC5C,GAAI,GAAc,EAAK,EAAW,CAAjB,CAD2B,CAAxC,CAGP,CA19C0C,CAAA,EAE3C,KAAK,MAAQ,GAAI,IACjB,KAAK,MAAM,KAAK,CAAhB,EACA,KAAK,MAAQ,EACb,KAAK,OAAS,EAAM,OACpB,KAAK,YAAc,EACpB,CAED,UAAU,EAA0B,CAGlC,KAAK,OAAO,OAAS,KAAK,MAAM,aAChC,KAAK,OAAO,KAAK,CAAjB,EACA,EAAE,KAAK,MAAM,YACd,CAID,MAAa,CACX,KAAK,oBAAL,EACI,KAAK,QAAQ,QACf,KAAK,UAAU,GAAI,IAAM,KAAK,KAAf,CAAf,EAGF,KAAK,MAAM,aAAe,KAAK,MAAM,MACrC,KAAK,MAAM,cAAgB,KAAK,MAAM,OACtC,KAAK,MAAM,gBAAkB,KAAK,MAAM,SACxC,KAAK,UAAL,CACD,CAID,IAAI,EAA0B,CAC5B,MAAI,MAAK,MAAM,CAAX,EACF,MAAK,KAAL,EACO,IAEA,EAEV,CASD,MAAM,EAA0B,CAC9B,MAAO,MAAK,MAAM,OAAS,CAC5B,CASD,qBAAqB,EAA8B,CACjD,MAAO,CACL,IAAK,EAAM,IACX,MAAO,KACP,KAAM,EAAM,KACZ,MAAO,EAAM,MACb,IAAK,EAAM,IACX,QAAS,CAAC,KAAK,WAAL,CAAD,EACT,OAAQ,EAAM,OACd,SAAU,EAAM,SAChB,cAAe,EAAM,cACrB,QAAS,EAAM,QACf,UAAW,EAAM,UACjB,YAAa,EAAM,YAEtB,CAkBD,WAA4B,CAC1B,GAAM,GAAM,KAAK,MAEjB,KAAK,MAAQ,KAAK,qBAAqB,CAA1B,EAEb,KAAK,YAAc,GACnB,KAAK,UAAL,EACA,KAAK,YAAc,GAEnB,GAAM,GAAO,KAAK,MAClB,YAAK,MAAQ,EACN,CACR,CAED,gBAAyB,CACvB,MAAO,MAAK,oBAAoB,KAAK,MAAM,GAApC,CACR,CAED,oBAAoB,EAAqB,CACvC,UAAe,UAAY,EACpB,GAAe,KAAK,KAAK,KAAzB,EAAkC,GAAe,UAAY,CACrE,CAED,mBAA4B,CAC1B,MAAO,MAAK,MAAM,WAAW,KAAK,eAAL,CAAtB,CACR,CAED,eAAe,EAAqB,CAKlC,GAAI,GAAK,KAAK,MAAM,WAAW,CAAtB,EACT,GAAK,GAAK,SAAY,OAAU,EAAE,EAAM,KAAK,MAAM,OAAQ,CACzD,GAAM,GAAQ,KAAK,MAAM,WAAW,CAAtB,EACd,AAAK,GAAQ,SAAY,OACvB,GAAK,MAAY,IAAK,OAAU,IAAO,GAAQ,MAElD,CACD,MAAO,EACR,CAKD,UAAU,EAAuB,CAC/B,KAAK,MAAM,OAAS,EAChB,GAKF,MAAK,MAAM,aAAa,QAAQ,CAAC,CAAC,EAAc,KAC9C,KAAK,MAAM,EAAc,CAAE,IAAF,CAAzB,CADF,EAGA,KAAK,MAAM,aAAa,MAAxB,EAEH,CAED,YAAyB,CACvB,MAAO,MAAK,MAAM,QAAQ,KAAK,MAAM,QAAQ,OAAS,EACvD,CAKD,WAAkB,CAIhB,GAHA,KAAK,UAAL,EACA,KAAK,MAAM,MAAQ,KAAK,MAAM,IACzB,KAAK,aAAa,MAAK,MAAM,SAAW,KAAK,MAAM,YAAX,GACzC,KAAK,MAAM,KAAO,KAAK,OAAQ,CACjC,KAAK,YAAL,GAAA,EACA,MACD,CAED,KAAK,iBAAiB,KAAK,eAAe,KAAK,MAAM,GAA/B,CAAtB,CACD,CAED,kBAA+C,CAC7C,GAAI,GACJ,AAAK,KAAK,aAAa,GAAW,KAAK,MAAM,YAAX,GAClC,GAAM,GAAQ,KAAK,MAAM,IACnB,EAAM,KAAK,MAAM,QAAQ,KAAM,EAAQ,CAAjC,EACZ,GAAI,IAAQ,GAIV,KAAM,MAAK,MAAM,EAAO,oBAAqB,CAC3C,GAAI,KAAK,MAAM,YAAX,CADuC,CAAvC,EAOR,IAFA,KAAK,MAAM,IAAM,EAAM,EACvB,GAAW,UAAY,EAAQ,EACxB,GAAW,KAAK,KAAK,KAArB,GAA+B,GAAW,WAAa,GAC5D,EAAE,KAAK,MAAM,QACb,KAAK,MAAM,UAAY,GAAW,UAKpC,GAAI,KAAK,YAAa,OAGtB,GAAM,GAA0B,CAC9B,KAAM,eACN,MAAO,KAAK,MAAM,MAAM,EAAQ,EAAG,CAA5B,EACP,QACA,IAAK,EAAM,EACX,IAAK,GAAI,IAAe,EAAU,KAAK,MAAM,YAAX,CAA7B,GAEP,MAAI,MAAK,QAAQ,QAAQ,KAAK,UAAU,CAAf,EAClB,CACR,CAED,gBAAgB,EAA8C,CAC5D,GAAM,GAAQ,KAAK,MAAM,IACrB,EACJ,AAAK,KAAK,aAAa,GAAW,KAAK,MAAM,YAAX,GAClC,GAAI,GAAK,KAAK,MAAM,WAAY,KAAK,MAAM,KAAO,CAAzC,EACT,GAAI,KAAK,MAAM,IAAM,KAAK,OACxB,KAAO,CAAC,GAAU,CAAD,GAAQ,EAAE,KAAK,MAAM,IAAM,KAAK,QAC/C,EAAK,KAAK,MAAM,WAAW,KAAK,MAAM,GAAjC,EAMT,GAAI,KAAK,YAAa,OAGtB,GAAM,GAAM,KAAK,MAAM,IACjB,EAAQ,KAAK,MAAM,MAAM,EAAQ,EAAW,CAApC,EAER,EAAyB,CAC7B,KAAM,cACN,QACA,QACA,MACA,IAAK,GAAI,IAAe,EAAU,KAAK,MAAM,YAAX,CAA7B,GAEP,MAAI,MAAK,QAAQ,QAAQ,KAAK,UAAU,CAAf,EAClB,CACR,CAKD,WAAkB,CAChB,GAAM,GAAa,KAAK,MAAM,IACxB,EAAW,CAAA,EACjB,EAAM,KAAO,KAAK,MAAM,IAAM,KAAK,QAAQ,CACzC,GAAM,GAAK,KAAK,MAAM,WAAW,KAAK,MAAM,GAAjC,EACX,OAAQ,OACN,QACA,SACA,GACE,EAAE,KAAK,MAAM,IACb,UACF,IACE,AACE,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,IAAA,IAEA,EAAE,KAAK,MAAM,QAGjB,QACA,UACA,MACE,EAAE,KAAK,MAAM,IACb,EAAE,KAAK,MAAM,QACb,KAAK,MAAM,UAAY,KAAK,MAAM,IAClC,UAEF,IACE,OAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,OACN,IAAyB,CACvB,GAAM,GAAU,KAAK,iBAAL,EAChB,AAAI,IAAY,QACd,MAAK,WAAW,CAAhB,EACI,KAAK,QAAQ,eAAe,EAAS,KAAK,CAAd,GAElC,KACD,KAED,IAAsB,CACpB,GAAM,GAAU,KAAK,gBAAgB,CAArB,EAChB,AAAI,IAAY,QACd,MAAK,WAAW,CAAhB,EACI,KAAK,QAAQ,eAAe,EAAS,KAAK,CAAd,GAElC,KACD,SAGC,QAEJ,cAGA,GAAI,GAAa,CAAD,EACd,EAAE,KAAK,MAAM,YACJ,IAAE,IAAuB,CAAC,KAAK,SAAU,CAClD,GAAM,GAAM,KAAK,MAAM,IACvB,GACE,KAAK,MAAM,WAAW,EAAM,CAA5B,IACA,IAAA,KAAK,MAAM,WAAW,EAAM,CAA5B,IADA,IAEC,KAAe,GAAK,KAAK,MAAM,UAAY,GAC5C,CAEA,GAAM,GAAU,KAAK,gBAAgB,CAArB,EAChB,AAAI,IAAY,QACd,MAAK,WAAW,CAAhB,EACI,KAAK,QAAQ,eAAe,EAAS,KAAK,CAAd,EAEnC,KACC,iBAEO,IAAE,IAA2B,CAAC,KAAK,SAAU,CACtD,GAAM,GAAM,KAAK,MAAM,IACvB,GACE,KAAK,MAAM,WAAW,EAAM,CAA5B,IACA,IAAA,KAAK,MAAM,WAAW,EAAM,CAA5B,IAAA,IACA,KAAK,MAAM,WAAW,EAAM,CAA5B,IAAA,GACA,CAEA,GAAM,GAAU,KAAK,gBAAgB,CAArB,EAChB,AAAI,IAAY,QACd,MAAK,WAAW,CAAhB,EACI,KAAK,QAAQ,eAAe,EAAS,KAAK,CAAd,EAEnC,KACC,QAEH,KACC,SAGP,CAED,GAAI,EAAS,OAAS,EAAG,CACvB,GAAM,GAAM,KAAK,MAAM,IACjB,EAAuC,CAC3C,MAAO,EACP,MACA,WACA,YAAa,KACb,aAAc,KACd,eAAgB,MAElB,KAAK,MAAM,aAAa,KAAK,CAA7B,CACD,CACF,CAOD,YAAY,EAAiB,EAAiB,CAC5C,KAAK,MAAM,IAAM,KAAK,MAAM,IAC5B,KAAK,MAAM,OAAS,KAAK,MAAM,YAAX,EACpB,GAAM,GAAW,KAAK,MAAM,KAC5B,KAAK,MAAM,KAAO,EAClB,KAAK,MAAM,MAAQ,EAEd,KAAK,aACR,KAAK,cAAc,CAAnB,CAEH,CAED,aAAa,EAAuB,CAClC,KAAK,MAAM,KAAO,EAGlB,KAAK,cAAL,CACD,CAYD,sBAA6B,CAC3B,GAAI,KAAK,MAAM,MAAQ,GAAK,KAAK,sBAAL,EAC1B,OAGF,GAAM,GAAU,KAAK,MAAM,IAAM,EAC3B,EAAO,KAAK,eAAe,CAApB,EACb,GAAI,GAAI,IAAwB,GAAI,GAClC,KAAM,MAAK,MAAM,EAAO,yBAA0B,CAChD,GAAI,KAAK,MAAM,YAAX,CAD4C,CAA5C,EAKR,GACE,IAAA,KACC,IAAI,IAAoC,KAAK,UAAU,gBAAf,EACzC,CAMA,GADA,KAAK,aAAa,gBAAlB,EACI,KAAK,gBAAgB,iBAAkB,YAAvC,IAAyD,MAC3D,KAAM,MAAK,MACT,IAAA,IACI,EAAO,6CACP,EAAO,4CACX,CAAE,GAAI,KAAK,MAAM,YAAX,CAAN,CAJI,EAQR,KAAK,MAAM,KAAO,EAClB,AAAI,IAAI,IAEN,KAAK,YAAL,CAAA,EAGA,KAAK,YAAL,CAAA,CAEH,KAAM,AAAI,IAAkB,CAAD,EAC1B,GAAE,KAAK,MAAM,IACb,KAAK,YAA4B,IAAA,KAAK,UAAU,CAAf,CAAjC,GACK,AAAI,IAAI,GACb,GAAE,KAAK,MAAM,IACb,KAAK,YAAL,IAAiC,KAAK,UAAL,CAAjC,GAEA,KAAK,SAAL,GAAuB,CAAvB,CAEH,CAED,eAAsB,CACpB,GAAM,GAAO,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,EACb,GAAI,GAAI,IAAwB,GAAI,GAAsB,CACxD,KAAK,WAAW,EAAhB,EACA,MACD,CAED,AACE,IAAI,IACJ,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,IAAA,GAEA,MAAK,MAAM,KAAO,EAClB,KAAK,YAAL,EAAA,GAEA,GAAE,KAAK,MAAM,IACb,KAAK,YAAL,EAAA,EAEH,CAED,iBAAwB,CAEtB,AAAI,AADS,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,IACL,GACN,KAAK,SAAL,GAA8B,CAA9B,EAEA,KAAK,SAAL,GAAwB,CAAxB,CAEH,CAED,uBAAiC,CAC/B,GAAI,KAAK,MAAM,MAAQ,GAAK,KAAK,OAAS,EAAG,MAAO,GAEpD,GAAI,GAAK,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,EACT,GAAI,IAAE,GAAgC,MAAO,GAE7C,GAAM,GAAQ,KAAK,MAAM,IAGzB,IAFA,KAAK,MAAM,KAAO,EAEX,CAAC,GAAU,CAAD,GAAQ,EAAE,KAAK,MAAM,IAAM,KAAK,QAC/C,EAAK,KAAK,MAAM,WAAW,KAAK,MAAM,GAAjC,EAGP,GAAM,GAAQ,KAAK,MAAM,MAAM,EAAQ,EAAG,KAAK,MAAM,GAAvC,EAEd,YAAK,YAAL,GAA0C,CAA1C,EAEO,EACR,CAED,sBAAsB,EAAoB,CAExC,GAAI,GAAO,IAAI,GAAf,GAAA,GACI,EAAQ,EACR,EAAO,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,EAGX,AAAI,IAAI,IAA2B,IAAI,IACrC,KACA,EAAO,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,EACP,EAAA,IAIE,IAAI,IAA2B,CAAC,KAAK,MAAM,QAC7C,KAIA,EAAO,IAAI,GAAX,GAAA,IAGF,KAAK,SAAS,EAAM,CAApB,CACD,CAED,mBAAmB,EAAoB,CAErC,GAAM,GAAO,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,EAEb,GAAI,IAAS,EAAM,CACjB,AAAI,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,IAAA,GACF,KAAK,SAAL,GAAyB,CAAzB,EAEA,KAAK,SACH,IAAA,IAAA,GAAA,GACA,CAFF,EAKF,MACD,CAED,GAAI,IAAI,IAA4B,CAElC,GAAI,IAAI,GAA4B,CAClC,KAAK,SAAL,GAA2B,CAA3B,EACA,MACD,CAED,GACE,KAAK,UAAU,gBAAf,GACA,IAAI,IACJ,CACA,GAAI,KAAK,gBAAgB,iBAAkB,YAAvC,IAAyD,MAC3D,KAAM,MAAK,MAAM,EAAO,0CAA2C,CACjE,GAAI,KAAK,MAAM,YAAX,CAD6D,CAA7D,EAIR,KAAK,MAAM,KAAO,EAClB,KAAK,YAAL,CAAA,EACA,MACD,CAGD,GACE,KAAK,UAAU,gBAAf,GACA,IAAI,GACJ,CACA,GAAI,KAAK,gBAAgB,iBAAkB,YAAvC,IAAyD,MAC3D,KAAM,MAAK,MAAM,EAAO,yCAA0C,CAChE,GAAI,KAAK,MAAM,YAAX,CAD4D,CAA5D,EAIR,KAAK,MAAM,KAAO,EAClB,KAAK,YAAL,CAAA,EACA,MACD,CACF,CAED,GAAI,IAAI,GAAyB,CAC/B,KAAK,SAAL,GAAyB,CAAzB,EACA,MACD,CAED,KAAK,SACH,IAAA,IAAA,GAAA,GACA,CAFF,CAID,CAED,iBAAwB,CACtB,GAAM,GAAO,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,EAGb,GAAI,IAAI,IAA2B,CAAC,KAAK,MAAM,OAI7C,KAAK,SAAL,GAA4B,CAA5B,UAIA,IAAA,IAGA,KAAK,UAAU,CACb,mBACA,CAAE,SAAU,OAAQ,WAAY,KAFnB,CAAf,GASA,GAJA,KAAK,SAAL,GAA8B,CAA9B,EAII,AADgB,KAAK,MAAM,YAAY,KAAK,MAAM,GAAlC,IACL,GACb,KAAM,MAAK,WAAL,MAKR,MAAK,SAAL,GAA6B,CAA7B,CAEH,CAED,kBAAyB,CAIvB,AACE,AAJW,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,IAIP,IACJ,KAAK,UAAU,CACb,mBACA,CAAE,SAAU,OAAQ,WAAY,KAFnB,CAAf,EAKA,KAAK,SAAL,GAA2B,CAA3B,EAIA,KAAK,SAAL,GAAqB,CAArB,CAEH,CAED,mBAAmB,EAAoB,CAErC,GAAM,GAAO,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,EAEb,GAAI,IAAS,EAAM,CACjB,KAAK,SAAL,GAAyB,CAAzB,EACA,MACD,CAED,AAAI,IAAI,GACN,KAAK,SAAL,GAAyB,CAAzB,EAEA,KAAK,SAAL,GAA0B,CAA1B,CAEH,CAED,cAAqB,CAEnB,GAAM,CAAE,OAAQ,KAAK,MACf,EAAO,KAAK,MAAM,WAAW,EAAM,CAA5B,EAEb,GAAI,IAAI,GAAyB,CAC/B,GAAI,KAAK,MAAM,WAAW,EAAM,CAA5B,IAAA,GAAuD,CACzD,KAAK,SAAL,GAAyB,CAAzB,EACA,MACD,CACD,KAAK,SAAL,GAA4B,CAA5B,EACA,MACD,CAED,GAAI,IAAI,GAAyB,CAE/B,KAAK,SAAL,GAA6B,CAA7B,EACA,MACD,CAED,KAAK,SAAL,GAAqB,CAArB,CACD,CAED,cAAqB,CAEnB,GAAM,CAAE,OAAQ,KAAK,MACf,EAAO,KAAK,MAAM,WAAW,EAAM,CAA5B,EAEb,GAAI,IAAI,GAA4B,CAClC,GAAM,GACJ,KAAK,MAAM,WAAW,EAAM,CAA5B,IAA2D,GAAA,EAAI,EACjE,GAAI,KAAK,MAAM,WAAW,EAAM,CAA5B,IAAA,GAA0D,CAC5D,KAAK,SAAL,GAAyB,EAAO,CAAhC,EACA,MACD,CACD,KAAK,SAAL,GAA4B,CAA5B,EACA,MACD,CAED,GAAI,IAAI,GAAyB,CAE/B,KAAK,SAAL,GAA6B,CAA7B,EACA,MACD,CAED,KAAK,SAAL,GAAqB,CAArB,CACD,CAED,kBAAkB,EAAoB,CAEpC,GAAM,GAAO,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,EACb,GAAI,IAAI,GAAyB,CAC/B,KAAK,SAEH,GAAA,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,IACI,GAAA,EACA,CAJN,EAMA,MACD,CACD,GAAI,IAAI,IAA2B,IAAI,GAA4B,CAEjE,KAAK,MAAM,KAAO,EAClB,KAAK,YAAL,EAAA,EACA,MACD,CACD,KAAK,SAAS,IAAA,GAAA,GAAA,GAA+C,CAA7D,CACD,CAED,oBAA2B,CAEzB,GAAM,GAAO,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,EACP,EAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,EACd,AAAI,IAAI,GACN,AAAI,IAAK,GAEP,KAAK,SAAL,GAAyB,CAAzB,EAGA,KAAK,SAAL,GAAoC,CAApC,EAEG,AACL,IAAI,IACJ,CAAE,IAAK,IAAwB,GAA/B,IAGA,MAAK,MAAM,KAAO,EAClB,KAAK,YAAL,EAAA,GAEA,GAAE,KAAK,MAAM,IACb,KAAK,YAAL,EAAA,EAEH,CAED,iBAAiB,EAAoB,CACnC,OAAQ,OAIN,IACE,KAAK,cAAL,EACA,WAGF,IACE,EAAE,KAAK,MAAM,IACb,KAAK,YAAL,EAAA,EACA,WACF,IACE,EAAE,KAAK,MAAM,IACb,KAAK,YAAL,EAAA,EACA,WACF,IACE,EAAE,KAAK,MAAM,IACb,KAAK,YAAL,EAAA,EACA,WACF,IACE,EAAE,KAAK,MAAM,IACb,KAAK,YAAL,EAAA,EACA,WACF,IACE,GACE,KAAK,UAAU,gBAAf,GACA,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,IAAA,IACA,CACA,GAAI,KAAK,gBAAgB,iBAAkB,YAAvC,IAAyD,MAC3D,KAAM,MAAK,MACT,EAAO,2CACP,CAAE,GAAI,KAAK,MAAM,YAAX,CAAN,CAFI,EAOR,KAAK,MAAM,KAAO,EAClB,KAAK,YAAL,CAAA,CACD,KACC,EAAE,KAAK,MAAM,IACb,KAAK,YAAL,CAAA,EAEF,WACF,IACE,EAAE,KAAK,MAAM,IACb,KAAK,YAAL,CAAA,EACA,WACF,KACE,GACE,KAAK,UAAU,gBAAf,GACA,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,IAAA,IACA,CACA,GAAI,KAAK,gBAAgB,iBAAkB,YAAvC,IAAyD,MAC3D,KAAM,MAAK,MACT,EAAO,4CACP,CAAE,GAAI,KAAK,MAAM,YAAX,CAAN,CAFI,EAOR,KAAK,MAAM,KAAO,EAClB,KAAK,YAAL,CAAA,CACD,KACC,EAAE,KAAK,MAAM,IACb,KAAK,YAAL,CAAA,EAEF,WACF,KACE,EAAE,KAAK,MAAM,IACb,KAAK,YAAL,CAAA,EACA,WAEF,IACE,AACE,KAAK,UAAU,cAAf,GACA,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,IAAA,GAEA,KAAK,SAAL,GAA8B,CAA9B,EAEA,GAAE,KAAK,MAAM,IACb,KAAK,YAAL,EAAA,GAEF,WAEF,IACE,KAAK,mBAAL,EACA,WAEF,IACE,KAAK,kBAAL,EACA,WAEF,IAAuB,CACrB,GAAM,GAAO,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,EAEb,GAAI,IAAI,KAA6B,IAAI,GAA2B,CAClE,KAAK,gBAAgB,EAArB,EACA,MACD,CAED,GAAI,IAAI,KAA6B,IAAI,GAA2B,CAClE,KAAK,gBAAgB,CAArB,EACA,MACD,CAED,GAAI,IAAI,IAA6B,IAAI,GAA2B,CAClE,KAAK,gBAAgB,CAArB,EACA,MACD,CACF,KAGD,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,IACE,KAAK,WAAW,EAAhB,EACA,WAGF,QACA,IACE,KAAK,WAAW,CAAhB,EACA,WAOF,IACE,KAAK,gBAAL,EACA,WAEF,QACA,IACE,KAAK,sBAAsB,CAA3B,EACA,WAEF,SACA,IACE,KAAK,mBAAmB,CAAxB,EACA,WAEF,IACE,KAAK,gBAAL,EACA,WAEF,QACA,IACE,KAAK,mBAAmB,CAAxB,EACA,WAEF,IACE,KAAK,aAAL,EACA,WAEF,IACE,KAAK,aAAL,EACA,WAEF,QACA,IACE,KAAK,kBAAkB,CAAvB,EACA,WAEF,KACE,KAAK,SAAL,GAAwB,CAAxB,EACA,WAEF,IACE,KAAK,iBAAL,EACA,WAEF,IACE,KAAK,qBAAL,EACA,WAEF,IACE,KAAK,SAAL,EACA,eAGA,GAAI,GAAkB,CAAD,EAAQ,CAC3B,KAAK,SAAS,CAAd,EACA,MACD,EAGL,KAAM,MAAK,MAAM,EAAO,yBAA0B,CAChD,GAAI,KAAK,MAAM,YAAX,EACJ,WAAY,OAAO,cAAc,CAArB,CAFoC,CAA5C,CAIP,CAED,SAAS,EAAiB,EAAoB,CAC5C,GAAM,GAAM,KAAK,MAAM,MAAM,KAAK,MAAM,IAAK,KAAK,MAAM,IAAM,CAAlD,EACZ,KAAK,MAAM,KAAO,EAClB,KAAK,YAAY,EAAM,CAAvB,CACD,CAED,YAAmB,CACjB,GAAM,GAAW,KAAK,MAAM,SACtB,EAAQ,KAAK,MAAM,MAAQ,EAC7B,EAAS,EACT,CAAE,OAAQ,KAAK,MACnB,MAAS,EAAE,EAAK,CACd,GAAI,GAAO,KAAK,OAEd,KAAM,MAAK,MAAM,EAAO,mBAAoB,CAC1C,GAAI,GAA+B,EAAU,CAAX,CADQ,CAAtC,EAIR,GAAM,GAAK,KAAK,MAAM,WAAW,CAAtB,EACX,GAAI,GAAU,CAAD,EACX,KAAM,MAAK,MAAM,EAAO,mBAAoB,CAC1C,GAAI,GAA+B,EAAU,CAAX,CADQ,CAAtC,EAIR,GAAI,EACF,EAAU,OACL,CACL,GAAI,IAAE,GACJ,EAAU,WACD,IAAA,IAAuC,EAChD,EAAU,WACD,IAAE,IAAwB,CAAC,EACpC,MAEF,EAAU,IAAV,EACD,CACF,CACD,GAAM,GAAU,KAAK,MAAM,MAAM,EAAO,CAAxB,EAChB,EAAE,EAEF,GAAI,GAAO,GAEL,EAAU,IAEd,GAA+B,EAAU,EAAM,EAAI,CAArB,EAEhC,KAAO,EAAM,KAAK,QAAQ,CACxB,GAAM,GAAK,KAAK,eAAe,CAApB,EAEL,EAAO,OAAO,aAAa,CAApB,EAGb,GAAI,GAAkB,IAAI,CAAtB,EACF,AAAI,IAAE,IACJ,MAAK,aAAa,oBAAqB,EAAO,CAA9C,EAEI,EAAK,SAAS,GAAd,GACF,KAAK,MAAM,EAAO,0BAA2B,CAAE,GAAI,EAAO,EAA1D,GAEO,IAAE,KACP,EAAK,SAAS,GAAd,GACF,KAAK,MAAM,EAAO,0BAA2B,CAAE,GAAI,EAAO,EAA1D,EAGA,EAAK,SAAS,CAAd,GACF,KAAK,MAAM,EAAO,qBAAsB,CAAE,GAAI,EAAO,EAArD,UAEO,GAAiB,CAAD,GAAQ,IAAE,GACnC,KAAK,MAAM,EAAO,qBAAsB,CAAE,GAAI,EAAO,EAArD,MAEA,OAGF,EAAE,EACF,GAAQ,CACT,CACD,KAAK,MAAM,IAAM,EAEjB,KAAK,YAAuB,IAAA,CAC1B,QAAS,EACT,MAAO,EAFT,CAID,CAWD,QACE,EACA,EACA,EAAoB,GACpB,EAAsC,GACvB,CACf,GAAM,CAAE,EAAG,OAAQ,GACjB,KAAK,MACL,KAAK,MAAM,IACX,KAAK,MAAM,UACX,KAAK,MAAM,QACX,EACA,EACA,EACA,EACA,KAAK,qBATmB,EAW1B,YAAK,MAAM,IAAM,EACV,CACR,CAED,gBAAgB,EAAqB,CACnC,GAAM,GAAW,KAAK,MAAM,YAAX,EACb,EAAW,GAEf,KAAK,MAAM,KAAO,EAClB,GAAM,GAAM,KAAK,QAAQ,CAAb,EACZ,AAAI,GAAO,MACT,KAAK,MAAM,EAAO,aAAc,CAE9B,GAAI,GAA+B,EAAU,CAAX,EAClC,QAHF,EAMF,GAAM,GAAO,KAAK,MAAM,WAAW,KAAK,MAAM,GAAjC,EAEb,GAAI,IAAI,IACN,EAAE,KAAK,MAAM,IACb,EAAW,WACF,IAAI,IACb,KAAM,MAAK,MAAM,EAAO,eAAgB,CAAE,GAAI,CAAN,CAAlC,EAGR,GAAI,GAAkB,KAAK,eAAe,KAAK,MAAM,GAA/B,CAAD,EACnB,KAAM,MAAK,MAAM,EAAO,iBAAkB,CACxC,GAAI,KAAK,MAAM,YAAX,CADoC,CAApC,EAKR,GAAI,EAAU,CACZ,GAAM,GAAM,KAAK,MACd,MAAM,EAAS,MAAO,KAAK,MAAM,GADxB,EAET,QAAQ,QAAS,EAFR,EAGZ,KAAK,YAAL,IAA4B,CAA5B,EACA,MACD,CAED,KAAK,YAAL,IAAyB,CAAzB,CACD,CAID,WAAW,EAA8B,CACvC,GAAM,GAAQ,KAAK,MAAM,IACnB,EAAW,KAAK,MAAM,YAAX,EACb,EAAU,GACV,EAAW,GACX,EAAY,GACZ,EAAc,GACd,EAAU,GAEd,AAAI,CAAC,GAAiB,KAAK,QAAQ,EAAb,IAAqB,MACzC,KAAK,MAAM,EAAO,cAAe,CAAE,GAAI,KAAK,MAAM,YAAX,EAAvC,EAEF,GAAM,GACJ,KAAK,MAAM,IAAM,GAAS,GAC1B,KAAK,MAAM,WAAW,CAAtB,IAFF,GAIA,GAAI,EAAgB,CAClB,GAAM,GAAU,KAAK,MAAM,MAAM,EAAO,KAAK,MAAM,GAAnC,EAEhB,GADA,KAAK,uBAAuB,EAAO,mBAAoB,CAAE,GAAI,EAA7D,EACI,CAAC,KAAK,MAAM,OAAQ,CAEtB,GAAM,GAAgB,EAAQ,QAAQ,GAAhB,EACtB,AAAI,EAAgB,GAElB,KAAK,MAAM,EAAO,0BAA2B,CAC3C,GAAI,GAA+B,EAAU,CAAX,EADpC,CAIH,CACD,EAAU,GAAkB,CAAC,OAAO,KAAK,CAAZ,CAC9B,CAED,GAAI,GAAO,KAAK,MAAM,WAAW,KAAK,MAAM,GAAjC,EA2CX,GA1CI,IAAI,IAAsB,CAAC,GAC7B,GAAE,KAAK,MAAM,IACb,KAAK,QAAQ,EAAb,EACA,EAAU,GACV,EAAO,KAAK,MAAM,WAAW,KAAK,MAAM,GAAjC,GAIN,KAAA,IAAiC,IAAlC,MACA,CAAC,GAED,GAAO,KAAK,MAAM,WAAW,EAAE,KAAK,MAAM,GAAnC,EACH,KAAI,IAA2B,IAAI,KACrC,EAAE,KAAK,MAAM,IAEX,KAAK,QAAQ,EAAb,IAAqB,MACvB,KAAK,MAAM,EAAO,yBAA0B,CAAE,GAAI,EAAlD,EAEF,EAAU,GACV,EAAc,GACd,EAAO,KAAK,MAAM,WAAW,KAAK,MAAM,GAAjC,GAGL,IAAI,KAGF,KAAW,IACb,KAAK,MAAM,EAAO,qBAAsB,CAAE,GAAI,EAA9C,EAEF,EAAE,KAAK,MAAM,IACb,EAAW,IAGT,IAAI,KACN,MAAK,aAAa,UAAW,KAAK,MAAM,YAAX,CAA7B,EACI,IAAe,IACjB,KAAK,MAAM,EAAO,eAAgB,CAAE,GAAI,EAAxC,EAEF,EAAE,KAAK,MAAM,IACb,EAAY,IAGV,GAAkB,KAAK,eAAe,KAAK,MAAM,GAA/B,CAAD,EACnB,KAAM,MAAK,MAAM,EAAO,iBAAkB,CACxC,GAAI,KAAK,MAAM,YAAX,CADoC,CAApC,EAMR,GAAM,GAAM,KAAK,MAAM,MAAM,EAAO,KAAK,MAAM,GAAnC,EAAwC,QAAQ,SAAU,EAA1D,EAEZ,GAAI,EAAU,CACZ,KAAK,YAAL,IAA4B,CAA5B,EACA,MACD,CAED,GAAI,EAAW,CACb,KAAK,YAAL,IAA6B,CAA7B,EACA,MACD,CAED,GAAM,GAAM,EAAU,SAAS,EAAK,CAAN,EAAW,WAAW,CAAD,EACnD,KAAK,YAAL,IAAyB,CAAzB,CACD,CAID,cAAc,EAAwC,CACpD,GAAM,CAAE,OAAM,OAAQ,GACpB,KAAK,MACL,KAAK,MAAM,IACX,KAAK,MAAM,UACX,KAAK,MAAM,QACX,EACA,KAAK,2BAN4B,EAQnC,YAAK,MAAM,IAAM,EACV,CACR,CAED,WAAW,EAAqB,CAC9B,GAAM,CAAE,MAAK,MAAK,UAAS,aAAc,GACvC,IAAK,GAA+B,SAAW,SAC/C,KAAK,MACL,KAAK,MAAM,IAAM,EACjB,KAAK,MAAM,UACX,KAAK,MAAM,QACX,KAAK,uCANoD,EAQ3D,KAAK,MAAM,IAAM,EAAM,EACvB,KAAK,MAAM,UAAY,EACvB,KAAK,MAAM,QAAU,EACrB,KAAK,YAAL,IAA4B,CAA5B,CACD,CAGD,0BAAiC,CAC/B,AAAK,KAAK,MAAL,CAAA,GACH,KAAK,WAAW,KAAhB,CAAA,EAGF,KAAK,MAAM,MACX,KAAK,kBAAL,CACD,CAGD,mBAA0B,CACxB,GAAM,GAAU,KAAK,MAAM,KAAK,MAAM,KAChC,CAAE,MAAK,kBAAiB,MAAK,UAAS,aAC1C,GACE,WACA,KAAK,MACL,KAAK,MAAM,IAAM,EACjB,KAAK,MAAM,UACX,KAAK,MAAM,QACX,KAAK,yCANW,EAQpB,KAAK,MAAM,IAAM,EAAM,EACvB,KAAK,MAAM,UAAY,EACvB,KAAK,MAAM,QAAU,EAErB,AAAI,KAAK,MAAM,YAAY,CAAvB,IAAA,GACF,KAAK,YAEH,GAAA,EAAkB,KAAO,EAAU,EAAM,GAF3C,EAKA,MAAK,MAAM,MACX,KAAK,YAEH,GAAA,EAAkB,KAAO,EAAU,EAAM,IAF3C,EAKH,CAED,uBACE,EACA,CAAE,MACF,CACA,GAAM,GAAQ,EAAG,MAEjB,AAAI,KAAK,MAAM,QAAU,CAAC,KAAK,MAAM,aAAa,IAAI,CAA5B,EACxB,KAAK,MAAM,EAAc,CAAE,KAA3B,EAEA,KAAK,MAAM,aAAa,IAAI,EAAO,CAAC,EAAc,CAAf,CAAnC,CAEH,CAWD,UAAU,EAA4B,CACpC,KAAK,MAAM,YAAc,GACzB,GAAI,GAAO,GACL,EAAQ,KAAK,MAAM,IACrB,EAAa,KAAK,MAAM,IAK5B,IAJI,IAAc,QAChB,MAAK,MAAM,KAAO,GAAa,MAAS,EAAI,GAGvC,KAAK,MAAM,IAAM,KAAK,QAAQ,CACnC,GAAM,GAAK,KAAK,eAAe,KAAK,MAAM,GAA/B,EACX,GAAI,GAAiB,CAAD,EAClB,KAAK,MAAM,KAAO,GAAM,MAAS,EAAI,UAC5B,IAAE,GAA0B,CACrC,KAAK,MAAM,YAAc,GAEzB,GAAQ,KAAK,MAAM,MAAM,EAAY,KAAK,MAAM,GAAxC,EACR,GAAM,GAAW,KAAK,MAAM,YAAX,EACX,EACJ,KAAK,MAAM,MAAQ,EAAQ,GAAoB,GAEjD,GAAI,KAAK,MAAM,WAAW,EAAE,KAAK,MAAM,GAAnC,IAAA,IAAkE,CACpE,KAAK,MAAM,EAAO,qBAAsB,CACtC,GAAI,KAAK,MAAM,YAAX,EADN,EAGA,EAAa,KAAK,MAAM,IAAM,EAC9B,QACD,CAED,EAAE,KAAK,MAAM,IACb,GAAM,GAAM,KAAK,cAAc,EAAnB,EACZ,AAAI,IAAQ,MACL,GAAgB,CAAD,GAClB,KAAK,MAAM,EAAO,2BAA4B,CAAE,GAAI,EAApD,EAGF,GAAQ,OAAO,cAAc,CAArB,GAEV,EAAa,KAAK,MAAM,GACzB,KACC,MAEH,CACD,MAAO,GAAO,KAAK,MAAM,MAAM,EAAY,KAAK,MAAM,GAAxC,CACf,CAKD,SAAS,EAA0B,CACjC,GAAM,GAAO,KAAK,UAAU,CAAf,EACP,EAAO,GAAa,IAAI,CAAjB,EACb,AAAI,IAAS,OAGX,KAAK,YAAY,EAAM,GAAe,CAAD,CAArC,EAEA,KAAK,YAAL,IAA0B,CAA1B,CAEH,CAED,qBAA4B,CAC1B,GAAM,CAAE,QAAS,KAAK,MACtB,AAAI,GAAe,CAAD,GAAU,KAAK,MAAM,aACrC,KAAK,MAAM,EAAO,2BAA4B,CAC5C,GAAI,KAAK,MAAM,SACf,aAAc,GAAe,CAAD,EAF9B,CAKH,CAgBD,MACE,EACA,EAC0B,CAC1B,GAAM,CAAE,MAAmB,EAAZ,EAAf,GAA2B,EAA3B,EAAA,EACM,EAAM,YAAc,IAAW,EAAK,EAAG,IAAI,MAE3C,EAAQ,EAAa,CAAE,MAAK,SAAP,CAAD,EAE1B,GAAI,CAAC,KAAK,QAAQ,cAAe,KAAM,GACvC,MAAK,MAAK,aAAa,KAAK,MAAM,OAAO,KAAK,CAAvB,EAEhB,CACR,CAaD,eACE,EACA,EACkC,CAClC,GAAM,CAAE,MAAmB,EAAZ,EAAf,GAA2B,EAA3B,EAAA,EACM,EAAM,YAAc,IAAW,EAAK,EAAG,IAAI,MAC3C,EAAM,EAAI,MACV,EAAS,KAAK,MAAM,OAE1B,OAAS,GAAI,EAAO,OAAS,EAAG,GAAK,EAAG,IAAK,CAC3C,GAAM,GAAQ,EAAO,GACrB,GAAI,EAAM,IAAI,QAAU,EAEtB,MAAQ,GAAO,GAAK,EAAa,CAAE,MAAK,SAAP,CAAD,EAElC,GAAI,EAAM,IAAI,MAAQ,EAAK,KAC5B,CAED,MAAO,MAAK,MAAM,EAAc,CAAzB,CACR,CAID,cAAc,EAA2B,CAAA,CAGzC,WAAW,EAAuB,EAAwB,CACxD,KAAM,MAAK,MAAM,EAAO,gBAAiB,CACvC,SAAU,EAAO,GAAe,CAAD,EAAS,KACxC,GAAI,GAAO,KAAO,EAAM,KAAK,MAAM,QAFI,CAAnC,CAIP,CAED,aAAa,EAAoB,EAAsB,CACrD,GAAI,KAAK,UAAU,CAAf,EACF,MAAO,GAGT,KAAM,MAAK,MAAM,EAAO,cAAe,CACrC,GAAI,GAAO,KAAO,EAAM,KAAK,MAAM,SACnC,cAAe,CAAC,CAAD,CAFsB,CAAjC,CAIP,CAED,gBAAgB,EAA6B,CAC3C,GAAI,CAAC,EAAY,KAAK,GAAQ,KAAK,UAAU,CAAf,CAAzB,EACH,KAAM,MAAK,MAAM,EAAO,oBAAqB,CAC3C,GAAI,KAAK,MAAM,SACf,cAAe,CAF4B,CAAvC,CAKT,CAED,aAAa,EAAkC,CAC7C,MAAO,CAAC,EAAa,EAAmB,IAAoB,CAC1D,KAAK,MAAM,EAAO,CAChB,GAAI,GAAc,EAAK,EAAW,CAAjB,EADnB,EAIH,CA/6C4D,EC3ExD,QAAiB,CAAA,aAAA,CAAA,KAEtB,aAA4B,GAAI,KAFV,KAKtB,cAAgD,GAAI,KAL9B,KAStB,sBAA+C,GAAI,IAT7B,CAAA,EAYT,QAAwB,CAKrC,YAAY,EAAmB,CAAA,KAJ/B,OAI+B,OAAA,KAH/B,MAA2B,CAAA,EAGI,KAF/B,sBAA+C,GAAI,KAGjD,KAAK,OAAS,CACf,CAED,SAAsB,CACpB,MAAO,MAAK,MAAM,KAAK,MAAM,OAAS,EACvC,CAED,OAAQ,CACN,KAAK,MAAM,KAAK,GAAI,GAApB,CACD,CAED,MAAO,CACL,GAAM,GAAgB,KAAK,MAAM,IAAX,EAKhB,EAAU,KAAK,QAAL,EAGhB,OAAW,CAAC,EAAM,IAAQ,OAAM,KAAK,EAAc,qBAAzB,EACxB,AAAI,EACG,EAAQ,sBAAsB,IAAI,CAAlC,GACH,EAAQ,sBAAsB,IAAI,EAAM,CAAxC,EAGF,KAAK,OAAO,MAAM,EAAO,8BAA+B,CACtD,GAAI,EACJ,eAAgB,EAFlB,CAML,CAED,mBACE,EACA,EACA,EACA,CACA,GAAM,CAAE,eAAc,gBAAe,yBACnC,KAAK,QAAL,EACE,EAAY,EAAa,IAAI,CAAjB,EAEhB,GAAI,EAAc,GAA6B,CAC7C,GAAM,GAAW,GAAa,EAAc,IAAI,CAAlB,EAC9B,GAAI,EAAU,CACZ,GAAM,GAAY,EAAW,GACvB,EAAY,EAAc,GAE1B,EAAU,EAAW,GACrB,EAAU,EAAc,GAK9B,EAAY,IAAY,GAAW,IAAc,EAE5C,GAAW,EAAc,OAAO,CAArB,CACjB,KAAM,AAAK,IACV,EAAc,IAAI,EAAM,CAAxB,CAEH,CAED,AAAI,GACF,KAAK,OAAO,MAAM,EAAO,yBAA0B,CACjD,GAAI,EACJ,eAAgB,EAFlB,EAMF,EAAa,IAAI,CAAjB,EACA,EAAsB,OAAO,CAA7B,CACD,CAED,eAAe,EAAc,EAAe,CAC1C,GAAI,GACJ,IAAK,IAAc,MAAK,MACtB,GAAI,EAAW,aAAa,IAAI,CAA5B,EAAmC,OAGzC,AAAI,EACF,EAAW,sBAAsB,IAAI,EAAM,CAA3C,EAGA,KAAK,OAAO,MAAM,EAAO,8BAA+B,CACtD,GAAI,EACJ,eAAgB,EAFlB,CAKH,CA/FoC,EC4BjC,GAAc,EAClB,GAAkC,EAClC,GAAuC,EACvC,GAAwB,EAI1B,QAAsB,CAGpB,YAAY,EAA4B,GAAa,CAAA,KAFrD,KAEqD,OACnD,KAAK,KAAO,CACb,CAED,gCAAgE,CAC9D,MACE,MAAK,OAAS,IACd,KAAK,OAAS,EAEjB,CAED,iCAAkC,CAChC,MAAO,MAAK,OAAS,EACtB,CAhBmB,EA2BtB,gBAAoC,GAAgB,CAGlD,YAAY,EAAa,CACvB,MAAM,CAAN,EADuB,KAFzB,kBACE,GAAI,IAGL,CACD,uBACE,EACA,CACE,MAIF,CACA,GAAM,GAAQ,EAAG,MAEjB,KAAK,kBAAkB,IAAI,EAAO,CAAC,EAAmB,CAApB,CAAlC,CACD,CACD,sBAAsB,EAAe,CACnC,KAAK,kBAAkB,OAAO,CAA9B,CACD,CACD,cACE,EACA,CACA,KAAK,kBAAkB,QAAQ,CAA/B,CACD,CAzBiD,EA4BrC,QAA6B,CAI1C,YAAY,EAAmB,CAAA,KAH/B,OAG+B,OAAA,KAF/B,MAAgC,CAAC,GAAI,GAAL,EAG9B,KAAK,OAAS,CACf,CACD,MAAM,EAAwB,CAC5B,KAAK,MAAM,KAAK,CAAhB,CACD,CAED,MAAO,CACL,KAAK,MAAM,IAAX,CACD,CAYD,gCACE,EACA,CACE,GAAI,GAIA,CACN,GAAM,GAAS,CAAE,GAAI,EAAK,IAAI,OACxB,CAAE,SAAU,KACd,EAAI,EAAM,OAAS,EACnB,EAAyB,EAAM,GACnC,KAAO,CAAC,EAAM,gCAAN,GAAyC,CAC/C,GAAI,EAAM,+BAAN,EACF,EAAM,uBAAuB,EAAc,CAA3C,MAIA,QAEF,EAAQ,EAAM,EAAE,EACjB,CACD,KAAK,OAAO,MAAM,EAAc,CAAhC,CACD,CAyBD,iCACE,EACA,CACE,GAAI,GAIA,CACN,GAAM,CAAE,SAAU,KACZ,EAAyB,EAAM,EAAM,OAAS,GAC9C,EAAS,CAAE,GAAI,EAAK,IAAI,OAC9B,GAAI,EAAM,gCAAN,EACF,KAAK,OAAO,MAAM,EAAO,CAAzB,UACS,EAAM,+BAAN,EACT,EAAM,uBAAuB,EAAO,CAApC,MAEA,OAEH,CAWD,gCAAgC,CAAE,MAA8B,CAC9D,GAAM,CAAE,SAAU,KACd,EAAI,EAAM,OAAS,EACnB,EAAyB,EAAM,GACnC,KAAO,EAAM,+BAAN,GACL,AAAI,EAAM,OAAS,IACjB,EAAM,uBAAuB,EAAO,uBAAwB,CAAE,KAA9D,EAEF,EAAQ,EAAM,EAAE,EAEnB,CAED,mBAA0B,CACxB,GAAM,CAAE,SAAU,KACZ,EAAe,EAAM,EAAM,OAAS,GAC1C,AAAI,CAAC,EAAa,+BAAb,GACL,EAAa,cAAc,CAAC,CAAC,EAAc,KAAS,CAClD,KAAK,OAAO,MAAM,EAAc,CAAE,GAAI,EAAtC,EAEA,GAAI,GAAI,EAAM,OAAS,EACnB,EAAQ,EAAM,GAClB,KAAO,EAAM,+BAAN,GACL,EAAM,sBAAsB,EAAI,KAAhC,EACA,EAAQ,EAAM,EAAE,GAPpB,CAUD,CAhIyC,EAmIrC,aAAwC,CAC7C,MAAO,IAAI,IAAgB,EAApB,CACR,CAEM,aAA6B,CAClC,MAAO,IAAI,IAAsB,EAA1B,CACR,CAEM,aAA8B,CACnC,MAAO,IAAI,IAAsB,EAA1B,CACR,CAEM,aAA8B,CACnC,MAAO,IAAI,GACZ,CChQM,GACL,IAAQ,EAER,GAAc,EAEd,GAAc,EAEd,GAAe,EACf,GAAW,EAkCE,QAAiC,CAAA,aAAA,CAAA,KAC9C,OAAwB,CAAA,CADsB,CAE9C,MAAM,EAAe,CACnB,KAAK,OAAO,KAAK,CAAjB,CACD,CAED,MAAO,CACL,KAAK,OAAO,IAAZ,CACD,CAED,cAAuB,CACrB,MAAO,MAAK,OAAO,KAAK,OAAO,OAAS,EACzC,IAEG,WAAoB,CACtB,MAAQ,MAAK,aAAL,EAAsB,IAAe,CAC9C,IAEG,WAAoB,CACtB,MAAQ,MAAK,aAAL,EAAsB,IAAe,CAC9C,IAEG,YAAqB,CACvB,MAAQ,MAAK,aAAL,EAAsB,IAAgB,CAC/C,IAEG,QAAiB,CACnB,MAAQ,MAAK,aAAL,EAAsB,IAAY,CAC3C,CA5B6C,EA+BzC,YACL,EACA,EACW,CACX,MAAS,GAAU,GAAc,GAC9B,GAAc,GAAc,EAChC,CC1Cc,oBAAkC,GAAU,CAMzD,SACE,EACA,EACA,EACA,EAAsB,GAChB,CACN,GAAI,CAAC,EAAM,OAEX,GAAM,GAAS,EAAK,MAAQ,EAAK,OAAS,CAAA,EAC1C,AAAI,EACF,EAAM,GAAO,EAEb,OAAO,eAAe,EAAO,EAAK,CAAE,aAAY,QAAhD,CAEH,CAID,aAAa,EAA2B,CACtC,MAAO,MAAK,MAAM,OAAS,GAAS,CAAC,KAAK,MAAM,WACjD,CAED,qBAAqB,EAAmB,EAAuB,CAC7D,GAAM,GAAU,EAAY,EAAK,OACjC,GAAI,KAAK,MAAM,MAAM,EAAW,CAA5B,IAAyC,EAAM,CACjD,GAAM,GAAS,KAAK,MAAM,WAAW,CAAtB,EACf,MAAO,CACL,IAAiB,CAAD,GAIf,GAAS,SAAY,MAEzB,CACD,MAAO,EACR,CAED,sBAAsB,EAAuB,CAC3C,GAAM,GAAO,KAAK,eAAL,EACb,MAAO,MAAK,qBAAqB,EAAM,CAAhC,CACR,CAID,cAAc,EAA2B,CACvC,MAAI,MAAK,aAAa,CAAlB,EACF,MAAK,KAAL,EACO,IAEF,EACR,CAID,iBACE,EACA,EACM,CACN,GAAI,CAAC,KAAK,cAAc,CAAnB,EACH,KAAI,IAAgB,KACZ,KAAK,MAAM,EAAc,CAAE,GAAI,KAAK,MAAM,QAAjB,CAAzB,EAEF,KAAK,WAAW,KAAM,CAAtB,CAET,CAID,oBAA8B,CAC5B,MACE,MAAK,MACL,GAAA,GAAA,KAAK,MADL,CAAA,GAEA,KAAK,sBAAL,CAEH,CAED,uBAAiC,CAC/B,MAAO,IAAU,KACf,KAAK,MAAM,MAAM,KAAK,MAAM,cAAc,MAAO,KAAK,MAAM,KAA5D,CADK,CAGR,CAED,uBAAiC,CAC/B,UAA0B,UAAY,KAAK,MAAM,IAC1C,GAA0B,KAAK,KAAK,KAApC,CACR,CAID,kBAA4B,CAC1B,MAAO,MAAK,IAAgB,EAAA,GAAA,KAAK,mBAAL,CAC7B,CAKD,UAAU,EAAoB,GAAY,CACxC,AAAI,GAAW,KAAK,iBAAL,EAA0B,KAAK,IAAL,EAAA,IACzC,KAAK,MAAM,EAAO,iBAAkB,CAAE,GAAI,KAAK,MAAM,cAArD,CACD,CAKD,OAAO,EAAiB,EAA6B,CACnD,KAAK,IAAI,CAAT,GAAkB,KAAK,WAAW,EAAK,CAArB,CACnB,CAID,SACE,EACA,EAAkB,KAAK,MAAM,MAAX,EAI6B,CAC/C,GAAM,GAEF,CAAE,KAAM,MACZ,GAAI,CACF,GAAM,GAAO,EAAG,CAAC,EAAO,OAAS,CAC/B,QAAY,KAAO,EACb,CACP,CAHc,EAIf,GAAI,KAAK,MAAM,OAAO,OAAS,EAAS,OAAO,OAAQ,CACrD,GAAM,GAAY,KAAK,MACvB,YAAK,MAAQ,EAIb,KAAK,MAAM,aAAe,EAAU,aAC7B,CACL,OACA,MAAO,EAAU,OAAO,EAAS,OAAO,QACxC,OAAQ,GACR,QAAS,GACT,YAEH,CAED,MAAO,CACL,OACA,MAAO,KACP,OAAQ,GACR,QAAS,GACT,UAAW,YAEN,EAAP,CACA,GAAM,GAAY,KAAK,MAEvB,GADA,KAAK,MAAQ,EACT,YAAiB,aAEnB,MAAO,CAAE,KAAM,KAAM,QAAO,OAAQ,GAAM,QAAS,GAAO,aAE5D,GAAI,IAAU,EACZ,MAAO,CACL,KAAM,EAAY,KAClB,MAAO,KACP,OAAQ,GACR,QAAS,GACT,aAIJ,KAAM,EACP,CACF,CAED,sBACE,EACA,EACA,CACA,GAAI,CAAC,EAAqB,MAAO,GACjC,GAAM,CACJ,qBACA,iBACA,gBACA,yBACE,EAEE,EACJ,CAAC,CAAC,GACF,CAAC,CAAC,GACF,CAAC,CAAC,GACF,CAAC,CAAC,EAEJ,GAAI,CAAC,EACH,MAAO,GAGT,AAAI,GAAsB,MACxB,KAAK,MAAM,EAAO,4BAA6B,CAC7C,GAAI,EADN,EAKE,GAAkB,MACpB,KAAK,MAAM,EAAO,eAAgB,CAAE,GAAI,EAAxC,EAGE,GAAiB,MACnB,KAAK,MAAM,EAAO,uBAAwB,CAAE,GAAI,EAAhD,EAGE,GAAyB,MAC3B,KAAK,WAAW,CAAhB,CAEH,CAWD,uBAAiC,CAC/B,MAAO,IAA2B,KAAK,MAAM,IAAZ,CAClC,CAMD,cAAc,EAAqB,CACjC,MAAO,GAAK,OAAS,aACtB,CAOD,iBAAiB,EAAoB,CACnC,MAAO,GAAK,GAAG,IAChB,CAOD,yBAAyB,EAAqB,CAC5C,MACG,GAAK,OAAS,oBACb,EAAK,OAAS,6BAChB,KAAK,cAAc,EAAK,QAAxB,CAEH,CAED,gBAAgB,EAAqB,CACnC,MACE,GAAK,OAAS,4BACd,EAAK,OAAS,wBAEjB,CAED,iBACE,EACmD,CACnD,MAAO,GAAK,OAAS,gBACtB,CAED,eAAe,EAAqB,CAClC,MAAO,GAAK,OAAS,cACtB,CAED,iBAEE,EAAoB,KAAK,QAAQ,aAAe,SACpC,CAEZ,GAAM,GAAY,KAAK,MAAM,OAC7B,KAAK,MAAM,OAAS,CAAA,EAEpB,GAAM,GAAyB,KAAK,oBACpC,KAAK,oBAAsB,GAAI,KAG/B,GAAM,GAAc,KAAK,SACzB,KAAK,SAAW,EAEhB,GAAM,GAAW,KAAK,MAChB,EAAe,KAAK,gBAAL,EACrB,KAAK,MAAQ,GAAI,GAAa,KAAM,CAAvB,EAEb,GAAM,GAAe,KAAK,UAC1B,KAAK,UAAY,GAAI,IAErB,GAAM,GAAgB,KAAK,WAC3B,KAAK,WAAa,GAAI,IAAkB,IAAtB,EAElB,GAAM,GAAqB,KAAK,gBAChC,YAAK,gBAAkB,GAAI,IAAuB,IAA3B,EAEhB,IAAM,CAEX,KAAK,MAAM,OAAS,EACpB,KAAK,oBAAsB,EAG3B,KAAK,SAAW,EAChB,KAAK,MAAQ,EACb,KAAK,UAAY,EACjB,KAAK,WAAa,EAClB,KAAK,gBAAkB,EAE1B,CAED,oBAAqB,CACnB,GAAI,GAAa,GACjB,AAAI,KAAK,UACP,IAAc,IAEhB,KAAK,MAAM,MAAM,EAAjB,EACA,KAAK,UAAU,MAAM,CAArB,CACD,CAED,0BAA0B,EAAuC,CAC/D,GAAM,CAAE,iBAAkB,EAC1B,AAAI,IAAkB,MACpB,KAAK,aAAa,uBAAwB,CAA1C,CAEH,CA5UwD,EA4VpD,QAAuB,CAAA,aAAA,CAAA,KAC5B,mBAAkD,KADtB,KAE5B,eAA8C,KAFlB,KAG5B,cAA6C,KAHjB,KAI5B,sBAAqD,IAJzB,CAAA,EC1X9B,QAA+B,CAC7B,YAAY,EAAgB,EAAa,EAAe,CAAA,KAQxD,KAAe,GAPb,KAAK,MAAQ,EACb,KAAK,IAAM,EACX,KAAK,IAAM,GAAI,IAAe,CAAnB,EACP,GAAJ,MAAI,EAAQ,QAAQ,QAAQ,MAAK,MAAQ,CAAC,EAAK,CAAN,GACrC,GAAJ,MAAI,EAAQ,UAAU,MAAK,IAAI,SAAW,EAAO,SAClD,CAP4B,EAqBzB,GAAgB,GAAK,UAIzB,GAAc,QAAU,UAAkB,CACxC,GAAM,GAAU,GAAI,IAAK,OAAW,KAAK,MAAO,KAAK,IAAI,KAAzC,EACV,EAAO,OAAO,KAAK,IAAZ,EACb,OAAS,GAAI,EAAG,EAAS,EAAK,OAAQ,EAAI,EAAQ,IAAK,CACrD,GAAM,GAAM,EAAK,GAEjB,AACE,IAAQ,mBACR,IAAQ,oBACR,IAAQ,iBAGR,GAAQ,GAAO,KAAK,GAEvB,CAED,MAAO,IAIX,YAA0B,EAAgB,CACxC,MAAO,IAAgB,CAAD,CACvB,CAEM,YAAyB,EAAgB,CAI9C,GAAM,CAAE,OAAM,QAAO,MAAK,MAAK,QAAO,QAAO,QAAS,EAChD,EAAS,OAAO,OAAO,EAAd,EACf,SAAO,KAAO,EACd,EAAO,MAAQ,EACf,EAAO,IAAM,EACb,EAAO,IAAM,EACb,EAAO,MAAQ,EACf,EAAO,MAAQ,EACf,EAAO,KAAO,EACV,IAAS,eACX,GAAO,aAAe,EAAK,cAEtB,CACR,CAEM,YAA4B,EAAgB,CACjD,GAAM,CAAE,OAAM,QAAO,MAAK,MAAK,QAAO,SAAU,EAChD,GAAI,IAAS,cACX,MAAO,IAAiB,CAAD,EAEzB,GAAM,GAAS,OAAO,OAAO,EAAd,EACf,SAAO,KAAO,EACd,EAAO,MAAQ,EACf,EAAO,IAAM,EACb,EAAO,IAAM,EACb,EAAO,MAAQ,EACf,AAAI,EAAK,MAAQ,OAEf,EAAO,IAAM,EAAK,IAElB,EAAO,MAAQ,EAEjB,EAAO,MAAQ,EAAK,MACb,CACR,CAIM,oBAAiC,GAAW,CACjD,WAA2C,CAEzC,MAAO,IAAI,IAAK,KAAM,KAAK,MAAM,MAAO,KAAK,MAAM,QAA5C,CACR,CAED,YAAgC,EAAa,EAA0B,CAErE,MAAO,IAAI,IAAK,KAAM,EAAK,CAApB,CACR,CAGD,gBAAoC,EAAmC,CACrE,MAAO,MAAK,YAAY,EAAK,MAAO,EAAK,IAAI,KAAtC,CACR,CAID,WAA+B,EAAiB,EAAoB,CAClE,MAAO,MAAK,aAAa,EAAM,EAAM,KAAK,MAAM,aAAzC,CACR,CAID,aACE,EACA,EACA,EACG,CAQH,SAAK,KAAO,EAEZ,EAAK,IAAM,EAAO,MAClB,EAAK,IAAI,IAAM,EACX,KAAK,QAAQ,QAAQ,GAAK,MAAM,GAAK,EAAO,OAC5C,KAAK,QAAQ,eAAe,KAAK,eAAe,CAApB,EACzB,CACR,CAED,mBAAmB,EAAgB,EAAe,EAA0B,CAC1E,EAAK,MAAQ,EACb,EAAK,IAAI,MAAQ,EACb,KAAK,QAAQ,QAAQ,GAAK,MAAM,GAAK,EAC1C,CAED,iBACE,EACA,EAAmB,KAAK,MAAM,cACxB,CACN,EAAK,IAAM,EAAO,MAClB,EAAK,IAAI,IAAM,EACX,KAAK,QAAQ,QAAQ,GAAK,MAAM,GAAK,EAAO,MACjD,CAKD,2BAA2B,EAAgB,EAA8B,CACvE,KAAK,mBAAmB,EAAM,EAAa,MAAO,EAAa,IAAI,KAAnE,CACD,CAjEgD,ECjE7C,GAAgB,GAAI,KAAI,CAC5B,IACA,MACA,OACA,UACA,QACA,UACA,QACA,YACA,QACA,OACA,SACA,SACA,SACA,OACA,SACA,MAhB4B,CAAR,EAqBhB,GAAa,SAAqB,CACtC,0BACE,iFACF,2BACE,yKAGF,mBAAoB,CAAC,CAAE,kBACpB,kCAAiC,KACpC,oBACE,0DACF,6BACE,sEACF,8BACE,gDACF,gCAAiC,CAAC,CAChC,aACA,cAKC,6DAA4D,oBAA6B,0BAAmC,OAC/H,wBAAyB,CAAC,CACxB,aACA,cAKC,uDAAsD,8CAAuD,OAChH,6BAA8B,CAAC,CAAE,cAC9B,UAAS,yKACZ,wBAAyB,CAAC,CACxB,kBACA,cAKC,eAAc,6FAA2G,OAC5H,uCAAwC,CAAC,CACvC,cAIC,4GAA2G,OAa9G,wCAAyC,CAAC,CACxC,WACA,aACA,kBAMC,UAAS,kBAAyB,gCAA2C,qBAA8B,aAC9G,uCAAwC,CAAC,CACvC,WACA,gBAMC,oDAAmD,kBAA2B,OACjF,wCAAyC,CAAC,CACxC,WACA,gBAMC,qCAAoC,6EAAsF,OAC7H,sBAAuB,CAAC,CACtB,WACA,aACA,gBAMC,qFAAoF,yBAAkC,kBAA2B,OACpJ,+BAAgC,CAAC,CAC/B,WACA,gBAKC,sDAAqD,qBAA8B,OACtF,0CAA2C,CAAC,CAC1C,cAIC,2GAA0G,OAC7G,0BAA2B,2CAC3B,oCACE,yKACF,mBACE,8EACF,uBACE,2EACF,gBAAiB,gDACjB,oCACE,0FACF,wBACE,0GACF,oBACE,mEACF,kBAAmB,0DACnB,kBAAiB,OAAA,OAAA,CACf,QACE,kFAGE,CAAE,WAAY,wBAAd,CALW,EAQjB,0BAA2B,2CAC3B,eAAgB,0CAChB,4BACE,0DACF,6BACE,oGACF,0BAA2B,2CAC3B,qBACE,6DACF,mBAAoB,qDACpB,sBACE,oHACF,kBACE,uEACF,kCACE,uEACF,uBAAwB,CAAC,CAAE,kBACxB,4BAA2B,KAC9B,6BACE,yDACF,mCACE,wDACF,qBACE,mEACF,6BACE,mDACF,kCACE,oEACF,gDACE,oHACF,6BAA8B,CAAC,CAC7B,wBACA,gBAKC,oBAAmB,+BAAmD,eACzE,oCACE,oEACF,wBAAyB,4BA9Ka,CAArB,EAkLnB,YAAwB,EAA8B,CACpD,MACE,GAAY,OAAS,+BACpB,EAAY,OAAS,4BACnB,EAAC,EAAY,aACX,EAAY,YAAY,OAAS,aAChC,EAAY,YAAY,OAAS,uBAE1C,CAED,YAA2B,EAAuB,CAChD,MAAO,GAAK,aAAe,QAAU,EAAK,aAAe,QAC1D,CAED,YAA8B,EAA0B,CACtD,MAAO,IAA2B,CAAD,GAAU,IAA3C,EACD,CAED,GAAM,IAAoB,CACxB,MAAO,qBACP,IAAK,qBACL,KAAM,cACN,UAAW,kBAJa,EAQ1B,YACE,EACA,EACY,CACZ,GAAM,GAAa,CAAA,EACb,EAAa,CAAA,EACnB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAC/B,AAAC,GAAK,EAAK,GAAI,EAAG,CAAb,EAAqB,EAAQ,GAAO,KAAK,EAAK,EAAnD,EAEF,MAAO,CAAC,EAAO,CAAR,CACR,CAED,GAAM,IAAoB,yBAoC1B,GAAgB,GACd,aAA8B,EAA6B,CAAA,eAAA,EAAA,CAAA,MAAA,GAAA,CAAA,EAAA,KAIzD,WAA8C,MAJW,CAMzD,iBAEE,CACA,MAAO,GACR,CAED,kBAA4B,CAC1B,MAAO,MAAK,gBAAgB,OAAQ,KAA7B,GAAuC,KAAK,aAAe,MACnE,CAED,kBAA4B,CAC1B,MAAO,CAAC,CAAC,KAAK,gBAAgB,OAAQ,OAA7B,CACV,CAED,YAAY,EAAiB,EAAgB,CAC3C,MACE,KAAI,KACJ,IAAI,IACJ,IAAI,IAEA,KAAK,aAAe,QACtB,MAAK,WAAa,MAGf,MAAM,YAAY,EAAM,CAAxB,CACR,CAED,WAAW,EAA0B,CACnC,GAAI,KAAK,aAAe,OAAW,CAEjC,GAAM,GAAU,GAAkB,KAAK,EAAQ,KAA/B,EAChB,GAAK,EAEE,GAAI,EAAQ,KAAO,OACxB,KAAK,WAAa,eACT,EAAQ,KAAO,SACxB,KAAK,WAAa,aAElB,MAAM,IAAI,OAAM,wBAAV,CAET,CACD,MAAO,OAAM,WAAW,CAAjB,CACR,CAED,yBAAyB,EAA6B,CACpD,GAAM,GAAY,KAAK,MAAM,OAC7B,KAAK,MAAM,OAAS,GACpB,KAAK,OAAO,GAAZ,EAAA,EAEA,GAAM,GAAO,KAAK,cAAL,EACb,YAAK,MAAM,OAAS,EACb,CACR,CAED,oBAAsC,CACpC,GAAM,GAAO,KAAK,UAAL,EACP,EAAY,KAAK,MAAM,SAS7B,MARA,MAAK,KAAL,EACA,KAAK,iBAAL,GAAA,EAEI,KAAK,MAAM,aAAe,EAAU,MAAQ,GAC9C,KAAK,MAAM,GAAW,mCAAoC,CACxD,GAAI,EADN,EAIE,KAAK,IAAL,EAAA,EACF,GAAK,MAAQ,MAAM,gBAAN,EACb,KAAK,OAAL,EAAA,EACO,KAAK,WAAW,EAAM,mBAAtB,GAEA,KAAK,WAAW,EAAM,mBAAtB,CAEV,CAED,sCAGE,CACA,GAAM,GAAY,KAAK,MAAM,OAC7B,KAAK,MAAM,OAAS,GACpB,KAAK,OAAL,EAAA,EACA,GAAI,GAAO,KACP,EAAY,KAChB,MAAI,MAAK,MAAL,EAAA,EACF,MAAK,MAAM,OAAS,EACpB,EAAY,KAAK,mBAAL,GAEZ,GAAO,KAAK,cAAL,EACP,KAAK,MAAM,OAAS,EAChB,KAAK,MAAL,EAAA,GACF,GAAY,KAAK,mBAAL,IAGT,CAAC,EAAM,CAAP,CACR,CAED,sBACE,EACoB,CACpB,YAAK,KAAL,EACA,KAAK,sBAAsB,EAAkB,EAA7C,EACO,KAAK,WAAW,EAAM,cAAtB,CACR,CAED,yBACE,EACuB,CACvB,KAAK,KAAL,EAEA,GAAM,GAAM,EAAK,GAAK,KAAK,gBAAL,EAEhB,EAAW,KAAK,UAAL,EACX,EAAgB,KAAK,UAAL,EAEtB,AAAI,KAAK,MAAL,EAAA,EACF,EAAS,eAAiB,KAAK,kCAAL,EAE1B,EAAS,eAAiB,KAG5B,KAAK,OAAL,EAAA,EACA,GAAM,GAAM,KAAK,4BAAL,EACZ,SAAS,OAAS,EAAI,OACtB,EAAS,KAAO,EAAI,KACpB,EAAS,KAAO,EAAI,MACpB,KAAK,OAAL,EAAA,EAEA,CAAC,EAAS,WAAY,EAAK,SAA3B,EACE,KAAK,qCAAL,EAEF,EAAc,eAAiB,KAAK,WAClC,EACA,wBAF6B,EAK/B,EAAG,eAAiB,KAAK,WAAW,EAAe,gBAA/B,EAEpB,KAAK,iBAAiB,CAAtB,EACA,KAAK,UAAL,EAEA,KAAK,MAAM,YACT,EAAK,GAAG,KACR,GACA,EAAK,GAAG,IAAI,KAHd,EAMO,KAAK,WAAW,EAAM,iBAAtB,CACR,CAED,iBACE,EACA,EACe,CACf,GAAI,KAAK,MAAL,EAAA,EACF,MAAO,MAAK,sBAAsB,CAA3B,EACF,GAAI,KAAK,MAAL,EAAA,EACT,MAAO,MAAK,yBAAyB,CAA9B,EACF,GAAI,KAAK,MAAL,EAAA,EACT,MAAO,MAAK,yBAAyB,CAA9B,EACF,GAAI,KAAK,cAAL,GAAA,EACT,MAAI,MAAK,MAAL,EAAA,EACK,KAAK,8BAA8B,CAAnC,EAEH,IACF,KAAK,MAAM,GAAW,oBAAqB,CACzC,GAAI,KAAK,MAAM,gBADjB,EAIK,KAAK,uBAAuB,CAA5B,GAEJ,GAAI,KAAK,aAAL,GAAA,EACT,MAAO,MAAK,0BAA0B,CAA/B,EACF,GAAI,KAAK,aAAL,GAAA,EACT,MAAO,MAAK,2BAA2B,CAAhC,EACF,GAAI,KAAK,aAAL,GAAA,EACT,MAAO,MAAK,0BAA0B,CAA/B,EACF,GAAI,KAAK,MAAL,EAAA,EACT,MAAO,MAAK,kCAAkC,EAAM,CAA7C,EAEP,KAAM,MAAK,WAAL,CAET,CAED,yBACE,EACuB,CACvB,YAAK,KAAL,EACA,EAAK,GAAK,KAAK,mCACc,EADnB,EAGV,KAAK,MAAM,YAAY,EAAK,GAAG,KAAM,GAAU,EAAK,GAAG,IAAI,KAA3D,EACA,KAAK,UAAL,EACO,KAAK,WAAW,EAAM,iBAAtB,CACR,CAED,uBACE,EACqB,CACrB,KAAK,MAAM,MAAM,EAAjB,EAEA,AAAI,KAAK,MAAL,GAAA,EACF,EAAK,GAAK,MAAM,cAAN,EAEV,EAAK,GAAK,KAAK,gBAAL,EAGZ,GAAM,GAAY,EAAK,KAAO,KAAK,UAAL,EAExB,EAAQ,EAAS,KAAO,CAAA,EAE9B,IADA,KAAK,OAAL,CAAA,EACO,CAAC,KAAK,MAAL,CAAA,GAAuB,CAC7B,GAAI,GAAW,KAAK,UAAL,EAEf,AAAI,KAAK,MAAL,EAAA,EACF,MAAK,KAAL,EACI,CAAC,KAAK,aAAL,GAAA,GAA+B,CAAC,KAAK,MAAL,EAAA,GACnC,KAAK,MAAM,GAAW,oCAAqC,CACzD,GAAI,KAAK,MAAM,gBADjB,EAIF,MAAM,YAAY,CAAlB,GAEA,MAAK,iBAAL,IAEE,GAAW,mCAFb,EAKA,EAAW,KAAK,iBAAiB,EAAU,EAAhC,GAGb,EAAK,KAAK,CAAV,CACD,CAED,KAAK,MAAM,KAAX,EAEA,KAAK,OAAL,CAAA,EAEA,KAAK,WAAW,EAAU,gBAA1B,EAEA,GAAI,GAAiC,KACjC,EAAkB,GACtB,SAAK,QAAQ,GAAe,CAC1B,AAAI,GAAe,CAAD,EACZ,KAAS,YACX,KAAK,MAAM,GAAW,2BAA4B,CAChD,GAAI,EADN,EAIF,EAAO,MACE,EAAY,OAAS,wBAC1B,IACF,KAAK,MAAM,GAAW,8BAA+B,CACnD,GAAI,EADN,EAIE,IAAS,MACX,KAAK,MAAM,GAAW,2BAA4B,CAChD,GAAI,EADN,EAIF,EAAO,WACP,EAAkB,IApBtB,EAwBA,EAAK,KAAO,GAAQ,WACb,KAAK,WAAW,EAAM,eAAtB,CACR,CAED,kCACE,EACA,EACgC,CAGhC,GAFA,KAAK,OAAL,EAAA,EAEI,KAAK,IAAL,EAAA,EACF,MAAI,MAAK,MAAL,EAAA,GAA4B,KAAK,MAAL,EAAA,EAG9B,EAAK,YAAc,KAAK,iBAAiB,KAAK,UAAL,CAAtB,EAGnB,GAAK,YAAc,KAAK,cAAL,EACnB,KAAK,UAAL,GAEF,EAAK,QAAU,GAER,KAAK,WAAW,EAAM,0BAAtB,EAEP,GACE,KAAK,MAAL,EAAA,GACA,KAAK,MAAL,GACE,MAAK,aAAL,GAAA,GAA+B,KAAK,aAAL,GAAA,IAC/B,CAAC,EACH,CACA,GAAM,GAAQ,KAAK,MAAM,MAKzB,KAAM,MAAK,MAAM,GAAW,6BAA8B,CACxD,GAAI,KAAK,MAAM,SACf,sBAAuB,EACvB,WAAY,GAAkB,EAH0B,CAApD,CAKP,CAED,GACE,KAAK,MACL,EAAA,GAAA,KAAK,MADL,EAAA,GAEA,KAAK,MAFL,EAAA,GAGA,KAAK,aAAL,GAAA,EAEA,SAAK,YAAc,KAAK,iBAAiB,KAAK,UAAL,CAAtB,EACnB,EAAK,QAAU,GAER,KAAK,WAAW,EAAM,0BAAtB,EACF,GACL,KAAK,MAAL,EAAA,GACA,KAAK,MAAL,CAAA,GACA,KAAK,aAFL,GAAA,GAGA,KAAK,aAAL,GAAA,GACA,KAAK,aAAL,GAAA,EAEA,SAAO,KAAK,YACV,CADK,EAGH,EAAK,OAAS,0BAChB,GAAK,KAAO,oBACZ,EAAK,QAAU,GACf,MAAO,GAAK,YAGd,EAAK,KAAO,UAAY,EAAK,KAEtB,EAIX,KAAM,MAAK,WAAL,CACP,CAED,8BACE,EAC4B,CAC5B,YAAK,KAAL,EACA,KAAK,iBAAL,GAAA,EACA,EAAK,eAAiB,KAAK,wBAAL,EACtB,KAAK,UAAL,EAEO,KAAK,WAAW,EAAM,sBAAtB,CACR,CAED,0BACE,EACwB,CACxB,KAAK,KAAL,EACA,GAAM,GAAW,KAAK,mBAAmB,CAAxB,EAEjB,SAAS,KAAO,mBACT,CACR,CAED,2BACE,EACyB,CACzB,KAAK,KAAL,EACA,GAAM,GAAW,KAAK,oBAAoB,EAAM,EAA/B,EAEjB,SAAS,KAAO,oBACT,CACR,CAED,0BACE,EACwB,CACxB,YAAK,KAAL,EACA,KAAK,sBAAsB,CAA3B,EACO,KAAK,WAAW,EAAM,kBAAtB,CACR,CAID,sBACE,EACA,EAAmB,GACb,CAsBN,GArBA,EAAK,GAAK,KAAK,8BACC,CAAC,EACG,EAFV,EAKV,KAAK,MAAM,YACT,EAAK,GAAG,KACR,EAAU,GAAgB,GAC1B,EAAK,GAAG,IAAI,KAHd,EAMA,AAAI,KAAK,MAAL,EAAA,EACF,EAAK,eAAiB,KAAK,kCAAL,EAEtB,EAAK,eAAiB,KAGxB,EAAK,QAAU,CAAA,EACf,EAAK,WAAa,CAAA,EAClB,EAAK,OAAS,CAAA,EAEV,KAAK,IAAL,EAAA,EACF,EACE,GAAK,QAAQ,KAAK,KAAK,0BAAL,CAAlB,QACO,CAAC,GAAW,KAAK,IAF1B,EAAA,GAKF,GAAI,KAAK,aAAL,GAAA,EAA+B,CACjC,KAAK,KAAL,EACA,EACE,GAAK,OAAO,KAAK,KAAK,0BAAL,CAAjB,QACO,KAAK,IAFd,EAAA,EAGD,CAED,GAAI,KAAK,aAAL,GAAA,EAAmC,CACrC,KAAK,KAAL,EACA,EACE,GAAK,WAAW,KAAK,KAAK,0BAAL,CAArB,QACO,KAAK,IAFd,EAAA,EAGD,CAED,EAAK,KAAO,KAAK,oBAAoB,CACnC,YAAa,EACb,WAAY,GACZ,YAAa,GACb,WAAY,EACZ,aAAc,EALqB,CAAzB,CAOb,CAED,2BAAoD,CAClD,GAAM,GAAO,KAAK,UAAL,EAEb,SAAK,GAAK,KAAK,iCAAL,EACV,AAAI,KAAK,MAAL,EAAA,EACF,EAAK,eAAiB,KAAK,oCAAL,EAEtB,EAAK,eAAiB,KAGjB,KAAK,WAAW,EAAM,kBAAtB,CACR,CAED,mBAAmB,EAAgD,CACjE,YAAK,sBAAsB,CAA3B,EACO,KAAK,WAAW,EAAM,sBAAtB,CACR,CAED,mBAAmB,EAAc,CAC/B,AAAI,IAAS,KACX,KAAK,MAAM,GAAW,6BAA8B,CAClD,GAAI,KAAK,MAAM,SADjB,CAIH,CAED,kBAAkB,EAAc,EAAoB,EAAuB,CACzE,AAAI,CAAC,GAAc,IAAI,CAAlB,GAEL,KAAK,MACH,EACI,GAAW,mBACX,GAAW,uBACf,CACE,GAAI,EACJ,aAAc,EANlB,CASD,CAED,8BACE,EACA,EACc,CACd,YAAK,kBACH,KAAK,MAAM,MACX,KAAK,MAAM,SACX,CAHF,EAKO,KAAK,gBAAgB,CAArB,CACR,CAID,mBAAmB,EAAgD,CACjE,SAAK,GAAK,KAAK,8BACC,GACI,EAFV,EAIV,KAAK,MAAM,YAAY,EAAK,GAAG,KAAM,GAAc,EAAK,GAAG,IAAI,KAA/D,EAEA,AAAI,KAAK,MAAL,EAAA,EACF,EAAK,eAAiB,KAAK,kCAAL,EAEtB,EAAK,eAAiB,KAGxB,EAAK,MAAQ,KAAK,yBAAlB,EAAA,EACA,KAAK,UAAL,EAEO,KAAK,WAAW,EAAM,WAAtB,CACR,CAED,oBACE,EACA,EACkB,CAClB,YAAK,iBAAL,GAAA,EACA,EAAK,GAAK,KAAK,8BACC,GACI,EAFV,EAIV,KAAK,MAAM,YAAY,EAAK,GAAG,KAAM,GAAc,EAAK,GAAG,IAAI,KAA/D,EAEA,AAAI,KAAK,MAAL,EAAA,EACF,EAAK,eAAiB,KAAK,kCAAL,EAEtB,EAAK,eAAiB,KAIxB,EAAK,UAAY,KACb,KAAK,MAAL,EAAA,GACF,GAAK,UAAY,KAAK,yBAAtB,EAAA,GAGF,EAAK,SAAW,KACX,GACH,GAAK,SAAW,KAAK,yBAArB,EAAA,GAEF,KAAK,UAAL,EAEO,KAAK,WAAW,EAAM,YAAtB,CACR,CAID,uBAAuB,EAA0B,GAAwB,CACvE,GAAM,GAAe,KAAK,MAAM,SAE1B,EAAO,KAAK,UAAL,EAEP,EAAW,KAAK,kBAAL,EAEX,EAAQ,KAAK,mCAAL,EACd,SAAK,KAAO,EAAM,KAElB,EAAK,SAAW,EAEhB,EAAK,MAAQ,EAAM,eAEnB,AAAI,KAAK,MAAL,EAAA,EACF,MAAK,IAAL,EAAA,EAEA,EAAK,QAAU,KAAK,cAAL,GAEX,GACF,KAAK,MAAM,GAAW,wBAAyB,CAAE,GAAI,EAArD,EAIG,KAAK,WAAW,EAAM,eAAtB,CACR,CAED,mCAAgE,CAC9D,GAAM,GAAY,KAAK,MAAM,OACvB,EAAO,KAAK,UAAL,EACb,EAAK,OAAS,CAAA,EAEd,KAAK,MAAM,OAAS,GAGpB,AAAI,KAAK,MAAL,EAAA,GAAqB,KAAK,MAAL,GAAA,EACvB,KAAK,KAAL,EAEA,KAAK,WAAL,EAGF,GAAI,GAAkB,GAEtB,EAAG,CACD,GAAM,GAAgB,KAAK,uBAAuB,CAA5B,EAEtB,EAAK,OAAO,KAAK,CAAjB,EAEI,EAAc,SAChB,GAAkB,IAGf,KAAK,MAAL,EAAA,GACH,KAAK,OAAL,EAAA,CAEH,OAAQ,CAAC,KAAK,MAZf,EAAA,GAaA,YAAK,OAAL,EAAA,EAEA,KAAK,MAAM,OAAS,EAEb,KAAK,WAAW,EAAM,0BAAtB,CACR,CAED,qCAAoE,CAClE,GAAM,GAAO,KAAK,UAAL,EACP,EAAY,KAAK,MAAM,OAC7B,EAAK,OAAS,CAAA,EAEd,KAAK,MAAM,OAAS,GAEpB,KAAK,OAAL,EAAA,EACA,GAAM,GAAwB,KAAK,MAAM,mBAEzC,IADA,KAAK,MAAM,mBAAqB,GACzB,CAAC,KAAK,MAAL,EAAA,GACN,EAAK,OAAO,KAAK,KAAK,cAAL,CAAjB,EACK,KAAK,MAAL,EAAA,GACH,KAAK,OAAL,EAAA,EAGJ,YAAK,MAAM,mBAAqB,EAChC,KAAK,OAAL,EAAA,EAEA,KAAK,MAAM,OAAS,EAEb,KAAK,WAAW,EAAM,4BAAtB,CACR,CAED,8CAA6E,CAC3E,GAAM,GAAO,KAAK,UAAL,EACP,EAAY,KAAK,MAAM,OAM7B,IALA,EAAK,OAAS,CAAA,EAEd,KAAK,MAAM,OAAS,GAEpB,KAAK,OAAL,EAAA,EACO,CAAC,KAAK,MAAL,EAAA,GACN,EAAK,OAAO,KAAK,KAAK,qCAAL,CAAjB,EACK,KAAK,MAAL,EAAA,GACH,KAAK,OAAL,EAAA,EAGJ,YAAK,OAAL,EAAA,EAEA,KAAK,MAAM,OAAS,EAEb,KAAK,WAAW,EAAM,4BAAtB,CACR,CAED,wBAA8C,CAC5C,GAAM,GAAO,KAAK,UAAL,EAIb,GAHA,KAAK,iBAAL,GAAA,EAEA,EAAK,QAAU,CAAA,EACX,KAAK,IAAL,EAAA,EACF,EACE,GAAK,QAAQ,KAAK,KAAK,0BAAL,CAAlB,QACO,KAAK,IAFd,EAAA,GAKF,SAAK,KAAO,KAAK,oBAAoB,CACnC,YAAa,GACb,WAAY,GACZ,YAAa,GACb,WAAY,GACZ,aAAc,EALqB,CAAzB,EAQL,KAAK,WAAW,EAAM,yBAAtB,CACR,CAED,4BAA2C,CACzC,MAAO,MAAK,MAAiB,GAAA,GAAA,KAAK,MAA3B,GAAA,EACH,MAAM,cAAN,EACA,KAAK,gBAAgB,EAArB,CACL,CAED,2BACE,EACA,EACA,EACyB,CACzB,SAAK,OAAS,EAGd,AAAI,KAAK,UAAL,EAAiB,OAAjB,GACF,GAAK,GAAK,KAAK,2BAAL,EACV,EAAK,IAAM,KAAK,yBAAL,GAEX,GAAK,GAAK,KACV,EAAK,IAAM,KAAK,cAAL,GAEb,KAAK,OAAL,CAAA,EACA,EAAK,MAAQ,KAAK,yBAAL,EACb,EAAK,SAAW,EAET,KAAK,WAAW,EAAM,mBAAtB,CACR,CAED,gCACE,EACA,EAC8B,CAC9B,SAAK,OAAS,EAEd,EAAK,GAAK,KAAK,2BAAL,EACV,KAAK,OAAL,CAAA,EACA,KAAK,OAAL,CAAA,EACA,AAAI,KAAK,MAAL,EAAA,GAAqB,KAAK,MAAL,EAAA,EACvB,GAAK,OAAS,GACd,EAAK,SAAW,GAChB,EAAK,MAAQ,KAAK,6BAChB,KAAK,YAAY,EAAK,MAAO,EAAK,IAAI,KAAtC,CADW,GAIb,GAAK,OAAS,GACV,KAAK,IAAL,EAAA,GACF,GAAK,SAAW,IAElB,EAAK,MAAQ,KAAK,yBAAL,GAER,KAAK,WAAW,EAAM,wBAAtB,CACR,CAED,6BACE,EAC8B,CAmB9B,IAlBA,EAAK,OAAS,CAAA,EACd,EAAK,KAAO,KACZ,EAAK,eAAiB,KACtB,EAAK,KAAO,KAER,KAAK,MAAL,EAAA,GACF,GAAK,eAAiB,KAAK,kCAAL,GAGxB,KAAK,OAAL,EAAA,EACI,KAAK,MAAL,EAAA,GACF,GAAK,KAAO,KAAK,2BAAuC,EAA5C,EAEZ,EAAK,KAAK,KAAO,KACZ,KAAK,MAAL,EAAA,GACH,KAAK,OAAL,EAAA,GAGG,CAAC,KAAK,MAAL,EAAA,GAAyB,CAAC,KAAK,MAAL,EAAA,GAChC,EAAK,OAAO,KAAK,KAAK,2BAA2B,EAAhC,CAAjB,EACK,KAAK,MAAL,EAAA,GACH,KAAK,OAAL,EAAA,EAIJ,MAAI,MAAK,IAAL,EAAA,GACF,GAAK,KAAO,KAAK,2BAA2B,EAAhC,GAEd,KAAK,OAAL,EAAA,EACA,EAAK,WAAa,KAAK,yBAAL,EAEX,KAAK,WAAW,EAAM,wBAAtB,CACR,CAED,gCACE,EACA,EAC8B,CAC9B,GAAM,GAAY,KAAK,UAAL,EAClB,SAAK,OAAS,EACd,EAAK,MAAQ,KAAK,6BAA6B,CAAlC,EACN,KAAK,WAAW,EAAM,wBAAtB,CACR,CAED,oBAAoB,CAClB,cACA,aACA,cACA,aACA,gBAO6B,CAC7B,GAAM,GAAY,KAAK,MAAM,OAC7B,KAAK,MAAM,OAAS,GAEpB,GAAM,GAAY,KAAK,UAAL,EAElB,EAAU,eAAiB,CAAA,EAC3B,EAAU,WAAa,CAAA,EACvB,EAAU,SAAW,CAAA,EACrB,EAAU,cAAgB,CAAA,EAE1B,GAAI,GACA,EACA,EAAU,GAad,IAZA,AAAI,GAAc,KAAK,MAAL,CAAA,EAChB,MAAK,OAAL,CAAA,EACA,EAAA,EACA,EAAQ,IAER,MAAK,OAAL,CAAA,EACA,EAAA,EACA,EAAQ,IAGV,EAAU,MAAQ,EAEX,CAAC,KAAK,MAAM,CAAX,GAAsB,CAC5B,GAAI,GAAW,GACX,EAA6C,KAC7C,EAA+C,KAC7C,EAAO,KAAK,UAAL,EAEb,GAAI,GAAc,KAAK,aAAL,GAAA,EAA8B,CAC9C,GAAM,GAAY,KAAK,UAAL,EAElB,AAAI,EAAU,OAAV,IAA+B,EAAU,OAAV,IACjC,MAAK,KAAL,EACA,EAAgB,KAAK,MAAM,SAC3B,EAAc,GAEjB,CAED,GAAI,GAAe,KAAK,aAAL,GAAA,EAA+B,CAChD,GAAM,GAAY,KAAK,UAAL,EAGlB,AAAI,EAAU,OAAV,IAA+B,EAAU,OAAV,IACjC,MAAK,KAAL,EACA,EAAW,GAEd,CAED,GAAM,GAAW,KAAK,kBAAL,EAEjB,GAAI,KAAK,IAAL,CAAA,EACF,AAAI,GAAiB,MACnB,KAAK,WAAW,CAAhB,EAEF,AAAI,KAAK,IAAL,CAAA,EACE,IACF,KAAK,WAAW,EAAS,IAAI,KAA7B,EAEF,EAAU,cAAc,KACtB,KAAK,gCAAgC,EAAM,CAA3C,CADF,GAIA,EAAU,SAAS,KACjB,KAAK,2BAA2B,EAAM,EAAU,CAAhD,CADF,UAIO,KAAK,MAAL,EAAA,GAAyB,KAAK,MAAL,EAAA,EAClC,AAAI,GAAiB,MACnB,KAAK,WAAW,CAAhB,EAEE,GACF,KAAK,WAAW,EAAS,IAAI,KAA7B,EAEF,EAAU,eAAe,KACvB,KAAK,gCAAgC,EAAM,CAA3C,CADF,MAGK,CACL,GAAI,GAAO,OAEX,GAAI,KAAK,aAAL,EAAA,GAA8B,KAAK,aAAL,GAAA,EAA4B,CAC5D,GAAM,GAAY,KAAK,UAAL,EAClB,AAAI,GAA2B,EAAU,IAAX,GAC5B,GAAO,KAAK,MAAM,MAClB,KAAK,KAAL,EAEH,CAED,GAAM,GAAgB,KAAK,4BACzB,EACA,EACA,EACA,EACA,EACA,EACA,GAPoB,KAOpB,EAAgB,CAAC,CAPG,EAUtB,AAAI,IAAkB,KACpB,GAAU,GACV,EAAkB,KAAK,MAAM,iBAE7B,EAAU,WAAW,KAAK,CAA1B,CAEH,CAED,KAAK,wBAAL,EAGE,GACA,CAAC,KAAK,MADN,CAAA,GAEA,CAAC,KAAK,MAAL,CAAA,GAED,KAAK,MAAM,GAAW,kCAAmC,CACvD,GAAI,EADN,CAIH,CAED,KAAK,OAAO,CAAZ,EAOI,GACF,GAAU,QAAU,GAGtB,GAAM,GAAM,KAAK,WAAW,EAAW,sBAA3B,EAEZ,YAAK,MAAM,OAAS,EAEb,CACR,CAED,4BACE,EACA,EACA,EACA,EACA,EACA,EACA,EACkE,CAClE,GAAI,KAAK,IAAL,EAAA,EAOF,MALE,MAAK,MAAL,EAAA,GACA,KAAK,MADL,EAAA,GAEA,KAAK,MAAL,CAAA,GACA,KAAK,MAJP,CAAA,EAOE,CAAK,EAIO,GACV,KAAK,MAAM,GAAW,mBAAoB,CACxC,GAAI,KAAK,MAAM,gBADjB,EAJA,KAAK,MAAM,GAAW,uBAAwB,CAC5C,GAAI,KAAK,MAAM,gBADjB,EAQE,GACF,KAAK,MAAM,GAAW,gBAAiB,CAAE,GAAI,EAA7C,EAGK,MAGJ,IACH,KAAK,MAAM,GAAW,qBAAsB,CAC1C,GAAI,KAAK,MAAM,gBADjB,EAIE,GAAiB,MACnB,KAAK,WAAW,CAAhB,EAEE,GACF,KAAK,MAAM,GAAW,eAAgB,CAAE,GAAI,EAA5C,EAGF,EAAK,SAAW,KAAK,cAAL,EACT,KAAK,WAAW,EAAM,0BAAtB,GACF,CACL,EAAK,IAAM,KAAK,2BAAL,EACX,EAAK,OAAS,EACd,EAAK,MAAQ,GAAiB,KAC9B,EAAK,KAAO,EAEZ,GAAI,GAAW,GACf,MAAI,MAAK,MAAL,EAAA,GAAqB,KAAK,MAAL,EAAA,EAEvB,GAAK,OAAS,GAEV,GAAiB,MACnB,KAAK,WAAW,CAAhB,EAEE,GACF,KAAK,WAAW,EAAS,IAAI,KAA7B,EAGF,EAAK,MAAQ,KAAK,6BAChB,KAAK,YAAY,EAAK,MAAO,EAAK,IAAI,KAAtC,CADW,EAGT,KAAS,OAAS,IAAS,QAC7B,KAAK,4BAA4B,CAAjC,EAIA,CAAC,GACD,EAAK,IAAI,OAAS,eAClB,EAAK,MAAM,MAEX,KAAK,MAAM,GAAW,6BAA8B,CAClD,GAAI,EAAK,MAAM,KADjB,GAKE,KAAS,QAAQ,KAAK,WAAL,EAErB,EAAK,OAAS,GAEV,KAAK,IAAL,EAAA,GACF,GAAW,IAEb,EAAK,MAAQ,KAAK,yBAAL,EACb,EAAK,SAAW,GAGlB,EAAK,SAAW,EAET,KAAK,WAAW,EAAM,oBAAtB,CACR,CACF,CAID,4BACE,EAGM,CACN,GAAM,GAAa,EAAS,OAAS,MAAQ,EAAI,EAC3C,EACJ,EAAS,MAAM,OAAO,OAAU,GAAS,MAAM,KAAO,EAAI,GAE5D,AAAI,EAAS,MAAM,MACjB,KAAK,MACH,EAAS,OAAS,MACd,GAAW,0BACX,GAAW,0BACf,CAAE,GAAI,EAAS,MAAM,KAJvB,EAQE,IAAW,GACb,KAAK,MACH,EAAS,OAAS,MACd,EAAO,eACP,EAAO,eACX,CAAE,GAAI,EAJR,EAQE,EAAS,OAAS,OAAS,EAAS,MAAM,MAC5C,KAAK,MAAM,EAAO,uBAAwB,CAAE,GAAI,EAAhD,CAEH,CAED,yBAAgC,CAC9B,AACE,CAAC,KAAK,IAAL,EAAA,GACD,CAAC,KAAK,IAAL,EAAA,GACD,CAAC,KAAK,MAFN,CAAA,GAGA,CAAC,KAAK,MAAL,CAAA,GAED,KAAK,WAAL,CAEH,CAED,iCACE,EACA,EACA,EAC+B,CAC/B,EAAW,GAAY,KAAK,MAAM,MAClC,EAAW,GAAY,KAAK,MAAM,SAClC,GAAI,GACF,GAAM,KAAK,8BAA8B,EAAnC,EAER,KAAO,KAAK,IAAL,EAAA,GAAkB,CACvB,GAAM,GAAQ,KAAK,YACjB,EACA,CAFY,EAId,EAAM,cAAgB,EACtB,EAAM,GAAK,KAAK,8BAA8B,EAAnC,EACX,EAAO,KAAK,WAAW,EAAO,yBAAvB,CACR,CAED,MAAO,EACR,CAED,qBACE,EACA,EACA,EAC6B,CAC7B,GAAM,GAAO,KAAK,YAAY,EAAU,CAA3B,EAEb,SAAK,eAAiB,KACtB,EAAK,GAAK,KAAK,iCAAiC,EAAU,EAAU,CAA1D,EAEN,KAAK,MAAL,EAAA,GACF,GAAK,eAAiB,KAAK,oCAAL,GAGjB,KAAK,WAAW,EAAM,uBAAtB,CACR,CAED,qBAAkD,CAChD,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,OAAL,EAAA,EACA,EAAK,SAAW,KAAK,qBAAL,EACT,KAAK,WAAW,EAAM,sBAAtB,CACR,CAED,oBAAgD,CAC9C,GAAM,GAAO,KAAK,UAAL,EAIb,IAHA,EAAK,MAAQ,CAAA,EACb,KAAK,OAAL,CAAA,EAEO,KAAK,MAAM,IAAM,KAAK,QAAU,CAAC,KAAK,MAAL,CAAA,GACtC,GAAK,MAAM,KAAK,KAAK,cAAL,CAAhB,EACI,MAAK,MAAL,CAAA,IACJ,KAAK,OAAL,EAAA,EAEF,YAAK,OAAL,CAAA,EACO,KAAK,WAAW,EAAM,qBAAtB,CACR,CAED,2BAA2B,EAAyC,CAClE,GAAI,GAAO,KACP,EAAW,GACX,EAAiB,KACf,EAAO,KAAK,UAAL,EACP,EAAK,KAAK,UAAL,EACL,EAAS,KAAK,MAAM,OAA1B,GAEA,MAAI,GAAG,OAAH,IAAwB,EAAG,OAAH,GACtB,IAAU,CAAC,GACb,KAAK,MAAM,GAAW,qBAAsB,CAAE,GAAI,EAAlD,EAEF,EAAO,KAAK,gBAAgB,CAArB,EACH,KAAK,IAAL,EAAA,GACF,GAAW,GACP,GACF,KAAK,MAAM,GAAW,0BAA2B,CAAE,GAAI,EAAvD,GAGJ,EAAiB,KAAK,yBAAL,GAEjB,EAAiB,KAAK,cAAL,EAEnB,EAAK,KAAO,EACZ,EAAK,SAAW,EAChB,EAAK,eAAiB,EACf,KAAK,WAAW,EAAM,mBAAtB,CACR,CAED,mCACE,EACyB,CACzB,GAAM,GAAO,KAAK,YAAY,EAAK,MAAO,EAAK,IAAI,KAAtC,EACb,SAAK,KAAO,KACZ,EAAK,SAAW,GAChB,EAAK,eAAiB,EACf,KAAK,WAAW,EAAM,mBAAtB,CACR,CAED,4BAA4B,EAAoC,CAAA,EAI9D,CACA,GAAI,GAAmD,KACnD,EAAoD,KASxD,IARI,KAAK,MAAL,EAAA,GACF,GAAQ,KAAK,2BAAuC,EAA5C,EAER,EAAM,KAAO,KACR,KAAK,MAAL,EAAA,GACH,KAAK,OAAL,EAAA,GAGG,CAAC,KAAK,MAAL,EAAA,GAAyB,CAAC,KAAK,MAAL,EAAA,GAChC,EAAO,KAAK,KAAK,2BAA2B,EAAhC,CAAZ,EACK,KAAK,MAAL,EAAA,GACH,KAAK,OAAL,EAAA,EAGJ,MAAI,MAAK,IAAL,EAAA,GACF,GAAO,KAAK,2BAA2B,EAAhC,GAEF,CAAE,SAAQ,OAAM,QACxB,CAED,0BACE,EACA,EACA,EACA,EACsB,CACtB,OAAQ,EAAG,UACJ,MACH,MAAO,MAAK,WAAW,EAAM,mBAAtB,MAEJ,WACA,UACH,MAAO,MAAK,WAAW,EAAM,uBAAtB,MAEJ,QACH,MAAO,MAAK,WAAW,EAAM,qBAAtB,MAEJ,QACH,MAAO,MAAK,WAAW,EAAM,qBAAtB,MAEJ,SACH,MAAO,MAAK,WAAW,EAAM,sBAAtB,MAEJ,SACH,MAAO,MAAK,WAAW,EAAM,sBAAtB,MAEJ,SACH,MAAO,MAAK,WAAW,EAAM,sBAAtB,UAGP,YAAK,mBAAmB,EAAG,IAA3B,EACO,KAAK,qBAAqB,EAAU,EAAU,CAA9C,EAEZ,CAKD,sBAA6C,CAC3C,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SACtB,EAAO,KAAK,UAAL,EACT,EACA,EACA,EAAgB,GACd,EAAwB,KAAK,MAAM,mBAEzC,OAAQ,KAAK,MAAM,UACjB,GACE,MAAO,MAAK,oBAAoB,CAC9B,YAAa,GACb,WAAY,GACZ,YAAa,GACb,WAAY,GACZ,aAAc,EALgB,CAAzB,MAQT,GACE,MAAO,MAAK,oBAAoB,CAC9B,YAAa,GACb,WAAY,GACZ,YAAa,GACb,WAAY,GACZ,aAAc,EALgB,CAAzB,MAQT,GACE,YAAK,MAAM,mBAAqB,GAChC,EAAO,KAAK,mBAAL,EACP,KAAK,MAAM,mBAAqB,EACzB,MAET,IACE,SAAK,eAAiB,KAAK,kCAAL,EACtB,KAAK,OAAL,EAAA,EACA,EAAM,KAAK,4BAAL,EACN,EAAK,OAAS,EAAI,OAClB,EAAK,KAAO,EAAI,KAChB,EAAK,KAAO,EAAI,MAChB,KAAK,OAAL,EAAA,EAEA,KAAK,OAAL,EAAA,EAEA,EAAK,WAAa,KAAK,cAAL,EAEX,KAAK,WAAW,EAAM,wBAAtB,MAET,IAIE,GAHA,KAAK,KAAL,EAGI,CAAC,KAAK,MAAL,EAAA,GAAyB,CAAC,KAAK,MAAL,EAAA,EAC7B,GAAI,GAAkB,KAAK,MAAM,IAAZ,GAAqB,KAAK,MAAL,EAAA,EAAsB,CAC9D,GAAM,GAAQ,KAAK,UAAL,EAAiB,KAC/B,EAAgB,IAAA,IAAyB,IAAzC,EACD,KACC,GAAgB,GAIpB,GAAI,EAAe,CAMjB,GALA,KAAK,MAAM,mBAAqB,GAChC,EAAO,KAAK,cAAL,EACP,KAAK,MAAM,mBAAqB,EAI9B,KAAK,MAAM,oBACX,CACE,MAAK,MAAL,EAAA,GACC,KAAK,MAAL,EAAA,GAAyB,KAAK,UAAL,EAAiB,OAAjB,IAG5B,YAAK,OAAL,EAAA,EACO,EAGP,KAAK,IAAL,EAAA,CAEH,CAED,MAAI,GACF,EAAM,KAAK,4BAA4B,CACrC,KAAK,mCAAmC,CAAxC,CADqC,CAAjC,EAIN,EAAM,KAAK,4BAAL,EAGR,EAAK,OAAS,EAAI,OAClB,EAAK,KAAO,EAAI,KAChB,EAAK,KAAO,EAAI,MAEhB,KAAK,OAAL,EAAA,EAEA,KAAK,OAAL,EAAA,EAEA,EAAK,WAAa,KAAK,cAAL,EAElB,EAAK,eAAiB,KAEf,KAAK,WAAW,EAAM,wBAAtB,MAET,KACE,MAAO,MAAK,aACV,KAAK,MAAM,MACX,6BAFK,MAKT,QACA,IACE,SAAK,MAAQ,KAAK,MAAlB,EAAA,EACA,KAAK,KAAL,EACO,KAAK,WACV,EACA,8BAFK,MAKT,IACE,GAAI,KAAK,MAAM,QAAU,IAAK,CAE5B,GADA,KAAK,KAAL,EACI,KAAK,MAAL,GAAA,EACF,MAAO,MAAK,mBACV,CAAC,KAAK,MAAM,MACZ,8BACA,CAHK,EAOT,GAAI,KAAK,MAAL,GAAA,EACF,MAAO,MAAK,mBACV,CAAC,KAAK,MAAM,MACZ,8BACA,CAHK,EAOT,KAAM,MAAK,MAAM,GAAW,6BAA8B,CACxD,GAAI,KAAK,MAAM,QADyC,CAApD,CAGP,CAED,KAAM,MAAK,WAAL,MACR,KACE,MAAO,MAAK,aACV,KAAK,MAAM,MACX,6BAFK,MAKT,KACE,MAAO,MAAK,aACV,KAAK,MAAM,MACX,6BAFK,MAKT,IACE,YAAK,KAAL,EACO,KAAK,WAAW,EAAM,oBAAtB,MAET,IACE,YAAK,KAAL,EACO,KAAK,WAAW,EAAM,2BAAtB,MAET,IACE,YAAK,KAAL,EACO,KAAK,WAAW,EAAM,oBAAtB,MAET,IACE,YAAK,KAAL,EACO,KAAK,WAAW,EAAM,sBAAtB,MAET,IACE,MAAO,MAAK,oBAAL,UAGP,GAAI,GAAe,KAAK,MAAM,IAAZ,EAAmB,CACnC,GAAM,GAAQ,GAAe,KAAK,MAAM,IAAZ,EAC5B,YAAK,KAAL,EACO,MAAM,iBAAiB,EAA8B,CAArD,UACE,GAAkB,KAAK,MAAM,IAAZ,EAC1B,MAAI,MAAK,aAAL,GAAA,EACK,KAAK,uBAAL,EAGF,KAAK,0BACV,EACA,EACA,EACA,KAAK,gBAAL,CAJK,EASb,KAAM,MAAK,WAAL,CACP,CAED,sBAA6C,CAC3C,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SACxB,EAAO,KAAK,qBAAL,EACP,EAA4B,GAChC,KACG,MAAK,MAAL,CAAA,GAA2B,KAAK,MAAjC,EAAA,IACA,CAAC,KAAK,mBAAL,GACD,CACA,GAAM,GAAO,KAAK,YAAY,EAAU,CAA3B,EACP,EAAW,KAAK,IAAtB,EAAA,EACA,EAA4B,GAA6B,EACzD,KAAK,OAAL,CAAA,EACA,AAAI,CAAC,GAAY,KAAK,MAAL,CAAA,EACf,GAAK,YAAc,EACnB,KAAK,KAAL,EACA,EAAO,KAAK,WAAW,EAAM,qBAAtB,GAEP,GAAK,WAAa,EAClB,EAAK,UAAY,KAAK,cAAL,EACjB,KAAK,OAAL,CAAA,EACA,AAAI,EACF,GAAK,SAAW,EAChB,EAAO,KAAK,WAEV,EACA,2BAHK,GAMP,EAAO,KAAK,WAEV,EACA,mBAHK,EAOZ,CACD,MAAO,EACR,CAED,qBAA4C,CAC1C,GAAM,GAAO,KAAK,UAAL,EACb,MAAI,MAAK,IAAL,EAAA,EACF,GAAK,eAAiB,KAAK,oBAAL,EACf,KAAK,WAAW,EAAM,wBAAtB,GAEA,KAAK,qBAAL,CAEV,CAED,oCAA2D,CACzD,GAAM,GAAQ,KAAK,oBAAL,EACd,GAAI,CAAC,KAAK,MAAM,oBAAsB,KAAK,IAAL,EAAA,EAAoB,CAExD,GAAM,GAAO,KAAK,YAAY,EAAM,MAAO,EAAM,IAAI,KAAxC,EACb,SAAK,OAAS,CAAC,KAAK,mCAAmC,CAAxC,CAAD,EACd,EAAK,KAAO,KACZ,EAAK,KAAO,KACZ,EAAK,WAAa,KAAK,cAAL,EAClB,EAAK,eAAiB,KACf,KAAK,WAAW,EAAM,wBAAtB,CACR,CACD,MAAO,EACR,CAED,2BAAkD,CAChD,GAAM,GAAO,KAAK,UAAL,EACb,KAAK,IAAL,EAAA,EACA,GAAM,GAAO,KAAK,mCAAL,EAEb,IADA,EAAK,MAAQ,CAAC,CAAD,EACN,KAAK,IAAL,EAAA,GACL,EAAK,MAAM,KAAK,KAAK,mCAAL,CAAhB,EAEF,MAAO,GAAK,MAAM,SAAW,EACzB,EACA,KAAK,WAAW,EAAM,4BAAtB,CACL,CAED,oBAA2C,CACzC,GAAM,GAAO,KAAK,UAAL,EACb,KAAK,IAAL,EAAA,EACA,GAAM,GAAO,KAAK,0BAAL,EAEb,IADA,EAAK,MAAQ,CAAC,CAAD,EACN,KAAK,IAAL,EAAA,GACL,EAAK,MAAM,KAAK,KAAK,0BAAL,CAAhB,EAEF,MAAO,GAAK,MAAM,SAAW,EACzB,EACA,KAAK,WAAW,EAAM,qBAAtB,CACL,CAED,eAAsC,CACpC,GAAM,GAAY,KAAK,MAAM,OAC7B,KAAK,MAAM,OAAS,GACpB,GAAM,GAAO,KAAK,mBAAL,EACb,YAAK,MAAM,OAAS,EACb,CACR,CAED,sCAA6D,CAC3D,GAAI,KAAK,MAAM,OAAX,KAA+B,KAAK,MAAM,QAAU,IAAK,CAC3D,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SACtB,EAAO,KAAK,gBAAL,EACb,MAAO,MAAK,qBAAqB,EAAU,EAAU,CAA9C,CACR,KACC,OAAO,MAAK,cAAL,CAEV,CAED,yBAAgD,CAC9C,GAAM,GAAO,KAAK,UAAL,EACb,SAAK,eAAiB,KAAK,yBAAL,EACf,KAAK,WAAW,EAAM,gBAAtB,CACR,CAED,mCACE,EACc,CACd,GAAM,GAAQ,EACV,KAAK,gBAAL,EACA,KAAK,8BAAL,EACJ,MAAI,MAAK,MAAL,EAAA,GAEF,GAAM,eAAiB,KAAK,wBAAL,EACvB,KAAK,iBAAiB,CAAtB,GAEK,CACR,CAED,oBAAoB,EAAsB,CACxC,SAAK,WAAW,eAAiB,EAAK,eAEtC,KAAK,iBAAiB,EAAK,WAAY,EAAK,eAAe,IAAI,GAA/D,EAEO,EAAK,UACb,CAED,mBAAuD,CACrD,GAAI,GAAW,KACf,MAAI,MAAK,MAAL,EAAA,EACF,GAAW,KAAK,UAAL,EACX,AAAI,KAAK,MAAM,QAAU,IACvB,EAAS,KAAO,OAEhB,EAAS,KAAO,QAElB,KAAK,KAAL,EACO,KAAK,WAAW,EAAU,UAA1B,GAEF,CACR,CAMD,kBACE,EACA,EACA,EAAoB,GACd,CACN,MAAI,GACK,KAAK,iCAAiC,EAAM,IACjD,MAAM,kBAAkB,EAAM,GAAM,CAApC,CADK,EAKF,MAAM,kBAAkB,EAAM,GAAO,CAArC,CACR,CAED,2BAME,EAAiB,EAAiB,EAAoB,GAAU,CAChE,GAAI,KAAK,MAAL,EAAA,EAAsB,CACxB,GAAM,GAAW,KAAK,UAAL,EAEjB,CACE,EAAS,eAET,EAAK,SAHP,EAII,KAAK,qCAAL,EAEJ,EAAK,WAAa,EAAS,eACvB,KAAK,WAAW,EAAU,gBAA1B,EACA,IACL,CAED,MAAO,OAAM,2BAA2B,EAAM,EAAM,CAA7C,CACR,CAGD,eAAe,EAAyB,EAAiC,CAEvE,GAAI,KAAK,MAAM,QAAU,KAAK,aAAL,GAAA,EAAkC,CACzD,GAAM,GAAY,KAAK,UAAL,EAClB,GAAI,GAA2B,EAAU,IAAX,EAAkB,CAC9C,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,KAAL,EACO,KAAK,mBAAmB,CAAxB,CACR,UACQ,KAAK,iBAAL,GAA2B,KAAK,aAAL,GAAA,EAA6B,CACjE,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,KAAL,EACO,KAAK,yBAAyB,CAA9B,CACR,CACD,GAAM,GAAO,MAAM,eAAe,EAAS,CAA9B,EAEb,MAAI,MAAK,aAAe,QAAa,CAAC,KAAK,iBAAiB,CAAtB,GACpC,MAAK,WAAa,MAEb,CACR,CAGD,yBACE,EACA,EACuB,CACvB,GAAI,EAAK,OAAS,cAChB,GAAI,EAAK,OAAS,WAChB,GACE,KAAK,MACL,EAAA,GAAA,GAAkB,KAAK,MAAM,IAAZ,GACjB,KAAK,MAAL,EAAA,GACA,KAAK,MAAL,EAAA,GACA,KAAK,MAAL,EAAA,EAGA,MAAO,MAAK,iBAAiB,CAAtB,UAEA,GAAkB,KAAK,MAAM,IAAZ,EAAmB,CAC7C,GAAI,EAAK,OAAS,YAEhB,MAAO,MAAK,mBAAmB,CAAxB,EACF,GAAI,EAAK,OAAS,OAEvB,MAAO,MAAK,mBAAmB,CAAxB,EACF,GAAI,EAAK,OAAS,SAEvB,MAAO,MAAK,oBAAoB,EAAM,EAA/B,CAEV,EAGH,MAAO,OAAM,yBAAyB,EAAM,CAArC,CACR,CAGD,8BAAwC,CACtC,GAAM,CAAE,QAAS,KAAK,MACtB,MACE,IAAmC,CAAD,GACjC,KAAK,iBAAL,GAA2B,IAAI,IAEzB,CAAC,KAAK,MAAM,YAEd,MAAM,6BAAN,CACR,CAED,0BAAoC,CAClC,GAAM,CAAE,QAAS,KAAK,MACtB,MACE,IAAmC,CAAD,GACjC,KAAK,iBAAL,GAA2B,IAAI,IAEzB,KAAK,MAAM,YAGb,MAAM,yBAAN,CACR,CAED,8BAA6D,CAC3D,GAAI,KAAK,iBAAL,GAA2B,KAAK,aAAL,GAAA,EAA6B,CAC1D,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,KAAL,EACO,KAAK,yBAAyB,CAA9B,CACR,CACD,MAAO,OAAM,6BAAN,CACR,CAED,iBACE,EACA,EACA,EACA,EACc,CACd,GAAI,CAAC,KAAK,MAAV,EAAA,EAA8B,MAAO,GAErC,GAAI,KAAK,MAAM,uBAAwB,CACrC,GAAM,GAAS,KAAK,kBAAL,EAIf,GACE,IAAA,IACA,IAAM,IACN,IAFA,IAGA,IAAM,GAGN,YAAK,2BAA2B,CAAhC,EACO,CAEV,CAED,KAAK,OAAL,EAAA,EACA,GAAM,GAAQ,KAAK,MAAM,MAAX,EACR,EAAoB,KAAK,MAAM,UAC/B,EAAO,KAAK,YAAY,EAAU,CAA3B,EACT,CAAE,aAAY,UAAW,KAAK,8BAAL,EACzB,CAAC,EAAO,GAAW,KAAK,wBAAwB,CAA7B,EAEvB,GAAI,GAAU,EAAQ,OAAS,EAAG,CAChC,GAAM,GAAY,CAAC,GAAG,CAAJ,EAElB,GAAI,EAAQ,OAAS,EAAG,CACtB,KAAK,MAAQ,EACb,KAAK,MAAM,UAAY,EAEvB,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,IAClC,EAAU,KAAK,EAAQ,GAAG,KAA1B,EAGF,AAAC,EAAE,aAAY,UAAW,KAAK,8BAAL,GAC1B,CAAC,EAAO,CAAR,EAAmB,KAAK,wBAAwB,CAA7B,CACpB,CAED,AAAI,GAAU,EAAM,OAAS,GAM3B,KAAK,MAAM,GAAW,0BAA2B,CAC/C,GAAI,EAAM,SADZ,EAKE,GAAU,EAAM,SAAW,GAC7B,MAAK,MAAQ,EACb,EAAU,KAAK,EAAM,GAAG,KAAxB,EACA,KAAK,MAAM,UAAY,EACtB,CAAE,aAAY,UAAW,KAAK,8BAAL,EAE7B,CAED,YAAK,wBAAwB,EAAY,EAAzC,EAEA,KAAK,MAAM,UAAY,EACvB,KAAK,OAAL,EAAA,EAEA,EAAK,KAAO,EACZ,EAAK,WAAa,EAClB,EAAK,UAAY,KAAK,iCAAiC,EAAM,IAC3D,KAAK,iBAAiB,OAAW,MAAjC,CADe,EAIV,KAAK,WAAW,EAAM,uBAAtB,CACR,CAED,+BAGE,CACA,KAAK,MAAM,0BAA0B,KAAK,KAAK,MAAM,KAArD,EAEA,GAAM,GAAa,KAAK,wBAAL,EACb,EAAS,CAAC,KAAK,MAArB,EAAA,EAEA,YAAK,MAAM,0BAA0B,IAArC,EAEO,CAAE,aAAY,SACtB,CASD,wBACE,EACA,EAC4D,CAC5D,GAAM,GAAQ,CAAC,CAAD,EACR,EAAsC,CAAA,EAE5C,KAAO,EAAM,SAAW,GAAG,CACzB,GAAM,GAAO,EAAM,IAAN,EACb,AAAI,EAAK,OAAS,0BAChB,CAAI,EAAK,gBAAkB,CAAC,EAAK,WAG/B,KAAK,sBAAsB,CAA3B,EAGA,EAAO,KAAK,CAAZ,EAEF,EAAM,KAAK,EAAK,IAAhB,GACS,EAAK,OAAS,yBACvB,GAAM,KAAK,EAAK,UAAhB,EACA,EAAM,KAAK,EAAK,SAAhB,EAEH,CAED,MAAI,GACF,GAAO,QAAQ,GAAQ,KAAK,sBAAsB,CAA3B,CAAvB,EACO,CAAC,EAAQ,CAAA,CAAT,GAGF,GAAU,EAAQ,GACvB,EAAK,OAAO,MAAM,GAAS,KAAK,aAAa,EAAO,EAAzB,CAA3B,CADc,CAGjB,CAED,sBAAsB,EAAiC,CAAA,GAAA,GACrD,KAAK,iBAGH,EAAK,OAHP,GAIE,EAAK,QAJP,KAAA,OAIE,EAAY,iBACA,EALd,EAQA,KAAK,MAAM,MAAM,GAAiB,EAAlC,EAEA,MAAM,YAAY,EAAM,GAAO,EAA/B,EACA,KAAK,MAAM,KAAX,CACD,CAED,iCACE,EACA,EACG,CACH,GAAI,GACJ,MAAI,MAAK,MAAM,0BAA0B,QAAQ,EAAK,KAAlD,IAA6D,GAC/D,MAAK,MAAM,0BAA0B,KAAK,KAAK,MAAM,KAArD,EACA,EAAS,EAAK,EACd,KAAK,MAAM,0BAA0B,IAArC,GAEA,EAAS,EAAK,EAGT,CACR,CAED,eACE,EACA,EACA,EACc,CAUd,GATA,EAAO,MAAM,eAAe,EAAM,EAAU,CAArC,EACH,KAAK,IAAL,EAAA,GACF,GAAK,SAAW,GAIhB,KAAK,iBAAiB,CAAtB,GAGE,KAAK,MAAL,EAAA,EAAsB,CACxB,GAAM,GAAe,KAAK,YAAY,EAAU,CAA3B,EACrB,SAAa,WAAa,EAC1B,EAAa,eAAiB,KAAK,wBAAL,EAEvB,KAAK,WAAW,EAAc,oBAA9B,CACR,CAED,MAAO,EACR,CAED,wBAAwB,EAAc,CACpC,AACG,EAAK,OAAS,qBACZ,GAAK,aAAe,QAAU,EAAK,aAAe,WACpD,EAAK,OAAS,0BACb,EAAK,aAAe,QACrB,EAAK,OAAS,wBAA0B,EAAK,aAAe,QAO/D,MAAM,wBAAwB,CAA9B,CACD,CAED,YACE,EACa,CACb,GAAM,GAAO,MAAM,YAAY,CAAlB,EACb,MACE,GAAK,OAAS,0BACd,EAAK,OAAS,yBAEd,GAAK,WAAa,EAAK,YAAc,SAEhC,CACR,CAED,uBACE,EACkC,CAClC,GAAI,KAAK,aAAL,GAAA,EAA6B,CAC/B,EAAK,WAAa,OAElB,GAAM,GAAkB,KAAK,UAAL,EAGxB,MAFA,MAAK,KAAL,EAEI,KAAK,MAAL,CAAA,EAEF,GAAK,WAAa,KAAK,sBACA,EADL,EAGlB,MAAM,gBAAgB,CAAtB,EACO,MAIA,KAAK,mBAAmB,CAAxB,CAEV,SAAU,KAAK,aAAL,GAAA,EAA+B,CACxC,EAAK,WAAa,OAElB,GAAM,GAAkB,KAAK,UAAL,EACxB,YAAK,KAAL,EAGO,KAAK,oBAAoB,EAAiB,EAA1C,CACR,SAAU,KAAK,aAAL,GAAA,EAAkC,CAC3C,EAAK,WAAa,OAClB,GAAM,GAAkB,KAAK,UAAL,EACxB,YAAK,KAAL,EAEO,KAAK,mBAAmB,CAAxB,UACE,KAAK,iBAAL,GAA2B,KAAK,aAAL,GAAA,EAA6B,CACjE,EAAK,WAAa,QAClB,GAAM,GAAkB,KAAK,UAAL,EACxB,YAAK,KAAL,EAEO,KAAK,yBAAyB,CAA9B,CACR,KACC,OAAO,OAAM,uBAAuB,CAA7B,CAEV,CAED,cAAc,EAAuB,CACnC,MAAI,OAAM,cAAc,CAApB,EAAkC,GAElC,KAAK,aAA0B,GAAA,GAAA,KAAK,UAAL,EAAiB,OAAjB,GACjC,GAAK,WAAa,OAClB,KAAK,KAAL,EACA,KAAK,KAAL,EACO,IAGF,EACR,CAED,mCAAmC,EAAuB,CACxD,GAAM,CAAE,YAAa,KAAK,MACpB,EAAe,MAAM,mCAAmC,CAAzC,EACrB,MAAI,IAAgB,EAAK,aAAe,QACtC,KAAK,WAAW,CAAhB,EAEK,CACR,CAED,aACE,EACA,EACA,EACA,CACA,MAAM,aAAa,EAAM,EAAa,CAAtC,EACI,KAAK,MAAL,EAAA,GACF,GAAK,eAAiB,KAAK,kCAAL,EAEzB,CAED,iBACE,EACA,EACA,EACM,CACN,GAAM,CAAE,YAAa,KAAK,MAC1B,GAAI,KAAK,aAAL,GAAA,EAAgC,CAClC,GAAI,MAAM,6BAA6B,EAAW,CAA9C,EAEF,OAGF,EAAO,QAAU,EAClB,CAED,MAAM,iBAAiB,EAAW,EAAQ,CAA1C,EAEI,EAAO,SACT,CACE,EAAO,OAAS,iBAChB,EAAO,OAAS,wBAChB,EAAO,OAAS,qBAEhB,KAAK,MAAM,GAAW,oBAAqB,CAAE,GAAI,EAAjD,EACS,EAAO,OAChB,KAAK,MAAM,GAAW,6BAA8B,CAClD,GAAI,EAAO,MADb,EAKL,CAED,WAAW,EAAuB,CAChC,MAAO,KAAS,YAAc,IAAS,eACxC,CAED,cAAqB,CACnB,GAAM,GAAO,MAAM,UAAN,EACP,EAAW,KAAO,EAGxB,AAAI,EAAC,KAAK,WAAW,CAAhB,GAAyB,CAAC,KAAK,MAAM,SACxC,KAAK,MAAM,EAAO,kBAAmB,CACnC,GAAI,KAAK,MAAM,YAAX,EACJ,eAAgB,EAFlB,EAMF,KAAK,YAAL,IAA0B,CAA1B,CACD,CAGD,iBAAiB,EAAoB,CACnC,GAAM,GAAO,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,EACb,MAAI,KAAI,KAAiC,IAAI,IACpC,KAAK,SAAuB,EAAA,CAA5B,EAEP,KAAK,MAAM,QACV,KAAA,IAAkC,IAAI,IAEhC,KAAK,SAAS,IAAI,GAAlB,GAAA,GAA8D,CAA9D,EACE,KAAK,MAAM,QAAU,IAAI,GAC9B,IAAI,GACC,KAAK,SAAyB,GAAA,CAA9B,EAGF,KAAK,SAAsB,GAAA,CAA3B,EAEP,GAAgB,EAAM,EAAM,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,CAAb,EAEf,MAAK,MAAM,KAAO,EACX,KAAK,aAAL,GAEA,MAAM,iBAAiB,CAAvB,CAEV,CAED,aAAa,EAAc,EAA8B,CACvD,MAAI,GAAK,OAAS,qBACT,KAAK,aAAa,EAAK,WAAY,CAAnC,EAEA,MAAM,aAAa,EAAM,CAAzB,CAEV,CAED,aAAa,EAAc,EAAiB,GAAa,CACvD,AACE,CAAC,GACD,EAAK,OAAS,wBACd,EAAK,KAAK,OAAS,sBAEnB,GAAK,KAAO,KAAK,oBAAoB,EAAK,IAA9B,GAEd,MAAM,aAAa,EAAM,CAAzB,CACD,CAGD,iBACE,EACA,EACA,EACM,CACN,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACxC,GAAM,GAAO,EAAS,GACtB,AAAI,IAAA,KAAA,OAAA,EAAM,QAAS,sBACjB,GAAS,GAAK,KAAK,oBAAoB,CAAzB,EAEjB,CACD,MAAM,iBAAiB,EAAU,EAAkB,CAAnD,CACD,CAID,iBACE,EACA,EACgD,CAChD,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CAAA,GAAA,GACxC,GAAM,GAAO,EAAS,GACtB,AACE,GACA,EAAK,OAAS,sBACd,CAAA,IAAC,EAAK,QAAN,MAAC,EAAY,gBACZ,GAAS,OAAS,GAAK,CAAC,IAEzB,KAAK,MAAM,GAAW,kBAAmB,CACvC,GAAI,EAAK,eADX,CAIH,CAED,MAAO,EACR,CAED,eACE,EACA,EACA,EACA,EACuC,CACvC,GAAM,GAAO,MAAM,eACjB,EACA,EACA,EACA,CAJW,EAYb,MAAI,IAAgB,CAAC,KAAK,MAAM,wBAC9B,KAAK,iBAAiB,EAAK,QAA3B,EAGK,CACR,CAED,YAAY,EAAc,EAA0B,EAAuB,CACzE,MACE,KAAS,sBACT,MAAM,YAAY,EAAM,EAAiB,CAAzC,CAEH,CAGD,mBAAmB,EAAwC,CACzD,MAAI,MAAK,MAAL,EAAA,GAEF,GAAK,eAAiB,KAAK,wBAAL,GAEjB,MAAM,mBAAmB,CAAzB,CACR,CAED,0BACE,EACwB,CACxB,MAAI,MAAK,MAAL,EAAA,GAEF,GAAK,eAAiB,KAAK,wBAAL,GAEjB,MAAM,0BAA0B,CAAhC,CACR,CAGD,eAAyB,CACvB,MAAO,MAAK,MAAgB,EAAA,GAAA,MAAM,cAAN,CAC7B,CAGD,iBAA2B,CACzB,MAAO,MAAK,MAAmB,EAAA,GAAA,MAAM,gBAAN,CAChC,CAED,uBAAuB,EAAkD,CACvE,MAAO,CAAC,KAAK,MAAL,EAAA,GAAwB,MAAM,uBAAuB,CAA7B,CACjC,CAGD,gBACE,EACA,EACA,EACA,EACA,EACA,EACM,CAkBN,GAjBK,EAAe,UAClB,KAAK,WAAY,EAAe,SAAS,IAAI,KAA7C,EAEF,MAAQ,GAAe,SACnB,KAAK,MAAL,EAAA,GACF,GAAO,eAAiB,KAAK,kCAAL,GAG1B,MAAM,gBACJ,EACA,EACA,EACA,EACA,EACA,CANF,EASI,EAAO,QAAU,EAAe,CAClC,GAAM,GAAS,EAAO,OACtB,AAAI,EAAO,OAAS,GAAK,KAAK,YAAY,EAAO,EAAxB,GACvB,KAAK,MAAM,GAAW,6BAA8B,CAAE,GAAI,EAA1D,CAGH,SAEC,EAAO,OAAS,oBAChB,GAEA,EAAO,MAAM,OACb,CAEA,GAAM,GAAS,EAAO,MAAM,OAC5B,AAAI,EAAO,OAAS,GAAK,KAAK,YAAY,EAAO,EAAxB,GACvB,KAAK,MAAM,GAAW,6BAA8B,CAAE,GAAI,EAA1D,CAEH,CACF,CAED,uBACE,EACA,EACA,EACA,EACM,CACN,AAAK,EAAe,UAClB,KAAK,WAAY,EAAe,SAAS,IAAI,KAA7C,EAEF,MAAQ,GAAe,SACnB,KAAK,MAAL,EAAA,GACF,GAAO,eAAiB,KAAK,kCAAL,GAG1B,MAAM,uBAAuB,EAAW,EAAQ,EAAa,CAA7D,CACD,CAGD,gBAAgB,EAAqB,CAKnC,GAJA,MAAM,gBAAgB,CAAtB,EACI,EAAK,YAAc,KAAK,MAAL,EAAA,GACrB,GAAK,oBAAsB,KAAK,oCAAL,GAEzB,KAAK,aAAL,GAAA,EAAmC,CACrC,KAAK,KAAL,EACA,GAAM,GAAwC,EAAK,WAAa,CAAA,EAChE,EAAG,CACD,GAAM,GAAO,KAAK,UAAL,EACb,EAAK,GAAK,KAAK,8BAA0C,EAA/C,EACV,AAAI,KAAK,MAAL,EAAA,EACF,EAAK,eAAiB,KAAK,oCAAL,EAEtB,EAAK,eAAiB,KAExB,EAAY,KAAK,KAAK,WAAW,EAAM,iBAAtB,CAAjB,QACO,KAAK,IATd,EAAA,EAUD,CACF,CAED,wBAAwB,EAA8C,CACpE,MAAM,wBAAwB,CAA9B,EACA,GAAM,GAAS,KAAK,6BAA6B,CAAlC,EACf,GAAI,EAAO,OAAS,EAAG,CACrB,GAAM,GAAQ,EAAO,GACrB,AAAI,KAAK,YAAY,CAAjB,GAA2B,EAAO,OAAS,MAC7C,KAAK,MAAM,GAAW,0BAA2B,CAAE,GAAI,EAAvD,EACS,KAAK,YAAY,CAAjB,GACT,KAAK,MAAM,GAAW,0BAA2B,CAAE,GAAI,EAAvD,CAEH,CACF,CAED,gCACE,EACM,CACN,EAAK,SAAW,KAAK,kBAAL,CACjB,CAGD,kBACE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACmC,CACnC,AAAK,EAAa,UAChB,KAAK,WAAY,EAAa,SAAS,IAAI,KAA3C,EAEF,MAAQ,GAAa,SAErB,GAAI,GAGJ,AAAI,KAAK,MAAgB,EAAA,GAAA,CAAC,GACxB,GAAiB,KAAK,kCAAL,EACZ,KAAK,MAAV,EAAA,GAA4B,KAAK,WAAL,GAG9B,GAAM,GAAS,MAAM,kBACnB,EACA,EACA,EACA,EACA,EACA,EACA,EACA,CARa,EAYf,MAAI,IACD,IAAO,OAAS,GAAQ,eAAiB,GAErC,CACR,CAED,6BAA6B,EAA6B,CACxD,MAAI,MAAK,IAAL,EAAA,GACE,GAAM,OAAS,cACjB,KAAK,MAAM,GAAW,kBAAmB,CAAE,GAAI,EAA/C,EAEE,KAAK,YAAY,CAAjB,GACF,KAAK,MAAM,GAAW,0BAA2B,CAAE,GAAI,EAAvD,EAGD,EAA8B,SAAW,IAE5C,AAAI,KAAK,MAAL,EAAA,EAEF,EAAM,eAAiB,KAAK,wBAAL,EACd,KAAK,YAAY,CAAjB,GACT,KAAK,MAAM,GAAW,4BAA6B,CAAE,GAAI,EAAzD,EAGE,KAAK,MAAgB,EAAA,GAAA,KAAK,YAAY,CAAjB,GACvB,KAAK,MAAM,GAAW,mBAAoB,CAAE,GAAI,EAAhD,EAGF,KAAK,iBAAiB,CAAtB,EACO,CACR,CAED,kBACE,EACA,EACA,EACW,CACX,GAAM,GAAO,MAAM,kBAAkB,EAAU,EAAU,CAA5C,EAEb,MACE,GAAK,OAAS,qBACd,EAAK,gBACL,EAAK,MAAM,MAAQ,EAAK,eAAe,OAEvC,KAAK,MAAM,GAAW,sBAAuB,CAC3C,GAAI,EAAK,eADX,EAKK,CACR,CAED,yBAAyB,EAAoC,CAC3D,MAAK,IAAkB,CAAD,EAIf,GAAqB,KAAK,MAAM,IAAZ,EAHlB,MAAM,yBAAyB,CAA/B,CAIV,CAED,0BAKE,EAA2B,EAAsB,EAAuB,CACxE,EAAU,MAAQ,GAAkB,CAAD,EAC/B,KAAK,8BACW,GACI,EAFpB,EAIA,KAAK,gBAAL,EAEJ,EAAK,WAAW,KAAK,KAAK,sBAAsB,EAAW,CAAtC,CAArB,CACD,CAGD,iCAAiC,EAAoC,CACnE,EAAK,WAAa,QAElB,GAAI,GAAO,KAMX,GALA,AAAI,KAAK,MAAL,EAAA,EACF,EAAO,SACE,KAAK,aAAL,GAAA,GACT,GAAO,QAEL,EAAM,CACR,GAAM,GAAK,KAAK,UAAL,EACL,CAAE,QAAS,EAGjB,AAAI,IAAS,QAAU,IAAI,IAEzB,KAAK,WAAW,KAAM,EAAG,IAAzB,EAIA,IAAqB,CAAD,GACpB,IADA,GAEA,IAAI,KAEJ,MAAK,KAAL,EACA,EAAK,WAAa,EAErB,CAED,MAAO,OAAM,iCAAiC,CAAvC,CACR,CAGD,qBACE,EACA,EACA,EAEA,EAEA,EACmB,CACnB,GAAM,GAAa,EAAU,SAEzB,EAAoB,KACxB,AAAI,EAAW,OAAS,cACtB,CAAI,EAAW,OAAS,OACtB,EAAoB,OACX,EAAW,OAAS,UAC7B,GAAoB,WAIxB,GAAI,GAAY,GAChB,GAAI,KAAK,aAAwB,EAAA,GAAA,CAAC,KAAK,sBAAsB,IAA3B,EAAkC,CAClE,GAAM,GAAW,KAAK,gBAAgB,EAArB,EACjB,AACE,IAAsB,MACtB,CAAC,GAA2B,KAAK,MAAM,IAAZ,EAG3B,GAAU,SAAW,EACrB,EAAU,WAAa,EACvB,EAAU,MAAQ,GAAgB,CAAD,GAGjC,GAAU,SAAW,EACrB,EAAU,WAAa,KACvB,EAAU,MAAQ,KAAK,gBAAL,EAErB,KAAM,CACL,GACE,IAAsB,MACtB,GAA2B,KAAK,MAAM,IAAZ,EAG1B,EAAU,SAAW,KAAK,gBAAgB,EAArB,EACrB,EAAU,WAAa,MAClB,CACL,GAAI,EAEF,KAAM,MAAK,MAAM,EAAO,sBAAuB,CAC7C,GAAI,EACJ,WAAY,EAAW,KAFsB,CAAzC,EAMR,EAAU,SAAW,EACrB,EAAU,WAAa,IACxB,CAED,AAAI,KAAK,cAAL,EAAA,EACF,EAAU,MAAQ,KAAK,gBAAL,EAElB,GAAY,GACZ,EAAU,MAAQ,GAAgB,EAAU,QAAX,EAEpC,CAED,GAAM,GAAwB,GAAkB,CAAD,EAE/C,MAAI,IAAsB,GACxB,KAAK,MAAM,GAAW,oCAAqC,CACzD,GAAI,EADN,EAKE,IAAsB,IACxB,KAAK,kBACH,EAAU,MAAM,KAChB,EAAU,MAAM,IAAI,MACF,EAHpB,EAOE,GAAa,CAAC,GAAsB,CAAC,GACvC,KAAK,kBACH,EAAU,MAAM,KAChB,EAAU,IAAI,MACd,GACA,EAJF,EAQK,KAAK,sBAAsB,EAAW,iBAAtC,CACR,CAED,kBAA8B,CAC5B,OAAQ,KAAK,MAAM,UACjB,IAEE,MAAO,MAAK,gBAA8B,EAAnC,UAEP,MAAO,OAAM,iBAAN,EAEZ,CAGD,oBACE,EACA,EACM,CAEN,GAAM,GAAO,EAAK,KAClB,AAAI,IAAS,OAAS,IAAS,OAAS,KAAK,MAAL,EAAA,GACtC,GAAK,eAAiB,KAAK,kCAAL,GAExB,MAAM,oBAAoB,EAAM,CAAhC,CACD,CAGD,WACE,EACA,EACM,CACN,MAAM,WAAW,EAAM,CAAvB,EACI,KAAK,MAAL,EAAA,GAEF,GAAK,GAAG,eAAiB,KAAK,wBAAL,EACzB,KAAK,iBAAiB,EAAK,EAA3B,EAEH,CAGD,kCACE,EACA,EAC2B,CAC3B,GAAI,KAAK,MAAL,EAAA,EAAsB,CACxB,GAAM,GAAwB,KAAK,MAAM,mBACzC,KAAK,MAAM,mBAAqB,GAEhC,EAAK,WAAa,KAAK,wBAAL,EAClB,KAAK,MAAM,mBAAqB,CACjC,CAED,MAAO,OAAM,kCAAkC,EAAM,CAA9C,CACR,CAGD,uBAAiC,CAC/B,MAAO,MAAK,MAAmB,EAAA,GAAA,MAAM,sBAAN,CAChC,CAYD,iBACE,EACA,EACc,CAAA,GAAA,GACd,GAAI,GAAQ,KAER,EAEJ,GACE,KAAK,UAAU,KAAf,GACC,MAAK,MAAL,GAAA,GAA8B,KAAK,MADpC,EAAA,GAEA,CAUA,GATA,EAAQ,KAAK,MAAM,MAAX,EAER,EAAM,KAAK,SACT,IAAM,MAAM,iBAAiB,EAAqB,CAA5C,EACN,CAFI,EAOF,CAAC,EAAI,MAAO,MAAO,GAAI,KAK3B,GAAM,CAAE,WAAY,KAAK,MACnB,EAAiB,EAAQ,EAAQ,OAAS,GAChD,AAAI,KAAmB,GAAG,QAAU,IAAmB,GAAG,SACxD,EAAQ,IAAR,CAEH,CAED,GAAI,GAAA,IAAA,MAAA,EAAK,OAAS,KAAK,MAAL,EAAA,EAAmB,CAAA,GAAA,GAAA,EACnC,EAAQ,GAAS,KAAK,MAAM,MAAX,EAEjB,GAAI,GAEE,EAAQ,KAAK,SAAS,GAAS,CAAA,GAAA,GACnC,EAAiB,KAAK,kCAAL,EAEjB,GAAM,GAAkB,KAAK,iCAC3B,EACA,IAAM,CACJ,GAAM,GAAS,MAAM,iBACnB,EACA,CAFa,EAKf,YAAK,2BAA2B,EAAQ,CAAxC,EAEO,CACR,CAXqB,EAgBxB,AAAA,GAAI,EAAgB,QAApB,MAAI,EAAuB,eAAe,EAAK,EAK/C,GAAM,GAAO,KAAK,8BAA8B,CAAnC,EAEb,MAAI,GAAK,OAAS,2BAA2B,EAAK,EAElD,EAAK,eAAiB,EACtB,KAAK,2BAA2B,EAAM,CAAtC,EAEO,GACN,CAhCW,EAkCV,EAIO,KAEX,GACE,EAAM,MAEN,KAAK,8BAA8B,EAAM,IAAzC,EAA+C,OAC7C,0BACF,CACA,GAAI,CAAC,EAAM,OAAS,CAAC,EAAM,QAGzB,MAAI,GAAM,KAAK,OAEb,KAAK,MACH,GAAW,gDACX,CAAE,GAAI,EAFR,EAMK,EAAM,KAIf,EAAkB,EAAM,IACzB,CAQD,GAAA,GAAI,IAAJ,MAAI,EAAK,KAEP,YAAK,MAAQ,EAAI,UACV,EAAI,KAGb,GAAI,EAEF,YAAK,MAAQ,EAAM,UACZ,EAGT,KAAI,GAAA,IAAJ,MAAI,EAAK,OAAc,EAAI,MACvB,EAAM,OAAc,EAAM,MAGxB,KAAK,MAAM,GAAW,kCAAmC,CAC7D,GAAI,CADyD,CAAzD,CAGP,CAED,MAAO,OAAM,iBAAiB,EAAqB,CAA5C,CACR,CAGD,WACE,EACsD,CACtD,GAAI,KAAK,MAAL,EAAA,EAAsB,CAExB,GAAM,GAAS,KAAK,SAAS,IAAM,CACjC,GAAM,GAAwB,KAAK,MAAM,mBACzC,KAAK,MAAM,mBAAqB,GAEhC,GAAM,GAAW,KAAK,UAAL,EAEjB,OACE,EAAS,eAET,EAAK,SAHP,EAII,KAAK,qCAAL,EAEJ,KAAK,MAAM,mBAAqB,EAE5B,KAAK,mBAAL,GAA2B,KAAK,WAAL,EAC1B,KAAK,MAAV,EAAA,GAA2B,KAAK,WAAL,EAEpB,CACR,CAlBc,EAoBf,GAAI,EAAO,OAAQ,MAAO,MAG1B,AAAI,EAAO,OAAO,MAAK,MAAQ,EAAO,WAItC,EAAK,WAAa,EAAO,KAAK,eAC1B,KAAK,WAAW,EAAO,KAAM,gBAA7B,EACA,IACL,CAED,MAAO,OAAM,WAAW,CAAjB,CACR,CAED,iBAAiB,EAAgC,CAC/C,MAAO,MAAK,MAAL,EAAA,GAAwB,MAAM,iBAAiB,CAAvB,CAChC,CAED,2BACE,EACA,EACM,CACN,AAAI,KAAK,MAAM,0BAA0B,QAAQ,EAAK,KAAlD,IAA6D,GAC/D,EAAK,OAAS,EAEd,MAAM,2BAA2B,EAAM,CAAvC,CAEH,CAED,YACE,EACA,EACA,EACA,EAA6B,GACvB,CACN,GACE,KACA,KAAK,MAAM,0BAA0B,QAAQ,EAAK,KAAlD,IAA6D,IAM/D,QAAS,GAAI,EAAG,EAAI,EAAK,OAAO,OAAQ,IACtC,AAAI,KAAK,YAAY,EAAK,OAAO,EAA7B,GAAoC,EAAI,GAC1C,KAAK,MAAM,GAAW,qBAAsB,CAAE,GAAI,EAAK,OAAO,GAA9D,EAIJ,MAAO,OAAM,YACX,EACA,EACA,EACA,CAJK,EAMR,CAED,mCAAmC,EAAmC,CACpE,MAAO,OAAM,mCACX,GAAc,KAAK,MAAM,UAAU,QAAQ,KAAK,MAAM,KAAxC,IAAmD,EAD5D,CAGR,CAED,gBACE,EACA,EACA,EACA,EACc,CACd,GACE,EAAK,OAAS,cACd,EAAK,OAAS,SACd,KAAK,MAAM,UAAU,QAAQ,CAA7B,IAA2C,GAC3C,CACA,KAAK,KAAL,EAEA,GAAM,GAAO,KAAK,YAAY,EAAU,CAA3B,EACb,EAAK,OAAS,EACd,EAAK,UAAY,MAAM,6BAAN,GAA8C,EAA9C,EACjB,EAAO,KAAK,WAAW,EAAM,gBAAtB,CACR,SACC,EAAK,OAAS,cACd,EAAK,OAAS,SACd,KAAK,MAAL,EAAA,EACA,CACA,GAAM,GAAQ,KAAK,MAAM,MAAX,EACR,EAAQ,KAAK,SACjB,GACE,KAAK,kCAAkC,EAAU,CAAjD,GACA,EAAK,EACP,CAJY,EASd,GAAI,CAAC,EAAM,OAAS,CAAC,EAAM,QAAS,MAAO,GAAM,KAEjD,GAAM,GAAS,KAAK,SAClB,IAAM,MAAM,gBAAgB,EAAM,EAAU,EAAU,CAAhD,EACN,CAFa,EAKf,GAAI,EAAO,MAAQ,CAAC,EAAO,MAAO,MAAO,GAAO,KAEhD,GAAI,EAAM,KACR,YAAK,MAAQ,EAAM,UAEZ,EAAM,KAGf,GAAI,EAAO,KACT,YAAK,MAAQ,EAAO,UACb,EAAO,KAGhB,KAAM,GAAM,OAAS,EAAO,KAC7B,CAED,MAAO,OAAM,gBAAgB,EAAM,EAAU,EAAU,CAAhD,CACR,CAED,eACE,EACA,EACA,EACA,EACA,EACc,CACd,GAAI,KAAK,MAAL,EAAA,GAA8B,KAAK,oBAAL,EAA4B,CAE5D,GADA,EAAe,oBAAsB,GACjC,EACF,SAAe,KAAO,GACf,EAET,KAAK,KAAL,EACA,GAAM,GAAO,KAAK,YAChB,EACA,CAFW,EAIb,SAAK,OAAS,EACd,EAAK,cAAgB,KAAK,oCAAL,EACrB,KAAK,OAAL,EAAA,EACA,EAAK,UAAY,KAAK,6BAAL,GAA6C,EAA7C,EACjB,EAAK,SAAW,GACT,KAAK,qBAAqB,EAAqB,EAA/C,CACR,SAAU,CAAC,GAAW,KAAK,iBAAL,GAA2B,KAAK,MAAL,EAAA,EAAmB,CACnE,GAAM,GAAO,KAAK,YAEhB,EAAU,CAFC,EAGb,EAAK,OAAS,EAEd,GAAM,GAAS,KAAK,SAAS,IAC3B,GAAK,cACH,KAAK,6CAAL,EACF,KAAK,OAAL,EAAA,EACA,EAAK,UAAY,MAAM,6BAAN,GAA8C,EAA9C,EACb,EAAe,qBAChB,GAA0C,SAAW,IAEjD,KAAK,qBACV,EACA,EAAe,mBAFV,EARM,EAcf,GAAI,EAAO,KACT,MAAI,GAAO,OAAO,MAAK,MAAQ,EAAO,WAC/B,EAAO,IAEjB,CAED,MAAO,OAAM,eACX,EACA,EACA,EACA,EACA,CALK,CAOR,CAED,eAAe,EAA6B,CAC1C,MAAM,eAAe,CAArB,EAEA,GAAI,GAAQ,KACZ,AAAI,KAAK,iBAAL,GAA2B,KAAK,MAAL,EAAA,GAC7B,GAAQ,KAAK,SAAS,IACpB,KAAK,6CAAL,CADM,EAEN,MAEJ,EAAK,cAAgB,CACtB,CAED,kCACE,EACA,EAC8C,CAC9C,GAAM,GAAO,KAAK,YAChB,EACA,CAFW,EAKb,GADA,KAAK,oBAAoB,CAAzB,EACI,EAAC,KAAK,WAAW,CAAhB,EACL,MAAO,OAAM,qBACX,EACa,OACC,EAHT,CAKR,CAED,sBAAsB,EAAoB,CACxC,GAAM,GAAO,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,EACb,GACE,IAAA,IACA,IAAI,IACJ,KAAK,MAAM,eACX,CACA,KAAK,MAAM,eAAiB,GAC5B,KAAK,MAAM,KAAO,EAClB,KAAK,UAAL,EACA,MACD,CAED,MAAM,sBAAsB,CAA5B,CACD,CAED,mBAAmB,EAAoB,CACrC,GAAM,GAAO,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,EACb,GACE,IAAI,KACJ,IAAI,IACJ,CAEA,KAAK,SAAL,EAA4B,CAA5B,EACA,MACD,CAED,MAAM,mBAAmB,CAAzB,CACD,CAED,cAAc,EAAc,EAA4B,CACtD,GAAM,GAAW,MAAM,cAAc,EAAM,CAA1B,EACjB,MAAI,MAAK,MAAM,gBACb,KAAK,MAAM,GAAW,wBAAyB,CAC7C,GAAI,KAAK,MAAM,YAAX,EADN,EAIK,CACR,CAED,kBAA+C,CAC7C,GAAI,KAAK,UAAU,cAAf,GAAkC,KAAK,gBAAL,EAAwB,CAC5D,GAAI,KAAK,MAAM,eACb,KAAM,MAAK,MAAM,GAAW,kBAAmB,CAC7C,GAAI,KAAK,MAAM,QAD8B,CAAzC,EAIR,KAAK,yBAAL,EACA,GAAM,GAAc,KAAK,gBAAL,EACpB,AAAI,GACF,MAAK,MAAM,KAAO,EAClB,KAAK,MAAM,eAAiB,IAE9B,MACD,CAED,GAAI,KAAK,MAAM,eAAgB,CAC7B,GAAM,GAAM,KAAK,MAAM,QAAQ,MAAO,KAAK,MAAM,IAAM,CAA3C,EACZ,GAAI,IAAQ,GACV,KAAM,MAAK,MAAM,EAAO,oBAAqB,CAC3C,GAAI,KAAK,MAAM,YAAX,CADuC,CAAvC,EAIR,KAAK,MAAM,IAAM,EAAM,EAAI,EAC3B,MACD,CAED,MAAO,OAAM,iBAAN,CACR,CAED,iBAAkC,CAChC,GAAM,CAAE,OAAQ,KAAK,MACjB,EAA4B,EAChC,KACE,CAAiC,GAAA,CAAA,EAAA,SAE/B,KAAK,MAAM,WAAW,EAAM,CAA5B,CAFF,GAKA,IAGF,GAAM,GAAM,KAAK,MAAM,WAAW,EAA4B,CAAlD,EACN,EAAM,KAAK,MAAM,WAAW,EAA4B,EAAM,CAAxD,EAEZ,MAAI,KAAG,IAAwB,IAAG,GACzB,EAA4B,EAGnC,KAAK,MAAM,MACT,EAA4B,EAC5B,EAA4B,EAAM,EAFpC,IAGM,eAEC,EAA4B,GAEjC,IAAG,IAAwB,IAAG,GACzB,EAEF,EACR,CAED,0BAAiC,CAE/B,GAAI,AADQ,KAAK,MAAM,QAAQ,KAAM,KAAK,MAAM,GAApC,IACA,GACV,KAAM,MAAK,MAAM,EAAO,oBAAqB,CAC3C,GAAI,KAAK,MAAM,YAAX,CADuC,CAAvC,CAIT,CAID,yCACE,EACA,CACE,WACA,cAKI,CACN,KAAK,MAAM,GAAW,gCAAiC,CACrD,GAAI,EACJ,aACA,WAHF,CAKD,CAED,sCACE,EACA,EACA,CACA,MAAO,MAAK,MACV,AAAC,EAAY,aAET,EAAY,eAAiB,SAC7B,GAAW,uCACX,GAAW,wCAHX,GAAW,wCAFV,OAAA,OAAA,CAOH,GAAI,CAPD,EAQA,CARA,CAAP,CAWD,CAED,wCACE,EACA,CACE,WACA,cAKI,CACN,KAAK,MAAM,GAAW,+BAAgC,CACpD,GAAI,EACJ,WACA,aAHF,CAKD,CAED,mDACE,EACA,CACE,YAII,CACN,KAAK,MAAM,GAAW,0CAA2C,CAC/D,GAAI,EACJ,WAFF,CAID,CAED,oBAAqC,CACnC,GAAM,GAAW,KAAK,MAAM,SACtB,EAAY,IAAM,KAAK,MAAmB,EAAA,GAAA,KAAK,MAArD,CAAA,EACA,OAAQ,KAAK,MAAM,UACjB,KAAa,CACX,GAAM,GAAU,KAAK,oBAAoB,KAAK,MAAM,KAApC,EAChB,MAAI,GAAS,EACJ,CAAE,KAAM,SAAU,IAAK,EAAQ,IAAI,MAAO,MAAO,GAEnD,CAAE,KAAM,UAAW,IAAK,EAChC,KACD,KAAgB,CACd,GAAM,GAAU,KAAK,mBAAmB,KAAK,MAAM,KAAnC,EAChB,MAAI,GAAS,EACJ,CAAE,KAAM,SAAU,IAAK,EAAQ,IAAI,MAAO,MAAO,GAEnD,CAAE,KAAM,UAAW,IAAK,EAChC,KACD,QACA,IAAgB,CACd,GAAM,GAAU,KAAK,oBAAoB,KAAK,MAAL,EAAA,CAAzB,EAChB,MAAI,GAAS,EACJ,CACL,KAAM,UACN,IAAK,EAAQ,IAAI,MACjB,MAAO,GAGJ,CAAE,KAAM,UAAW,IAAK,EAChC,SAEC,MAAO,CAAE,KAAM,UAAW,IAAK,GAEpC,CAED,mBAGE,CACA,GAAM,GAAM,KAAK,MAAM,SACjB,EAAK,KAAK,gBAAgB,EAArB,EACL,EAAO,KAAK,IAAL,EAAA,EACT,KAAK,mBAAL,EACA,CAAE,KAAM,OAAiB,OAC7B,MAAO,CAAE,KAAI,OACd,CAED,kCACE,EACA,EACA,EACM,CACN,GAAM,CAAE,gBAAiB,EACzB,AAAI,IAAiB,MAGjB,IAAiB,GACnB,KAAK,sCAAsC,EAAK,CAAhD,CAEH,CAED,gBAAgB,CACd,WACA,gBAYA,CACA,GAAM,GAAY,GAAI,KAChB,EAAU,CAEd,eAAgB,CAAA,EAEhB,cAAe,CAAA,EAEf,cAAe,CAAA,EAEf,iBAAkB,CAAA,GAEhB,EAAoB,GACxB,KAAO,CAAC,KAAK,MAAL,CAAA,GAAuB,CAC7B,GAAI,KAAK,IAAL,EAAA,EAAuB,CACzB,EAAoB,GACpB,KACD,CACD,GAAM,GAAa,KAAK,UAAL,EACb,CAAE,KAAI,QAAS,KAAK,kBAAL,EACf,EAAa,EAAG,KACtB,GAAI,IAAe,GACjB,SAEF,AAAI,SAAS,KAAK,CAAd,GACF,KAAK,MAAM,GAAW,sBAAuB,CAC3C,GAAI,EACJ,aACA,WAAY,EAAW,GAAG,YAAd,EAA8B,EAAW,MAAM,CAAjB,EAC1C,WAJF,EAOE,EAAU,IAAI,CAAd,GACF,KAAK,MAAM,GAAW,wBAAyB,CAC7C,GAAI,EACJ,aACA,WAHF,EAMF,EAAU,IAAI,CAAd,EACA,GAAM,GAAU,CAAE,WAAU,eAAc,cAE1C,OADA,EAAW,GAAK,EACR,EAAK,UACN,UAAW,CACd,KAAK,kCACH,EAAK,IACL,EACA,SAHF,EAKA,EAAW,KAAO,EAAK,MACvB,EAAQ,eAAe,KACrB,KAAK,WAAW,EAAY,mBAA5B,CADF,EAGA,KACD,KACI,SAAU,CACb,KAAK,kCAAkC,EAAK,IAAK,EAAS,QAA1D,EACA,EAAW,KAAO,EAAK,MACvB,EAAQ,cAAc,KACpB,KAAK,WAAW,EAAY,kBAA5B,CADF,EAGA,KACD,KACI,SAAU,CACb,KAAK,kCAAkC,EAAK,IAAK,EAAS,QAA1D,EACA,EAAW,KAAO,EAAK,MACvB,EAAQ,cAAc,KACpB,KAAK,WAAW,EAAY,kBAA5B,CADF,EAGA,KACD,KACI,UACH,KAAM,MAAK,sCAAsC,EAAK,IAAK,CAArD,MAEH,OACH,OAAQ,OACD,UACH,KAAK,yCACH,EAAK,IACL,CAFF,EAIA,UACG,SACH,KAAK,wCAAwC,EAAK,IAAK,CAAvD,EACA,cAEA,EAAQ,iBAAiB,KACvB,KAAK,WAAW,EAAY,qBAA5B,CADF,GAOR,AAAK,KAAK,MAAL,CAAA,GACH,KAAK,OAAL,EAAA,CAEH,CACD,MAAO,CAAE,UAAS,oBACnB,CAED,sBACE,EACA,EACA,CACE,YAIa,CACf,GAAI,EAAmB,SAAW,EAChC,MAAO,GACF,GAAI,EAAiB,SAAW,EACrC,MAAO,GACF,GAAI,EAAiB,OAAS,EAAmB,OAAQ,CAC9D,OAAW,KAAU,GACnB,KAAK,mDAAmD,EAAQ,CAC9D,WADF,EAIF,MAAO,EACR,KAAM,CACL,OAAW,KAAU,GACnB,KAAK,mDAAmD,EAAQ,CAC9D,WADF,EAIF,MAAO,EACR,CACF,CAED,0BAA0B,CACxB,YAGmB,CACnB,GAAI,CAAC,KAAK,cAAV,GAAA,EAAiC,MAAO,MAExC,GAAI,CAAC,GAAkB,KAAK,MAAM,IAAZ,EACpB,KAAM,MAAK,MAAM,GAAW,uCAAwC,CAClE,GAAI,KAAK,MAAM,SACf,UAFkE,CAA9D,EAMR,GAAM,CAAE,SAAU,KAAK,MACvB,YAAK,KAAL,EAGE,IAAU,WACV,IAAU,UACV,IAAU,UACV,IAAU,UAEV,KAAK,MAAM,GAAW,wBAAyB,CAC7C,GAAI,KAAK,MAAM,SACf,WACA,gBAAiB,EAHnB,EAOK,CACR,CAED,aAAa,EAAsB,EAAoB,CACrD,GAAM,GAAW,EAAG,KACd,EAAU,EAAG,IAAI,MACjB,EAAe,KAAK,0BAA0B,CAAE,UAAF,CAA/B,EACrB,KAAK,OAAL,CAAA,EACA,GAAM,CAAE,UAAS,qBAAsB,KAAK,gBAAgB,CAC1D,WACA,cAF0D,CAArB,EAMvC,OAFA,EAAK,kBAAoB,EAEjB,OACD,UACH,SAAK,aAAe,GACpB,EAAK,QAAU,EAAQ,eACvB,KAAK,OAAL,CAAA,EACO,KAAK,WAAW,EAAM,iBAAtB,MACJ,SACH,SAAK,aAAe,GACpB,EAAK,QAAU,EAAQ,cACvB,KAAK,OAAL,CAAA,EACO,KAAK,WAAW,EAAM,gBAAtB,MACJ,SACH,SAAK,aAAe,GACpB,EAAK,QAAU,KAAK,sBAClB,EAAQ,cACR,EAAQ,iBACR,CAAE,UAAF,CAHa,EAKf,KAAK,OAAL,CAAA,EACO,KAAK,WAAW,EAAM,gBAAtB,MACJ,SACH,SAAK,QAAU,EAAQ,iBACvB,KAAK,OAAL,CAAA,EACO,KAAK,WAAW,EAAM,gBAAtB,UACA,CAEP,GAAM,GAAQ,IACZ,GAAK,QAAU,CAAA,EACf,KAAK,OAAL,CAAA,EACO,KAAK,WAAW,EAAM,gBAAtB,GAET,EAAK,aAAe,GAEpB,GAAM,GAAW,EAAQ,eAAe,OAClC,EAAU,EAAQ,cAAc,OAChC,EAAU,EAAQ,cAAc,OAChC,EAAe,EAAQ,iBAAiB,OAE9C,GAAI,CAAC,GAAY,CAAC,GAAW,CAAC,GAAW,CAAC,EACxC,MAAO,GAAK,EACP,GAAI,CAAC,GAAY,CAAC,EACvB,SAAK,QAAU,KAAK,sBAClB,EAAQ,cACR,EAAQ,iBACR,CAAE,UAAF,CAHa,EAKf,KAAK,OAAL,CAAA,EACO,KAAK,WAAW,EAAM,gBAAtB,EACF,GAAI,CAAC,GAAW,CAAC,GAAW,GAAY,EAAc,CAC3D,OAAW,KAAU,GAAQ,iBAC3B,KAAK,yCAAyC,EAAO,IAAI,MAAO,CAC9D,WACA,WAAY,EAAO,GAAG,KAFxB,EAKF,SAAK,QAAU,EAAQ,eACvB,KAAK,OAAL,CAAA,EACO,KAAK,WAAW,EAAM,iBAAtB,UACE,CAAC,GAAY,CAAC,GAAW,GAAW,EAAc,CAC3D,OAAW,KAAU,GAAQ,iBAC3B,KAAK,wCAAwC,EAAO,IAAI,MAAO,CAC7D,WACA,WAAY,EAAO,GAAG,KAFxB,EAKF,SAAK,QAAU,EAAQ,cACvB,KAAK,OAAL,CAAA,EACO,KAAK,WAAW,EAAM,gBAAtB,CACR,KACC,aAAK,MAAM,GAAW,6BAA8B,CAClD,GAAI,EACJ,WAFF,EAIO,EAAK,CAEf,EAEJ,CAED,yBAAyB,EAA8B,CACrD,GAAM,GAAK,KAAK,gBAAL,EACX,SAAK,GAAK,EACV,EAAK,KAAO,KAAK,aAAa,KAAK,UAAL,EAAkB,CAApC,EACL,KAAK,WAAW,EAAM,iBAAtB,CACR,CAGD,qBAA+B,CAC7B,GAAM,GAAO,KAAK,eAAL,EACb,GAAI,KAAK,MAAM,WAAW,CAAtB,IAAA,GAAoD,CACtD,GAAM,GAAY,KAAK,MAAM,WAAW,EAAO,CAA7B,EAClB,MACE,KAAS,IAA2B,IADtC,EAGD,CACD,MAAO,EACR,CAED,8BAA8B,EAAc,CAC1C,MAAO,GAAK,OAAS,qBAAuB,EAAK,WAAa,CAC/D,CA18GwD,ECnTvD,GAGF,CACF,UAAW,KACX,KAAM,IACN,IAAK,IACL,KAAM,IACN,GAAI,IACJ,GAAI,IACJ,KAAM,OACN,MAAO,OACP,KAAM,OACN,MAAO,OACP,OAAQ,OACR,IAAK,OACL,OAAQ,OACR,KAAM,OACN,IAAK,OACL,KAAM,OACN,KAAM,OACN,MAAO,OACP,IAAK,OACL,IAAK,OACL,IAAK,OACL,KAAM,OACN,IAAK,OACL,OAAQ,OACR,KAAM,OACN,KAAM,OACN,MAAO,OACP,MAAO,OACP,KAAM,OACN,OAAQ,OACR,MAAO,OACP,KAAM,OACN,KAAM,OACN,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,OAAQ,OACR,KAAM,OACN,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,KAAM,OACN,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,KAAM,OACN,IAAK,OACL,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,OAAQ,OACR,KAAM,OACN,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,KAAM,OACN,OAAQ,OACR,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,OAAQ,OACR,KAAM,OACN,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,KAAM,OACN,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,KAAM,OACN,IAAK,OACL,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,OAAQ,OACR,KAAM,OACN,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,KAAM,OACN,OAAQ,OACR,MAAO,OACP,KAAM,OACN,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,KAAM,SACN,KAAM,SACN,MAAO,SACP,MAAO,SACP,KAAM,SACN,MAAO,SACP,MAAO,SACP,QAAS,SACT,KAAM,SACN,IAAK,SACL,MAAO,SACP,KAAM,SACN,MAAO,SACP,OAAQ,SACR,GAAI,SACJ,GAAI,SACJ,GAAI,SACJ,QAAS,SACT,GAAI,SACJ,IAAK,SACL,MAAO,SACP,IAAK,SACL,QAAS,SACT,IAAK,SACL,IAAK,SACL,IAAK,SACL,MAAO,SACP,MAAO,SACP,KAAM,SACN,MAAO,SACP,MAAO,SACP,QAAS,SACT,KAAM,SACN,IAAK,SACL,MAAO,SACP,KAAM,SACN,MAAO,SACP,OAAQ,SACR,GAAI,SACJ,GAAI,SACJ,GAAI,SACJ,QAAS,SACT,GAAI,SACJ,IAAK,SACL,OAAQ,SACR,MAAO,SACP,IAAK,SACL,QAAS,SACT,IAAK,SACL,IAAK,SACL,IAAK,SACL,MAAO,SACP,SAAU,SACV,MAAO,SACP,IAAK,SACL,KAAM,SACN,KAAM,SACN,OAAQ,SACR,KAAM,SACN,IAAK,SACL,IAAK,SACL,IAAK,SACL,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,MAAO,SACP,MAAO,SACP,KAAM,SACN,MAAO,SACP,OAAQ,SACR,KAAM,SACN,MAAO,SACP,QAAS,SACT,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,MAAO,SACP,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,KAAM,SACN,OAAQ,SACR,KAAM,SACN,MAAO,SACP,MAAO,SACP,MAAO,SACP,KAAM,SACN,MAAO,SACP,GAAI,SACJ,KAAM,SACN,IAAK,SACL,MAAO,SACP,OAAQ,SACR,MAAO,SACP,KAAM,SACN,MAAO,SACP,IAAK,SACL,IAAK,SACL,GAAI,SACJ,IAAK,SACL,IAAK,SACL,IAAK,SACL,OAAQ,SACR,IAAK,SACL,KAAM,SACN,MAAO,SACP,GAAI,SACJ,MAAO,SACP,GAAI,SACJ,GAAI,SACJ,IAAK,SACL,IAAK,SACL,KAAM,SACN,KAAM,SACN,KAAM,SACN,MAAO,SACP,OAAQ,SACR,KAAM,SACN,KAAM,SACN,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,KAAM,SACN,KAAM,SACN,IAAK,SACL,OAAQ,SACR,MAAO,SACP,OAAQ,SACR,MAAO,QA9PL,ECmBE,GAAY,QAAoB,CACpC,iBACE,+DACF,yBAA0B,CAAC,CAAE,oBAC1B,+CAA8C,MACjD,0BAA2B,iDAC3B,6BACE,2GAEF,gBAAiB,CAAC,CAChB,aACA,gBAKC,sBAAqB,uBAAgC,cAAuB,SAC/E,oBACE,iEACF,uBAAwB,6BACxB,6BACE,kGArBkC,CAApB,EA0BlB,YAAoB,EAAuC,CACzD,MAAO,GACH,EAAO,OAAS,sBACd,EAAO,OAAS,qBAClB,EACL,CAID,YACE,EACQ,CACR,GAAI,EAAO,OAAS,gBAClB,MAAO,GAAO,KAGhB,GAAI,EAAO,OAAS,oBAClB,MAAO,GAAO,UAAU,KAAO,IAAM,EAAO,KAAK,KAGnD,GAAI,EAAO,OAAS,sBAClB,MACE,IAAoB,EAAO,MAAR,EACnB,IACA,GAAoB,EAAO,QAAR,EAKvB,KAAM,IAAI,OAAM,6BAA+B,EAAO,IAAhD,CACP,CAQD,GAAA,IAAgB,GACd,aAA6B,EAA8C,CAGzE,cAAqB,CACnB,GAAI,GAAM,GACN,EAAa,KAAK,MAAM,IAC5B,OAAS,CACP,GAAI,KAAK,MAAM,KAAO,KAAK,OACzB,KAAM,MAAK,MAAM,GAAU,uBAAwB,CACjD,GAAI,KAAK,MAAM,QADkC,CAA7C,EAKR,GAAM,GAAK,KAAK,MAAM,WAAW,KAAK,MAAM,GAAjC,EAEX,OAAQ,OACN,QACA,KACE,MAAI,MAAK,MAAM,MAAQ,KAAK,MAAM,MAC5B,IAAA,IAA6B,KAAK,MAAM,mBAC1C,GAAE,KAAK,MAAM,IACN,KAAK,YAAZ,GAAA,GAEK,MAAM,iBAAiB,CAAvB,EAET,IAAO,KAAK,MAAM,MAAM,EAAY,KAAK,MAAM,GAAxC,EACA,KAAK,YAAwB,IAAA,CAA7B,OAET,IACE,GAAO,KAAK,MAAM,MAAM,EAAY,KAAK,MAAM,GAAxC,EACP,GAAO,KAAK,cAAL,EACP,EAAa,KAAK,MAAM,IACxB,UAEF,QACA,aAYE,AAAI,GAAU,CAAD,EACX,IAAO,KAAK,MAAM,MAAM,EAAY,KAAK,MAAM,GAAxC,EACP,GAAO,KAAK,eAAe,EAApB,EACP,EAAa,KAAK,MAAM,KAExB,EAAE,KAAK,MAAM,IAGpB,CACF,CAED,eAAe,EAAgC,CAC7C,GAAM,GAAK,KAAK,MAAM,WAAW,KAAK,MAAM,GAAjC,EACP,EACJ,QAAE,KAAK,MAAM,IACb,AACE,IAAE,IACF,KAAK,MAAM,WAAW,KAAK,MAAM,GAAjC,IAAA,GAEA,GAAE,KAAK,MAAM,IACb,EAAM,EAAgB;EAAO;GAE7B,EAAM,OAAO,aAAa,CAApB,EAER,EAAE,KAAK,MAAM,QACb,KAAK,MAAM,UAAY,KAAK,MAAM,IAE3B,CACR,CAED,cAAc,EAAqB,CACjC,GAAI,GAAM,GACN,EAAa,EAAE,KAAK,MAAM,IAC9B,OAAS,CACP,GAAI,KAAK,MAAM,KAAO,KAAK,OACzB,KAAM,MAAK,MAAM,EAAO,mBAAoB,CAC1C,GAAI,KAAK,MAAM,QAD2B,CAAtC,EAKR,GAAM,GAAK,KAAK,MAAM,WAAW,KAAK,MAAM,GAAjC,EACX,GAAI,IAAO,EAAO,MAClB,AAAI,IAAE,GACJ,IAAO,KAAK,MAAM,MAAM,EAAY,KAAK,MAAM,GAAxC,EACP,GAAO,KAAK,cAAL,EACP,EAAa,KAAK,MAAM,KACnB,AAAI,GAAU,CAAD,EAClB,IAAO,KAAK,MAAM,MAAM,EAAY,KAAK,MAAM,GAAxC,EACP,GAAO,KAAK,eAAe,EAApB,EACP,EAAa,KAAK,MAAM,KAExB,EAAE,KAAK,MAAM,GAEhB,CACD,UAAO,KAAK,MAAM,MAAM,EAAY,KAAK,MAAM,KAAxC,EACA,KAAK,YAAuB,IAAA,CAA5B,CACR,CAED,eAAwB,CACtB,GAAM,GAAW,EAAE,KAAK,MAAM,IAC9B,GAAI,KAAK,eAAe,KAAK,MAAM,GAA/B,IAAA,GAA8D,CAChE,EAAE,KAAK,MAAM,IAEb,GAAI,GAAQ,GACZ,AAAI,KAAK,eAAe,KAAK,MAAM,GAA/B,IAAA,KACF,GAAQ,GACR,EAAE,KAAK,MAAM,KAGf,GAAM,GAAY,KAAK,QACrB,EACU,OACK,GACS,MAJR,EAMlB,GACE,IAAc,MACd,KAAK,eAAe,KAAK,MAAM,GAA/B,IAAA,GAEA,QAAE,KAAK,MAAM,IACN,OAAO,cAAc,CAArB,CAEV,KAAM,CACL,GAAI,GAAQ,EACR,EAAO,GACX,KACE,IAAU,IACV,KAAK,MAAM,IAAM,KAAK,QACtB,CAAE,GAAO,KAAK,eAAe,KAAK,MAAM,GAA/B,GAAT,KAEA,EAAE,KAAK,MAAM,IAGf,GAAI,EAAM,CACR,GAAM,GAAO,KAAK,MAAM,MAAM,EAAU,KAAK,MAAM,GAAtC,EACP,EAAS,GAAc,GAG7B,GAFA,EAAE,KAAK,MAAM,IAET,EACF,MAAO,EAEV,CACF,CAGD,YAAK,MAAM,IAAM,EACV,GACR,CASD,aAAoB,CAClB,GAAI,GACE,EAAQ,KAAK,MAAM,IACzB,EACE,GAAK,KAAK,MAAM,WAAW,EAAE,KAAK,MAAM,GAAnC,QACE,GAAiB,CAAD,GAAQ,IAFjC,IAGA,MAAO,MAAK,YAEV,IAAA,KAAK,MAAM,MAAM,EAAO,KAAK,MAAM,GAAnC,CAFK,CAIR,CAID,oBAAsC,CACpC,GAAM,GAAO,KAAK,UAAL,EACb,MAAI,MAAK,MAAL,GAAA,EACF,EAAK,KAAO,KAAK,MAAM,MAClB,AAAI,GAAe,KAAK,MAAM,IAAZ,EACvB,EAAK,KAAO,GAAe,KAAK,MAAM,IAAZ,EAE1B,KAAK,WAAL,EAEF,KAAK,KAAL,EACO,KAAK,WAAW,EAAM,eAAtB,CACR,CAID,wBAA8C,CAC5C,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SACtB,EAAO,KAAK,mBAAL,EACb,GAAI,CAAC,KAAK,IAAV,EAAA,EAAyB,MAAO,GAEhC,GAAM,GAAO,KAAK,YAAY,EAAU,CAA3B,EACb,SAAK,UAAY,EACjB,EAAK,KAAO,KAAK,mBAAL,EACL,KAAK,WAAW,EAAM,mBAAtB,CACR,CAKD,qBAG0B,CACxB,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SACxB,EAAO,KAAK,uBAAL,EACX,GAAI,EAAK,OAAS,oBAChB,MAAO,GAET,KAAO,KAAK,IAAL,EAAA,GAAkB,CACvB,GAAM,GAAU,KAAK,YAAY,EAAU,CAA3B,EAChB,EAAQ,OAAS,EACjB,EAAQ,SAAW,KAAK,mBAAL,EACnB,EAAO,KAAK,WAAW,EAAS,qBAAzB,CACR,CACD,MAAO,EACR,CAID,wBAAuC,CACrC,GAAI,GACJ,OAAQ,KAAK,MAAM,UACjB,GACE,SAAO,KAAK,UAAL,EACP,KAAK,WAAW,GAAG,KAAnB,EACA,KAAK,KAAL,EACA,EAAO,KAAK,4BAA4B,EAAM,GAAG,MAA1C,EACH,EAAK,WAAW,OAAS,sBAC3B,KAAK,MAAM,GAAU,iBAAkB,CAAE,GAAI,EAA7C,EAEK,MAET,SACA,KACE,MAAO,MAAK,cAAL,UAGP,KAAM,MAAK,MAAM,GAAU,oBAAqB,CAC9C,GAAI,KAAK,MAAM,QAD+B,CAA1C,EAIX,CAMD,yBAAgD,CAC9C,GAAM,GAAO,KAAK,YAChB,KAAK,MAAM,cAAc,MACzB,KAAK,MAAM,aAFA,EAIb,MAAO,MAAK,aAAa,EAAM,qBAAsB,KAAK,MAAM,QAAzD,CACR,CAID,oBAAoB,EAAkD,CACpE,YAAK,KAAL,EACA,EAAK,WAAa,KAAK,gBAAL,EAClB,KAAK,WAAW,GAAG,MAAnB,EACA,KAAK,MAAM,mBAAqB,GAChC,KAAK,OAAL,CAAA,EAEO,KAAK,WAAW,EAAM,gBAAtB,CACR,CAID,4BACE,EACA,EAC0B,CAC1B,GAAI,KAAK,MAAL,CAAA,EACF,EAAK,WAAa,KAAK,wBAAL,MACb,CACL,GAAM,GAAa,KAAK,gBAAL,EAanB,EAAK,WAAa,CACnB,CACD,YAAK,WAAW,CAAhB,EACA,KAAK,MAAM,mBAAqB,GAChC,KAAK,OAAL,CAAA,EAEO,KAAK,WAAW,EAAM,wBAAtB,CACR,CAID,mBAAoC,CAClC,GAAM,GAAO,KAAK,UAAL,EACb,MAAI,MAAK,MAAL,CAAA,EACF,MAAK,WAAW,GAAG,KAAnB,EACA,KAAK,KAAL,EACA,KAAK,OAAL,EAAA,EACA,EAAK,SAAW,KAAK,wBAAL,EAChB,KAAK,WAAW,GAAG,MAAnB,EACA,KAAK,MAAM,mBAAqB,GAChC,KAAK,OAAL,CAAA,EACO,KAAK,WAAW,EAAM,oBAAtB,GAET,GAAK,KAAO,KAAK,uBAAL,EACZ,EAAK,MAAQ,KAAK,IAAL,EAAA,EAAkB,KAAK,uBAAL,EAAgC,KACxD,KAAK,WAAW,EAAM,cAAtB,EACR,CAID,yBACE,EACA,EACqB,CACrB,GAAM,GAAO,KAAK,YAChB,EACA,CAFW,EAIb,MAAI,MAAK,IAAL,GAAA,EAEK,KAAK,WAAW,EAAM,oBAAtB,EAET,GAAK,KAAO,KAAK,oBAAL,EACL,KAAK,gCACV,CADK,EAGR,CAED,gCACE,EACqB,CACrB,GAAM,GAA+B,CAAA,EACrC,KAAO,CAAC,KAAK,MAAL,EAAA,GAAwB,CAAC,KAAK,MAAL,GAAA,GAC/B,EAAW,KAAK,KAAK,kBAAL,CAAhB,EAEF,SAAK,WAAa,EAClB,EAAK,YAAc,KAAK,IAAxB,EAAA,EACA,KAAK,OAAL,GAAA,EACO,KAAK,WAAW,EAAM,mBAAtB,CACR,CAID,yBACE,EACA,EACqB,CACrB,GAAM,GAAO,KAAK,YAAY,EAAU,CAA3B,EACb,MAAI,MAAK,IAAL,GAAA,EACK,KAAK,WAAW,EAAM,oBAAtB,EAET,GAAK,KAAO,KAAK,oBAAL,EACZ,KAAK,OAAL,GAAA,EACO,KAAK,WAAW,EAAM,mBAAtB,EACR,CAKD,kBAAkB,EAAkB,EAAkC,CACpE,GAAM,GAAO,KAAK,YAAY,EAAU,CAA3B,EACP,EAAW,CAAA,EACX,EAAiB,KAAK,yBAAyB,EAAU,CAAxC,EACnB,EAAiB,KAErB,GAAI,CAAC,EAAe,YAAa,CAC/B,EAAU,OACR,OAAQ,KAAK,MAAM,UACjB,KAIE,GAHA,EAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SACtB,KAAK,KAAL,EACI,KAAK,IAAL,EAAA,EAAoB,CACtB,EAAiB,KAAK,yBACpB,EACA,CAFe,EAIjB,OACD,CACD,EAAS,KAAK,KAAK,kBAAkB,EAAU,CAAjC,CAAd,EACA,UAEF,KACE,EAAS,KAAK,KAAK,cAAL,CAAd,EACA,UAEF,GAAgB,CACd,GAAM,GAAO,KAAK,UAAL,EAGb,KAAK,WAAW,GAAG,KAAnB,EACA,KAAK,KAAL,EACA,AAAI,KAAK,MAAL,EAAA,EACF,EAAS,KACP,KAAK,oBAAoB,CAAzB,CADF,EAIA,EAAS,KACP,KAAK,4BACH,EACA,GAAG,MAFL,CADF,EAQF,KACD,SAGC,KAAM,MAAK,WAAL,EAIZ,AACE,GAAW,CAAD,GACV,CAAC,GAAW,CAAD,GACX,IAAmB,KAEnB,KAAK,MAAM,GAAU,0BAA2B,CAC9C,GAAI,EADN,EAGK,AAAI,CAAC,GAAW,CAAD,GAAoB,GAAW,CAAD,EAClD,KAAK,MAAM,GAAU,yBAA0B,CAC7C,GAAI,EACJ,eAAgB,GAAoB,EAAe,IAAhB,EAFrC,EAIS,CAAC,GAAW,CAAD,GAAoB,CAAC,GAAW,CAAD,GAEjD,GAAoB,EAAe,IAAhB,IACnB,GAAoB,EAAe,IAAhB,GAEnB,KAAK,MAAM,GAAU,yBAA0B,CAC7C,GAAI,EACJ,eAAgB,GAAoB,EAAe,IAAhB,EAFrC,CAML,CAUD,GARA,AAAI,GAAW,CAAD,EACZ,GAAK,gBAAkB,EACvB,EAAK,gBAAkB,GAEvB,GAAK,eAAiB,EACtB,EAAK,eAAiB,GAExB,EAAK,SAAW,EACZ,KAAK,MAAL,EAAA,EACF,KAAM,MAAK,MAAM,GAAU,6BAA8B,CACvD,GAAI,KAAK,MAAM,QADwC,CAAnD,EAKR,MAAO,IAAW,CAAD,EACb,KAAK,WAAW,EAAM,aAAtB,EACA,KAAK,WAAW,EAAM,YAAtB,CACL,CAID,iBAAgC,CAC9B,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SAC5B,YAAK,KAAL,EACO,KAAK,kBAAkB,EAAU,CAAjC,CACR,CAED,WAAW,EAAwB,CACjC,GAAM,CAAE,WAAY,KAAK,MACzB,EAAQ,EAAQ,OAAS,GAAK,CAC/B,CAMD,cAAc,EAA6D,CACzE,MAAI,MAAK,MAAL,GAAA,EACK,KAAK,aAAa,KAAK,MAAM,MAAO,SAApC,EACE,KAAK,MAAL,GAAA,EACF,KAAK,gBAAL,EAEP,KAAK,MAAL,EAAA,GACA,KAAK,MAAM,WAAW,KAAK,MAAM,GAAjC,IAAA,GAIA,MAAK,aAAL,GAAA,EACO,KAAK,gBAAL,GAEA,MAAM,cAAc,CAApB,CAEV,CAED,WAAY,CAEV,AAAK,AADc,KAAK,WAAL,EACH,eAAe,MAAM,UAAN,CAChC,CAED,iBAAiB,EAAoB,CACnC,GAAM,GAAU,KAAK,WAAL,EAEhB,GAAI,IAAY,GAAG,OACjB,MAAO,MAAK,aAAL,EAGT,GAAI,IAAY,GAAG,QAAU,IAAY,GAAG,OAAQ,CAClD,GAAI,GAAkB,CAAD,EACnB,MAAO,MAAK,YAAL,EAGT,GAAI,IAAI,GACN,QAAE,KAAK,MAAM,IACN,KAAK,YAAZ,GAAA,EAGF,GACG,KAAA,IAAoC,IAAI,KACzC,IAAY,GAAG,OAEf,MAAO,MAAK,cAAc,CAAnB,CAEV,CAED,MACE,KAAI,IACJ,KAAK,MAAM,oBACX,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,IAAA,GAEA,GAAE,KAAK,MAAM,IACN,KAAK,YAAZ,GAAA,GAGK,MAAM,iBAAiB,CAAvB,CACR,CAED,cAAc,EAA2B,CACvC,GAAM,CAAE,UAAS,QAAS,KAAK,MAC/B,GAAI,IAAI,IAAiB,IAAQ,IAG/B,EAAQ,OAAO,GAAI,EAAG,GAAG,MAAzB,EACA,KAAK,MAAM,mBAAqB,WACvB,IAAI,IAEb,EAAQ,KAAK,GAAG,MAAhB,UACS,IAAI,IAAmB,CAChC,GAAM,GAAM,EAAQ,EAAQ,OAAS,GACrC,AAAK,IAAQ,GAAG,QAAU,IAAtB,IAAgD,IAAQ,GAAG,OAC7D,GAAQ,IAAR,EACA,KAAK,MAAM,mBACT,EAAQ,EAAQ,OAAS,KAAO,GAAG,QAErC,MAAK,WAAW,GAAG,MAAnB,EACA,KAAK,MAAM,mBAAqB,GAEnC,KACC,MAAK,MAAM,mBAAqB,GAA2B,CAAD,CAE7D,CAjkBwE,ECtE7E,gBAA8B,GAAM,CAAA,eAAA,EAAA,CAAA,MAAA,GAAA,CAAA,EAAA,KAClC,MAAqB,GAAI,KADS,KAIlC,MAAqB,GAAI,KAJS,KAOlC,WAA0B,GAAI,KAPI,KAUlC,QAAuB,GAAI,KAVO,KAgBlC,mBAAkC,GAAI,IAhBJ,CAAA,EAsBrB,gBAAqC,GAA8B,CAAA,eAAA,EAAA,CAAA,MAAA,GAAA,CAAA,EAAA,KAChF,aAA8B,CAAA,CADkD,CAGhF,YAAY,EAAoC,CAC9C,YAAK,aAAa,KAAK,GAAI,IAA3B,EAEO,GAAI,IAAgB,CAApB,CACR,CAED,MAAM,EAAqB,CACzB,AAAI,GAAS,IACX,KAAK,aAAa,KAAK,GAAI,IAA3B,EAGF,MAAM,MAAM,CAAZ,CACD,CAED,MAAO,CACL,GAAM,GAAQ,MAAM,KAAN,EAEd,MAAI,IAAS,IACX,KAAK,aAAa,IAAlB,EAGK,CACR,CAED,UAAU,EAAc,EAAuB,CAC7C,GAAM,GAAM,KAAK,aAAa,OAC9B,GAAI,KAAK,aAAa,EAAM,GAAG,IAAI,CAA/B,EACF,MAAO,GAET,GAAI,CAAC,GAAe,EAAM,GACxB,OAAS,GAAI,EAAG,EAAI,EAAM,EAAG,IAC3B,GAAI,KAAK,aAAa,GAAG,IAAI,CAAzB,EAAgC,MAAO,GAG/C,MAAO,EACR,CAED,YAAY,EAAc,EAA2B,EAAe,CAClE,GAAI,EAAc,GAAsB,CACtC,AAAI,KAAK,UAAU,EAAM,EAArB,GACF,KAAK,OAAO,MAAM,EAAO,iBAAkB,CACzC,GAAI,EACJ,eAAgB,EAFlB,EAKF,KAAK,aAAa,KAAK,aAAa,OAAS,GAAG,IAAI,CAApD,EACA,MACD,CAED,GAAM,GAAQ,KAAK,aAAL,EACd,GAAI,EAAc,GAA2B,CAC3C,KAAK,mBAAmB,EAAO,CAA/B,EACA,EAAM,mBAAmB,IAAI,CAA7B,EACA,MACD,CAED,MAAM,YAAY,EAAM,EAAa,CAArC,EAEI,EAAc,IACV,GAAc,IAElB,MAAK,0BAA0B,EAAO,EAAM,EAAa,CAAzD,EACA,KAAK,mBAAmB,EAAO,CAA/B,GAEF,EAAM,MAAM,IAAI,CAAhB,GAEE,EAAc,IAAoB,EAAM,MAAM,IAAI,CAAhB,EAClC,EAAc,IAA0B,EAAM,WAAW,IAAI,CAArB,EACxC,EAAc,IAAkB,EAAM,QAAQ,IAAI,CAAlB,CACrC,CAED,oBACE,EACA,EACA,EACS,CACT,GAAI,EAAM,MAAM,IAAI,CAAhB,EAAuB,CACzB,GAAI,EAAc,GAAoB,CAGpC,GAAM,GAAU,CAAC,CAAE,GAAc,IAC3B,EAAW,EAAM,WAAW,IAAI,CAArB,EACjB,MAAO,KAAY,CACpB,CACD,MAAO,EACR,CACD,MAAI,GAAc,IAAoB,EAAM,QAAQ,IAAI,CAAlB,EAChC,EAAM,QAAQ,IAAI,CAAlB,EAEK,CAAC,CAAE,GAAc,IAGjB,GAGP,EAAc,IAAkB,EAAM,MAAM,IAAI,CAAhB,EAC3B,GAGF,MAAM,oBAAoB,EAAO,EAAM,CAAvC,CACR,CAED,iBAAiB,EAAkB,CACjC,GAAM,CAAE,QAAS,EAEjB,GAAI,KAAK,UAAU,CAAf,EAAsB,OAE1B,GAAM,GAAM,KAAK,WAAW,OAC5B,OAAS,GAAI,EAAM,EAAG,GAAK,EAAG,IAAK,CACjC,GAAM,GAAQ,KAAK,WAAW,GAC9B,GAAI,EAAM,MAAM,IAAI,CAAhB,GAAyB,EAAM,mBAAmB,IAAI,CAA7B,EAAoC,MAClE,CAED,MAAM,iBAAiB,CAAvB,CACD,CArH+E,ECK5E,GAAS,CAAe,EAAW,IACvC,OAAO,eAAe,KAAK,EAAQ,CAAnC,GAA2C,EAAO,GAWpD,YAAoB,EAAiB,CACnC,GAAI,GAAK,KACP,KAAM,IAAI,OAAO,cAAa,UAAxB,EAER,MAAO,EACR,CAED,YAAgB,EAAkB,CAChC,GAAI,CAAC,EACH,KAAM,IAAI,OAAM,aAAV,CAET,CAgBD,GAAM,GAAW,eAA2B,CAC1C,gCAAiC,CAAC,CAAE,gBACjC,WAAU,kEACb,+BAAgC,CAAC,CAC/B,kBAIC,aAAY,+DACf,kCACE,8DACF,gCAAiC,2CACjC,eAAgB,CAAC,CAAE,UAA8B,qBAAoB,MACrE,sBAAuB,oDACvB,uBAAwB,qDACxB,oEACE,6GACF,6BACE,8DACF,gBAAiB,CAAC,CAAE,UACjB,+BAA8B,SACjC,gCACE,oDACF,iCACE,4DACF,+BAGE,CAAC,CAAE,cACA,uCACL,kBAAmB,CAAC,CAAE,cACnB,wBAAuB,MAG1B,wBAAyB,CAAC,CAAE,WACzB,IAAG,2BACN,mBAAoB,sCACpB,oBAAqB,uCACrB,kCACE,+DACF,yBAA0B,6CAC1B,sBAAuB,CAAC,CACtB,eAIC,IAAG,EAAU,qCAAqC,EAAU,gBAC/D,0BACE,wDACF,+BAAgC,CAAC,CAC/B,cAIC,4DAA2D,OAC9D,yBACE,uDACF,0BACE,2DACF,wBACE,sDACF,sCACE,oDACF,4BAA6B,CAAC,CAAE,cAC7B,IAAG,8CACN,+BAAgC,CAAC,CAAE,cAChC,IAAG,iDACN,wCAAyC,CAAC,CACxC,cAIC,IAAG,uFACN,sBAAuB,CAAC,CACtB,sBAIC,IAAG,EAAiB,8BAA8B,EAAiB,gBACtE,kDACE,4JAEF,wBACE,0DACF,qBACE,8DACF,iCACE,2DACF,kCACE,6DACF,yCACE,mFACF,2BACE,wDACF,sBACE,6GACF,kBACE,iFACF,0BACE,wDACF,+BAAgC,CAAC,CAC/B,cAIC,4DAA2D,OAC9D,2BACE,oFACF,uBACE,iHACF,sBACE,oGACF,sCACE,sDACF,kCACE,+CACF,+BACE,yDACF,wCAAyC,CAAC,CACxC,uBAIC,yBAAwB,mDAAmE,OAC9F,8BACE,gDACF,0BACE,oHACF,uCACE,mFACF,gCACE,2GACF,gCACE,2GACF,4BACE,wEACF,mBACE,+EACF,yBAA0B,yCAC1B,8BAA+B,8CAC/B,8BACE,sDACF,iCACE,oEACF,kCAAmC,CAAC,CAAE,UACnC,yFAAwF,IAjJjD,CAA3B,EAwJjB,YACE,EACwC,CACxC,OAAQ,OACD,MACH,MAAO,mBACJ,UACH,MAAO,uBACJ,SACH,MAAO,sBACJ,QACH,MAAO,qBACJ,SACH,MAAO,sBACJ,SACH,MAAO,sBACJ,SACH,MAAO,sBACJ,SACH,MAAO,sBACJ,YACH,MAAO,yBACJ,UACH,MAAO,2BAEP,OAEL,CAED,YAA4B,EAA+C,CACzE,MACE,KAAa,WAAa,IAAa,UAAY,IAAa,WAEnE,CAED,YACE,EACmC,CACnC,MAAO,KAAa,MAAQ,IAAa,KAC1C,CASD,GAAA,IAAgB,GACd,aAAoC,EAA6B,CAC/D,iBAEE,CACA,MAAO,GACR,CAED,gBAA0B,CAGxB,MAAO,IAAkB,KAAK,MAAM,IAAZ,CACzB,CAED,0BAA2B,CACzB,MACG,MAAK,MACJ,CAAA,GAAA,KAAK,MAAL,CAAA,GACA,KAAK,MAAL,EAAA,GACA,KAAK,MAAL,EAAA,GACA,KAAK,MAAL,GAAA,GACA,KAAK,sBAAL,IACF,CAAC,KAAK,sBAAL,CAEJ,CAED,8BAA+B,CAK7B,YAAK,KAAL,EACO,KAAK,yBAAL,CACR,CAGD,gBACE,EACA,EACsB,CACtB,GAAI,CAAC,GAAkB,KAAK,MAAM,IAAZ,GAAqB,KAAK,MAAM,OAAX,GACzC,OAGF,GAAM,GAAW,KAAK,MAAM,MAC5B,GAAI,EAAiB,QAAQ,CAAzB,IAAuC,GAAI,CAC7C,GAAI,GAAiC,KAAK,wBAAL,EACnC,OAEF,GAAI,KAAK,WAAW,KAAK,6BAA6B,KAAK,IAAvC,CAAhB,EACF,MAAO,EAEV,CAEF,CAOD,iBAAiB,CACf,WACA,mBACA,sBACA,gCACA,gBAAgB,EAAS,6BAQlB,CACP,GAAM,GAAe,CACnB,EACA,EACA,EACA,IACG,CACH,AAAI,IAAa,GAAU,EAAS,IAClC,KAAK,MAAM,EAAS,sBAAuB,CACzC,GAAI,EACJ,iBAAkB,CAAC,EAAQ,CAAT,EAFpB,GAME,EAAe,CACnB,EACA,EACA,EACA,IACG,CACH,AACG,GAAS,IAAS,IAAa,GAC/B,EAAS,IAAS,IAAa,IAEhC,KAAK,MAAM,EAAS,sBAAuB,CACzC,GAAI,EACJ,UAAW,CAAC,EAAM,CAAP,EAFb,GAOJ,OAAS,CACP,GAAM,CAAE,YAAa,KAAK,MACpB,EAA0C,KAAK,gBACnD,EAAiB,OAAO,GAAxB,KAAwB,EAAuB,CAAA,CAA/C,EACA,CAF8C,EAKhD,GAAI,CAAC,EAAU,MAEf,AAAI,GAAmB,CAAD,EACpB,AAAI,EAAS,cACX,KAAK,MAAM,EAAS,+BAAgC,CAClD,GAAI,EACJ,WAFF,EAKA,GAAa,EAAU,EAAU,EAAU,UAA/B,EACZ,EAAa,EAAU,EAAU,EAAU,QAA/B,EACZ,EAAa,EAAU,EAAU,EAAU,UAA/B,EAEZ,EAAS,cAAgB,GAEtB,AAAI,GAAwB,CAAD,EAC5B,GAAS,IACX,KAAK,MAAM,EAAS,kBAAmB,CAAE,GAAI,EAAU,WAAvD,EAEF,EAAS,GAAY,GAErB,EAAa,EAAU,EAAU,KAAM,KAA3B,GAEZ,CAAI,OAAO,eAAe,KAAK,EAAU,CAArC,EACF,KAAK,MAAM,EAAS,kBAAmB,CAAE,GAAI,EAAU,WAAvD,EAEA,GAAa,EAAU,EAAU,SAAU,UAA/B,EACZ,EAAa,EAAU,EAAU,SAAU,UAA/B,EACZ,EAAa,EAAU,EAAU,WAAY,UAAjC,EACZ,EAAa,EAAU,EAAU,WAAY,UAAjC,EAEZ,EAAa,EAAU,EAAU,UAAW,UAAhC,EACZ,EAAa,EAAU,EAAU,SAAU,UAA/B,GAEd,EAAS,GAAY,IAGnB,GAAJ,MAAI,EAAqB,SAAS,CAA9B,GACF,KAAK,MAAM,EAAe,CACxB,GAAI,EACJ,WAFF,CAKH,CACF,CAED,mBAAmB,EAA+B,CAChD,OAAQ,OACD,kBACA,cACH,MAAO,MAAK,MAAZ,CAAA,MACG,wBACH,MAAO,MAAK,MAAZ,CAAA,MACG,oBACH,MAAO,MAAK,MAAZ,CAAA,MACG,4BACH,MAAO,MAAK,MAAZ,EAAA,EAGJ,KAAM,IAAI,OAAM,aAAV,CACP,CAED,YACE,EACA,EACK,CACL,GAAM,GAAc,CAAA,EACpB,KAAO,CAAC,KAAK,mBAAmB,CAAxB,GAEN,EAAO,KAAK,EAAY,CAAxB,EAEF,MAAO,EACR,CAED,qBACE,EACA,EACA,EAGK,CACL,MAAO,IACL,KAAK,2BACH,EACA,EACoB,GACpB,CAJF,CADY,CAQf,CAMD,2BACE,EACA,EACA,EACA,EAGwB,CACxB,GAAM,GAAS,CAAA,EACX,EAAmB,GAEvB,KACM,MAAK,mBAAmB,CAAxB,GADG,CAIP,EAAmB,GAEnB,GAAM,GAAU,EAAY,EAC5B,GAAI,GAAW,KACb,OAIF,GAFA,EAAO,KAAK,CAAZ,EAEI,KAAK,IAAL,EAAA,EAAoB,CACtB,EAAmB,KAAK,MAAM,aAC9B,QACD,CAED,GAAI,KAAK,mBAAmB,CAAxB,EACF,MAGF,AAAI,GAEF,KAAK,OAAL,EAAA,EAEF,MACD,CAED,MAAI,IACF,GAAoB,MAAQ,GAGvB,CACR,CAED,qBACE,EACA,EACA,EACA,EACA,EAGK,CACL,AAAK,GACH,CAAI,EACF,KAAK,OAAL,CAAA,EAEA,KAAK,OAAL,EAAA,GAIJ,GAAM,GAAS,KAAK,qBAClB,EACA,EACA,CAHa,EAMf,MAAI,GACF,KAAK,OAAL,CAAA,EAEA,KAAK,OAAL,EAAA,EAGK,CACR,CAED,mBAAoC,CAClC,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,OAAL,EAAA,EACA,KAAK,OAAL,EAAA,EACK,KAAK,MAAL,GAAA,GACH,KAAK,MAAM,EAAS,8BAA+B,CACjD,GAAI,KAAK,MAAM,SADjB,EAMF,EAAK,SAAW,MAAM,cAAN,EAChB,KAAK,OAAL,EAAA,EAEI,KAAK,IAAL,EAAA,GAGF,GAAK,UAAY,KAAK,kBAAL,GAEf,KAAK,MAAL,EAAA,GACF,GAAK,eAAiB,KAAK,qBAAL,GAEjB,KAAK,WAAW,EAAM,cAAtB,CACR,CAED,kBAAkB,EAA8B,GAAsB,CACpE,GAAI,GAAyB,KAAK,gBAAgB,CAArB,EAC7B,KAAO,KAAK,IAAL,EAAA,GAAkB,CACvB,GAAM,GACJ,KAAK,gBAAmC,CAAxC,EACF,EAAK,KAAO,EACZ,EAAK,MAAQ,KAAK,gBAAgB,CAArB,EACb,EAAS,KAAK,WAAW,EAAM,iBAAtB,CACV,CACD,MAAO,EACR,CAED,sBAA0C,CACxC,GAAM,GAAO,KAAK,UAAL,EACb,SAAK,SAAW,KAAK,kBAAL,EACZ,CAAC,KAAK,sBAAL,GAAgC,KAAK,MAAL,EAAA,GACnC,GAAK,eAAiB,KAAK,qBAAL,GAEjB,KAAK,WAAW,EAAM,iBAAtB,CACR,CAED,yBAAyB,EAAsC,CAC7D,KAAK,KAAL,EACA,GAAM,GAAO,KAAK,gBAAmC,CAAxC,EACb,SAAK,cAAgB,EACrB,EAAK,eAAiB,KAAK,sBAAqC,EAA1C,EACtB,EAAK,QAAU,GACR,KAAK,WAAW,EAAM,iBAAtB,CACR,CAED,qBAAoC,CAClC,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,KAAL,EACO,KAAK,WAAW,EAAM,YAAtB,CACR,CAED,kBAAkC,CAChC,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,OAAL,EAAA,EACA,AAAI,KAAK,MAAL,EAAA,EACF,EAAK,SAAW,KAAK,kBAAL,EAEhB,EAAK,SAAW,KAAK,kBAAL,EAEd,CAAC,KAAK,sBAAL,GAAgC,KAAK,MAAL,EAAA,GACnC,GAAK,eAAiB,KAAK,qBAAL,GAEjB,KAAK,WAAW,EAAM,aAAtB,CACR,CAED,sBAAsB,EAAyB,CAC7C,KAAK,iBAAiB,CACpB,SAAU,EACV,iBAAkB,CAAC,KAAM,KAAP,EAClB,oBAAqB,CACnB,SACA,UACA,YACA,WACA,UACA,WACA,UAPmB,EASrB,cAAe,EAAS,+BAZ1B,CAcD,CAGD,qBAAqB,EAAyB,CAC5C,KAAK,iBAAiB,CACpB,SAAU,EACV,iBAAkB,CAAA,EAClB,oBAAqB,CAAC,KAAM,KAAP,EACrB,cAAe,EAAS,wCAJ1B,CAMD,CAED,qBACE,EAEY,KAAK,qBAAqB,KAAK,IAA/B,EACO,CACnB,GAAM,GAAO,KAAK,UAAL,EAEb,SAAe,CAAD,EAEd,EAAK,KAAO,KAAK,yBAAL,EACZ,EAAK,WAAa,KAAK,mBAAvB,EAAA,EACA,EAAK,QAAU,KAAK,mBAApB,EAAA,EACO,KAAK,WAAW,EAAM,iBAAtB,CACR,CAED,yBACE,EACiD,CACjD,GAAI,KAAK,MAAL,EAAA,EACF,MAAO,MAAK,sBAAsB,CAA3B,CAEV,CAED,sBACE,EACA,CACA,GAAM,GAAO,KAAK,UAAL,EAEb,AAAI,KAAK,MAAL,EAAA,GAAqB,KAAK,MAAL,GAAA,EACvB,KAAK,KAAL,EAEA,KAAK,WAAL,EAGF,GAAM,GAAsB,CAAE,MAAO,IAErC,SAAK,OAAS,KAAK,qBACjB,4BAEA,KAAK,qBAAqB,KAAK,KAAM,CAArC,EACc,GACO,GACrB,CANY,EAQV,EAAK,OAAO,SAAW,GACzB,KAAK,MAAM,EAAS,oBAAqB,CAAE,GAAI,EAA/C,EAEE,EAAoB,QAAU,IAChC,KAAK,SAAS,EAAM,gBAAiB,EAAoB,KAAzD,EAEK,KAAK,WAAW,EAAM,4BAAtB,CACR,CAED,+BAAsE,CACpE,GAAI,KAAK,UAAL,EAAiB,OAArB,GAAyC,MAAO,MAEhD,KAAK,KAAL,EACA,GAAM,GAAgB,KAAK,qBAAL,EAMtB,MAAI,GAAc,gBAChB,KAAK,MAAM,EAAS,eAAgB,CAClC,GAAI,EAAc,SAClB,KAAM,QAFR,EAMK,CACR,CAID,gBACE,EACA,EACM,CAEN,GAAM,GAAsB,IAA5B,GAGM,EAAsD,aACtD,EAEF,iBAEJ,EAAU,eAAiB,KAAK,yBAAL,EAC3B,KAAK,OAAL,EAAA,EACA,EAAU,GAAa,KAAK,+BAAL,EACvB,AAAI,EACF,EAAU,GACR,KAAK,qCAAqC,CAA1C,EACO,KAAK,MAAM,CAAX,GACT,GAAU,GACR,KAAK,qCAAqC,CAA1C,EAEL,CAED,gCAEE,CACA,MAAO,OACJ,iBADI,GAAA,EAAA,EAEJ,IAAI,GAED,GAAQ,OAAS,cACjB,EAAQ,OAAS,eACjB,EAAQ,OAAS,iBACjB,EAAQ,OAAS,gBAEjB,KAAK,MAAM,EAAS,kCAAmC,CACrD,GAAI,EACJ,KAAM,EAAQ,KAFhB,EAKK,EAdJ,CAgBR,CAED,4BAAmC,CACjC,AAAI,CAAC,KAAK,IAAL,EAAA,GAAsB,CAAC,KAAK,iBAAL,GAC1B,KAAK,OAAL,EAAA,CAEH,CAED,uBACE,EACA,EAGkE,CAClE,YAAK,gBAAL,GAA+B,CAA/B,EACA,KAAK,2BAAL,EACO,KAAK,WAAW,EAAM,CAAtB,CACR,CAED,iCAAkC,CAEhC,MADA,MAAK,KAAL,EACI,GAAkB,KAAK,MAAM,IAAZ,EACnB,MAAK,KAAL,EACO,KAAK,MAAZ,EAAA,GAEK,EACR,CAED,yBACE,EACuC,CACvC,GACE,CACE,MAAK,MACL,CAAA,GAAA,KAAK,YAAY,KAAK,gCAAgC,KAAK,IAA1C,CAAjB,GAGF,OAGF,KAAK,OAAL,CAAA,EACA,GAAM,GAAK,KAAK,gBAAL,EACX,EAAG,eAAiB,KAAK,sBAAL,EACpB,KAAK,iBAAiB,CAAtB,EAEA,KAAK,OAAL,CAAA,EACA,EAAK,WAAa,CAAC,CAAD,EAElB,GAAM,GAAO,KAAK,yBAAL,EACb,MAAI,IAAM,GAAK,eAAiB,GAChC,KAAK,2BAAL,EACO,KAAK,WAAW,EAAM,kBAAtB,CACR,CAED,iCACE,EACA,EAC6C,CAC7C,AAAI,KAAK,IAAT,EAAA,GAA2B,GAAK,SAAW,IAC3C,GAAM,GAAe,EAErB,GAAI,KAAK,MAAL,EAAA,GAAyB,KAAK,MAAL,EAAA,EAAmB,CAC9C,AAAI,GACF,KAAK,MAAM,EAAS,2BAA4B,CAAE,GAAI,EAAtD,EAEF,GAAM,GAA8B,EACpC,AAAI,EAAO,MAAQ,KAAK,MAAL,EAAA,GACjB,KAAK,MAAM,EAAS,gCAAiC,CACnD,GAAI,KAAK,MAAM,YAAX,EADN,EAIF,KAAK,gBAAL,GAA+B,CAA/B,EACA,KAAK,2BAAL,EACA,GAAM,GAEF,aACE,EAEF,iBACJ,GAAI,EAAO,OAAS,MAClB,AAAI,EAAO,GAAW,OAAS,GAC7B,MAAK,MAAM,EAAO,eAAgB,CAAE,GAAI,KAAK,MAAM,YAAX,EAAxC,EACI,KAAK,YAAY,EAAO,GAAW,EAAnC,GACF,KAAK,MAAM,EAAS,kCAAmC,CACrD,GAAI,KAAK,MAAM,YAAX,EADN,WAKK,EAAO,OAAS,MAAO,CAChC,GAAI,EAAO,GAAW,SAAW,EAC/B,KAAK,MAAM,EAAO,eAAgB,CAAE,GAAI,KAAK,MAAM,YAAX,EAAxC,MACK,CACL,GAAM,GAAiB,EAAO,GAAW,GACzC,AAAI,KAAK,YAAY,CAAjB,GACF,KAAK,MAAM,EAAS,kCAAmC,CACrD,GAAI,KAAK,MAAM,YAAX,EADN,EAKA,EAAe,OAAS,cACxB,EAAe,UAEf,KAAK,MAAM,EAAS,sCAAuC,CACzD,GAAI,KAAK,MAAM,YAAX,EADN,EAIE,EAAe,OAAS,eAC1B,KAAK,MAAM,EAAS,kCAAmC,CACrD,GAAI,KAAK,MAAM,YAAX,EADN,CAIH,CACD,AAAI,EAAO,IACT,KAAK,MAAM,EAAS,+BAAgC,CAClD,GAAI,EAAO,GADb,CAIH,KACC,GAAO,KAAO,SAEhB,MAAO,MAAK,WAAW,EAAQ,mBAAxB,CACR,KAAM,CACL,GAAM,GAAkC,EACxC,AAAI,GAAU,GAAS,SAAW,IAClC,GAAM,GAAO,KAAK,yBAAL,EACb,MAAI,IAAM,GAAS,eAAiB,GACpC,KAAK,2BAAL,EACO,KAAK,WAAW,EAAU,qBAA1B,CACR,CACF,CAED,mBAAqC,CACnC,GAAM,GAAY,KAAK,UAAL,EAElB,GAAI,KAAK,MAAL,EAAA,GAAyB,KAAK,MAAL,EAAA,EAC3B,MAAO,MAAK,uBAAuB,6BAA8B,CAA1D,EAGT,GAAI,KAAK,MAAL,EAAA,EAAqB,CACvB,GAAM,GAAK,KAAK,UAAL,EAEX,MADA,MAAK,KAAL,EACI,KAAK,MAAL,EAAA,GAAyB,KAAK,MAAL,EAAA,EACpB,KAAK,uBACV,kCACA,CAFK,EAKP,GAAK,IAAM,KAAK,iBAAiB,EAAI,KAA1B,EACJ,KAAK,iCAAiC,EAAM,EAA5C,EAEV,CAED,KAAK,iBAAiB,CACpB,SAAU,EACV,iBAAkB,CAAC,UAAD,EAClB,oBAAqB,CACnB,UACA,WACA,UACA,YACA,SACA,SACA,UAPmB,EAHvB,EAcA,GAAM,GAAM,KAAK,yBAAyB,CAA9B,EACZ,MAAI,IAIJ,OAAM,kBAAkB,CAAxB,EAEE,CAAC,EAAK,UACN,EAAK,IAAI,OAAS,cACjB,GAAK,IAAI,OAAS,OAAS,EAAK,IAAI,OAAS,QAC9C,KAAK,yBAAL,GAEA,GAAK,KAAO,EAAK,IAAI,KACrB,MAAM,kBAAkB,CAAxB,GAEK,KAAK,iCAAiC,EAAM,CAAC,CAAC,EAAK,QAAnD,EACR,CAED,oBAAsC,CACpC,GAAM,GAAO,KAAK,UAAL,EACb,SAAK,QAAU,KAAK,yBAAL,EACR,KAAK,WAAW,EAAM,eAAtB,CACR,CAED,0BAAmD,CACjD,KAAK,OAAL,CAAA,EACA,GAAM,GAAU,KAAK,YACnB,cACA,KAAK,kBAAkB,KAAK,IAA5B,CAFc,EAIhB,YAAK,OAAL,CAAA,EACO,CACR,CAED,uBAAiC,CAE/B,MADA,MAAK,KAAL,EACI,KAAK,IAAL,EAAA,EACK,KAAK,aAAZ,GAAA,EAEE,MAAK,aAAL,GAAA,GACF,KAAK,KAAL,EAEE,CAAC,KAAK,MAAL,CAAA,GAGL,MAAK,KAAL,EACI,CAAC,KAAK,eAAL,GACI,GAET,MAAK,KAAL,EACO,KAAK,MAAZ,EAAA,GACD,CAED,4BAAgD,CAC9C,GAAM,GAAO,KAAK,UAAL,EACb,SAAK,KAAO,KAAK,yBAAL,EACZ,EAAK,WAAa,KAAK,sBAAvB,EAAA,EACO,KAAK,WAAW,EAAM,iBAAtB,CACR,CAED,mBAAoC,CAClC,GAAM,GAAO,KAAK,UAAL,EAEb,YAAK,OAAL,CAAA,EAEA,AAAI,KAAK,MAAL,EAAA,EACF,GAAK,SAAW,KAAK,MAAM,MAC3B,KAAK,KAAL,EACA,KAAK,iBAAL,GAAA,GACS,KAAK,cAAL,GAAA,GACT,GAAK,SAAW,IAGlB,KAAK,OAAL,CAAA,EACA,EAAK,cAAgB,KAAK,2BAAL,EACrB,EAAK,SAAW,KAAK,cAAL,EAAA,EAA6B,KAAK,YAAL,EAAqB,KAElE,KAAK,OAAL,CAAA,EAEA,AAAI,KAAK,MAAL,EAAA,EACF,GAAK,SAAW,KAAK,MAAM,MAC3B,KAAK,KAAL,EACA,KAAK,OAAL,EAAA,GACS,KAAK,IAAL,EAAA,GACT,GAAK,SAAW,IAGlB,EAAK,eAAiB,KAAK,eAAL,EACtB,KAAK,UAAL,EACA,KAAK,OAAL,CAAA,EAEO,KAAK,WAAW,EAAM,cAAtB,CACR,CAED,kBAAkC,CAChC,GAAM,GAAO,KAAK,UAAL,EACb,EAAK,aAAe,KAAK,qBACvB,oBACA,KAAK,wBAAwB,KAAK,IAAlC,EACc,GACO,EAJH,EASpB,GAAI,GAAsB,GACtB,EAAkC,KACtC,SAAK,aAAa,QAAQ,GAAe,CAAA,GAAA,GACvC,GAAM,CAAE,QAAS,EAEjB,AACE,GACA,IAAS,cACT,IAAS,kBACT,CAAE,KAAS,sBAAwB,EAAY,WAE/C,KAAK,MAAM,EAAS,2BAA4B,CAC9C,GAAI,EADN,EAKF,GAAA,GACG,IAAS,sBAAwB,EAAY,UAC9C,IAAS,kBAGX,GAAI,GAAY,EAChB,AAAI,IAAS,cACX,GAAc,EAAY,eAC1B,EAAY,EAAY,MAG1B,GAAM,GAAY,IAAc,qBAChC,AAAA,GAAA,IAAe,MAAf,GAAoB,GAChB,IAAoB,GACtB,KAAK,MAAM,EAAS,iCAAkC,CACpD,GAAI,EADN,EA5BJ,EAkCO,KAAK,WAAW,EAAM,aAAtB,CACR,CAED,yBAA2D,CAGzD,GAAM,CAAE,MAAO,EAAU,YAAa,KAAK,MAErC,EAAO,KAAK,IAAlB,EAAA,EACI,EAAwC,KAAK,YAAL,EACtC,EAAW,KAAK,IAAtB,EAAA,EAGA,GAFgB,KAAK,IAArB,EAAA,EAEa,CACX,GAAM,GAAc,KAAK,gBAAsC,CAA3C,EACpB,EAAY,SAAW,EAEvB,AACE,EAAK,OAAS,mBACd,CAAC,EAAK,gBACN,EAAK,SAAS,OAAS,aAEvB,EAAY,MAAQ,EAAK,SAEzB,MAAK,MAAM,EAAS,wBAAyB,CAAE,GAAI,EAAnD,EAGA,EAAY,MAAQ,GAGtB,EAAY,YAAc,KAAK,YAAL,EAC1B,EAAO,KAAK,WAAW,EAAa,oBAA7B,UACE,EAAU,CACnB,GAAM,GAAmB,KAAK,gBAAkC,CAAvC,EACzB,EAAiB,eAAiB,EAClC,EAAO,KAAK,WAAW,EAAkB,gBAAlC,CACR,CAED,GAAI,EAAM,CACR,GAAM,GAAW,KAAK,YAA0B,EAAU,CAAzC,EACjB,EAAS,eAAiB,EAC1B,EAAO,KAAK,WAAW,EAAU,YAA1B,CACR,CAED,MAAO,EACR,CAED,0BAAkD,CAChD,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,OAAL,EAAA,EACA,EAAK,eAAiB,KAAK,YAAL,EACtB,KAAK,OAAL,EAAA,EACO,KAAK,WAAW,EAAM,qBAAtB,CACR,CAED,iCACE,EACA,EAC+B,CAC/B,GAAM,GAAO,KAAK,UAAL,EAGb,MAAI,KAAS,qBACV,GAAqC,SAAW,CAAC,CAAC,EAC/C,GAAU,KAAK,KAAL,EACd,KAAK,KAAL,GAEF,KAAK,iCAAiC,IACpC,KAAK,gBAAL,GAA+B,CAA/B,CADF,EAGO,KAAK,WAAW,EAAM,CAAtB,CACR,CAED,wBAA0C,CACxC,GAAM,GAAO,KAAK,UAAL,EAEb,SAAK,QAAW,KAAM,CACpB,OAAQ,KAAK,MAAM,UACjB,SACA,SACA,SACA,QACA,IAEE,MAAO,OAAM,cAAN,UAEP,KAAM,MAAK,WAAL,EAEX,GAZc,EAaR,KAAK,WAAW,EAAM,eAAtB,CACR,CAED,4BAAuC,CACrC,GAAM,GAAO,KAAK,UAAL,EACb,SAAK,QAAU,MAAM,cAAc,EAApB,EACR,KAAK,WAAW,EAAM,eAAtB,CACR,CAED,2BAA+C,CAC7C,MAAI,MAAK,MAAM,OAAe,KAAK,YAAL,EACvB,MAAM,0BAAN,CACR,CAED,oCAAuE,CACrE,GAAM,GAAc,KAAK,oBAAL,EACpB,MAAI,MAAK,aAAL,GAAA,GAA6B,CAAC,KAAK,sBAAL,EACzB,KAAK,yBAAyB,CAA9B,EAEA,CAEV,CAED,qBAAgC,CAC9B,OAAQ,KAAK,MAAM,UACjB,SACA,SACA,SACA,QACA,IACE,MAAO,MAAK,uBAAL,MACT,IACE,GAAI,KAAK,MAAM,QAAU,IAAK,CAC5B,GAAM,GAAO,KAAK,UAAL,EACP,EAAY,KAAK,UAAL,EAClB,GAAI,EAAU,OAAV,KAA6B,EAAU,OAAV,IAC/B,KAAM,MAAK,WAAL,EAGR,SAAK,QAAU,KAAK,gBAAL,EACR,KAAK,WAAW,EAAM,eAAtB,CACR,CACD,UACF,IACE,MAAO,MAAK,mCAAL,MACT,IACE,MAAO,MAAK,iBAAL,MACT,IACE,MAAO,MAAK,kBAAL,MACT,GACE,MAAO,MAAK,YAAY,KAAK,sBAAsB,KAAK,IAAhC,CAAjB,EACH,KAAK,kBAAL,EACA,KAAK,mBAAL,MACN,GACE,MAAO,MAAK,iBAAL,MACT,IAaE,MAAO,MAAK,yBAAL,MACT,QACA,IACE,MAAO,MAAK,2BAAL,UACA,CACP,GAAM,CAAE,QAAS,KAAK,MACtB,GACE,GAAkB,CAAD,GACjB,IADA,IAEA,IAAI,GACJ,CACA,GAAM,GACJ,IAAI,GACA,gBACA,IAAI,GACJ,gBACA,GAAoB,KAAK,MAAM,KAAZ,EACzB,GACE,IAAa,QACb,KAAK,kBAAL,IAAA,GACA,CACA,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,KAAL,EACO,KAAK,WAAW,EAAM,CAAtB,CACR,CACD,MAAO,MAAK,qBAAL,CACR,CACF,EAGH,KAAM,MAAK,WAAL,CACP,CAED,0BAAqC,CACnC,GAAI,GAAO,KAAK,oBAAL,EACX,KAAO,CAAC,KAAK,sBAAL,GAAgC,KAAK,IAAL,CAAA,GACtC,GAAI,KAAK,MAAL,CAAA,EAAyB,CAC3B,GAAM,GAAO,KAAK,gBAA+B,CAApC,EACb,EAAK,YAAc,EACnB,KAAK,OAAL,CAAA,EACA,EAAO,KAAK,WAAW,EAAM,aAAtB,CACR,KAAM,CACL,GAAM,GAAO,KAAK,gBAAuC,CAA5C,EACb,EAAK,WAAa,EAClB,EAAK,UAAY,KAAK,YAAL,EACjB,KAAK,OAAL,CAAA,EACA,EAAO,KAAK,WAAW,EAAM,qBAAtB,CACR,CAEH,MAAO,EACR,CAED,qBAAwC,CACtC,GAAM,GAAO,KAAK,UAAL,EACP,EAAW,KAAK,MAAM,MAC5B,YAAK,KAAL,EACA,EAAK,SAAW,EAChB,EAAK,eAAiB,KAAK,4BAAL,EAElB,IAAa,YACf,KAAK,iCAEH,CAFF,EAMK,KAAK,WAAW,EAAM,gBAAtB,CACR,CAED,iCAAiC,EAAc,CAC7C,OAAQ,EAAK,eAAe,UACrB,kBACA,cACH,eAEA,KAAK,MAAM,EAAS,mBAAoB,CAAE,GAAI,EAA9C,EAEL,CAED,kBAAkC,CAChC,GAAM,GAAO,KAAK,UAAL,EACb,KAAK,iBAAL,GAAA,EACA,GAAM,GAAgB,KAAK,UAAL,EACtB,SAAc,KAAO,KAAK,yBAAL,EACrB,EAAc,WAAa,KAAK,WAAW,IACzC,KAAK,8BAAL,CADyB,EAG3B,EAAK,cAAgB,KAAK,WAAW,EAAe,iBAA/B,EACd,KAAK,WAAW,EAAM,aAAtB,CACR,CAED,+BAAgC,CAC9B,GAAI,KAAK,IAAL,EAAA,EAAuB,CACzB,GAAM,GAAa,KAAK,oCAAoC,IAC1D,KAAK,YAAL,CADiB,EAGnB,GACE,KAAK,MAAM,mCACX,CAAC,KAAK,MAAL,EAAA,EAED,MAAO,EAEV,CACF,CAED,6BAAwC,CAGtC,MAAO,AADL,IAAsB,KAAK,MAAM,IAAZ,GAAqB,CAAC,KAAK,MAAM,YAEpD,KAAK,oBAAL,EACA,KAAK,aACL,GAAA,EAAA,KAAK,iBAAL,EACA,KAAK,iCAAiC,IACpC,KAAK,yBAAL,CADF,CAGL,CAED,+BACE,EACA,EACA,EACU,CACV,GAAM,GAAO,KAAK,UAAL,EACP,EAAqB,KAAK,IAAI,CAAT,EACrB,EAAQ,CAAA,EACd,EACE,GAAM,KAAK,EAAoB,CAA/B,QACO,KAAK,IAAI,CAAT,GACT,MAAI,GAAM,SAAW,GAAK,CAAC,EAClB,EAAM,GAEf,GAAK,MAAQ,EACN,KAAK,WAAW,EAAM,CAAtB,EACR,CAED,iCAA4C,CAC1C,MAAO,MAAK,+BACV,qBACA,KAAK,4BAA4B,KAAK,IAAtC,EAFF,EAAA,CAKD,CAED,0BAA2B,CACzB,MAAO,MAAK,+BACV,cACA,KAAK,gCAAgC,KAAK,IAA1C,EAFF,EAAA,CAKD,CAED,yBAA0B,CACxB,MAAI,MAAK,MAAL,EAAA,EACK,GAGP,KAAK,MACL,EAAA,GAAA,KAAK,YAAY,KAAK,qCAAqC,KAAK,IAA/C,CAAjB,CAEH,CAED,sBAAgC,CAC9B,GAAI,GAAkB,KAAK,MAAM,IAAZ,GAAqB,KAAK,MAAL,EAAA,EACxC,YAAK,KAAL,EACO,GAGT,GAAI,KAAK,MAAL,CAAA,EAAuB,CAEzB,GAAM,CAAE,UAAW,KAAK,MAClB,EAAqB,EAAO,OAClC,GAAI,CACF,YAAK,gBAAL,EAAgC,EAAhC,EACO,EAAO,SAAW,CAC1B,OAAO,EAAN,CACA,MAAO,EACR,CACF,CAED,GAAI,KAAK,MAAL,CAAA,EAAyB,CAC3B,KAAK,KAAL,EAEA,GAAM,CAAE,UAAW,KAAK,MAClB,EAAqB,EAAO,OAClC,GAAI,CACF,aAAM,iBAAN,EAAA,GAGE,EAHF,EAKO,EAAO,SAAW,CAC1B,OAAO,EAAN,CACA,MAAO,EACR,CACF,CAED,MAAO,EACR,CAED,sCAAgD,CAO9C,MANA,MAAK,KAAL,EACI,QAAK,MAAL,EAAA,GAAyB,KAAK,MAAL,EAAA,GAKzB,KAAK,qBAAL,GAEA,MAAK,MACL,EAAA,GAAA,KAAK,MADL,EAAA,GAEA,KAAK,MAFL,EAAA,GAGA,KAAK,MAAL,EAAA,GAQE,KAAK,MAAL,EAAA,GACF,MAAK,KAAL,EACI,KAAK,MAAL,EAAA,IAOT,CAED,qCACE,EACoB,CACpB,MAAO,MAAK,SAAS,IAAM,CACzB,GAAM,GAAI,KAAK,UAAL,EACV,KAAK,OAAO,CAAZ,EAEA,GAAM,GAAO,KAAK,UAAL,EAEP,EAAU,CAAC,CAAC,KAAK,WACrB,KAAK,4BAA4B,KAAK,IAAtC,CADgB,EAIlB,GAAI,GAAW,KAAK,MAAL,EAAA,EAAsB,CAGnC,GAAI,GAAoB,KAAK,mCAAL,EAGxB,MAAI,GAAkB,OAAS,aAC7B,GAAK,cAAgB,EACrB,EAAK,QAAU,GACd,EAA2B,eAAiB,KAC7C,EAAoB,KAAK,WAAW,EAAM,iBAAtB,GAEpB,MAAK,2BAA2B,EAAmB,CAAnD,EACC,EAAwC,QAAU,IAErD,EAAE,eAAiB,EACZ,KAAK,WAAW,EAAG,kBAAnB,CACR,CAED,GAAM,GACJ,KAAK,eAAL,GACA,KAAK,WAAW,KAAK,2BAA2B,KAAK,IAArC,CAAhB,EAEF,GAAI,CAAC,EACH,MAAK,GAML,GAAK,cAAgB,KAAK,gBAAL,EACrB,EAAK,QAAU,EACd,EAA2B,eAAiB,KAC7C,EAAE,eAAiB,KAAK,WAAW,EAAM,iBAAtB,EACZ,KAAK,WAAW,EAAG,kBAAnB,GARE,KAAK,sBAAqC,GAAO,CAAjD,EAYX,GAAM,GAAO,KAAK,sBAAqC,EAA1C,EACb,SAAK,cAAgB,EACrB,EAAK,eAAiB,EACtB,EAAK,QAAU,EACf,EAAE,eAAiB,KAAK,WAAW,EAAM,iBAAtB,EACZ,KAAK,WAAW,EAAG,kBAAnB,CACR,CAtDM,CAuDR,CAED,yCAGS,CACP,MAAO,MAAK,MAAL,EAAA,EACH,KAAK,qCAAL,EAAA,EACA,MACL,CAED,0BAAkE,CAChE,MAAO,MAAK,MAAL,EAAA,EAAuB,KAAK,sBAAL,EAA+B,MAC9D,CAED,gBAA8C,CAC5C,MAAO,MAAK,mBAAZ,EAAA,CACD,CAED,4BAA8D,CAC5D,GAAM,GAAK,KAAK,gBAAL,EACX,GAAI,KAAK,aAAL,GAAA,GAA6B,CAAC,KAAK,sBAAL,EAChC,YAAK,KAAL,EACO,CAEV,CAED,6BAAuC,CACrC,GAAI,KAAK,MAAM,OAAX,IACF,MAAO,GAET,GAAM,GAAc,KAAK,MAAM,YAE/B,MADA,MAAK,KAAL,EACI,CAAC,GAAkB,KAAK,MAAM,IAAZ,GAAqB,CAAC,KAAK,MAAL,EAAA,EACnC,GAGL,IACF,KAAK,MAAM,EAAO,2BAA4B,CAC5C,GAAI,KAAK,MAAM,gBACf,aAAc,UAFhB,EAMK,GACR,CAED,sBACE,EAAW,GACX,EAAgC,KAAK,UAAL,EACZ,CACpB,YAAK,SAAS,IAAM,CAClB,AAAI,GAAU,KAAK,OAAL,EAAA,EACd,EAAE,eAAiB,KAAK,YAAL,EAFrB,EAIO,KAAK,WAAW,EAAG,kBAAnB,CACR,CAGD,aAAwB,CAEtB,GAAO,KAAK,MAAM,MAAZ,EACN,GAAM,GAAO,KAAK,0BAAL,EAEb,GACE,KAAK,MAAM,mCACX,KAAK,sBAAL,GACA,CAAC,KAAK,IAAL,EAAA,EAED,MAAO,GAET,GAAM,GAAO,KAAK,gBAAqC,CAA1C,EACb,SAAK,UAAY,EAEjB,EAAK,YAAc,KAAK,oCAAoC,IAC1D,KAAK,0BAAL,CADiB,EAInB,KAAK,OAAL,EAAA,EACA,EAAK,SAAW,KAAK,iCAAiC,IACpD,KAAK,YAAL,CADc,EAIhB,KAAK,OAAL,EAAA,EACA,EAAK,UAAY,KAAK,iCAAiC,IACrD,KAAK,YAAL,CADe,EAIV,KAAK,WAAW,EAAM,mBAAtB,CACR,CAED,gCAA0C,CACxC,MACE,MAAK,aAAL,GAAA,GAAmC,KAAK,UAAL,EAAiB,OADtD,EAGD,CAED,2BAAsC,CACpC,MAAI,MAAK,wBAAL,EACK,KAAK,iCAAiC,gBAAtC,EAEL,KAAK,MAAL,EAAA,EAEK,KAAK,iCAAiC,mBAAtC,EACE,KAAK,+BAAL,EAEF,KAAK,iCACV,oBACe,EAFV,EAKF,KAAK,yBAAL,CACR,CAED,sBAA0C,CACxC,AAAI,KAAK,gBAAgB,aAAc,0BAAnC,GACF,KAAK,MAAM,EAAS,sBAAuB,CAAE,GAAI,KAAK,MAAM,SAA5D,EAGF,GAAM,GAAO,KAAK,UAAL,EACP,EAAS,KAAK,8BAAL,EACf,SAAK,eAAiB,GAAU,KAAK,oBAAL,EAChC,KAAK,OAAL,EAAA,EACA,EAAK,WAAa,KAAK,gBAAL,EACX,KAAK,WAAW,EAAM,iBAAtB,CACR,CAED,sBACE,EACwC,CACxC,GAAM,GAAmB,KAAK,MAAM,SAE9B,EAAgB,KAAK,qBACzB,wBACA,IAAM,CACJ,GAAM,GAAO,KAAK,UAAL,EACb,SAAK,WAAa,KAAK,kBAAL,EACd,KAAK,MAAL,EAAA,GACF,GAAK,eAAiB,KAAK,qBAAL,GAGjB,KAAK,WAAW,EAAM,+BAAtB,CACR,CAVmB,EAatB,MAAK,GAAc,QACjB,KAAK,MAAM,EAAS,wBAAyB,CAC3C,GAAI,EACJ,QAFF,EAMK,CACR,CAED,4BACE,EACA,EAEI,CAAA,EACyC,CAC7C,GAAI,KAAK,sBAAL,EAA8B,MAAO,MACzC,KAAK,iBAAL,GAAA,EACI,EAAW,SAAS,GAAK,QAAU,IACvC,AAAI,GAAkB,KAAK,MAAM,IAAZ,EACnB,GAAK,GAAK,KAAK,gBAAL,EACV,KAAK,gBAAgB,EAAK,GAAI,EAA9B,GAEA,GAAK,GAAK,KACV,KAAK,MAAM,EAAS,qBAAsB,CAAE,GAAI,KAAK,MAAM,SAA3D,GAGF,EAAK,eAAiB,KAAK,yBACzB,KAAK,sBAAsB,KAAK,IAAhC,CADoB,EAGlB,KAAK,IAAL,EAAA,GACF,GAAK,QAAU,KAAK,sBAAsB,SAA3B,GAEjB,GAAM,GAAO,KAAK,UAAL,EACb,SAAK,KAAO,KAAK,SAAS,KAAK,yBAAyB,KAAK,IAAnC,CAAd,EACZ,EAAK,KAAO,KAAK,WAAW,EAAM,iBAAtB,EACL,KAAK,WAAW,EAAM,wBAAtB,CACR,CAED,4BACE,EAC0B,CAC1B,SAAK,GAAK,KAAK,gBAAL,EACV,KAAK,gBAAgB,EAAK,GAAI,EAA9B,EAEA,EAAK,eAAiB,KAAK,SAAS,IAAM,CAOxC,GANA,EAAK,eAAiB,KAAK,yBACzB,KAAK,sBAAsB,KAAK,IAAhC,CADoB,EAItB,KAAK,OAAL,EAAA,EAGE,KAAK,aACL,GAAA,GAAA,KAAK,UAAL,EAAiB,OAAjB,GACA,CACA,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,KAAL,EACO,KAAK,WAAW,EAAM,oBAAtB,CACR,CAED,MAAO,MAAK,YAAL,CACR,CAjBqB,EAmBtB,KAAK,UAAL,EACO,KAAK,WAAW,EAAM,wBAAtB,CACR,CAED,cAAiB,EAAgB,CAC/B,GAAM,GAAa,KAAK,MAAM,QAC9B,KAAK,MAAM,QAAU,CAAC,EAAW,EAAZ,EACrB,GAAI,CACF,MAAO,GAAE,CACV,QAFD,CAGE,KAAK,MAAM,QAAU,CACtB,CACF,CAOD,SAAY,EAAgB,CAC1B,GAAM,GAAY,KAAK,MAAM,OAC7B,KAAK,MAAM,OAAS,GACpB,GAAI,CACF,MAAO,GAAE,CACV,QAFD,CAGE,KAAK,MAAM,OAAS,CACrB,CACF,CAED,oCAAuC,EAAgB,CACrD,GAAM,GACJ,KAAK,MAAM,kCACb,KAAK,MAAM,kCAAoC,GAC/C,GAAI,CACF,MAAO,GAAE,CACV,QAFD,CAGE,KAAK,MAAM,kCACT,CACH,CACF,CAED,iCAAoC,EAAgB,CAClD,GAAM,GACJ,KAAK,MAAM,kCACb,KAAK,MAAM,kCAAoC,GAC/C,GAAI,CACF,MAAO,GAAE,CACV,QAFD,CAGE,KAAK,MAAM,kCACT,CACH,CACF,CAED,mBAAmB,EAA+C,CAChE,MAAO,AAAC,MAAK,MAAM,CAAX,EAAgC,KAAK,oBAAL,EAAZ,MAC7B,CAED,sBAAsB,EAA4B,CAChD,MAAO,MAAK,kBAAkB,IAAM,KAAK,OAAO,CAAZ,CAA7B,CACR,CAED,qBAAgC,CAC9B,MAAO,MAAK,kBAAkB,IAAM,KAAK,KAAL,CAA7B,CACR,CAED,kBAAkB,EAA0B,CAC1C,MAAO,MAAK,SAAS,IACnB,GAAE,EACK,KAAK,YAAL,EAFF,CAIR,CAED,mBAAoC,CAClC,GAAM,GAAO,KAAK,UAAL,EAEb,SAAK,GAAK,KAAK,MAAL,GAAA,EACN,MAAM,mBAAmB,KAAK,MAAM,KAApC,EACA,KAAK,gBAA8B,EAAnC,EACA,KAAK,IAAL,EAAA,GACF,GAAK,YAAc,MAAM,wBAAN,GAEd,KAAK,WAAW,EAAM,cAAtB,CACR,CAED,uBACE,EACA,EAGI,CAAA,EACiB,CACrB,MAAI,GAAW,OAAO,GAAK,MAAQ,IAC/B,EAAW,SAAS,GAAK,QAAU,IACvC,KAAK,iBAAL,GAAA,EACA,EAAK,GAAK,KAAK,gBAAL,EACV,KAAK,gBACH,EAAK,GACL,EAAK,MAAQ,GAAqB,EAFpC,EAKA,KAAK,OAAL,CAAA,EACA,EAAK,QAAU,KAAK,qBAClB,cACA,KAAK,kBAAkB,KAAK,IAA5B,CAFa,EAIf,KAAK,OAAL,CAAA,EACO,KAAK,WAAW,EAAM,mBAAtB,CACR,CAED,oBAAsC,CACpC,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,MAAM,MAAM,EAAjB,EAEA,KAAK,OAAL,CAAA,EAEA,MAAM,4BACH,EAAK,KAAO,CAAA,EACI,OACF,GAHjB,CAAA,EAMA,KAAK,MAAM,KAAX,EACO,KAAK,WAAW,EAAM,eAAtB,CACR,CAED,oCACE,EACA,EAAkB,GACK,CAOvB,GANA,EAAK,GAAK,KAAK,gBAAL,EAEL,GACH,KAAK,gBAAgB,EAAK,GAAI,EAA9B,EAGE,KAAK,IAAL,EAAA,EAAkB,CACpB,GAAM,GAAQ,KAAK,UAAL,EACd,KAAK,oCAAoC,EAAO,EAAhD,EAEA,EAAK,KAAO,CACb,KACC,MAAK,MAAM,MAAM,EAAjB,EACA,KAAK,UAAU,MAAM,EAArB,EACA,EAAK,KAAO,KAAK,mBAAL,EACZ,KAAK,UAAU,KAAf,EACA,KAAK,MAAM,KAAX,EAEF,MAAO,MAAK,WAAW,EAAM,qBAAtB,CACR,CAED,wCACE,EACuB,CACvB,MAAI,MAAK,aAAL,GAAA,EACF,GAAK,OAAS,GACd,EAAK,GAAK,KAAK,gBAAL,GACL,AAAI,KAAK,MAAL,GAAA,EACT,EAAK,GAAK,MAAM,mBAAmB,KAAK,MAAM,KAApC,EAEV,KAAK,WAAL,EAEF,AAAI,KAAK,MAAL,CAAA,EACF,MAAK,MAAM,MAAM,EAAjB,EACA,KAAK,UAAU,MAAM,EAArB,EACA,EAAK,KAAO,KAAK,mBAAL,EACZ,KAAK,UAAU,KAAf,EACA,KAAK,MAAM,KAAX,GAEA,KAAK,UAAL,EAGK,KAAK,WAAW,EAAM,qBAAtB,CACR,CAED,+BACE,EACA,EAC6B,CAC7B,EAAK,SAAW,GAAY,GAC5B,EAAK,GAAK,KAAK,gBAAL,EACV,KAAK,gBAAgB,EAAK,GAAI,EAA9B,EACA,KAAK,OAAL,EAAA,EACA,GAAM,GAAkB,KAAK,uBAAL,EACxB,MACE,GAAK,aAAe,QACpB,EAAgB,OAAS,6BAEzB,KAAK,MAAM,EAAS,yBAA0B,CAC5C,GAAI,EADN,EAIF,EAAK,gBAAkB,EACvB,KAAK,UAAL,EACO,KAAK,WAAW,EAAM,2BAAtB,CACR,CAED,6BAAuC,CACrC,MACE,MAAK,aACL,GAAA,GAAA,KAAK,kBAAL,IAFF,EAID,CAED,wBAA8C,CAC5C,MAAO,MAAK,4BAAL,EACH,KAAK,+BAAL,EACA,KAAK,kBAA2C,EAAhD,CACL,CAED,gCAA8D,CAC5D,GAAM,GAAO,KAAK,UAAL,EAGb,GAFA,KAAK,iBAAL,GAAA,EACA,KAAK,OAAL,EAAA,EACI,CAAC,KAAK,MAAL,GAAA,EACH,KAAM,MAAK,WAAL,EAGR,SAAK,WAAa,MAAM,cAAN,EAClB,KAAK,OAAL,EAAA,EACO,KAAK,WAAW,EAAM,2BAAtB,CACR,CAID,YAAe,EAAe,CAC5B,GAAM,GAAQ,KAAK,MAAM,MAAX,EACR,EAAM,EAAC,EACb,YAAK,MAAQ,EACN,CACR,CAED,mBACE,EACsB,CACtB,GAAM,GAAS,KAAK,SAClB,GAEE,EAAC,GAAM,EAAK,CAHD,EAMf,GAAI,IAAO,SAAW,CAAC,EAAO,MAC9B,MAAI,GAAO,OAAO,MAAK,MAAQ,EAAO,WAE/B,EAAO,IACf,CAED,WAAc,EAA+C,CAC3D,GAAM,GAAQ,KAAK,MAAM,MAAX,EACR,EAAS,EAAC,EAChB,GAAI,IAAW,QAAa,IAAW,GACrC,MAAO,GAEP,KAAK,MAAQ,CAGhB,CAED,kBAAkB,EAA6C,CAC7D,GAAI,KAAK,iBAAL,EACF,OAEF,GAAI,GAAY,KAAK,MAAM,KACvB,EAEJ,MAAI,MAAK,aAAL,EAAA,GACF,GAAA,GACA,EAAO,OAIF,KAAK,mBAAmB,IAAM,CACnC,GAAI,IAAS,GACX,SAAK,QAAU,GACR,MAAM,uBACX,EACY,GACc,EAHrB,EAOT,GAAI,IAAS,GAGX,SAAK,QAAU,GACR,KAAK,WACV,EACkB,GACD,EAHZ,EAOT,GAAI,IAAS,IACX,MAAO,MAAK,uBAAuB,EAAM,CAAE,QAAS,EAAX,CAAlC,EAGT,GAAI,IAAS,IACX,MAAO,MAAK,wCAAwC,CAA7C,EAGT,GAAI,IAAS,IAAkB,IAAS,GACtC,MAAI,CAAC,KAAK,MAAN,EAAA,GAA0B,CAAC,KAAK,sBAAsB,MAA3B,EAC7B,GAAK,QAAU,GACR,KAAK,kBAAkB,EAAM,GAAQ,KAAK,MAAM,MAAO,EAAvD,GAIT,MAAK,OAAL,EAAA,EACO,KAAK,uBAAuB,EAAM,CACvC,MAAO,GACP,QAAS,EAF8B,CAAlC,GAMT,GAAI,IAAS,IAAoB,CAC/B,GAAM,GAAS,KAAK,4BAA4B,EAAM,CACpD,QAAS,EAD2C,CAAvC,EAGf,GAAI,EAAQ,MAAO,EACpB,CAED,GAAI,GAAkB,CAAD,EACnB,MAAO,MAAK,mBACV,EACA,KAAK,MAAM,MACA,EAHN,CAMV,CAzDM,CA0DR,CAGD,6BAAgE,CAC9D,MAAO,MAAK,mBACV,KAAK,UAAL,EACA,KAAK,MAAM,MACA,EAHN,CAKR,CAED,2BACE,EACA,EACkC,CAClC,OAAQ,EAAK,UACN,UAAW,CACd,GAAM,GAAc,KAAK,kBAAkB,CAAvB,EACpB,GAAI,EACF,SAAY,QAAU,GACf,EAET,KACD,KACI,SAGH,GAAI,KAAK,MAAL,CAAA,EAAuB,CACzB,KAAK,MAAM,MAAM,EAAjB,EACA,KAAK,UAAU,MAAM,EAArB,EACA,GAAM,GAAM,EACZ,SAAI,OAAS,GACb,EAAI,GAAK,EACT,EAAI,KAAO,KAAK,mBAAL,EACX,KAAK,MAAM,KAAX,EACA,KAAK,UAAU,KAAf,EACO,KAAK,WAAW,EAAK,qBAArB,CACR,CACD,cAGA,MAAO,MAAK,mBAAmB,EAAM,EAAK,KAAiB,EAApD,EAEZ,CAGD,mBACE,EACA,EACA,EACkC,CAElC,OAAQ,OACD,WACH,GACE,KAAK,sBAAsB,CAA3B,GACC,MAAK,MAAL,EAAA,GAAyB,GAAkB,KAAK,MAAM,IAAZ,GAE3C,MAAO,MAAK,2BAA2B,CAAhC,EAET,UAEG,SACH,GAAI,KAAK,sBAAsB,CAA3B,EAAkC,CACpC,GAAI,KAAK,MAAL,GAAA,EACF,MAAO,MAAK,wCAAwC,CAA7C,EACF,GAAI,GAAkB,KAAK,MAAM,IAAZ,EAC1B,MAAO,MAAK,oCAAoC,CAAzC,CAEV,CACD,UAEG,YACH,GACE,KAAK,sBAAsB,CAA3B,GACA,GAAkB,KAAK,MAAM,IAAZ,EAEjB,MAAO,MAAK,oCAAoC,CAAzC,EAET,UAEG,OACH,GACE,KAAK,sBAAsB,CAA3B,GACA,GAAkB,KAAK,MAAM,IAAZ,EAEjB,MAAO,MAAK,4BAA4B,CAAjC,EAET,MAEL,CAED,sBAAsB,EAAe,CACnC,MAAI,GACE,KAAK,sBAAL,EAAqC,GACzC,MAAK,KAAL,EACO,IAEF,CAAC,KAAK,iBAAL,CACT,CAED,oCACE,EACA,EAC8C,CAC9C,GAAI,CAAC,KAAK,MAAL,EAAA,EACH,OAGF,GAAM,GAA4B,KAAK,MAAM,uBAC7C,KAAK,MAAM,uBAAyB,GAEpC,GAAM,GACJ,KAAK,mBAAmB,IAAM,CAC5B,GAAM,GAAO,KAAK,YAChB,EACA,CAFW,EAIb,SAAK,eAAiB,KAAK,sBAAL,EAEtB,MAAM,oBAAoB,CAA1B,EACA,EAAK,WAAa,KAAK,wCAAL,EAClB,KAAK,OAAL,EAAA,EACO,CACR,CAXD,EAeF,GAFA,KAAK,MAAM,uBAAyB,EAEhC,EAAC,EAIL,MAAO,OAAM,qBACX,EAC6B,KACjB,EAHP,CAKR,CAID,kCAA0E,CACxE,GAAI,KAAK,UAAL,IAAA,GAGJ,MAAO,MAAK,qBAAL,CACR,CAED,sBAAuD,CACrD,GAAM,GAAO,KAAK,UAAL,EACb,SAAK,OAAS,KAAK,SAAS,IAE1B,KAAK,cAAc,IACjB,MAAK,OAAL,EAAA,EACO,KAAK,qBACV,4BACA,KAAK,YAAY,KAAK,IAAtB,CAFK,EAFT,CAFY,EAUV,EAAK,OAAO,SAAW,GACzB,KAAK,MAAM,EAAS,mBAAoB,CAAE,GAAI,EAA9C,EAEF,KAAK,OAAL,EAAA,EACO,KAAK,WAAW,EAAM,8BAAtB,CACR,CAED,sBAAgC,CAC9B,MAAO,IAA0B,KAAK,MAAM,IAAZ,CACjC,CAMD,0BAAoC,CAClC,MAAI,MAAK,qBAAL,EAAoC,GACjC,MAAM,yBAAN,CACR,CAED,wBACE,EACA,EACmC,CAEnC,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SAExB,EACA,EAAW,GACX,EAAW,GACf,GAAI,IAAmB,OAAW,CAChC,GAAM,GAAyB,CAAA,EAC/B,KAAK,iBAAiB,CACpB,WACA,iBAAkB,CAChB,SACA,UACA,YACA,WACA,UALgB,EAFpB,EAUA,EAAgB,EAAS,cACzB,EAAW,EAAS,SACpB,EAAW,EAAS,SAElB,IAAmB,IAClB,IAAiB,GAAY,IAE9B,KAAK,MAAM,EAAS,4BAA6B,CAAE,GAAI,EAAvD,CAEH,CAED,GAAM,GAAO,KAAK,kBAAL,EACb,KAAK,6BAA6B,CAAlC,EACA,GAAM,GAAM,KAAK,kBAAkB,EAAK,MAAO,EAAK,IAAI,MAAO,CAAnD,EACZ,GAAI,GAAiB,GAAY,EAAU,CACzC,GAAM,GAAK,KAAK,YAAmC,EAAU,CAAlD,EACX,MAAI,GAAW,QACb,GAAG,WAAa,GAEd,GAAe,GAAG,cAAgB,GAClC,GAAU,GAAG,SAAW,GACxB,GAAU,GAAG,SAAW,GACxB,EAAI,OAAS,cAAgB,EAAI,OAAS,qBAC5C,KAAK,MAAM,EAAS,iCAAkC,CAAE,GAAI,EAA5D,EAEF,EAAG,UAAY,EACR,KAAK,WAAW,EAAI,qBAApB,CACR,CAED,MAAI,GAAW,QACb,GAAK,WAAa,GAGb,CACR,CAED,kBAAkB,EAAyC,CACzD,MACG,GAAK,OAAS,uBACb,MAAM,kBAAkB,EAAK,SAA7B,GACF,MAAM,kBAAkB,CAAxB,CAEH,CAED,2BAME,EAAiB,EAAiB,EAAoB,GAAU,CAChE,AAAI,KAAK,MAAL,EAAA,GACF,GAAK,WAAa,KAAK,qCAAvB,EAAA,GAGF,GAAM,GACJ,IAAS,sBACL,oBACA,IAAS,eAAiB,IAAS,qBACnC,kBACA,OACN,MAAI,IAAgB,CAAC,KAAK,MAAL,CAAA,GAAyB,KAAK,iBAAL,EACrC,KAAK,WAAW,EAAM,CAAtB,EAEL,IAAiB,qBAAuB,KAAK,MAAM,kBACrD,MAAK,MAAM,EAAS,iCAAkC,CAAE,GAAI,EAA5D,EACK,EAAuC,SACnC,MAAM,2BAA2B,EAAM,EAAc,CAArD,EAIJ,MAAM,2BAA2B,EAAM,EAAM,CAA7C,CACR,CAED,4BAA4B,EAAwB,CAClD,AAAI,CAAC,EAAK,MAAQ,EAAK,GAGrB,KAAK,gBAAgB,EAAK,GAAI,EAA9B,EAEA,MAAM,4BAA4B,CAAlC,CAEH,CAED,2BAA2B,EAA+C,CACxE,EAAM,QAAQ,GAAQ,CACpB,AAAI,IAAA,KAAA,OAAA,EAAM,QAAS,wBACjB,KAAK,MAAM,EAAS,yBAA0B,CAC5C,GAAI,EAAK,eADX,EAFJ,CAOD,CAED,iBACE,EAEA,EACwC,CAKxC,YAAK,2BAA2B,CAAhC,EACO,CACR,CAED,eACE,EACA,EACA,EACA,EACuC,CACvC,GAAM,GAAO,MAAM,eACjB,EACA,EACA,EACA,CAJW,EAOb,MAAI,GAAK,OAAS,mBAChB,KAAK,2BAA2B,EAAK,QAArC,EAGK,CACR,CAED,eACE,EACA,EACA,EACA,EACA,EACc,CACd,GAAI,CAAC,KAAK,sBAAL,GAAgC,KAAK,MAAL,EAAA,EAAqB,CAIxD,KAAK,MAAM,mBAAqB,GAChC,KAAK,KAAL,EAEA,GAAM,GAAoB,KAAK,YAC7B,EACA,CAFwB,EAI1B,SAAkB,WAAa,EACxB,KAAK,WAAW,EAAmB,qBAAnC,CACR,CAED,GAAI,GAAiB,GACrB,GACE,KAAK,MAAL,EAAA,GACA,KAAK,kBAAL,IAAA,GACA,CACA,GAAI,EACF,SAAM,KAAO,GACN,EAET,EAAM,oBAAsB,EAAiB,GAC7C,KAAK,KAAL,CACD,CAGD,GAAI,KAAK,MAAL,EAAA,GAAqB,KAAK,MAAL,EAAA,EAA0B,CACjD,GAAI,GAIE,EAAS,KAAK,mBAAmB,IAAM,CAC3C,GAAI,CAAC,GAAW,KAAK,qBAAqB,CAA1B,EAAiC,CAG/C,GAAM,GAAe,KAAK,oCACxB,EACA,CAFmB,EAIrB,GAAI,EACF,MAAO,EAEV,CAED,GAAM,GAAgB,KAAK,iCAAL,EACtB,GAAI,CAAC,EAAe,OAEpB,GAAI,GAAkB,CAAC,KAAK,MAAL,EAAA,EAAuB,CAC5C,EAAuB,KAAK,MAAM,YAAX,EACvB,MACD,CAED,GAAI,GAAgB,KAAK,MAAM,IAAZ,EAAmB,CACpC,GAAM,GAAS,MAAM,8BACnB,EACA,EACA,EACA,CAJa,EAMf,SAAO,eAAiB,EACjB,CACR,CAED,GAAI,CAAC,GAAW,KAAK,IAAL,EAAA,EAAqB,CACnC,GAAM,GAAO,KAAK,YAEhB,EAAU,CAFC,EAGb,SAAK,OAAS,EAGd,EAAK,UAAY,KAAK,6BAAL,GAEK,EAFL,EAMjB,KAAK,2BAA2B,EAAK,SAArC,EAEA,EAAK,eAAiB,EAClB,EAAM,qBACP,GAA0C,SACzC,GAGG,KAAK,qBAAqB,EAAM,EAAM,mBAAtC,CACR,CAED,GAAM,GAAY,KAAK,MAAM,KAC7B,GAEE,IAAA,IAEA,IAFA,IAIC,IAAA,IACC,GAAwB,CAAD,GACvB,CAAC,KAAK,sBAAL,EAGH,OAGF,GAAM,GAAO,KAAK,YAChB,EACA,CAFW,EAIb,SAAK,WAAa,EAClB,EAAK,eAAiB,EACf,KAAK,WAAW,EAAM,2BAAtB,CACR,CA9Ec,EAoFf,GAJI,GACF,KAAK,WAAW,EAAhB,EAAA,EAGE,EACF,MACE,GAAO,OAAS,6BACf,MAAK,MACH,EAAA,GAAA,KAAK,MACJ,EAAA,GAAA,KAAK,kBAAL,IAAA,KAEJ,KAAK,MACH,EAAS,kDACT,CAAE,GAAI,KAAK,MAAM,SAFnB,EAKK,CAEV,CAED,MAAO,OAAM,eAAe,EAAM,EAAU,EAAU,EAAS,CAAxD,CACR,CAED,eAAe,EAA6B,CAAA,GAAA,GAC1C,MAAM,eAAe,CAArB,EAEA,GAAM,CAAE,UAAW,EACnB,AACE,EAAO,OAAS,6BAChB,CAAA,IAAC,EAAO,QAAR,MAAC,EAAc,gBAEf,GAAK,eAAiB,EAAO,eAC7B,EAAK,OAAS,EAAO,WAExB,CAED,YACE,EACA,EACA,EACA,EACc,CACd,GACE,GAAuB,EAAA,EAAW,GAClC,CAAC,KAAK,sBAAL,GACD,KAAK,aAAL,EAAA,EACA,CACA,GAAM,GAAO,KAAK,YAChB,EACA,CAFW,EAIb,EAAK,WAAa,EAClB,GAAM,GAAS,KAAK,8BAAL,EACf,MAAI,GACF,EAAK,eAAiB,EAEtB,EAAK,eAAiB,KAAK,oBAAL,EAExB,KAAK,WAAW,EAAM,gBAAtB,EAEA,KAAK,aAAL,EACO,KAAK,YAEV,EACA,EACA,EACA,CALK,CAOR,CAED,MAAO,OAAM,YAAY,EAAM,EAAc,EAAc,CAApD,CACR,CAED,kBACE,EACA,EACA,EACA,EACM,CAGN,AAAK,KAAK,MAAM,kBACd,MAAM,kBAAkB,EAAM,EAAU,EAAe,CAAvD,CAEH,CAWD,uBAAwB,CAAA,CAExB,YACE,EACa,CAEb,GADA,EAAK,WAAa,QAEhB,GAAkB,KAAK,MAAM,IAAZ,GACjB,KAAK,MADL,EAAA,GAEA,KAAK,MAAL,CAAA,EACA,CACA,GAAI,GAAQ,KAAK,UAAL,EAgBZ,GAbE,KAAK,aAAL,GAAA,GAEA,EAAM,OAFN,IAIA,EAAM,OAJN,IAMA,EAAM,OAAN,IAEA,GAAK,WAAa,OAClB,KAAK,KAAL,EACA,EAAQ,KAAK,UAAL,GAGN,GAAkB,KAAK,MAAM,IAAZ,GAAqB,EAAM,OAAN,GACxC,MAAO,MAAK,+BACV,CADK,CAIV,CAED,GAAM,GAAa,MAAM,YAAY,CAAlB,EAKnB,MACE,GAAW,aAAe,QAE1B,EAAW,WAAW,OAAS,GAE/B,EAAW,WAAW,GAAG,OAAS,0BAElC,KAAK,MAAM,EAAS,uCAAwC,CAC1D,GAAI,EADN,EAKK,CACR,CAED,YAAY,EAAmC,CAC7C,GAAI,KAAK,MAAL,EAAA,EAEF,YAAK,KAAL,EACA,AACE,KAAK,aAAL,GAAA,GACA,KAAK,kBAAL,IAAA,GAEA,GAAK,WAAa,OAClB,KAAK,KAAL,GAEA,EAAK,WAAa,QAEb,KAAK,+BACV,EACe,EAFV,EAIF,GAAI,KAAK,IAAL,EAAA,EAAiB,CAE1B,GAAM,GAAS,EACf,SAAO,WAAa,MAAM,gBAAN,EACpB,KAAK,UAAL,EACO,KAAK,WAAW,EAAQ,oBAAxB,CACR,SAAU,KAAK,cAAL,EAAA,EAA4B,CAErC,GAAM,GAAO,EAEb,YAAK,iBAAL,GAAA,EACA,EAAK,GAAK,KAAK,gBAAL,EACV,KAAK,UAAL,EACO,KAAK,WAAW,EAAM,8BAAtB,CACR,KACC,OACE,MAAK,aACL,GAAA,GAAA,KAAK,UAAL,EAAiB,OAAjB,EAEA,MAAK,KAAL,EACA,EAAK,WAAa,QAElB,EAAK,WAAa,QAGb,MAAM,YACX,CADK,CAIV,CAED,iBAA2B,CACzB,MACE,MAAK,aAAL,GAAA,GAAmC,KAAK,UAAL,EAAiB,OADtD,EAGD,CAED,8BAA6D,CAC3D,GAAI,KAAK,gBAAL,EAAwB,CAC1B,GAAM,GAAM,KAAK,UAAL,EACZ,YAAK,KAAL,EACA,EAAI,SAAW,GACR,KAAK,WAAW,EAAK,GAAM,EAA3B,CACR,CAID,GAAI,KAAK,MAAL,GAAA,EAA2B,CAC7B,GAAM,GAAS,KAAK,4BAClB,KAAK,UAAL,CADa,EAGf,GAAI,EAAQ,MAAO,EACpB,CAED,MAAO,OAAM,6BAAN,CACR,CAED,kBACE,EACA,EACA,EAAmC,GACnC,CACA,GAAM,CAAE,oBAAqB,KAAK,MAC5B,EAAc,MAAM,kBACxB,EACA,EACA,GAA2B,CAHT,EAMpB,GAAI,CAAC,EAAkB,MAAO,GAE9B,OAAW,CAAE,KAAI,SAAU,GAAY,aAErC,AAAI,CAAC,GAUL,CAAI,IAAS,SAAW,CAAC,CAAC,EAAG,eAC3B,KAAK,MAAM,EAAS,sCAAuC,CACzD,GAAI,EADN,EAIA,EAAK,OAAS,iBACd,EAAK,OAAS,kBACd,EAAK,OAAS,kBACd,EAAK,OAAS,iBACb,GAAK,OAAS,mBAAqB,EAAK,YAAY,OAAS,IAC9D,CAAC,GAAsB,CAAD,GAEtB,KAAK,MACH,EAAS,oEACT,CAAE,GAAI,EAFR,GAOJ,MAAO,EACR,CAED,sBACE,EACA,EACa,CACb,GAAI,KAAK,MAAoB,EAAA,GAAA,KAAK,sBAAsB,MAA3B,EAAoC,CAC/D,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,OAAL,EAAA,EACO,KAAK,uBAAuB,EAAM,CAAE,MAAO,EAAT,CAAlC,CACR,CAED,GAAI,KAAK,aAAL,GAAA,EACF,MAAO,MAAK,uBACV,KAAK,UAAL,CADK,EAKT,GAAI,KAAK,aAAL,GAAA,EAAkC,CACpC,GAAM,GAAS,KAAK,4BAA4B,KAAK,UAAL,CAAjC,EACf,GAAI,EAAQ,MAAO,EACpB,CAED,MAAO,OAAM,sBAAsB,EAAS,CAArC,CACR,CAED,qBAA0D,CACxD,MAAO,MAAK,gBAAgB,CAAC,SAAU,YAAa,SAAxB,CAArB,CACR,CAED,mBAAmB,EAAa,EAA2C,CACzE,MAAO,GAAU,KAAK,GAChB,GAAmB,CAAD,EACb,EAAO,gBAAkB,EAE3B,CAAC,CAAC,EAAO,EAJX,CAMR,CAED,yBAA0B,CACxB,MACE,MAAK,aACL,GAAA,GAAA,KAAK,kBAAL,IAFF,GAID,CAED,iBACE,EACA,EACA,EACM,CACN,GAAM,GAAY,CAChB,UACA,UACA,SACA,YACA,WACA,WACA,WACA,QARgB,EAUlB,KAAK,iBAAiB,CACpB,SAAU,EACV,iBAAkB,EAClB,oBAAqB,CAAC,KAAM,KAAP,EACrB,8BAA+B,GAC/B,cAAe,EAAS,wCAL1B,EAQA,GAAM,GAAmC,IAAM,CAC7C,AAAI,KAAK,wBAAL,EACF,MAAK,KAAL,EACA,KAAK,KAAL,EACI,KAAK,mBAAmB,EAAQ,CAAhC,GACF,KAAK,MAAM,EAAS,8BAA+B,CACjD,GAAI,KAAK,MAAM,YAAX,EADN,EAIF,MAAM,sBACJ,EACA,CAFF,GAKA,KAAK,6BACH,EACA,EACA,EACA,CAAC,CAAC,EAAO,MAJX,GAQJ,AAAI,EAAO,QACT,KAAK,mBAAmB,CAAxB,EAEA,EAAgC,CAEnC,CAED,6BACE,EACA,EACA,EACA,EACM,CACN,GAAM,GAAM,KAAK,yBACf,CADU,EAGZ,GAAI,EAAK,CACP,EAAU,KAAK,KAAK,CAApB,EAEK,EAAe,UAClB,KAAK,MAAM,EAAS,0BAA2B,CAAE,GAAI,EAArD,EAEG,EAAe,eAClB,KAAK,MAAM,EAAS,+BAAgC,CAClD,GAAI,EACJ,SAAW,EAAe,cAF5B,EAKG,EAAe,SAClB,KAAK,MAAM,EAAS,yBAA0B,CAAE,GAAI,EAApD,EAEG,EAAe,UAClB,KAAK,MAAM,EAAS,0BAA2B,CAAE,GAAI,EAArD,EAGF,MACD,CAED,AAAI,CAAC,KAAK,MAAM,iBAAoB,EAAe,UACjD,KAAK,MAAM,EAAS,kCAAmC,CACrD,GAAI,EADN,EAKG,EAAe,UACb,GAAM,eACT,KAAK,MAAM,EAAS,sBAAuB,CAAE,GAAI,EAAjD,GAMJ,MAAM,6BACJ,EACA,EACA,EACA,CAJF,CAMD,CAED,6BACE,EACM,CAEN,AAAI,AADa,KAAK,IAAtB,EAAA,GACc,GAAa,SAAW,IAEjC,EAAqB,UAAY,KAAK,MAAL,EAAA,GACpC,KAAK,MAAM,EAAS,uBAAwB,CAAE,GAAI,EAAlD,EAGG,EAAqB,SAAW,KAAK,MAAL,EAAA,GACnC,KAAK,MAAM,EAAS,sBAAuB,CAAE,GAAI,EAAjD,CAEH,CAOD,yBACE,EACA,EACa,CAMb,MAAO,AAJL,GAAK,OAAS,aAEV,KAAK,2BAA2B,EAAM,CAAtC,EACA,SACS,MAAM,yBAAyB,EAAM,CAArC,CAChB,CAID,8BAAwC,CACtC,MAAI,MAAK,qBAAL,EAAoC,GACjC,MAAM,6BAAN,CACR,CAGD,iBACE,EACA,EACA,EACA,EACc,CAGd,GAAI,CAAC,KAAK,MAAM,wBAA0B,CAAC,KAAK,MAAL,EAAA,EACzC,MAAO,OAAM,iBACX,EACA,EACA,EACA,CAJK,EAQT,GAAM,GAAS,KAAK,SAAS,IAC3B,MAAM,iBAAiB,EAAM,EAAU,CAAvC,CADa,EAIf,MAAK,GAAO,KAQR,GAAO,OAAO,MAAK,MAAQ,EAAO,WAC/B,EAAO,MARR,GAAO,OAET,MAAM,2BAA2B,EAAqB,EAAO,KAA7D,EAGK,EAIV,CAID,eACE,EACA,EACA,EACc,CAUd,GATA,EAAO,MAAM,eAAe,EAAM,EAAU,CAArC,EACH,KAAK,IAAL,EAAA,GACF,GAAK,SAAW,GAIhB,KAAK,iBAAiB,CAAtB,GAGE,KAAK,MAAL,EAAA,EAAsB,CACxB,GAAM,GAAe,KAAK,YACxB,EACA,CAFmB,EAIrB,SAAa,WAAa,EAC1B,EAAa,eAAiB,KAAK,sBAAL,EAEvB,KAAK,WAAW,EAAc,sBAA9B,CACR,CAED,MAAO,EACR,CAED,uBACE,EACkC,CAClC,GAAI,CAAC,KAAK,MAAM,kBAAoB,KAAK,aAAL,GAAA,EAClC,MAAO,MAAK,mBAAmB,IAAM,KAAK,uBAAuB,CAA5B,CAA9B,EAIT,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SAEtB,EAAY,KAAK,cAAvB,GAAA,EAEA,GACE,GACC,MAAK,aAAL,GAAA,GAAkC,CAAC,KAAK,6BAAL,GAEpC,KAAM,MAAK,MAAM,EAAS,kCAAmC,CAC3D,GAAI,KAAK,MAAM,QAD4C,CAAvD,EAMR,GAAM,GACH,AAFkB,GAAkB,KAAK,MAAM,IAAZ,GAEnB,KAAK,4BAAL,GACjB,MAAM,uBAAuB,CAA7B,EAEF,MAAK,GAGH,IAAY,OAAS,0BACrB,EAAY,OAAS,0BACrB,IAEA,GAAK,WAAa,QAGhB,GAEF,MAAK,mBAAmB,EAAa,EAAU,CAA/C,EAEA,EAAY,QAAU,IAGjB,GAjBkB,IAkB1B,CAED,aACE,EACA,EACA,EAEA,EACM,CACN,GAAK,EAAC,GAAe,IAAe,KAAK,aAAL,GAAA,EAClC,OAGF,MAAM,aACJ,EACA,EACA,EACC,EAAa,QAAU,GAAkB,EAJ5C,EAMA,GAAM,GAAiB,KAAK,yBAC1B,KAAK,sBAAsB,KAAK,IAAhC,CADqB,EAGvB,AAAI,GAAgB,GAAK,eAAiB,EAC3C,CAED,6BACE,EACM,CACN,AAAI,CAAC,EAAK,UAAY,KAAK,IAAL,EAAA,GACpB,GAAK,SAAW,IAGlB,GAAM,GAAO,KAAK,yBAAL,EACb,AAAI,GAAM,GAAK,eAAiB,EACjC,CAED,mBAAmB,EAAwC,CAYzD,GAXA,KAAK,6BAA6B,CAAlC,EAGE,KAAK,MAAM,kBACX,CAAE,GAAK,UAAY,CAAC,EAAK,iBACzB,KAAK,MAAL,EAAA,GAEA,KAAK,MAAM,EAAS,gCAAiC,CACnD,GAAI,KAAK,MAAM,SADjB,EAIE,EAAK,UAAY,KAAK,MAAL,EAAA,EAAmB,CACtC,GAAM,CAAE,OAAQ,EAChB,KAAK,MAAM,EAAS,+BAAgC,CAClD,GAAI,KAAK,MAAM,SACf,aACE,EAAI,OAAS,cAAgB,CAAC,EAAK,SAC/B,EAAI,KACH,IAAG,KAAK,MAAM,MAAM,EAAI,MAAO,EAAI,GAAhC,KALZ,CAOD,CAED,MAAO,OAAM,mBAAmB,CAAzB,CACR,CAED,0BACE,EACwB,CAExB,MAAI,GAAK,UACP,KAAK,MAAM,EAAS,0BAA2B,CAAE,GAAI,EAArD,EAIE,EAAK,eACP,KAAK,MAAM,EAAS,+BAAgC,CAClD,GAAI,EAEJ,SAAU,EAAK,cAHjB,EAOF,KAAK,6BAA6B,CAAlC,EACO,MAAM,0BAA0B,CAAhC,CACR,CAED,gBACE,EACA,EACA,EACA,EACA,EACA,EACM,CACN,GAAM,GAAiB,KAAK,yBAAL,EACvB,AAAI,GAAkB,GACpB,KAAK,MAAM,EAAS,6BAA8B,CAChD,GAAI,EADN,EAMF,GAAM,CAAE,UAAU,GAAO,QAAS,EAElC,AAAI,GAAY,KAAS,OAAS,IAAS,QACzC,KAAK,MAAM,EAAS,gBAAiB,CAAE,GAAI,EAAQ,OAAnD,EAEE,GAAgB,GAAO,eAAiB,GAC5C,MAAM,gBACJ,EACA,EACA,EACA,EACA,EACA,CANF,CAQD,CAED,uBACE,EACA,EACA,EACA,EACM,CACN,GAAM,GAAiB,KAAK,yBAAL,EACvB,AAAI,GAAgB,GAAO,eAAiB,GAC5C,MAAM,uBAAuB,EAAW,EAAQ,EAAa,CAA7D,CACD,CAED,iCACE,EACA,EACA,CACA,AAAI,EAAK,OAAS,mBAEd,GAAK,OAAS,oBAAsB,CAAC,EAAK,MAAM,MAEpD,MAAM,iCAAiC,EAAM,CAA7C,EACD,CAED,gBAAgB,EAAqB,CACnC,MAAM,gBAAgB,CAAtB,EAEI,EAAK,YAAe,MAAK,MAAL,EAAA,GAAqB,KAAK,MAA9C,EAAA,IAEF,GAAK,oBAAsB,KAAK,iCAAL,GAEzB,KAAK,cAAL,GAAA,GACF,GAAK,WAAa,KAAK,sBAAsB,YAA3B,EAErB,CAED,kBACE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,CACA,GAAM,GAAiB,KAAK,yBAAL,EACvB,MAAI,IAAgB,GAAK,eAAiB,GAEnC,MAAM,kBACX,EACA,EACA,EACA,EACA,EACA,EACA,EACA,CARK,CAUR,CAED,oBAAoB,EAAkB,EAAgC,CACpE,GAAM,GAAiB,KAAK,yBAAL,EACvB,AAAI,GAAgB,GAAK,eAAiB,GAC1C,MAAM,oBAAoB,EAAM,CAAhC,CACD,CAGD,WACE,EACA,EACM,CACN,MAAM,WAAW,EAAM,CAAvB,EAEE,EAAK,GAAG,OAAS,cACjB,CAAC,KAAK,sBAAL,GACD,KAAK,IAAL,EAAA,GAEA,GAAK,SAAW,IAGlB,GAAM,GAAO,KAAK,yBAAL,EACb,AAAI,GACF,GAAK,GAAG,eAAiB,EACzB,KAAK,iBAAiB,EAAK,EAA3B,EAEH,CAGD,kCACE,EACA,EAC2B,CAC3B,MAAI,MAAK,MAAL,EAAA,GACF,GAAK,WAAa,KAAK,sBAAL,GAEb,MAAM,kCAAkC,EAAM,CAA9C,CACR,CAED,iBACE,EACA,EACc,CAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAGd,GAAI,GACA,EACA,EAEJ,GACE,KAAK,UAAU,KAAf,GACC,MAAK,MAAL,GAAA,GAA8B,KAAK,MADpC,EAAA,GAEA,CAWA,GATA,EAAQ,KAAK,MAAM,MAAX,EAER,EAAM,KAAK,SACT,IAAM,MAAM,iBAAiB,EAAqB,CAA5C,EACN,CAFI,EAOF,CAAC,EAAI,MAAO,MAAO,GAAI,KAK3B,GAAM,CAAE,WAAY,KAAK,MACnB,EAAiB,EAAQ,EAAQ,OAAS,GAChD,AAAI,KAAmB,GAAG,QAAU,IAAmB,GAAG,SACxD,EAAQ,IAAR,CAEH,CAED,GAAI,CAAA,IAAC,IAAD,MAAC,EAAK,QAAS,CAAC,KAAK,MAAL,EAAA,EAClB,MAAO,OAAM,iBAAiB,EAAqB,CAA5C,EAQT,AAAI,EAAC,GAAS,IAAU,KAAK,QAAO,GAAQ,KAAK,MAAM,MAAX,GAE5C,GAAI,GACE,EAAQ,KAAK,SAAS,GAAS,CAAA,GAAA,GAAA,EAEnC,EAAiB,KAAK,sBAAL,EACjB,GAAM,GAAO,MAAM,iBACjB,EACA,CAFW,EAKb,MACE,GAAK,OAAS,2BAAd,GACA,EAAK,QADL,MACA,EAAY,gBAEZ,EAAK,EAIH,IAAA,IAAA,KAAA,OAAA,EAAgB,OAAO,UAAW,GACpC,KAAK,2BAA2B,EAAM,CAAtC,EAEF,EAAK,eAAiB,EAqBf,GACN,CAzCW,EA4Cd,GAAI,CAAC,EAAM,OAAS,CAAC,EAAM,QAIzB,MAAI,IAAgB,KAAK,6BAA6B,CAAlC,EAEb,EAAM,KAGf,GAAI,CAAC,GAIH,IAAO,CAAC,KAAK,UAAU,KAAf,CAAF,EAIN,EAAW,KAAK,SACd,IAAM,MAAM,iBAAiB,EAAqB,CAA5C,EACN,CAFS,EAMP,CAAC,EAAS,OAAO,MAAO,GAAS,KAGvC,GAAA,GAAI,IAAJ,MAAI,EAAK,KAEP,YAAK,MAAQ,EAAI,UACV,EAAI,KAGb,GAAI,EAAM,KAER,YAAK,MAAQ,EAAM,UACf,GAAgB,KAAK,6BAA6B,CAAlC,EAEb,EAAM,KAGf,GAAA,GAAI,IAAJ,MAAI,EAAU,KAEZ,YAAK,MAAQ,EAAS,UACf,EAAS,KAGlB,KAAI,GAAA,IAAJ,MAAI,EAAK,OAAc,EAAI,MACvB,EAAM,OAAc,EAAM,MAC1B,GAAA,IAAJ,MAAI,EAAU,OAAc,EAAS,MAE/B,IAAA,IAAA,KAAA,OAAA,EAAK,QAAS,EAAM,OAAS,IAAA,IAAA,KAAA,OAAA,EAAU,MAC9C,CAED,6BAA6B,EAAW,CAAA,GAAA,GACtC,AACE,EAAK,OAAO,SAAW,GACvB,CAAC,IAAA,EAAK,QAAN,MAAC,EAAY,gBACb,KAAK,gBAAgB,aAAc,0BAAnC,GAEA,KAAK,MAAM,EAAS,uBAAwB,CAAE,GAAI,EAAlD,CAEH,CAGD,gBACE,EACA,EACc,CACd,MAAI,CAAC,KAAK,UAAU,KAAf,GAAyB,KAAK,MAAL,EAAA,EACrB,KAAK,qBAAL,EAEA,MAAM,gBAAgB,EAAqB,CAA3C,CAEV,CAED,WACE,EACsD,CACtD,GAAI,KAAK,MAAL,EAAA,EAAsB,CAIxB,GAAM,GAAS,KAAK,SAAS,GAAS,CACpC,GAAM,GAAa,KAAK,qCAAxB,EAAA,EAGA,MAAI,MAAK,mBAAL,GAA6B,CAAC,KAAK,MAAL,EAAA,IAAsB,EAAK,EACtD,CACR,CANc,EAQf,GAAI,EAAO,QAAS,OAEpB,AAAK,EAAO,QACN,GAAO,OAAO,MAAK,MAAQ,EAAO,WAEtC,EAAK,WAAa,EAAO,KAE5B,CAED,MAAO,OAAM,WAAW,CAAjB,CACR,CAGD,6BAA6B,EAAkB,CAC7C,AAAI,KAAK,IAAL,EAAA,GAEA,GAAM,OAAS,cACf,CAAC,KAAK,MAAM,kBACZ,CAAC,KAAK,MAAM,QAEZ,KAAK,MAAM,EAAS,kBAAmB,CAAE,GAAI,EAA7C,EAGD,EAA8B,SAAW,IAE5C,GAAM,GAAO,KAAK,yBAAL,EACb,MAAI,IAAM,GAAM,eAAiB,GACjC,KAAK,iBAAiB,CAAtB,EAEO,CACR,CAED,aAAa,EAAc,EAA8B,CACvD,OAAQ,EAAK,UACN,uBACH,MAAO,MAAK,aAAa,EAAK,WAAY,CAAnC,MACJ,sBACH,MAAO,WAEP,MAAO,OAAM,aAAa,EAAM,CAAzB,EAEZ,CAED,aAAa,EAAc,EAAiB,GAAa,CACvD,OAAQ,EAAK,UACN,0BACH,KAAK,oCAAoC,EAAM,CAA/C,EACA,UACG,qBACA,0BACA,kBACH,AAAI,EACF,KAAK,gBAAgB,iCACnB,EAAS,8BACT,CAAE,GAAI,EAFR,EAKA,KAAK,MAAM,EAAS,8BAA+B,CAAE,GAAI,EAAzD,EAEF,KAAK,aAAa,EAAK,WAAY,CAAnC,EACA,UACG,uBACH,AAAI,CAAC,GAAS,EAAK,KAAK,OAAS,wBAC/B,GAAK,KAAO,KAAK,oBAAoB,EAAK,IAA9B,WAId,MAAM,aAAa,EAAM,CAAzB,EAEL,CAED,oCAAoC,EAAc,EAAsB,CACtE,OAAQ,EAAK,WAAW,UACjB,qBACA,0BACA,sBACA,0BACH,KAAK,aAAa,EAAK,WAAY,CAAnC,EACA,cAEA,MAAM,aAAa,EAAM,CAAzB,EAEL,CAED,sBAAsB,EAAc,EAA6B,CAC/D,OAAQ,EAAK,UACN,qBACA,sBACA,sBACH,KAAK,sBAAsB,EAAK,WAAY,EAA5C,EACA,cAEA,MAAM,sBAAsB,EAAM,CAAlC,EAEL,CAGD,YACE,EAMA,EACA,EACA,CACA,MACE,IACE,CAIE,qBAAsB,GACtB,oBAAqB,YACrB,oBAAqB,aACrB,eAAiB,KAAY,IAC3B,CAAC,IAA8B,CAAC,aAAc,EAAf,EACjC,gBAAkB,KAAY,IAC5B,CAAC,IAA8B,CAAC,aAAc,EAAf,CAVnC,EAYA,CAbI,GAcD,MAAM,YAAY,EAAM,EAA2B,CAAnD,CAER,CAED,kBAA8B,CAC5B,OAAQ,KAAK,MAAM,UACjB,IAEE,MAAO,MAAK,gBAA8B,EAAnC,UAEP,MAAO,OAAM,iBAAN,EAEZ,CAED,6BAA6B,EAAkC,CAE7D,GAAI,KAAK,MAAL,EAAA,GAAqB,KAAK,MAAL,EAAA,EAA0B,CACjD,GAAM,GAAgB,KAAK,iCAAL,EAEtB,GAAI,KAAK,MAAL,EAAA,EAAuB,CACzB,GAAM,GAAO,MAAM,6BAA6B,CAAnC,EACb,SAAK,eAAiB,EACf,CACR,CAED,KAAK,WAAW,KAAhB,EAAA,CACD,CAED,MAAO,OAAM,6BAA6B,CAAnC,CACR,CAED,oBACE,EACS,CACT,MACE,MAAK,MAAM,kBACX,KAAK,MAAL,EAAA,GACA,KAAK,kBAAL,IAA6B,EAE7B,MAAK,KAAL,EACO,IAEA,MAAM,oBAAoB,CAA1B,CAEV,CAOD,eAAyB,CACvB,MAAO,MAAK,MAAgB,EAAA,GAAA,MAAM,cAAN,CAC7B,CAED,iBAA2B,CACzB,MACE,MAAK,MAAkB,EAAA,GAAA,KAAK,MAA5B,EAAA,GAA+C,MAAM,gBAAN,CAElD,CAED,kBACE,EACA,EACA,EACW,CACX,GAAM,GAAO,MAAM,kBAAkB,EAAU,EAAU,CAA5C,EAEb,MACE,GAAK,OAAS,qBACd,EAAK,gBACL,EAAK,MAAM,MAAQ,EAAK,eAAe,OAEvC,KAAK,MAAM,EAAS,0BAA2B,CAC7C,GAAI,EAAK,eADX,EAKK,CACR,CAGD,iBAAiB,EAAoB,CACnC,GAAI,KAAK,MAAM,OAAQ,CACrB,GAAI,IAAI,GACN,MAAO,MAAK,SAAgB,GAAA,CAArB,EAET,GAAI,IAAI,GACN,MAAO,MAAK,SAAgB,GAAA,CAArB,CAEV,CACD,MAAO,OAAM,iBAAiB,CAAvB,CACR,CAGD,cAAe,CACb,GAAM,CAAE,QAAS,KAAK,MACtB,AAAI,IAAI,GACN,MAAK,MAAM,KAAO,EAClB,KAAK,aAAL,GACS,IAAI,IACb,MAAK,MAAM,KAAO,EAClB,KAAK,aAAL,EAEH,CAED,WAAY,CACV,GAAM,CAAE,QAAS,KAAK,MACtB,MAAI,KAAI,GACN,MAAK,MAAM,KAAO,EAClB,KAAK,SAAL,GAAqB,CAArB,EACA,IAEK,CACR,CAED,iBACE,EACA,EACA,EACM,CACN,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACxC,GAAM,GAAO,EAAS,GACtB,AAAI,IAAA,KAAA,OAAA,EAAM,QAAS,wBACjB,GAAS,GAAK,KAAK,oBACjB,CADY,EAIjB,CACD,MAAM,iBAAiB,EAAU,EAAkB,CAAnD,CACD,CAED,oBAAoB,EAAsC,CACxD,SAAK,WAAW,eAAiB,EAAK,eAEtC,KAAK,iBAAiB,EAAK,WAAY,EAAK,eAAe,IAAI,GAA/D,EAEO,EAAK,UACb,CAED,iBAAiB,EAAuB,CACtC,MAAI,MAAK,MAAL,EAAA,EACK,EAAO,MAAM,GAAQ,KAAK,aAAa,EAAM,EAAxB,CAArB,EAEF,MAAM,iBAAiB,CAAvB,CACR,CAED,uBAAiC,CAC/B,MAAO,MAAK,MAAmB,EAAA,GAAA,MAAM,sBAAN,CAChC,CAED,yBAA0B,CAExB,MAAO,OAAM,wBAAN,GAAmC,KAAK,gBAAL,CAC3C,CAED,gCACE,EACqB,CAErB,GAAI,KAAK,MAAL,EAAA,GAAqB,KAAK,MAAL,EAAA,EAA0B,CACjD,GAAM,GAAgB,KAAK,mBAAmB,IAE5C,KAAK,iCAAL,CAFoB,EAKtB,AAAI,GAAe,GAAK,eAAiB,EAC1C,CACD,MAAO,OAAM,gCAAgC,CAAtC,CACR,CAED,kCACE,EACQ,CACR,GAAM,GAAY,MAAM,kCAAkC,CAAxC,EAEZ,EAAa,AADJ,KAAK,6BAA6B,CAAlC,EACW,GAG1B,MAAO,AAFiB,IAAc,KAAK,YAAY,CAAjB,EAEb,EAAY,EAAI,CAC1C,CAED,uBAAmC,CACjC,GAAM,GAAQ,MAAM,sBAAN,EACR,EAAO,KAAK,yBAAL,EAEb,MAAI,IACF,GAAM,eAAiB,EACvB,KAAK,iBAAiB,CAAtB,GAGK,CACR,CAED,mBAAsB,EAAgB,CACpC,GAAM,GAAsB,KAAK,MAAM,iBACvC,KAAK,MAAM,iBAAmB,GAC9B,GAAI,CACF,MAAO,GAAE,CACV,QAFD,CAGE,KAAK,MAAM,iBAAmB,CAC/B,CACF,CAED,WACE,EACA,EACA,EACG,CACH,GAAM,GAAqB,KAAK,MAAM,gBACtC,KAAK,MAAM,gBAAkB,CAAC,CAAE,EAAa,SAC7C,GAAI,CACF,MAAO,OAAM,WAAW,EAAM,EAAa,CAApC,CACR,QAFD,CAGE,KAAK,MAAM,gBAAkB,CAC9B,CACF,CAED,2BACE,EACkE,CAClE,GAAI,KAAK,MAAL,EAAA,EACF,SAAK,SAAW,GACT,KAAK,WACV,EACkB,GACD,EAHZ,EAKF,GAAI,KAAK,aAAL,GAAA,GAMT,GAAI,CAAC,KAAK,sBAAL,EACH,SAAK,SAAW,GAChB,KAAK,MAAM,EAAS,yCAA0C,CAC5D,GAAI,EADN,EAGO,KAAK,4BACV,CADK,MAKT,MAAK,WAAW,KAAhB,EAAA,CAEH,CAED,YAGE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,CACA,GAAM,GAAS,MAAM,YACnB,EACA,EACA,EACA,EACA,EACA,EACA,CAPa,EAUf,GAAI,EAAO,UACO,MAAK,UAAU,QAAf,EAEZ,CAAC,CAAC,EAAO,MAAM,KACf,CAAC,CAAC,EAAO,MACA,CACX,GAAM,CAAE,OAAQ,EAChB,KAAK,MAAM,EAAS,gCAAiC,CACnD,GAAI,EACJ,WACE,EAAI,OAAS,cAAgB,CAAC,EAAO,SACjC,EAAI,KACH,IAAG,KAAK,MAAM,MAAM,EAAI,MAAO,EAAI,GAAhC,KALZ,CAOD,CAEH,MAAO,EACR,CAED,0BAAkD,CAEhD,MAAiD,AADlB,MAAK,gBAAL,EAC2B,IAC3D,CAED,6BAAuC,CACrC,MAAO,CAAC,CAAC,KAAK,gBAAgB,aAAc,KAAnC,CACV,CAED,OAAQ,CACN,MAAI,MAAK,4BAAL,GACF,MAAK,MAAM,iBAAmB,IAEzB,MAAM,MAAN,CACR,CAED,eAAgB,CACd,MAAI,MAAK,4BAAL,GACF,MAAK,MAAM,iBAAmB,IAEzB,MAAM,cAAN,CACR,CAED,qBACE,EACA,EACA,EACA,EACA,CACA,MAAI,CAAC,GAAY,EACf,MAAK,mCACH,EACe,GACf,CAHF,EAKO,KAAK,WAA8B,EAAM,iBAAzC,GAET,GAAK,WAAa,QACX,MAAM,qBACX,EACA,EACA,EACA,CAJK,EAMR,CAED,qBACE,EACA,EACA,EACA,EAEA,EACmB,CACnB,MAAI,CAAC,GAAoB,EACvB,MAAK,mCACH,EACe,GACf,CAHF,EAKO,KAAK,WAA8B,EAAW,iBAA9C,GAET,GAAU,WAAa,QAChB,MAAM,qBACX,EACA,EACA,EACA,EACA,EAAqB,GAAsB,EALtC,EAOR,CAED,mCACE,EACA,EACA,EACM,CACN,GAAM,GAAc,EAAW,WAAa,QACtC,EAAe,EAAW,QAAU,WAEtC,EAAW,EAAK,GAChB,EAEA,EAAmB,GACnB,EAAoB,GAElB,EAAM,EAAS,IAAI,MAOzB,GAAI,KAAK,aAAL,EAAA,EAA2B,CAE7B,GAAM,GAAU,KAAK,gBAAL,EAChB,GAAI,KAAK,aAAL,EAAA,EAA2B,CAE7B,GAAM,GAAW,KAAK,gBAAL,EACjB,AAAI,GAA2B,KAAK,MAAM,IAAZ,EAE5B,GAAmB,GACnB,EAAW,EACX,EAAY,EACR,KAAK,gBAAL,EACA,KAAK,sBAAL,EACJ,EAAoB,IAGpB,GAAY,EACZ,EAAoB,QAEjB,AAAI,IAA2B,KAAK,MAAM,IAAZ,EAEnC,GAAoB,GACpB,EAAY,EACR,KAAK,gBAAL,EACA,KAAK,sBAAL,GAGJ,GAAmB,GACnB,EAAW,OAER,AAAI,IAA2B,KAAK,MAAM,IAAZ,GAEnC,GAAmB,GACnB,AAAI,EACF,GAAW,KAAK,gBAAgB,EAArB,EACN,KAAK,aAAL,EAAA,GACH,KAAK,kBACH,EAAS,KACT,EAAS,IAAI,MACb,GACA,EAJF,GAQF,EAAW,KAAK,sBAAL,GAGf,AAAI,GAAoB,GACtB,KAAK,MACH,EACI,EAAS,gCACT,EAAS,gCACb,CAAE,GAAI,EAJR,EAQF,EAAK,GAAe,EACpB,EAAK,GAAgB,EAErB,GAAM,GAAU,EAAW,aAAe,aAC1C,EAAK,GAAW,EAAmB,OAAS,QAExC,GAAqB,KAAK,cAAL,EAAA,GACvB,GAAK,GAAgB,EACjB,KAAK,gBAAL,EACA,KAAK,sBAAL,GAED,EAAK,IACR,GAAK,GAAgB,GAAgB,EAAK,EAAN,GAElC,GACF,KAAK,gBACH,EAAK,GACL,EAAmB,GAAsB,EAF3C,CAKH,CA1sH8D,EA6sHnE,YAA+B,EAAmC,CAChE,GAAI,EAAW,OAAS,mBAAoB,MAAO,GAEnD,GAAM,CAAE,WAAU,YAAa,EAE/B,MACE,IACA,EAAS,OAAS,iBACjB,GAAS,OAAS,mBAAqB,EAAS,YAAY,OAAS,GAE/D,GAGF,GAAkC,EAAW,MAAZ,CACzC,CAED,YAA2C,EAAmC,CAC5E,MAAI,GAAW,OAAS,aAAqB,GACzC,EAAW,OAAS,oBACpB,EAAW,SAAiB,GAEzB,GAAkC,EAAW,MAAZ,CACzC,CC/9HD,GAAM,IAAoB,iBAA6B,CACrD,oBAAqB,4BACrB,gBAAiB,kCAFoC,CAA7B,EAO1B,GAAgB,GACd,aAAsC,EAA6B,CACjE,iBACE,EAC8D,CAC9D,GAAI,KAAK,MAAL,GAAA,EAA4B,CAC9B,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,KAAL,EACA,KAAK,cAAL,EAIA,EAAK,KAAO,MAAM,gBAA8B,EAApC,EAEZ,KAAK,cAAL,EACA,KAAK,OAAL,GAAA,EAEO,KAAK,kBAAkB,EAAM,CAA7B,CACR,CACF,CAED,kBACE,EACA,EAC0C,CAC1C,GAAM,GAAa,CAAC,CAAE,GAAK,cAAgB,EAAK,OAAS,eACzD,SAAK,aAAe,EAGb,EAAa,EAAO,KAAK,WAAW,EAAM,aAAtB,CAC5B,CAMD,iBAAiB,EAAc,CAC7B,MACE,KAAI,IACJ,KAAK,MAAM,WAAW,KAAK,MAAM,IAAM,CAAvC,IAAA,GAEO,KAAK,SAAyB,IAAA,CAA9B,EAGF,MAAM,iBAAiB,CAAvB,CACR,CAMD,cACE,EACgC,CAChC,MACE,MAAK,iBAAiB,YAAtB,GACA,MAAM,cAAc,CAApB,CAEH,CAED,gBAAgB,EAAmD,CAKjE,MACE,MAAK,iBAAiB,YAAtB,GAAuC,MAAM,gBAAgB,CAAtB,CAE1C,CAED,kBACE,EACA,EACA,EACA,EACA,CAIA,AAAI,IAAS,QACX,MAAM,kBAAkB,EAAM,EAAU,EAAe,CAAvD,CAEH,CAMD,kBAAgD,CAC9C,MAAO,MAAK,iBAAiB,SAAtB,GAAoC,MAAM,iBAAN,CAC5C,CAED,YAAY,EAAc,EAA0B,EAAuB,CACzE,MACE,KAAS,eACT,MAAM,YAAY,EAAM,EAAiB,CAAzC,CAEH,CAED,aAAa,EAAc,EAAsB,CAC/C,AACE,GACA,EAAK,OAAS,eACd,EAAK,eAAiB,aAEtB,EAAK,aAAe,UAEpB,MAAM,aAAa,EAAM,CAAzB,CAEH,CAMD,MAAM,EAAkC,CACtC,MAAI,OAAM,MAAM,CAAZ,EACK,GAKL,CAAC,KAAK,aAAL,EAAA,GAGD,EAAgB,GAKhB,AADc,KAAK,UAAL,EACJ,OAAV,GAKL,CAED,oBACE,EACA,EACA,CAEA,AAAI,EAAK,OAAS,EAAK,MAAM,OAAS,eACtC,MAAM,oBAAoB,EAAM,CAAhC,CACD,CAGD,yBACE,EACA,EAC+B,CAC/B,GACE,EAAK,OAAS,eACb,EAAK,OAAS,EAAK,MAAM,cAG1B,MAAO,OAAM,yBAAyB,EAAM,CAArC,EAGT,GAAI,KAAK,MAAL,EAAA,EAAsB,CAExB,GAAM,GAA2B,EACjC,SAAK,MAAQ,KAAK,kBAAkB,EAAM,YAA7B,EACb,KAAK,KAAL,EACA,EAAK,KAAO,MAAM,eAAe,OAArB,EACL,KAAK,WAAW,EAAM,kBAAtB,CACR,CAED,YAAK,UAAL,EACA,EAAK,KAAO,EAAK,KACV,KAAK,kBAAkB,EAAM,WAA7B,CACR,CAED,WACE,EACA,EACA,EACoC,CACpC,MACE,MAAK,iBAAiB,gBAAtB,GACA,MAAM,WACJ,EACA,EACA,CAHF,CAMH,CAED,gBACE,EACmD,CACnD,MACE,MAAK,iBAAiB,YAAtB,GAAuC,MAAM,gBAAgB,CAAtB,CAE1C,CAED,WACE,EACA,EACA,EACG,CACH,GAAM,GAAO,EAAc,mBAAqB,kBAEhD,KAAK,KAAL,EACA,KAAK,eAAe,CAApB,EACA,GAAM,GAAY,KAAK,MAAM,OAEvB,EAAc,KAAK,iBAAiB,YAAtB,EACpB,GAAI,EACF,GACE,KAAK,MAAL,EAAA,GACA,KAAK,MAAL,GAAA,GACA,KAAK,MAAL,CAAA,EAEA,EAAK,GAAK,MACL,IAAI,GAAc,CAAC,EACxB,SAAK,GAAK,KACV,EAAK,KAAO,KAAK,kBAAkB,EAAa,WAApC,EACL,KAAK,WAAW,EAAM,CAAtB,EAEP,KAAM,MAAK,MAAM,GAAkB,oBAAqB,CACtD,GAAI,KAAK,MAAM,QADuC,CAAlD,MAKR,MAAK,aAAa,EAAM,EAAa,CAArC,EAGF,aAAM,gBAAgB,CAAtB,EACA,EAAK,KACH,KAAK,iBAAiB,WAAtB,GACA,MAAM,eAAe,CAAC,CAAC,EAAK,WAAY,CAAxC,EACK,KAAK,WAAW,EAAM,CAAtB,CACR,CAED,YAAY,EAA2B,CACrC,GAAM,GAAc,KAAK,iBAAiB,YAAtB,EACpB,GAAI,CAAC,EAAa,MAAO,OAAM,YAAY,CAAlB,EAEzB,GAAI,CAAC,KAAK,aAAL,EAAA,GAA+B,CAAC,KAAK,MAAL,EAAA,EAEnC,SAAK,WAAa,CAAA,EAClB,EAAK,OAAS,KACd,EAAK,YAAc,KAAK,kBAAkB,EAAa,aAApC,EACZ,KAAK,WAAW,EAAM,wBAAtB,EAIT,KAAK,aAAa,mBAAlB,EACA,GAAM,GAAY,KAAK,UAAL,EAClB,SAAU,SAAW,EACrB,EAAK,WAAa,CAAC,KAAK,WAAW,EAAW,wBAA3B,CAAD,EAEX,MAAM,YAAY,CAAlB,CACR,CAED,0BAAoC,CAClC,GAAI,KAAK,MAAL,EAAA,EAAyB,CAC3B,GAAM,GAAO,KAAK,eAAL,EACb,GAAI,KAAK,qBAAqB,EAAM,MAAhC,GAEA,KAAK,MAAM,WACT,GADF,GAAA,EAEE,KAAK,oBAAoB,EAAO,CAAhC,CAFF,EAKA,MAAO,EAGZ,CACD,MAAO,OAAM,yBAAN,CACR,CAED,iCAAiC,EAAuB,CACtD,MAAI,GAAK,YAAc,EAAK,WAAW,OAAS,EAEvC,GAEF,MAAM,iCAAiC,CAAvC,CACR,CAED,YAAY,EAAsC,CAChD,GAAM,CAAE,cAAe,EACvB,AAAI,GAAJ,MAAI,EAAY,QACd,GAAK,WAAa,EAAW,OAE3B,GAAQ,EAAK,SAAS,OAAS,aAFf,GAKpB,MAAM,YAAY,CAAlB,EACA,EAAK,WAAa,CACnB,CAED,YACE,EACmD,CACnD,GAAM,GAAc,KAAK,iBAAiB,YAAtB,EACpB,GAAI,CAAC,EAAa,MAAO,OAAM,YAAY,CAAlB,EAIzB,GAFA,EAAK,WAAa,CAAA,EAEd,CAAC,KAAK,aAAL,EAAA,GAA+B,CAAC,KAAK,MAAL,EAAA,EAEnC,SAAK,OAAS,KAAK,kBAAkB,EAAa,eAApC,EACd,KAAK,UAAL,EACO,KAAK,WAAW,EAAM,mBAAtB,EAIT,GAAM,GACJ,KAAK,gBAA0C,CAA/C,EACF,SAAU,MAAQ,EAClB,EAAK,WAAW,KACd,KAAK,WAAW,EAAW,wBAA3B,CADF,EAII,KAAK,IAAL,EAAA,GAKG,CAHiB,KAAK,8BAA8B,CAAnC,GAGF,KAAK,2BAA2B,CAAhC,GAGtB,KAAK,iBAAL,EAAA,EACA,EAAK,OAAS,KAAK,kBAAL,EACd,KAAK,UAAL,EACO,KAAK,WAAW,EAAM,mBAAtB,CACR,CAED,mBAAuD,CAGrD,MACE,MAAK,iBAAiB,eAAtB,GAA0C,MAAM,kBAAN,CAE7C,CAGD,eAAsB,CACpB,AAAI,KAAK,MAAM,MAAQ,KAAK,MAAM,cAAc,OAC9C,KAAK,MAAM,GAAkB,gBAAiB,CAC5C,GAAI,KAAK,MAAM,cADjB,CAIH,CAxVgE,ECnCrE,GAAgB,GACd,aAA+B,EAA6B,CAC1D,kBAAiC,CAC/B,GAAI,KAAK,MAAL,EAAA,EAAuB,CACzB,GAAM,GAAsB,KAAK,MAAM,SAEjC,EAAO,KAAK,UAAL,EAEb,GADA,KAAK,KAAL,EACI,GAAkB,KAAK,MAAM,IAAZ,EAAmB,CACtC,GAAM,GAAO,KAAK,oBAAoB,KAAK,MAAM,KAApC,EACP,EAAa,KAAK,iBAAiB,EAAM,CAA5B,EAGnB,GADA,EAAW,KAAO,wBACd,KAAK,MAAL,EAAA,EACF,MAAO,EAEV,CACD,KAAK,WAAW,CAAhB,CACD,CACF,CAMD,cAAc,EAA6D,CACzE,MACE,MAAK,iBAAL,GAA2B,MAAM,cAAc,CAApB,CAE9B,CA5ByD,ECcvD,YACL,EACA,EACS,CAIT,GAAM,CAAC,EAAc,GACnB,MAAO,IAAmB,SAAW,CAAC,EAAgB,CAAA,CAAjB,EAAuB,EAExD,EAAe,OAAO,KAAK,CAAZ,EAEf,EAAyB,EAAa,SAAW,EAEvD,MAAO,GAAQ,KAAK,GAAK,CACvB,GAAI,MAAO,IAAM,SACf,MAAO,IAA0B,IAAM,EAClC,CACL,GAAM,CAAC,EAAY,GAAiB,EACpC,GAAI,IAAe,EACjB,MAAO,GAET,OAAW,KAAO,GAEhB,GAAI,EAAc,KAAS,EAAgB,GACzC,MAAO,GAGX,MAAO,EACR,CACF,CAhBM,CAiBR,CAEM,YAGL,EAAqB,EAAkB,EAAoB,CAC3D,GAAM,GAAS,EAAQ,KAAK,GACtB,MAAM,QAAQ,CAAd,EACK,EAAO,KAAO,EAEd,IAAW,CAJP,EAQf,MAAI,IAAU,MAAM,QAAQ,CAAd,GAAyB,EAAO,OAAS,EAC7C,EAAO,GAAiC,GAG3C,IACR,CAED,GAAM,IAAqB,CAAC,UAAW,SAAU,OAAQ,OAA9B,EACrB,GAAe,CAAC,KAAM,KAAM,IAAK,IAAK,GAAvB,EACf,GAAgC,CAAC,OAAQ,KAAT,EAE/B,YAAyB,EAAqB,CACnD,GAAI,GAAU,EAAS,YAAV,EAAyB,CACpC,GAAI,GAAU,EAAS,mBAAV,EACX,KAAM,IAAI,OACR,iEADI,EAKR,GAAM,GAAyB,GAC7B,EACA,aACA,wBAH4C,EAK9C,GACE,GAA0B,MAC1B,MAAO,IAA2B,UAElC,KAAM,IAAI,OAAM,6CAAV,EAGR,GAAM,GAAyB,GAC7B,EACA,aACA,wBAH4C,EAK9C,GACE,GAA0B,MAC1B,MAAO,IAA2B,UAElC,KAAM,IAAI,OAAM,6CAAV,CAET,CAED,GAAI,GAAU,EAAS,MAAV,GAAqB,GAAU,EAAS,YAAV,EACzC,KAAM,IAAI,OAAM,6CAAV,EAGR,GAAI,GAAU,EAAS,cAAV,GAA6B,GAAU,EAAS,aAAV,EACjD,KAAM,IAAI,OAAM,sDAAV,EAGR,GAAI,GAAU,EAAS,kBAAV,EAA+B,CAC1C,GAAM,GAAW,GAAgB,EAAS,mBAAoB,UAA9B,EAEhC,GAAI,CAAC,GAAmB,SAAS,CAA5B,EAAuC,CAC1C,GAAM,GAAe,GAAmB,IAAI,GAAM,IAAG,IAAhC,EAAsC,KAAK,IAA3C,EACrB,KAAM,IAAI,OACP,6EAA4E,IADzE,CAGP,CAED,GAAM,GAAoB,GAAU,EAAS,CAC3C,iBACA,CAAE,WAAY,MAAd,CAF2C,CAAV,EAKnC,GAAI,IAAa,OAAQ,CACvB,GAAI,GAAU,EAAS,cAAV,EACX,KAAM,IAAI,OACR,0DADI,EAKR,GAAI,GAAU,EAAS,aAAV,EACX,KAAM,IAAI,OACR,yDADI,EAKR,GAAM,GAAa,GACjB,EACA,mBACA,YAHgC,EAMlC,GAAI,CAAC,GAAa,SAAS,CAAtB,EAAmC,CACtC,GAAM,GAAY,GAAa,IAAI,GAAM,IAAG,IAA1B,EAAgC,KAAK,IAArC,EAElB,KAAM,IAAI,OACP,iHAAgH,IAD7G,CAGP,CAED,GAAI,IAAe,KAAO,EACxB,KAAM,IAAI,OACR,wIADI,CAIT,SAAU,IAAa,SAAW,EACjC,KAAM,IAAI,OACR,wHADI,CAIT,CAED,GAAI,GAAU,EAAS,kBAAV,EAKJ,CACL,GAAI,GAAU,EAAS,kBAAV,EACX,KAAM,IAAI,OACR,+DADI,EASR,GAAI,AALwC,GAC1C,EACA,mBACA,SAHyD,IAKf,WAC1C,KAAM,IAAI,OACR,sJADI,CAMT,CAGH,GACE,GAAU,EAAS,gBAAV,GACT,GAAgB,EAAS,iBAAkB,YAA5B,GAA6C,MAC5D,CAAC,GAA8B,SAC7B,GAAgB,EAAS,iBAAkB,YAA5B,CADhB,EAID,KAAM,IAAI,OACR,0EACE,GAA8B,IAAI,GAAM,IAAG,IAA3C,EAAiD,KAAK,IAAtD,CAFE,EAMR,GACE,GAAU,EAAS,oBAAV,GACT,CAAC,GAAU,EAAS,eAAV,EACV,CACA,GAAM,GAAQ,GAAI,OAChB,8FADY,EAId,QAAM,eAAiB,gBACjB,CACP,CACF,CAYM,GAAM,IAAe,CAC1B,UACA,OACA,QACA,cACA,eACA,eAN0B,EASf,GAAmB,OAAO,KAAK,EAAZ,ECxNnB,GAA0B,CAErC,WAAY,SAEZ,eAAgB,OAGhB,YAAa,EAGb,UAAW,EAGX,0BAA2B,GAG3B,2BAA4B,GAG5B,4BAA6B,GAE7B,wBAAyB,GAEzB,uBAAwB,GAExB,QAAS,CAAA,EAET,WAAY,KASZ,OAAQ,GAER,OAAQ,GAGR,+BAAgC,GAGhC,cAAe,GAKf,cAAe,EAjDsB,EAsDhC,YAAoB,EAAgC,CACzD,GAAM,GAAe,CAAA,EACrB,OAAW,KAAO,QAAO,KAAK,EAAZ,EAEhB,EAAQ,GAAO,GAAQ,EAAK,IAAQ,KAAO,EAAK,GAAO,GAAe,GAExE,MAAO,EACR,CClDD,GAAM,IAAS,CAAe,EAAW,IACvC,OAAO,eAAe,KAAK,EAAQ,CAAnC,GAA2C,EAAO,GAE9C,GAAiC,GAC9B,EAAK,OAAS,0BACjB,GAA8B,EAAK,UAAN,EAC7B,EAGS,gBAAkC,GAAU,CAuDzD,aAAa,EAAY,EAAiB,GAAa,CAAA,GAAA,GAAA,EACrD,GAAI,GAwBJ,OAvBI,GAAK,OAAS,2BAAd,GAA2C,EAAK,QAAhD,MAA2C,EAAY,gBACzD,GAAgB,GAA8B,CAAD,EAC7C,AAAI,EAKF,AAAI,EAAc,OAAS,aACzB,KAAK,gBAAgB,iCACnB,EAAO,+BACP,CAAE,GAAI,EAFR,EAIS,EAAc,OAAS,oBAIhC,KAAK,MAAM,EAAO,+BAAgC,CAAE,GAAI,EAAxD,EAGF,KAAK,MAAM,EAAO,+BAAgC,CAAE,GAAI,EAAxD,GAII,EAAK,UACN,iBACA,oBACA,mBACA,wBACA,cACH,UAEG,mBACH,EAAK,KAAO,gBACZ,OACM,GAAI,EAAG,EAAS,EAAK,WAAW,OAAQ,EAAO,EAAS,EAC5D,EAAI,EACJ,IACA,CAAA,GAAA,GACA,GAAM,GAAO,EAAK,WAAW,GACvB,EAAS,IAAM,EACrB,KAAK,iCAAiC,EAAM,EAAQ,CAApD,EAGE,GACA,EAAK,OAAS,eACd,GAAA,EAAK,QAAL,MAAA,EAAY,kBAEZ,KAAK,MAAM,EAAO,kBAAmB,CACnC,GAAI,EAAK,MAAM,iBADjB,CAIH,CACD,UAEG,iBAAkB,CACrB,GAAM,CAAE,MAAK,SAAU,EACvB,AAAI,KAAK,cAAc,CAAnB,GACF,KAAK,WAAW,eACd,KAAK,iBAAiB,CAAtB,EACA,EAAI,IAAI,KAFV,EAKF,KAAK,aAAa,EAAO,CAAzB,EACA,KACD,KAEI,gBACH,KAAM,IAAI,OACR,8HADI,MAMH,kBACH,EAAK,KAAO,eACZ,KAAK,iBACH,EAAK,SADP,GAEE,EAAK,QAFP,KAAA,OAEE,EAAY,iBACZ,CAHF,EAKA,UAEG,uBACH,AAAI,EAAK,WAAa,KACpB,KAAK,MAAM,EAAO,sBAAuB,CAAE,GAAI,EAAK,KAAK,IAAI,IAA7D,EAGF,EAAK,KAAO,oBACZ,MAAO,GAAK,SACZ,KAAK,aAAa,EAAK,KAAM,CAA7B,EACA,UAEG,0BAEH,KAAK,aAAa,EAAe,CAAjC,EACA,MAML,CAED,iCACE,EACA,EACA,EACA,CACA,GAAI,EAAK,OAAS,eAChB,KAAK,MACH,EAAK,OAAS,OAAS,EAAK,OAAS,MACjC,EAAO,mBACP,EAAO,iBACX,CAAE,GAAI,EAAK,IAJb,UAMS,EAAK,OAAS,gBAAiB,CACxC,EAAK,KAAO,cACZ,GAAM,GAAM,EAAK,SACjB,KAAK,sBAAsB,EAAwB,EAAnD,EACA,KAAK,aAAa,EAAK,CAAvB,EAEK,GACH,KAAK,MAAM,EAAO,kBAAmB,CAAE,GAAI,EAA3C,CAEH,KACC,MAAK,aAAa,EAAM,CAAxB,CAEH,CAID,iBACE,EACA,EACA,EACM,CACN,GAAM,GAAM,EAAS,OAAS,EAE9B,OAAS,GAAI,EAAG,GAAK,EAAK,IAAK,CAC7B,GAAM,GAAM,EAAS,GACrB,GAAI,EAAC,EAEL,IAAI,EAAI,OAAS,gBAAiB,CAChC,EAAI,KAAO,cACX,GAAM,GAAM,EAAI,SAChB,KAAK,sBAAsB,EAAwB,EAAnD,EACA,KAAK,aAAa,EAAK,CAAvB,CACD,KACC,MAAK,aAAa,EAAK,CAAvB,EAGF,AAAI,EAAI,OAAS,eACf,CAAI,EAAI,EACN,KAAK,MAAM,EAAO,kBAAmB,CAAE,GAAI,EAA3C,EACS,GACT,KAAK,MAAM,EAAO,kBAAmB,CAAE,GAAI,EAA3C,GAGL,CACF,CAED,aAAa,EAAY,EAA8B,CACrD,OAAQ,EAAK,UACN,iBACA,oBACA,mBACA,wBACA,cACH,MAAO,OAEJ,mBAAoB,CACvB,GAAM,GAAO,EAAK,WAAW,OAAS,EACtC,MAAQ,GAAK,WAA8C,MACzD,CAAC,EAAM,IAEH,EAAK,OAAS,gBACb,KAAM,GAAQ,EAAK,OAAS,kBAC7B,KAAK,aAAa,CAAlB,CALC,CASR,KAEI,iBACH,MAAO,MAAK,aAAa,EAAK,KAAvB,MAEJ,gBACH,MAAO,MAAK,aAAa,EAAK,QAAvB,MAEJ,kBACH,MAAQ,GAAyB,SAAS,MACxC,GAAW,IAAY,MAAQ,KAAK,aAAa,CAAlB,CAD1B,MAIJ,uBACH,MAAO,GAAK,WAAa,QAEtB,0BACH,MAAO,MAAK,aAAa,EAAK,UAAvB,MAEJ,uBACA,2BACH,MAAO,CAAC,UAGR,MAAO,GAEZ,CAID,iBACE,EAEA,EAC8C,CAC9C,MAAO,EACR,CAED,qBACE,EACA,EACM,CACN,KAAK,iBAAiB,EAAU,CAAhC,EAEA,OAAW,KAAQ,GACjB,AAAI,IAAA,KAAA,OAAA,EAAM,QAAS,mBACjB,KAAK,qBAAqB,EAAK,QAA/B,CAGL,CAID,YAEE,EACe,CACf,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,KAAL,EACA,EAAK,SAAW,KAAK,wBACnB,EACA,MAFc,EAIT,KAAK,WAAW,EAAM,eAAtB,CACR,CAID,kBAA4C,CAC1C,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,KAAL,EACA,EAAK,SAAW,KAAK,iBAAL,EACT,KAAK,WAAW,EAAM,aAAtB,CACR,CAGD,kBAAwC,CAEtC,OAAQ,KAAK,MAAM,UACjB,GAAkB,CAChB,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,KAAL,EAEA,EAAK,SAAW,KAAK,iBAAL,EAAA,GAGd,EAHc,EAKT,KAAK,WAAW,EAAM,cAAtB,CACR,KAED,GACE,MAAO,MAAK,gBAA2B,EAAA,EAAhC,EAIX,MAAO,MAAK,gBAAL,CACR,CAGD,iBAEE,EACA,EACA,EACA,EACsC,CACtC,GAAM,GAA6C,CAAA,EAC/C,EAAQ,GACZ,KAAO,CAAC,KAAK,IAAI,CAAT,GAMN,GALA,AAAI,EACF,EAAQ,GAER,KAAK,OAAL,EAAA,EAEE,GAAc,KAAK,MAAL,EAAA,EAChB,EAAK,KAAK,IAAV,MACK,IAAI,KAAK,IAAI,CAAT,EACT,MACK,GAAI,KAAK,MAAL,EAAA,GAET,GADA,EAAK,KAAK,KAAK,6BAA6B,KAAK,iBAAL,CAAlC,CAAV,EACI,CAAC,KAAK,oBAAoB,CAAzB,EAAyC,CAC5C,KAAK,OAAO,CAAZ,EACA,KACD,MACI,CACL,GAAM,GAAa,CAAA,EAOnB,IANI,KAAK,MAAgB,EAAA,GAAA,KAAK,UAAU,YAAf,GACvB,KAAK,MAAM,EAAO,8BAA+B,CAC/C,GAAI,KAAK,MAAM,SADjB,EAKK,KAAK,MAAL,EAAA,GACL,EAAW,KAAK,KAAK,eAAL,CAAhB,EAEF,EAAK,KAAK,KAAK,wBAAwB,EAAgB,CAA7C,CAAV,CACD,EAEH,MAAO,EACR,CAGD,yBAEE,EACa,CACb,YAAK,KAAL,EAEA,EAAK,SAAW,KAAK,gBAAL,EAChB,KAAK,oBAAL,GAAA,EACO,KAAK,WAAW,EAAM,aAAtB,CACR,CAGD,sBAA+D,CAC7D,GAAM,GAAO,KAAK,UAAL,EACP,CAAE,OAAM,MAAO,EAAU,YAAa,KAAK,MACjD,MAAI,KAAI,GACC,KAAK,yBAAyB,CAA9B,EACF,CAAI,IAAI,IACb,MAAK,aAAa,uBAAwB,CAA1C,EACA,KAAK,WAAW,eAAe,KAAK,MAAM,MAAO,CAAjD,EACC,EAA8B,IAAM,KAAK,iBAAL,GAErC,KAAK,kBAAkB,CAAvB,EAED,EAA8B,OAAS,GACjC,KAAK,kBACV,EACA,EACA,EACA,GACA,GACA,GACA,EAPK,EASR,CAED,wBAEE,EACA,EAC+B,CAC/B,GAAM,GAAO,KAAK,kBAAL,EACb,KAAK,6BAA6B,CAAlC,EACA,GAAM,GAAM,KAAK,kBAAkB,EAAK,MAAO,EAAK,IAAI,MAAO,CAAnD,EACZ,MAAI,GAAW,QACb,GAAK,WAAa,GAEb,CACR,CAGD,6BAA6B,EAAyB,CACpD,MAAO,EACR,CAID,kBAEE,EACA,EACA,EACS,CAAA,GAAA,GAAA,EAAA,EAIT,GAHA,EAAQ,GAAG,IAAH,KAAA,EAAe,KAAK,MAAM,SAClC,EAAQ,GAAG,IAAH,KAAA,EAAe,KAAK,MAAM,MAClC,EAAO,GAAA,IAAQ,KAAA,EAAA,KAAK,iBAAL,EACX,CAAC,KAAK,IAAV,EAAA,EAAsB,MAAO,GAE7B,GAAM,GAAO,KAAK,YAA+B,EAAU,CAA9C,EACb,SAAK,KAAO,EACZ,EAAK,MAAQ,KAAK,wBAAL,EACN,KAAK,WAAW,EAAM,mBAAtB,CACR,CA+BD,YACE,EAEA,EAEA,EACkB,CAClB,MAAO,IACL,CACE,kBAAmB,OACnB,YAAa,WACb,eAAgB,QAChB,wBAAyB,aACzB,aAAc,WACd,cAAe,cAGjB,CAVW,CAYd,CAgCD,UACE,EACA,CACE,GAAI,EACJ,UAAU,GACV,eAAe,GACf,oBAAoB,GACpB,2BAA2B,CAAE,GAAU,IACvC,2BAA2B,IASvB,CAAA,GAAA,GACN,GAAM,GAAO,EAAW,KAKxB,GAAI,KAAK,eAAe,CAApB,EAAiC,OAErC,GAAI,IAAS,mBAAoB,CAC/B,AAAI,IAAY,IACd,KAAK,MAAM,EAAO,8BAA+B,CAAE,GAAI,EAAvD,EAEF,MACD,CAED,GAAI,EAAW,OAAS,aAAc,CACpC,KAAK,gBACH,EACA,EACA,EACA,CAJF,EAOA,GAAM,CAAE,QAAS,EAEjB,AAAI,GACF,CAAI,EAAa,IAAI,CAAjB,EACF,KAAK,MAAM,EAAO,UAAW,CAAE,GAAI,EAAnC,EAEA,EAAa,IAAI,CAAjB,GAIJ,MACD,CAED,GAAM,GAAW,KAAK,YACpB,EAAW,KACX,CAAE,IAA4B,GAAA,EAAW,QAAf,MAAI,EAAkB,gBAC9C,EAAS,OAAS,uBACpB,CAJe,EAOjB,GAAI,IAAa,GAAM,OACvB,GAAI,IAAa,GAAO,CACtB,GAAM,GACJ,IAAY,GAAY,EAAO,WAAa,EAAO,kBAErD,KAAK,MAAM,EAAiB,CAC1B,GAAI,EACJ,SACE,EAAS,OAAS,mBACd,CAAE,KAAM,mBAAoB,OAAQ,EAAS,MAA7C,EACA,CAAE,KAAM,EAAS,IAAjB,EALR,EAOA,MACD,CAED,GAAM,CAAC,EAAK,GAA6B,MAAM,QAAQ,CAAd,EACrC,EACA,CAAC,EAAU,IAAS,yBAApB,EACE,EACJ,EAAW,OAAS,gBACpB,EAAW,OAAS,iBACpB,EAAW,OAAS,0BAChB,EACA,EAGN,OAAW,KAAS,CAAA,EAAG,OAAO,EAAW,EAArB,EAClB,AAAI,GACF,KAAK,UAAU,EAAO,CAEpB,GAAI,EACJ,UACA,eACA,2BACA,oBACA,yBAA0B,EAP5B,CAWL,CAED,gBACE,EACA,EACA,EAA6B,GAC7B,EAA2B,CAAE,GAAc,IAC3C,CACA,AACE,KAAK,MAAM,QACV,GACG,GAAyB,EAAG,KAAM,KAAK,QAAf,EACxB,GAA6B,EAAG,IAAJ,IAEhC,CAAI,IAAgB,GAClB,KAAK,MAAM,EAAO,oBAAqB,CAAE,KAAI,cAAe,EAAG,KAA/D,EAEA,KAAK,MAAM,EAAO,2BAA4B,CAC5C,KACA,YAAa,EAAG,KAFlB,GAOA,CAAC,GAAmB,EAAG,OAAS,OAClC,KAAK,MAAM,EAAO,oBAAqB,CAAE,KAAzC,EAGI,EAAc,IAClB,KAAK,0BAA0B,EAAI,CAAnC,CAEH,CAED,0BAA0B,EAAwB,EAAuB,CACvE,KAAK,MAAM,YAAY,EAAW,KAAM,EAAS,EAAW,IAAI,KAAhE,CACD,CAED,sBAAsB,EAAY,EAA6B,CAC7D,OAAQ,EAAK,UACN,0BACH,KAAK,sBAAsB,EAAK,WAAY,CAA5C,EACA,UACG,iBACA,mBACH,UACG,sBACA,mBACH,GAAI,EAAc,cAGlB,KAAK,MAAM,EAAO,6BAA8B,CAAE,GAAI,EAAtD,EAEL,CAED,oBACE,EACS,CACT,MAAK,MAAK,MAAL,EAAA,EAIL,MAAK,MACH,KAAK,kBAAL,IAA6B,EACzB,EAAO,kBACP,EAAO,iBACX,CAAE,GAAI,KAAK,MAAM,SAJnB,EAOO,IAVE,EAWV,CA/rBwD,EC8B5C,gBAAwC,GAAW,CA2ChE,WACE,EACA,EACA,EAGA,EACM,CACN,GACE,EAAK,OAAS,iBACd,KAAK,eAAe,CAApB,GACA,EAAK,UAEL,EAAK,UAEL,OAGF,GAAM,GAAM,EAAK,IAIjB,GAAI,AAFS,GAAI,OAAS,aAAe,EAAI,KAAO,EAAI,SAE3C,YAAa,CACxB,GAAI,EAAU,CACZ,KAAK,MAAM,EAAO,cAAe,CAAE,GAAI,EAAvC,EACA,MACD,CACD,AAAI,EAAS,MACX,CAAI,EAGE,EAAoB,iBAAmB,MACzC,GAAoB,eAAiB,EAAI,IAAI,OAG/C,KAAK,MAAM,EAAO,eAAgB,CAAE,GAAI,EAAxC,GAIJ,EAAS,KAAO,EACjB,CACF,CAED,qBAAqB,EAAoB,EAAmC,CAC1E,MACE,GAAK,OAAS,2BAA6B,EAAK,QAAU,CAE7D,CAGD,eAA2D,CACzD,KAAK,mBAAL,EACA,KAAK,UAAL,EACA,GAAM,GAAO,KAAK,gBAAL,EACb,MAAK,MAAK,MAAL,GAAA,GACH,KAAK,WAAL,EAIF,KAAK,0BAAL,EACA,EAAK,SAAW,KAAK,MAAM,SAC3B,EAAK,OAAS,KAAK,MAAM,OACrB,KAAK,QAAQ,QACf,GAAK,OAAS,KAAK,QAGd,CACR,CAqBD,gBAEE,EACA,EACc,CACd,MAAI,GACK,KAAK,cAAc,IACxB,KAAK,oBAAoB,CAAzB,CADK,EAIF,KAAK,WAAW,IAAM,KAAK,oBAAoB,CAAzB,CAAtB,CACR,CAGD,oBAEE,EACc,CACd,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SACtB,EAAO,KAAK,iBAAiB,CAAtB,EACb,GAAI,KAAK,MAAL,EAAA,EAAsB,CACxB,GAAM,GAAO,KAAK,YAAY,EAAU,CAA3B,EAEb,IADA,EAAK,YAAc,CAAC,CAAD,EACZ,KAAK,IAAL,EAAA,GACL,EAAK,YAAY,KAAK,KAAK,iBAAiB,CAAtB,CAAtB,EAEF,YAAK,iBAAiB,EAAK,WAA3B,EACO,KAAK,WAAW,EAAM,oBAAtB,CACR,CACD,MAAO,EACR,CAGD,2BAEE,EACA,EACA,CACA,MAAO,MAAK,cAAc,IACxB,KAAK,iBAAiB,EAAqB,CAA3C,CADK,CAGR,CAGD,wBAEE,EACA,EACA,CACA,MAAO,MAAK,WAAW,IACrB,KAAK,iBAAiB,EAAqB,CAA3C,CADK,CAGR,CAID,2BACE,EACA,EACA,CAAA,GAAA,GACA,EAAoB,sBAClB,GAAA,GAAA,KAAA,OAAA,EAAa,MAAO,KAAA,EAAA,KAAK,MAAM,QAClC,CAKD,iBAEE,EACA,EACc,CACd,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SAC5B,GAAI,KAAK,aAAL,GAAA,GACE,KAAK,UAAU,SAAU,CAC3B,GAAI,GAAO,KAAK,WAAL,EACX,MAAI,IACF,GAAO,EAAe,KAAK,KAAM,EAAM,EAAU,CAA1C,GAEF,CACR,CAGH,GAAI,GACJ,AAAI,EACF,EAAsB,GAEtB,GAAsB,GAAI,IAC1B,EAAsB,IAExB,GAAM,CAAE,QAAS,KAAK,MAEtB,AAAI,KAAA,IAAsB,GAAkB,CAAD,IACzC,MAAK,MAAM,iBAAmB,KAAK,MAAM,OAG3C,GAAI,GAAO,KAAK,sBAAsB,CAA3B,EAIX,GAHI,GACF,GAAO,EAAe,KAAK,KAAM,EAAM,EAAU,CAA1C,GAEL,GAAkB,KAAK,MAAM,IAAZ,EAAmB,CACtC,GAAM,GAAO,KAAK,YAAoC,EAAU,CAAnD,EACP,EAAW,KAAK,MAAM,MAC5B,SAAK,SAAW,EAEhB,AAAI,KAAK,MAAL,EAAA,EACF,MAAK,aAAa,EAAkB,EAApC,EACA,EAAK,KAAO,EAGV,EAAoB,gBAAkB,MACtC,EAAoB,eAAe,OAAS,GAE5C,GAAoB,eAAiB,MAGrC,EAAoB,oBAAsB,MAC1C,EAAoB,mBAAmB,OAAS,GAEhD,GAAoB,mBAAqB,MAGzC,EAAoB,eAAiB,MACrC,EAAoB,cAAc,OAAS,GAE3C,MAAK,0BAA0B,CAA/B,EACA,EAAoB,cAAgB,OAGtC,EAAK,KAAO,EAGd,KAAK,KAAL,EACA,EAAK,MAAQ,KAAK,iBAAL,EACb,KAAK,UAAU,EAAM,CACnB,GAAI,KAAK,WAAW,EAAM,sBAAtB,EADN,EAIO,MACF,AAAI,IACT,KAAK,sBAAsB,EAAqB,EAAhD,EAGF,MAAO,EACR,CAKD,sBAEE,EACc,CACd,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SACtB,EAAmB,KAAK,MAAM,iBAC9B,EAAO,KAAK,aAAa,CAAlB,EAEb,MAAI,MAAK,qBAAqB,EAAM,CAAhC,EACK,EAGF,KAAK,iBAAiB,EAAM,EAAU,EAAU,CAAhD,CACR,CAED,iBAEE,EACA,EACA,EAEA,EACc,CACd,GAAI,KAAK,IAAL,EAAA,EAAuB,CACzB,GAAM,GAAO,KAAK,YAAY,EAAU,CAA3B,EACb,SAAK,KAAO,EACZ,EAAK,WAAa,KAAK,wBAAL,EAClB,KAAK,OAAL,EAAA,EACA,EAAK,UAAY,KAAK,iBAAL,EACV,KAAK,WAAW,EAAM,uBAAtB,CACR,CACD,MAAO,EACR,CAED,yBAEE,EAC8B,CAC9B,MAAO,MAAK,MAAL,GAAA,EACH,KAAK,iBAAL,EACA,KAAK,gBAAgB,CAArB,CACL,CAKD,aAEE,EACc,CACd,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SACtB,EAAmB,KAAK,MAAM,iBAC9B,EAAO,KAAK,yBAAyB,CAA9B,EAEb,MAAI,MAAK,qBAAqB,EAAM,CAAhC,EACK,EAGF,KAAK,YAAY,EAAM,EAAU,EAAU,EAA3C,CACR,CAQD,YAEE,EACA,EACA,EACA,EACc,CACd,GAAI,KAAK,cAAc,CAAnB,EAA0B,CAK5B,GAAM,GAAQ,KAAK,iBAAiB,CAAtB,EAEd,AACE,IAAW,GAAuB,EAAA,GAClC,CAAC,KAAK,UAAU,OAChB,CAAC,KAAK,MAAL,EAAA,IAED,KAAK,MAAM,EAAO,oBAAqB,CACrC,GAAI,EACJ,eAAgB,EAFlB,EAMF,KAAK,WAAW,eAAe,EAAO,EAAK,IAAI,KAA/C,CACD,CAED,GAAM,GAAK,KAAK,MAAM,KACtB,GAAI,GAAgB,CAAD,GAAS,MAAK,UAAU,OAAS,CAAC,KAAK,MAAL,EAAA,GAAqB,CACxE,GAAI,GAAO,GAAwB,CAAD,EAClC,GAAI,EAAO,EAAS,CAClB,GAAI,IAAE,GAAkB,CAEtB,GADA,KAAK,aAAa,kBAAlB,EACI,KAAK,MAAM,2BACb,MAAO,GAET,KAAK,6BAA6B,EAAM,CAAxC,CACD,CACD,GAAM,GAAO,KAAK,YAChB,EACA,CAFW,EAIb,EAAK,KAAO,EACZ,EAAK,SAAW,KAAK,MAAM,MAE3B,GAAM,GAAU,IAAA,IAAuB,IAAvC,GACM,EAAW,IAAjB,GAUA,GARI,GAGF,GAAO,GAAP,EAAA,GAGF,KAAK,KAAL,EAGE,IAAE,IACF,KAAK,UAAU,CAAC,mBAAoB,CAAE,SAAU,UAAjC,CAAf,GAEI,KAAK,MAAM,OAAX,IAAiC,KAAK,UAAU,SAClD,KAAM,MAAK,MAAM,EAAO,iCAAkC,CACxD,GAAI,KAAK,MAAM,QADyC,CAApD,EAMV,EAAK,MAAQ,KAAK,qBAAqB,EAAI,CAA9B,EACb,GAAM,GAAe,KAAK,WACxB,EACA,GAAW,EAAW,oBAAsB,kBAFzB,EASf,EAAS,KAAK,MAAM,KAC1B,GACG,GAAa,KAAM,IAAqB,IAAhC,KACR,GAAW,IAAM,GAElB,KAAM,MAAK,MAAM,EAAO,0BAA2B,CACjD,GAAI,KAAK,MAAM,QADkC,CAA7C,EAKR,MAAO,MAAK,YACV,EACA,EACA,EACA,CAJK,CAMR,CACF,CACD,MAAO,EACR,CAKD,qBAEE,EACA,EACc,CACd,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SAC5B,OAAQ,OACN,IACE,OAAQ,KAAK,gBAAgB,mBAAoB,UAAzC,OACD,OACH,MAAO,MAAK,wBAAwB,IAC3B,KAAK,kBAAL,CADF,MAIJ,QACH,MAAO,MAAK,wBAAwB,IAAM,CACxC,GAAI,KAAK,UAAU,UAAY,KAAK,aAAL,GAAA,EAC7B,KAAM,MAAK,MAAM,EAAO,kBAAmB,CACzC,GAAI,KAAK,MAAM,QAD0B,CAArC,EAIR,MAAO,MAAK,8BACV,KAAK,yBAAyB,EAAI,CAAlC,EACA,EACA,CAHK,CAKR,CAXM,MAaJ,SACH,MAAO,MAAK,+BAA+B,IAClC,KAAK,wBAAwB,CAA7B,CADF,UAOX,MAAO,MAAK,yBAAyB,EAAI,CAAlC,EAEZ,CAKD,yBAEE,EACA,EACc,CACd,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SAE5B,MAAO,MAAK,YACV,KAAK,yBAAL,EACA,EACA,EACA,GAAwB,CAAD,EAAO,EAAO,EAAI,CAJpC,CAMR,CAED,mBAA8C,CAAA,GAAA,GAC5C,GAAM,CAAE,YAAa,KAAK,MACpB,EAAO,KAAK,iBAAL,EAOb,MAAI,AANwB,IAAoC,IAE9D,EAAK,IAFqB,GAMD,CAAA,IAAC,EAAK,QAAL,MAAA,EAAY,gBACtC,KAAK,MAAM,EAAO,wBAAyB,CACzC,GAAI,EAEJ,KAAM,EAAK,KAHb,EAMG,KAAK,sCAAL,GAEH,KAAK,MAAM,EAAO,gBAAiB,CAAE,GAAI,EAAzC,EAGK,CACR,CAED,2BACE,EACA,CACA,AAAI,KAAK,MAAL,EAAA,GACF,KAAK,MAAM,EAAO,mCAAoC,CACpD,GAAI,EAAK,SADX,CAIH,CAID,gBAEE,EACA,EACc,CACd,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SACtB,EAAU,KAAK,aAArB,EAAA,EAEA,GAAI,GAAW,KAAK,eAAL,EAAuB,CACpC,KAAK,KAAL,EACA,GAAM,GAAO,KAAK,WAAW,EAAU,CAA1B,EACb,MAAK,IAAU,KAAK,2BAA2B,CAAhC,EACR,CACR,CACD,GAAM,GAAS,KAAK,MAApB,EAAA,EACM,EAAO,KAAK,UAAL,EACb,GAAI,GAAc,KAAK,MAAM,IAAZ,EAAmB,CAClC,EAAK,SAAW,KAAK,MAAM,MAC3B,EAAK,OAAS,GAEV,KAAK,MAAL,EAAA,GACF,KAAK,aAAa,kBAAlB,EAEF,GAAM,GAAW,KAAK,MAAtB,EAAA,EAOA,GANA,KAAK,KAAL,EAEA,EAAK,SAAW,KAAK,gBAAgB,KAAM,EAA3B,EAEhB,KAAK,sBAAsB,EAAqB,EAAhD,EAEI,KAAK,MAAM,QAAU,EAAU,CACjC,GAAM,GAAM,EAAK,SAEjB,AAAI,EAAI,OAAS,aACf,KAAK,MAAM,EAAO,aAAc,CAAE,GAAI,EAAtC,EACS,KAAK,yBAAyB,CAA9B,GACT,KAAK,MAAM,EAAO,mBAAoB,CAAE,GAAI,EAA5C,CAEH,CAED,GAAI,CAAC,EACH,MAAK,IACH,KAAK,2BAA2B,CAAhC,EAEK,KAAK,WAAW,EAAM,iBAAtB,CAEV,CAED,GAAM,GAAO,KAAK,YAEhB,EACA,EACA,CAJW,EAOb,GAAI,EAAS,CACX,GAAM,CAAE,QAAS,KAAK,MAItB,GAAI,AAHe,MAAK,UAAU,aAAf,EACf,GAAwB,CAAD,EACvB,GAAwB,CAAD,GAAU,CAAC,KAAK,MAF3C,EAAA,IAGkB,CAAC,KAAK,iBAAL,EACjB,YAAK,eAAe,EAAO,uBAAwB,CAAE,GAAI,EAAzD,EACO,KAAK,WAAW,EAAU,CAA1B,CAEV,CAED,MAAO,EACR,CAGD,YAEE,EACA,EACA,EACc,CACd,GAAI,EAAQ,CAEV,GAAM,GAAuB,EAC7B,YAAK,UAAU,EAAqB,SAAU,CAC5C,GAAI,KAAK,WAAW,EAAsB,kBAAtC,EADN,EAGO,CACR,CAED,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SACxB,EAAO,KAAK,oBAAoB,CAAzB,EACX,GAAI,KAAK,sBAAsB,EAAqB,EAAhD,EAAwD,MAAO,GACnE,KAAO,GAAe,KAAK,MAAM,IAAZ,GAAqB,CAAC,KAAK,mBAAL,GAA2B,CACpE,GAAM,GAAO,KAAK,YAAgC,EAAU,CAA/C,EACb,EAAK,SAAW,KAAK,MAAM,MAC3B,EAAK,OAAS,GACd,EAAK,SAAW,EAChB,KAAK,KAAL,EACA,KAAK,UAAU,EAAM,CACnB,GAAK,EAAO,KAAK,WAAW,EAAM,kBAAtB,EADd,CAGD,CACD,MAAO,EACR,CAID,oBAEE,EACc,CACd,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SACtB,EAAmB,KAAK,MAAM,iBAC9B,EAAO,KAAK,cAAc,CAAnB,EAEb,MAAI,MAAK,qBAAqB,EAAM,CAAhC,EACK,EAGF,KAAK,gBAAgB,EAAM,EAAU,CAArC,CACR,CAED,gBAEE,EACA,EACA,EACA,EACc,CACd,GAAM,GAAQ,CACZ,oBAAqB,GACrB,gBAAiB,KAAK,qBAAqB,CAA1B,EACjB,KAAM,IAER,EACE,GAAO,KAAK,eAAe,EAAM,EAAU,EAAU,EAAS,CAAvD,EAGP,EAAM,gBAAkB,SACjB,CAAC,EAAM,MAChB,MAAO,EACR,CAMD,eAEE,EACA,EACA,EACA,EACA,EACc,CACd,GAAM,CAAE,QAAS,KAAK,MACtB,GAAI,CAAC,GAAW,IAAI,GAClB,MAAO,MAAK,UAAU,EAAM,EAAU,EAAU,EAAS,CAAlD,EACF,GAAI,GAAgB,CAAD,EACxB,MAAO,MAAK,8BACV,EACA,EACA,EACA,CAJK,EAQT,GAAI,GAAW,GAEf,GAAI,IAAI,GAAqB,CAC3B,GAAI,GAAW,KAAK,kBAAL,IAAA,GAEb,SAAM,KAAO,GACN,EAET,EAAM,oBAAsB,EAAW,GACvC,KAAK,KAAL,CACD,CAED,GAAI,CAAC,GAAW,KAAK,MAAL,EAAA,EACd,MAAO,MAAK,gCACV,EACA,EACA,EACA,EACA,CALK,EAOF,CACL,GAAM,GAAW,KAAK,IAAtB,CAAA,EACA,MAAI,IAAY,GAAY,KAAK,IAAL,EAAA,EACnB,KAAK,YACV,EACA,EACA,EACA,EACA,EACA,CANK,EASP,GAAM,KAAO,GACN,EAEV,CACF,CAMD,YAEE,EACA,EACA,EACA,EACA,EACA,EACiD,CACjD,GAAM,GAAO,KAAK,YAEhB,EAAU,CAFC,EAkBb,MAfA,GAAK,OAAS,EACd,EAAK,SAAW,EAChB,AAAI,EACF,GAAK,SAAW,KAAK,gBAAL,EAChB,KAAK,OAAL,CAAA,GACK,AAAI,KAAK,MAAL,GAAA,EACL,GAAK,OAAS,SAChB,KAAK,MAAM,EAAO,kBAAmB,CAAE,GAAI,EAA3C,EAEF,KAAK,WAAW,eAAe,KAAK,MAAM,MAAO,KAAK,MAAM,QAA5D,EACA,EAAK,SAAW,KAAK,iBAAL,GAEhB,EAAK,SAAW,KAAK,gBAAgB,EAArB,EAGd,EAAM,oBACP,GAAoC,SAAW,EACzC,KAAK,WAAW,EAAM,0BAAtB,GAEA,KAAK,WAAW,EAAM,kBAAtB,CAEV,CAGD,UAEE,EACA,EACA,EACA,EACA,EACc,CACd,GAAM,GAAO,KAAK,YAAY,EAAU,CAA3B,EACb,SAAK,OAAS,EACd,KAAK,KAAL,EACA,EAAK,OAAS,KAAK,gBAAL,EACd,EAAM,KAAO,GACN,KAAK,gBACV,KAAK,WAAW,EAAM,gBAAtB,EACA,EACA,EACA,CAJK,CAMR,CAMD,gCAEE,EACA,EACA,EACA,EACA,EACc,CACd,GAAM,GAA4B,KAAK,MAAM,uBACzC,EAA+C,KAEnD,KAAK,MAAM,uBAAyB,GACpC,KAAK,KAAL,EAEA,GAAM,GAAO,KAAK,YAChB,EACA,CAFW,EAIb,EAAK,OAAS,EACd,GAAM,CAAE,kBAAiB,uBAAwB,EAEjD,AAAI,GACF,MAAK,gBAAgB,MAAM,GAAkB,CAA7C,EACA,EAAsB,GAAI,KAGxB,GAEF,GAAK,SAAW,GAGlB,AAAI,EACF,EAAK,UAAY,KAAK,6BAAtB,EAAA,EAEA,EAAK,UAAY,KAAK,6BAEpB,GAAA,EAAK,OAAS,SACd,EAAK,OAAS,QAEd,EACA,CANe,EASnB,GAAI,GAG4B,KAAK,qBACnC,EACA,CAF8B,EAKhC,MAAI,IAAmB,KAAK,sBAAL,GAAgC,CAAC,EAEtD,GAAM,KAAO,GACb,KAAK,0BAA0B,CAA/B,EACA,KAAK,gBAAgB,kBAArB,EACA,KAAK,gBAAgB,KAArB,EACA,EAAe,KAAK,kCAClB,KAAK,YAAuC,EAAU,CAAtD,EACA,CAFa,GAKX,IACF,MAAK,sBAAsB,EAAqB,EAAhD,EACA,KAAK,gBAAgB,KAArB,GAEF,KAAK,sBAAsB,CAA3B,GAGF,KAAK,MAAM,uBAAyB,EAE7B,CACR,CAED,sBACE,EACA,EACA,CACA,KAAK,qBAAqB,EAAK,UAAW,CAA1C,CACD,CAID,8BAEE,EACA,EACA,EACA,EAC4B,CAC5B,GAAM,GAAO,KAAK,YAChB,EACA,CAFW,EAIb,SAAK,IAAM,EACX,EAAK,MAAQ,KAAK,cAAc,EAAnB,EACT,EAAM,qBACR,KAAK,MAAM,EAAO,2BAA4B,CAAE,GAAI,EAApD,EAEK,KAAK,WAAW,EAAM,0BAAtB,CACR,CAED,qBAAqB,EAA6B,CAChD,MACE,GAAK,OAAS,cACd,EAAK,OAAS,SACd,KAAK,MAAM,cAAc,QAAU,EAAK,KACxC,CAAC,KAAK,mBAAL,GAED,EAAK,IAAM,EAAK,QAAU,GAC1B,EAAK,QAAU,KAAK,MAAM,gBAE7B,CAED,qBACE,EACA,EACG,CACH,GAAI,EAAK,OAAO,OAAS,SAUvB,GATI,EAAK,UAAU,SAAW,GAIrB,MAAK,UAAU,kBAAf,GACH,KAAK,aAAa,kBAAlB,GAIF,EAAK,UAAU,SAAW,GAAK,EAAK,UAAU,OAAS,EACzD,KAAK,MAAM,EAAO,gBAAiB,CACjC,GAAI,EACJ,iBACE,KAAK,UAAU,kBAAf,GACA,KAAK,UAAU,kBAAf,EACI,EACA,EANR,MASA,QAAW,KAAO,GAAK,UACrB,AAAI,EAAI,OAAS,iBACf,KAAK,MAAM,EAAO,yBAA0B,CAAE,GAAI,EAAlD,EAKR,MAAO,MAAK,WACV,EACA,EAAW,yBAA2B,gBAFjC,CAIR,CAED,6BAEE,EACA,EACA,EACA,EACA,EACwC,CACxC,GAAM,GAAuB,CAAA,EACzB,EAAQ,GACN,EAAgC,KAAK,MAAM,2BAGjD,IAFA,KAAK,MAAM,2BAA6B,GAEjC,CAAC,KAAK,IAAI,CAAT,GAAiB,CACvB,GAAI,EACF,EAAQ,WAER,KAAK,OAAL,EAAA,EACI,KAAK,MAAM,CAAX,EAAmB,CACrB,AACE,GACA,CAAC,KAAK,UAAU,kBAAf,GACD,CAAC,KAAK,UAAU,kBAAf,GAED,KAAK,MAAM,EAAO,gCAAiC,CACjD,GAAI,KAAK,MAAM,gBADjB,EAIE,GACF,KAAK,4BAA4B,CAAjC,EAEF,KAAK,KAAL,EACA,KACD,CAGH,EAAK,KACH,KAAK,kBAAkB,GAAO,EAAqB,CAAnD,CADF,CAGD,CAED,YAAK,MAAM,2BAA6B,EAEjC,CACR,CAED,uBAAiC,CAC/B,MAAO,MAAK,MAAL,EAAA,GAAwB,CAAC,KAAK,mBAAL,CACjC,CAED,kCAEE,EACA,EAC2B,CAAA,GAAA,GAC3B,YAAK,kCAAkC,CAAvC,EACA,KAAK,OAAL,EAAA,EACA,KAAK,qBACH,EACA,EAAK,UACL,GAHF,GAIE,EAAK,QAJP,KAAA,OAIE,EAAY,gBAJd,EAOI,EAAK,eACP,GAAiB,EAAM,EAAK,aAAZ,EAGd,EAAK,OAAO,kBACd,GAAiB,EAAM,EAAK,OAAO,gBAAnB,EAEX,CACR,CAID,iBAA4C,CAC1C,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SAC5B,MAAO,MAAK,gBAAgB,KAAK,cAAL,EAAsB,EAAU,EAAU,EAA/D,CACR,CAcD,cAEE,EACc,CACd,GAAI,GAEE,CAAE,QAAS,KAAK,MACtB,OAAQ,OACN,IACE,MAAO,MAAK,WAAL,MAET,IAIE,MAHA,GAAO,KAAK,UAAL,EACP,KAAK,KAAL,EAEI,KAAK,MAAL,EAAA,EACK,KAAK,wBAAwB,CAA7B,EAGJ,MAAK,MAAL,EAAA,GACH,KAAK,MAAM,EAAO,kBAAmB,CACnC,GAAI,KAAK,MAAM,gBADjB,EAIK,KAAK,WAAW,EAAM,QAAtB,OACT,IACE,SAAO,KAAK,UAAL,EACP,KAAK,KAAL,EACO,KAAK,WAAW,EAAM,gBAAtB,MAET,IACE,MAAO,MAAK,QAAQ,KAAK,UAAL,EAAkB,EAA/B,MAGT,QACA,IACE,YAAK,WAAL,EACO,KAAK,mBAAmB,KAAK,MAAM,KAAnC,MAGT,KACE,MAAO,MAAK,oBAAoB,KAAK,MAAM,KAApC,MAET,KACE,MAAO,MAAK,mBAAmB,KAAK,MAAM,KAAnC,MAET,KACE,MAAO,MAAK,oBAAoB,KAAK,MAAM,KAApC,MAET,KACE,MAAO,MAAK,mBAAmB,KAAK,MAAM,KAAnC,MAET,IACE,MAAO,MAAK,iBAAL,MAET,IACE,MAAO,MAAK,oBAAoB,EAAzB,MACT,IACE,MAAO,MAAK,oBAAoB,EAAzB,MAET,IAAgB,CACd,GAAM,GAAa,KAAK,MAAM,mBAAqB,KAAK,MAAM,MAC9D,MAAO,MAAK,mCAAmC,CAAxC,CACR,KAED,OACA,GACE,MAAO,MAAK,eACV,KAAK,MAAM,OAAX,EAAA,EAAA,EACmB,GACL,EAHT,MAMT,GACE,MAAO,MAAK,eAES,EAAA,GACL,GACd,CAJK,MAOT,OACA,GACE,MAAO,MAAK,gBACV,KAAK,MAAM,OAAX,EAAA,EAAA,EACgB,GACD,EAHV,MAMT,GACE,MAAO,MAAK,gBAEM,EAAA,GACD,GACf,CAJK,MAOT,IACE,MAAO,MAAK,4BAAL,MAET,IACE,KAAK,gBAAL,MAEF,IACE,SAAO,KAAK,UAAL,EACP,KAAK,eAAe,CAApB,EACO,KAAK,WAAW,EAAM,EAAtB,MAET,IACE,MAAO,MAAK,oBAAL,MAET,QACA,IACE,MAAO,MAAK,cAAc,EAAnB,MAIT,IAAqB,CACnB,EAAO,KAAK,UAAL,EACP,KAAK,KAAL,EACA,EAAK,OAAS,KACd,GAAM,GAAU,EAAK,OAAS,KAAK,gBAAL,EAC9B,GAAI,EAAO,OAAS,mBAClB,MAAO,MAAK,WAAW,EAAM,gBAAtB,EAEP,KAAM,MAAK,MAAM,EAAO,gBAAiB,CAAE,GAAI,CAAN,CAAnC,CAET,KAED,KAOE,YAAK,MAAM,EAAO,oBAAqB,CACrC,GAAI,KAAK,MAAM,SACf,eAAgB,KAAK,MAAM,MAF7B,EAIO,KAAK,iBAAL,MAGT,IACE,MAAO,MAAK,kCAA6C,GAAA,GAAlD,MAGT,IACE,MAAO,MAAK,kCAAiD,GAAA,GAAtD,MAGT,QACA,IACE,MAAO,MAAK,oBAAoB,MAAzB,MAGT,QACA,QACA,IAAc,CACZ,GAAM,GAAe,KAAK,gBACxB,mBACA,UAFmB,EAKrB,GAAI,EACF,MAAO,MAAK,oBAAoB,CAAzB,EAEP,KAAM,MAAK,WAAL,CAET,KAED,IAAY,CACV,GAAM,GAAc,KAAK,MAAM,YAAY,KAAK,eAAL,CAAvB,EACpB,GACE,GAAkB,CAAD,GACjB,IAAW,GACX,CACA,KAAK,gBAAgB,CAAC,MAAO,OAAQ,YAAhB,CAArB,EACA,KACD,KACC,MAAM,MAAK,WAAL,CAET,SAGC,GAAI,GAAkB,CAAD,EAAQ,CAC3B,GACE,KAAK,aAAL,GAAA,GACA,KAAK,kBAAL,IADA,KAEA,CAAC,KAAK,sBAAL,EAED,MAAO,MAAK,sBAAL,EAET,GAAM,GAAa,KAAK,MAAM,mBAAqB,KAAK,MAAM,MACxD,EAAc,KAAK,MAAM,YACzB,EAAK,KAAK,gBAAL,EAEX,GACE,CAAC,GACD,EAAG,OAAS,SACZ,CAAC,KAAK,mBAAL,EACD,CACA,GAAM,CAAE,QAAS,KAAK,MACtB,GAAI,IAAI,GACN,YAAK,kCAAkC,CAAvC,EACA,KAAK,KAAL,EACO,KAAK,cACV,KAAK,gBAAgB,CAArB,EACA,OACA,EAHK,EAKF,GAAI,GAAkB,CAAD,EAI1B,MAAI,MAAK,kBAAL,IAAA,GAIK,KAAK,6BACV,KAAK,gBAAgB,CAArB,CADK,EAMA,EAEJ,GAAI,IAAI,GACb,YAAK,kCAAkC,CAAvC,EACO,KAAK,QAAQ,KAAK,gBAAgB,CAArB,EAA0B,EAAvC,CAEV,CAED,MACE,IACA,KAAK,MAAL,EAAA,GACA,CAAC,KAAK,mBAAL,EAED,MAAK,KAAL,EACO,KAAK,qBACV,KAAK,gBAAgB,CAArB,EACA,CAAC,CAAD,EACA,EAHK,GAOF,CACR,KACC,MAAM,MAAK,WAAL,EAGb,CAYD,kCACE,EACA,EACc,CACd,GAAM,GAAe,KAAK,gBAAgB,mBAAoB,UAAzC,EAErB,GAAI,EAKF,YAAK,MAAM,KAAO,EAClB,KAAK,MAAM,MAAQ,EAGnB,KAAK,MAAM,MACX,KAAK,MAAM,MAGX,KAAK,MAAM,OAAS,GAA+B,KAAK,MAAM,OAAQ,EAApB,EAE3C,KAAK,oBAAoB,CAAzB,EAEP,KAAM,MAAK,WAAL,CAET,CAQD,oBAAoB,EAAoC,CACtD,GAAM,GAAO,KAAK,UAAL,EACP,EAAW,KAAK,MAAM,SACtB,EAAY,KAAK,MAAM,KAG7B,YAAK,KAAL,EAKO,KAAK,qBAAqB,EAAM,EAAU,EAAc,CAAxD,CACR,CAeD,qBACE,EACA,EACA,EACA,EACc,CACd,GACE,KAAK,gCAAgC,EAAc,EAAU,CAA7D,EACA,CAMA,GAAM,GACJ,IAAiB,QACb,gCAGA,iBAEN,MAAK,MAAK,wCAAL,GACH,KAAK,MAIH,IAAiB,QACb,EAAO,uBAEP,EAAO,iBACX,CAAE,GAAI,EARR,EAcF,KAAK,uBAAL,EAEO,KAAK,WAAW,EAAM,CAAtB,CACR,KAEC,MAAM,MAAK,MAAM,EAAO,2BAA4B,CAClD,GAAI,EACJ,MAAO,GAAe,CAAD,CAF6B,CAA9C,CAKT,CAWD,gCACE,EACA,EACA,EACS,CACT,OAAQ,OACD,OACH,MAAO,MAAK,UAAU,CACpB,mBACA,CAEE,WAAY,GAAe,CAAD,CAF5B,CAFoB,CAAf,MAQJ,QACH,MAAO,KAAP,WAEA,KAAM,MAAK,MAAM,EAAO,2BAA4B,CAAE,GAAI,CAAN,CAA9C,EAEX,CAGD,6BAEE,EAC2B,CAG3B,KAAK,UAAU,MAAM,GAAc,GAAM,KAAK,UAAU,QAAtB,CAAlC,EACA,GAAM,GAAS,CAAC,KAAK,gBAAL,CAAD,EACf,YAAK,UAAU,KAAf,EACI,KAAK,sBAAL,GACF,KAAK,MAAM,EAAO,0BAA2B,CAC3C,GAAI,KAAK,MAAM,YAAX,EADN,EAIF,KAAK,OAAL,EAAA,EAEO,KAAK,qBAAqB,EAAM,EAAQ,EAAxC,CACR,CAID,QAEE,EACA,EACgB,CAChB,KAAK,aAAa,eAAlB,EACI,GACF,KAAK,aAAa,oBAAlB,EAEF,EAAK,MAAQ,EACb,KAAK,KAAL,EACA,GAAM,GAAY,KAAK,MAAM,OAC7B,YAAK,MAAM,OAAS,CAAA,EACpB,AAAI,EAGF,MAAK,UAAU,MAAM,EAArB,EACA,EAAK,KAAO,KAAK,WAAL,EACZ,KAAK,UAAU,KAAf,GAEA,EAAK,KAAO,KAAK,WAAL,EAGd,KAAK,MAAM,OAAS,EACb,KAAK,WAAW,EAAM,cAAtB,CACR,CAGD,YAAsB,CACpB,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,KAAL,EACA,AACE,KAAK,MACL,EAAA,GAAA,CAAC,KAAK,MAAM,kBACZ,CAAC,KAAK,QAAQ,wBAEd,KAAK,MAAM,EAAO,gBAAiB,CAAE,GAAI,EAAzC,EAEA,CAAC,KAAK,MAAM,YACZ,CAAC,KAAK,QAAQ,yBAEd,KAAK,MAAM,EAAO,gBAAiB,CAAE,GAAI,EAAzC,EAIA,CAAC,KAAK,MAAL,EAAA,GACD,CAAC,KAAK,MAAL,CAAA,GACD,CAAC,KAAK,MAAL,EAAA,GAED,KAAK,MAAM,EAAO,iBAAkB,CAAE,GAAI,EAA1C,EAGK,KAAK,WAAW,EAAM,OAAtB,CACR,CAED,kBAAkC,CAChC,GAAM,GAAO,KAAK,UAAL,EACP,EAAK,KAAK,YACd,KAAK,MAAM,MAAQ,EAGnB,GAAI,IACF,KAAK,MAAM,QACX,KAAK,MAAM,MAAQ,EAAI,KAAK,MAAM,UAClC,KAAK,MAAM,MAAQ,CAHrB,CAJS,EAUL,EAAO,KAAK,MAAM,MACxB,YAAK,KAAL,EACA,EAAK,GAAK,KAAK,iBAAiB,EAAI,CAA1B,EACH,KAAK,WAAW,EAAM,aAAtB,CACR,CAED,6BAEyC,CACvC,GAAM,GAAO,KAAK,UAAL,EASb,GAFA,KAAK,KAAL,EAEI,KAAK,UAAU,UAAY,KAAK,MAAL,EAAA,EAAoB,CACjD,GAAM,GAAO,KAAK,iBAChB,KAAK,gBAA8B,CAAnC,EACA,UAFW,EAIb,YAAK,KAAL,EAEA,AAAI,KAAK,MAAL,GAAA,EACF,KAAK,aAAa,cAAlB,EACU,KAAK,UAAU,cAAf,GAEV,KAAK,WAAL,EAEK,KAAK,kBACV,EACA,EACA,MAHK,CAKR,CACD,MAAO,MAAK,cAAc,CAAnB,CACR,CAED,kBACE,EACA,EACA,EACgB,CAChB,EAAK,KAAO,EAEZ,GAAM,GAAc,KAAK,MAAM,YAE/B,SAAK,SAAW,KAAK,gBAAgB,EAArB,EAEZ,GAAK,SAAS,OAAS,GAAgB,IACzC,KAAK,MAAM,EAAO,wBAAyB,CACzC,GAAI,EAAK,SACT,OAAQ,EAAK,KACb,sBAAuB,EAHzB,EAOK,KAAK,WAAW,EAAM,cAAtB,CACR,CAGD,wBAAwB,EAA8C,CACpE,GAAM,GAAK,KAAK,iBACd,KAAK,gBAA8B,CAAnC,EACA,QAFS,EAIX,YAAK,KAAL,EAEI,KAAK,aAAL,GAAA,GACG,MAAK,UACR,KAAK,MAAM,EAAO,wBAAyB,CAAE,GAAI,EAAjD,EAEF,KAAK,kBAAoB,IAGpB,KAAK,kBAAkB,EAAM,EAAI,MAAjC,CACR,CAED,mBACE,EACA,EACA,EACG,CACH,YAAK,SAAS,EAAM,WAAY,CAAhC,EACA,KAAK,SAAS,EAAM,MAAO,KAAK,MAAM,MAAM,EAAK,MAAO,KAAK,MAAM,GAAxC,CAA3B,EACA,EAAK,MAAQ,EACb,KAAK,KAAL,EACO,KAAK,WAAc,EAAM,CAAzB,CACR,CAED,aAA+B,EAAY,EAAoB,CAC7D,GAAM,GAAO,KAAK,UAAL,EACb,MAAO,MAAK,mBAAmB,EAAO,EAAM,CAArC,CACR,CAED,mBAAmB,EAAY,CAC7B,MAAO,MAAK,aAA8B,EAAO,eAA1C,CACR,CAED,oBAAoB,EAAY,CAC9B,MAAO,MAAK,aAA+B,EAAO,gBAA3C,CACR,CAED,mBAAmB,EAAY,CAC7B,MAAO,MAAK,aAA8B,EAAO,eAA1C,CACR,CAED,oBAAoB,EAAY,CAC9B,MAAO,MAAK,aAA+B,EAAO,gBAA3C,CACR,CAED,mBAAmB,EAIhB,CACD,GAAM,GAAO,KAAK,aAChB,EAAM,MACN,eAFW,EAIb,SAAK,QAAU,EAAM,QACrB,EAAK,MAAQ,EAAM,MACZ,CACR,CAED,oBAAoB,EAAgB,CAClC,GAAM,GAAO,KAAK,UAAL,EACb,SAAK,MAAQ,EACb,KAAK,KAAL,EACO,KAAK,WAAW,EAAM,gBAAtB,CACR,CAED,kBAAmB,CACjB,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,KAAL,EACO,KAAK,WAAW,EAAM,aAAtB,CACR,CAGD,mCAEE,EACc,CACd,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SAExB,EACJ,KAAK,KAAL,EACA,KAAK,gBAAgB,MAAM,GAAiB,CAA5C,EAEA,GAAM,GAA4B,KAAK,MAAM,uBACvC,EAAgC,KAAK,MAAM,2BACjD,KAAK,MAAM,uBAAyB,GACpC,KAAK,MAAM,2BAA6B,GAExC,GAAM,GAAgB,KAAK,MAAM,MAC3B,EAAgB,KAAK,MAAM,SAC3B,EAA2B,CAAA,EAC3B,EAAsB,GAAI,IAC5B,EAAQ,GACR,EACA,EAEJ,KAAO,CAAC,KAAK,MAAL,EAAA,GAAuB,CAC7B,GAAI,EACF,EAAQ,WAER,KAAK,OAAL,GAEE,EAAoB,wBAA0B,KAC1C,KACA,EAAoB,qBAJ1B,EAMI,KAAK,MAAL,EAAA,EAAuB,CACzB,EAAwB,KAAK,MAAM,SACnC,KACD,CAGH,GAAI,KAAK,MAAL,EAAA,EAAyB,CAC3B,GAAM,GAAqB,KAAK,MAAM,MAChC,EAAqB,KAAK,MAAM,SAUtC,GATA,EAAiB,KAAK,MAAM,SAC5B,EAAS,KACP,KAAK,eACH,KAAK,iBAAL,EACA,EACA,CAHF,CADF,EAQI,CAAC,KAAK,oBAAL,EAAA,EACH,KAEH,KACC,GAAS,KACP,KAAK,wBACH,EACA,KAAK,cAFP,CADF,CAOH,CAED,GAAM,GAAc,KAAK,MAAM,cAC/B,KAAK,OAAL,EAAA,EAEA,KAAK,MAAM,uBAAyB,EACpC,KAAK,MAAM,2BAA6B,EAExC,GAAI,GAAY,KAAK,YACnB,EACA,CAFc,EAIhB,MACE,IACA,KAAK,iBAAiB,CAAtB,GACC,GAAY,KAAK,WAAW,CAAhB,GAEb,MAAK,0BAA0B,CAA/B,EACA,KAAK,gBAAgB,kBAArB,EACA,KAAK,gBAAgB,KAArB,EACA,KAAK,qBAAqB,EAAW,EAAU,EAA/C,EAEO,GAET,MAAK,gBAAgB,KAArB,EAEK,EAAS,QACZ,KAAK,WAAW,KAAK,MAAM,eAA3B,EAEE,GAAuB,KAAK,WAAW,CAAhB,EACvB,GAAgB,KAAK,WAAW,CAAhB,EACpB,KAAK,sBAAsB,EAAqB,EAAhD,EAEA,KAAK,qBAAqB,EAAoC,EAA9D,EACA,AAAI,EAAS,OAAS,EACpB,GAAM,KAAK,YACT,EACA,CAFI,EAIN,EAAI,YAAc,EAElB,KAAK,WAAW,EAAK,oBAArB,EACA,KAAK,iBAAiB,EAAK,CAA3B,GAEA,EAAM,EAAS,GAGV,KAAK,gBACV,EACA,EAEA,CAJK,EAMR,CAED,gBACE,EACA,EACA,EACc,CACd,GAAI,CAAC,KAAK,QAAQ,+BAChB,YAAK,SAAS,EAAY,gBAAiB,EAA3C,EACA,KAAK,SAAS,EAAY,aAAc,CAAxC,EAEA,KAAK,wBACH,EACA,EACA,KAAK,MAAM,cAAc,KAH3B,EAMO,EAGT,GAAM,GAAkB,KAAK,YAC3B,EACA,CAFsB,EAIxB,SAAgB,WAAa,EACtB,KAAK,WAAW,EAAiB,yBAAjC,CACR,CAGD,iBAAiB,EAAgC,CAC/C,MAAO,CAAC,KAAK,mBAAL,CACT,CAED,WACE,EAC+C,CAC/C,GAAI,KAAK,IAAL,EAAA,EACF,MAAO,EAEV,CAED,eACE,EAEA,EAEA,EACc,CACd,MAAO,EACR,CAED,qBAAoE,CAClE,GAAM,GAAO,KAAK,UAAL,EAEb,GADA,KAAK,KAAL,EACI,KAAK,MAAL,EAAA,EAAoB,CAEtB,GAAM,GAAO,KAAK,iBAChB,KAAK,gBAA8B,CAAnC,EACA,KAFW,EAIb,KAAK,KAAL,EACA,GAAM,GAAW,KAAK,kBACpB,EACA,EACA,QAHe,EAMjB,MAAI,CAAC,KAAK,MAAM,oBAAsB,CAAC,KAAK,MAAM,SAChD,KAAK,MAAM,EAAO,oBAAqB,CAAE,GAAI,EAA7C,EAGK,CACR,CAED,MAAO,MAAK,SAAS,CAAd,CACR,CAQD,SAAuB,EAAgD,CAGrE,GAFA,KAAK,eAAe,CAApB,EAEI,KAAK,IAAL,EAAA,EAAqB,CACvB,GAAM,GAAO,KAAK,cAAlB,EAAA,EACA,KAAK,iBAAiB,CAAtB,EAEA,EAAK,UAAY,CAClB,KACC,GAAK,UAAY,CAAA,EAGnB,MAAO,MAAK,WAAW,EAAM,eAAtB,CACR,CAED,eAA6B,EAAqC,CAChE,EAAK,OAAS,KAAK,gBAAL,EACd,AAAI,EAAK,OAAO,OAAS,SACvB,KAAK,MAAM,EAAO,2BAA4B,CAAE,GAAI,EAAK,OAAzD,EACK,AAAI,KAAK,gBAAgB,EAAK,MAA1B,EACT,KAAK,MAAM,EAAO,sBAAuB,CACvC,GAAI,KAAK,MAAM,cADjB,EAGS,KAAK,IAAL,EAAA,GACT,KAAK,MAAM,EAAO,sBAAuB,CACvC,GAAI,KAAK,MAAM,SADjB,CAIH,CAID,qBAAqB,EAAsC,CACzD,GAAM,CAAE,QAAO,WAAU,MAAK,SAAU,KAAK,MACvC,EAAY,EAAQ,EACpB,EAAO,KAAK,YAChB,EACA,GAA+B,EAAU,CAAX,CAFnB,EAIb,AAAI,IAAU,MACP,IACH,KAAK,MAAM,EAAO,8BAA+B,CAE/C,GAAI,GAA+B,EAAU,CAAX,EAFpC,GAOJ,GAAM,GAAS,KAAK,MAApB,EAAA,EACM,EAAY,EAAS,GAAK,GAC1B,EAAU,EAAM,EACtB,EAAK,MAAQ,CACX,IAAK,KAAK,MAAM,MAAM,EAAW,CAA5B,EAAqC,QAAQ,SAAU;CAAvD,EACL,OAAQ,IAAU,KAAO,KAAO,EAAM,MAAM,EAAG,CAAf,GAElC,EAAK,KAAO,EACZ,KAAK,KAAL,EACA,GAAM,GAAe,KAAK,WAAW,EAAM,iBAAtB,EACrB,YAAK,iBACH,EACA,GAA+B,KAAK,MAAM,cAAe,CAA3B,CAFhC,EAIO,CACR,CAGD,cAA4B,EAAsC,CAChE,GAAM,GAAO,KAAK,UAAL,EACb,EAAK,YAAc,CAAA,EACnB,GAAI,GAAS,KAAK,qBAAqB,CAA1B,EAEb,IADA,EAAK,OAAS,CAAC,CAAD,EACP,CAAC,EAAO,MACb,EAAK,YAAY,KAAK,KAAK,0BAAL,CAAtB,EACA,KAAK,yBAAL,EACA,EAAK,OAAO,KAAM,EAAS,KAAK,qBAAqB,CAA1B,CAA3B,EAEF,MAAO,MAAK,WAAW,EAAM,iBAAtB,CACR,CAGD,2BAAsD,CACpD,MAAO,MAAK,gBAAL,CACR,CAsBD,gBAEE,EACA,EACA,EACA,EACG,CACH,AAAI,GACF,KAAK,aAAa,gBAAlB,EAEF,GAAM,GAAgC,KAAK,MAAM,2BACjD,KAAK,MAAM,2BAA6B,GACxC,GAAM,GAAgB,OAAO,OAAO,IAAd,EAClB,EAAQ,GACN,EAAO,KAAK,UAAL,EAOb,IAHA,EAAK,WAAa,CAAA,EAClB,KAAK,KAAL,EAEO,CAAC,KAAK,MAAM,CAAX,GAAmB,CACzB,GAAI,EACF,EAAQ,WAER,KAAK,OAAL,EAAA,EACI,KAAK,MAAM,CAAX,EAAmB,CACrB,KAAK,4BAEH,CAFF,EAIA,KACD,CAGH,GAAI,GACJ,AAAI,EACF,EAAO,KAAK,qBAAL,EAEP,GAAO,KAAK,wBAAwB,CAA7B,EACP,KAAK,WAAW,EAAM,EAAU,EAAU,CAA1C,GAIA,GACA,CAAC,KAAK,iBAAiB,CAAtB,GACD,EAAK,OAAS,iBAEd,KAAK,MAAM,EAAO,sBAAuB,CAAE,GAAI,EAA/C,EAIE,EAAK,WACP,KAAK,SAAS,EAAM,YAAa,EAAjC,EAIF,EAAK,WAAW,KAAK,CAArB,CACD,CAED,KAAK,KAAL,EAEA,KAAK,MAAM,2BAA6B,EACxC,GAAI,GAAO,mBACX,MAAI,GACF,EAAO,gBACE,GACT,GAAO,oBAGF,KAAK,WAAW,EAAM,CAAtB,CACR,CAED,4BAA4B,EAAoB,CAC9C,KAAK,SAAS,EAAM,gBAAiB,KAAK,MAAM,YAAhD,EACA,KAAK,SAAS,EAAM,mBAAoB,KAAK,MAAM,gBAAiB,EAApE,CACD,CAKD,yBAAyB,EAAyC,CAChE,MACE,CAAC,EAAK,UACN,EAAK,IAAI,OAAS,cACjB,MAAK,sBAAL,GACC,KAAK,MAAL,CAAA,GACA,KAAK,MAAL,EAAA,EAEL,CAGD,wBAEE,EACkC,CAClC,GAAI,GAAa,CAAA,EACjB,GAAI,KAAK,MAAL,EAAA,EASF,IARI,KAAK,UAAU,YAAf,GACF,KAAK,MAAM,EAAO,6BAA8B,CAC9C,GAAI,KAAK,MAAM,SADjB,EAOK,KAAK,MAAL,EAAA,GACL,EAAW,KAAK,KAAK,eAAL,CAAhB,EAIJ,GAAM,GAAO,KAAK,UAAL,EACT,EAAU,GACV,EAAa,GACb,EACA,EAEJ,GAAI,KAAK,MAAL,EAAA,EACF,MAAI,GAAW,QAAQ,KAAK,WAAL,EAChB,KAAK,YAAL,EAGT,AAAI,EAAW,QACb,GAAK,WAAa,EAClB,EAAa,CAAA,GAGf,EAAK,OAAS,GAEV,GACF,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,UAGxB,GAAI,GAAc,KAAK,IAAvB,EAAA,EACA,KAAK,gCAAgC,CAArC,EACA,GAAM,GAAc,KAAK,MAAM,YACzB,EAAM,KAAK,kBAAkB,EAAM,CAA7B,EAEZ,GAAI,CAAC,GAAe,CAAC,GAAe,KAAK,yBAAyB,CAA9B,EAAqC,CACvE,GAAM,GAAU,EAAI,KAGpB,AAAI,IAAY,SAAW,CAAC,KAAK,sBAAL,GAC1B,GAAU,GACV,KAAK,kCAAkC,CAAvC,EACA,EAAc,KAAK,IAAnB,EAAA,EACA,KAAK,kBAAkB,CAAvB,GAIE,KAAY,OAAS,IAAY,QACnC,GAAa,GACb,KAAK,kCAAkC,CAAvC,EACA,EAAK,KAAO,EACR,KAAK,MAAL,EAAA,GACF,GAAc,GACd,KAAK,MAAM,EAAO,oBAAqB,CACrC,GAAI,KAAK,MAAM,YAAX,EACJ,KAAM,EAFR,EAIA,KAAK,KAAL,GAEF,KAAK,kBAAkB,CAAvB,EAEH,CAED,MAAO,MAAK,kBACV,EACA,EACA,EACA,EACA,EACA,GACA,EACA,CARK,CAUR,CAED,kCACE,EACQ,CACR,MAAO,GAAO,OAAS,MAAQ,EAAI,CACpC,CAGD,6BAA6B,EAAwC,CACnE,MAAO,GAAO,MACf,CAID,wBAAwB,EAA8C,CAAA,GAAA,GACpE,GAAM,GAAa,KAAK,kCAAkC,CAAvC,EACb,EAAS,KAAK,6BAA6B,CAAlC,EAEf,AAAI,EAAO,SAAW,GACpB,KAAK,MACH,EAAO,OAAS,MAAQ,EAAO,eAAiB,EAAO,eACvD,CAAE,GAAI,EAFR,EAOA,EAAO,OAAS,OAChB,IAAA,EAAO,EAAO,OAAS,KAAvB,KAAA,OAAA,EAA2B,QAAS,eAEpC,KAAK,MAAM,EAAO,uBAAwB,CAAE,GAAI,EAAhD,CAEH,CAGD,kBAEE,EACA,EACA,EACA,EACA,EACmC,CACnC,GAAI,EAAY,CAEd,GAAM,GAAe,KAAK,YACxB,EAGA,EACc,GACM,GACpB,GACA,cARmB,EAUrB,YAAK,wBAAwB,CAA7B,EACO,CACR,CAED,GAAI,GAAW,GAAe,KAAK,MAAL,EAAA,EAC5B,MAAI,IAAW,KAAK,WAAL,EACf,EAAK,KAAO,SACZ,EAAK,OAAS,GACP,KAAK,YACV,EACA,EACA,EACoB,GACpB,GACA,cANK,CASV,CAID,oBAEE,EACA,EACA,EACA,EACA,EACqC,CAGrC,GAFA,EAAK,UAAY,GAEb,KAAK,IAAL,EAAA,EACF,SAAK,MAAQ,EACT,KAAK,kBAAkB,KAAK,MAAM,MAAO,KAAK,MAAM,QAApD,EACA,KAAK,wBAAwB,CAA7B,EAEG,KAAK,WAAW,EAAM,gBAAtB,EAGT,GAAI,CAAC,EAAK,UAAY,EAAK,IAAI,OAAS,aAAc,CAOpD,GAFA,KAAK,kBAAkB,EAAK,IAAI,KAAM,EAAK,IAAI,IAAI,MAAO,GAAM,EAAhE,EAEI,EACF,EAAK,MAAQ,KAAK,kBAChB,EACA,EACA,GAAgB,EAAK,GAAN,CAHJ,UAKJ,KAAK,MAAL,EAAA,EAAmB,CAC5B,GAAM,GAAqB,KAAK,MAAM,SACtC,AAAI,GAAuB,KACrB,EAAoB,qBAAuB,MAC7C,GAAoB,mBAAqB,GAG3C,KAAK,MAAM,EAAO,4BAA6B,CAC7C,GAAI,EADN,EAIF,EAAK,MAAQ,KAAK,kBAChB,EACA,EACA,GAAgB,EAAK,GAAN,CAHJ,CAKd,KACC,GAAK,MAAQ,GAAgB,EAAK,GAAN,EAE9B,SAAK,UAAY,GAEV,KAAK,WAAW,EAAM,gBAAtB,CACR,CACF,CAED,kBAEE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACmC,CACnC,GAAM,GACJ,KAAK,kBACH,EACA,EACA,EACA,EACA,CALF,GAOA,KAAK,oBACH,EACA,EACA,EACA,EACA,CALF,EAQF,MAAK,IAAM,KAAK,WAAL,EAEJ,CACR,CAKD,kBAEE,EAGA,EAC6B,CAC7B,GAAI,KAAK,IAAL,CAAA,EACD,EAAuC,SAAW,GACnD,EAAK,IAAM,KAAK,wBAAL,EACX,KAAK,OAAL,CAAA,MACK,CAEL,GAAM,CAAE,OAAM,SAAU,KAAK,MACzB,EAEJ,GAAI,GAA2B,CAAD,EAC5B,EAAM,KAAK,gBAAgB,EAArB,MAEN,QAAQ,OACN,KACE,EAAM,KAAK,oBAAoB,CAAzB,EACN,UACF,KACE,EAAM,KAAK,mBAAmB,CAAxB,EACN,UACF,KACE,EAAM,KAAK,mBAAmB,CAAxB,EACN,UACF,KACE,EAAM,KAAK,oBAAoB,CAAzB,EACN,UACF,KAAqB,CAEnB,GAAM,GAAgB,KAAK,MAAM,SACjC,AAAI,GAAuB,KACrB,EAAoB,gBAAkB,MACxC,GAAoB,cAAgB,GAGtC,KAAK,MAAM,EAAO,uBAAwB,CACxC,GAAI,EADN,EAIF,EAAM,KAAK,iBAAL,EACN,KACD,SAEC,KAAM,MAAK,WAAL,EAGX,EAAa,IAAM,EAChB,IAAI,KAEN,GAAK,SAAW,GAEnB,CAED,MAAO,GAAK,GACb,CAID,aACE,EACA,EACM,CACN,EAAK,GAAK,KACV,EAAK,UAAY,GACjB,EAAK,MAAQ,CAAC,CAAC,CAChB,CAID,YAEE,EACA,EACA,EACA,EACA,EACA,EACA,EAAwB,GACrB,CACH,KAAK,aAAa,EAAM,CAAxB,EACA,EAAK,UAAY,CAAC,CAAC,EACnB,GAAM,GAAiB,EACvB,KAAK,MAAM,MACT,GACE,GACC,GAAe,GAAc,GAC7B,GAAmB,GAAqB,EAJ7C,EAMA,KAAK,UAAU,MAAM,GAAc,EAAS,EAAK,SAAf,CAAlC,EACA,KAAK,oBAAoB,EAAM,CAA/B,EACA,GAAM,GAAe,KAAK,2BAA2B,EAAM,EAAM,EAA5C,EACrB,YAAK,UAAU,KAAf,EACA,KAAK,MAAM,KAAX,EAEO,CACR,CAKD,eAEE,EACA,EACA,EACA,EACuC,CACvC,AAAI,GACF,KAAK,aAAa,gBAAlB,EAEF,GAAM,GAAgC,KAAK,MAAM,2BACjD,KAAK,MAAM,2BAA6B,GACxC,GAAM,GAAO,KAAK,UAAL,EACb,YAAK,KAAL,EACA,EAAK,SAAW,KAAK,cACnB,EACiB,CAAC,EAClB,EAEA,CALc,EAOhB,KAAK,MAAM,2BAA6B,EACjC,KAAK,WACV,EACA,EAAU,kBAAoB,iBAFzB,CAIR,CAKD,qBAEE,EACA,EACA,EACA,EAC2B,CAC3B,KAAK,MAAM,MAAM,GAAiB,EAAlC,EACA,GAAI,GAAQ,GAAc,EAAS,EAAV,EAIzB,AAAI,CAAC,KAAK,MAAL,CAAA,GAAyB,KAAK,UAAU,OAC3C,IAAS,IAEX,KAAK,UAAU,MAAM,CAArB,EACA,KAAK,aAAa,EAAM,CAAxB,EACA,GAAM,GAA4B,KAAK,MAAM,uBAE7C,MAAI,IACF,MAAK,MAAM,uBAAyB,GACpC,KAAK,2BAA2B,EAAM,EAAQ,CAA9C,GAEF,KAAK,MAAM,uBAAyB,GACpC,KAAK,kBAAkB,EAAM,EAA7B,EAEA,KAAK,UAAU,KAAf,EACA,KAAK,MAAM,KAAX,EACA,KAAK,MAAM,uBAAyB,EAE7B,KAAK,WAAW,EAAM,yBAAtB,CACR,CAED,2BACE,EACA,EACA,EACM,CACN,KAAK,iBAAiB,EAAQ,EAAkB,EAAhD,EACA,EAAK,OAAS,CACf,CAED,2BAME,EAAiB,EAAiB,EAAoB,GAAU,CAEhE,YAAK,kBAAkB,EAAM,GAAO,CAApC,EACO,KAAK,WAAW,EAAM,CAAtB,CACR,CAGD,kBAEE,EACA,EACA,EAAoB,GACd,CACN,GAAM,GAAe,GAAmB,CAAC,KAAK,MAA9C,CAAA,EAGA,GAFA,KAAK,gBAAgB,MAAM,GAAkB,CAA7C,EAEI,EAED,EAA2C,KAC1C,KAAK,iBAAL,EACF,KAAK,YAAY,EAAM,GAAO,EAAiB,EAA/C,MACK,CACL,GAAM,GAAY,KAAK,MAAM,OAGvB,EAAY,KAAK,MAAM,OAC7B,KAAK,MAAM,OAAS,CAAA,EAIpB,KAAK,UAAU,MACZ,KAAK,UAAU,aAAf,EAAgC,EADnC,EAGA,EAAK,KAAO,KAAK,WACf,GACA,GAEC,GAAoC,CACnC,GAAM,GAAY,CAAC,KAAK,kBAAkB,EAAK,MAA5B,EAEnB,AAAI,GAA0B,GAE5B,KAAK,MAAM,EAAO,6BAA8B,CAC9C,GAEG,GAAK,OAAS,UAAY,EAAK,OAAS,gBAEzC,CAAC,CAAC,EAAK,IAEH,EAAK,IAAI,IAAI,IACb,EARR,EAYF,GAAM,GAAoB,CAAC,GAAa,KAAK,MAAM,OAInD,KAAK,YACH,EACA,CAAC,KAAK,MAAM,QAAU,CAAC,GAAmB,CAAC,GAAY,CAAC,EACxD,EACA,CAJF,EAQI,KAAK,MAAM,QAAU,EAAK,IAC5B,KAAK,gBAAgB,EAAK,GAAI,GAAc,CAA5C,CAEH,CApCS,EAsCZ,KAAK,UAAU,KAAf,EACA,KAAK,MAAM,OAAS,CACrB,CACD,KAAK,gBAAgB,KAArB,CACD,CAED,kBAAkB,EAAyC,CACzD,MAAO,GAAK,OAAS,YACtB,CAED,kBACE,EACS,CACT,OAAS,GAAI,EAAG,EAAM,EAAO,OAAQ,EAAI,EAAK,IAC5C,GAAI,CAAC,KAAK,kBAAkB,EAAO,EAA9B,EAAmC,MAAO,GAEjD,MAAO,EACR,CAED,YACE,EACA,EAEA,EACA,EAA6B,GACvB,CACN,GAAM,GAAe,CAAC,GAAmB,GAAI,KAOvC,EAAmB,CAAE,KAAM,oBACjC,OAAW,KAAS,GAAK,OACvB,KAAK,UAAU,EAAO,CACpB,GAAI,EACJ,QAAS,GACT,eACA,oBAJF,CAOH,CAQD,cAEE,EACA,EACA,EACA,EACyB,CACzB,GAAM,GAAgC,CAAA,EAClC,EAAQ,GAEZ,KAAO,CAAC,KAAK,IAAI,CAAT,GAAiB,CACvB,GAAI,EACF,EAAQ,WAER,KAAK,OAAL,EAAA,EACI,KAAK,MAAM,CAAX,EAAmB,CACrB,AAAI,GACF,KAAK,4BAA4B,CAAjC,EAEF,KAAK,KAAL,EACA,KACD,CAGH,EAAK,KAAK,KAAK,kBAAkB,EAAY,CAAnC,CAAV,CACD,CACD,MAAO,EACR,CAcD,kBAEE,EACA,EACA,EACqB,CACrB,GAAI,GACJ,GAAI,KAAK,MAAL,EAAA,EACF,AAAK,GACH,KAAK,MAAM,EAAO,gBAAiB,CACjC,GAAI,KAAK,MAAM,YAAX,EACJ,WAAY,IAFd,EAKF,EAAM,aACG,KAAK,MAAL,EAAA,EAAyB,CAClC,GAAM,GAAqB,KAAK,MAAM,MAChC,EAAqB,KAAK,MAAM,SAEtC,EAAM,KAAK,eACT,KAAK,YAAY,CAAjB,EACA,EACA,CAHI,CAKP,SAAU,KAAK,MAAL,EAAA,EAAyB,CAClC,KAAK,aAAa,oBAAlB,EACK,GACH,KAAK,MAAM,EAAO,8BAA+B,CAC/C,GAAI,KAAK,MAAM,SADjB,EAIF,GAAM,GAAO,KAAK,UAAL,EACb,KAAK,KAAL,EACA,EAAM,KAAK,WAAW,EAAM,qBAAtB,CACP,KACC,GAAM,KAAK,wBACT,EACA,KAAK,cAFD,EAKR,MAAO,EACR,CAQD,gBAAgB,EAAiC,CAC/C,GAAM,GAAO,KAAK,UAAL,EACP,EAAO,KAAK,oBAAoB,EAAK,MAAO,CAArC,EAEb,MAAO,MAAK,iBAAiB,EAAM,CAA5B,CACR,CAED,iBACE,EACA,EACc,CACd,SAAK,KAAO,EACZ,EAAK,IAAI,eAAiB,EAEnB,KAAK,WAAW,EAAM,YAAtB,CACR,CAED,oBAAoB,EAAa,EAA2B,CAC1D,GAAI,GAEE,CAAE,WAAU,QAAS,KAAK,MAEhC,GAAI,GAA2B,CAAD,EAC5B,EAAO,KAAK,MAAM,UAElB,MAAM,MAAK,WAAL,EAGR,GAAM,GAAiB,GAAkC,CAAD,EAExD,MAAI,GAGE,GACF,KAAK,aAAL,GAAA,EAGF,KAAK,kBAAkB,EAAM,EAAU,EAAgB,EAAvD,EAGF,KAAK,KAAL,EAEO,CACR,CAED,kBACE,EACA,EACA,EACA,EACM,CAON,GALI,EAAK,OAAS,IAKd,CAAC,GAAkB,CAAD,EACpB,OAGF,GAAI,IAAS,SACX,GAAI,KAAK,UAAU,SAAU,CAC3B,KAAK,MAAM,EAAO,uBAAwB,CAAE,GAAI,EAAhD,EACA,MACD,UACQ,IAAS,QAAS,CAC3B,GAAI,KAAK,UAAU,SAAU,CAC3B,KAAK,MAAM,EAAO,uBAAwB,CAAE,GAAI,EAAhD,EACA,MACD,CAED,GAAI,KAAK,MAAM,cAAe,CAC5B,KAAK,MAAM,EAAO,oCAAqC,CACrD,GAAI,EADN,EAGA,MACD,CAED,KAAK,gBAAgB,gCAAgC,CAAE,GAAI,EAA3D,CACD,SAAU,IAAS,aACd,KAAK,MAAM,gCAAiC,CAC9C,KAAK,MAAM,EAAO,iBAAkB,CAAE,GAAI,EAA1C,EACA,MACD,CAGH,GAAI,GAAiB,GAAU,CAAD,EAAQ,CACpC,KAAK,MAAM,EAAO,kBAAmB,CACnC,GAAI,EACJ,QAAS,EAFX,EAIA,MACD,CAQD,AAAI,AANiB,CAAC,KAAK,MAAM,OAE7B,EACA,GACA,GAHA,IAKa,EAAM,KAAK,QAAZ,GACd,KAAK,MAAM,EAAO,uBAAwB,CACxC,GAAI,EACJ,aAAc,EAFhB,CAKH,CAED,gBAA0B,CAExB,MADI,QAAK,UAAU,UACf,KAAK,QAAQ,2BAA6B,CAAC,KAAK,MAAM,WAI3D,CAID,WAEE,EACA,EACmB,CACnB,GAAM,GAAO,KAAK,YAA+B,EAAU,CAA9C,EAEb,YAAK,gBAAgB,gCACnB,EAAO,+BACP,CAEE,GAAI,EAJR,EAQI,KAAK,IAAL,EAAA,GACF,KAAK,MAAM,EAAO,kBAAmB,CAAE,GAAI,EAA3C,EAGE,CAAC,KAAK,MAAM,YAAc,CAAC,KAAK,QAAQ,2BAC1C,CAAI,KAAK,iBAAL,EACF,KAAK,4BAA8B,GAEnC,KAAK,kBAAoB,IAIxB,KAAK,MAAM,WACd,GAAK,SAAW,KAAK,gBAAgB,KAAM,EAA3B,GAGX,KAAK,WAAW,EAAM,iBAAtB,CACR,CAED,kBAA4B,CAC1B,GAAI,KAAK,sBAAL,EAA8B,MAAO,GACzC,GAAM,CAAE,QAAS,KAAK,MACtB,MAGE,KAAA,IACA,IAAI,IACJ,IAFA,GAGA,GAAgB,CAAD,GAGf,IAAI,KACJ,IAPA,IAUC,KAAK,UAAU,aAAf,GAAiC,IAbpC,EAeD,CAID,YAA4C,CAC1C,GAAM,GAAO,KAAK,UAAL,EAEb,KAAK,gBAAgB,gCACnB,EAAO,iBACP,CAEE,GAAI,EAJR,EAQA,KAAK,KAAL,EACA,GAAI,GAAa,GACb,EAAgC,KACpC,GAAI,CAAC,KAAK,sBAAL,EAEH,OADA,EAAa,KAAK,IAAlB,EAAA,EACQ,KAAK,MAAM,UACjB,QACA,SACA,OACA,QACA,OACA,OACA,QACA,IAIE,GAAI,CAAC,EAAY,cAGjB,EAAW,KAAK,iBAAL,EAGjB,SAAK,SAAW,EAChB,EAAK,SAAW,EACT,KAAK,WAAW,EAAM,iBAAtB,CACR,CAKD,6BAA6B,EAAoB,EAAwB,CACvE,AAAI,KAAK,UAAU,CAAC,mBAAoB,CAAE,SAAU,QAAjC,CAAf,GACE,EAAK,OAAS,sBAGhB,KAAK,MAAM,EAAO,+BAAgC,CAChD,GAAI,EADN,CAKL,CAED,8BACE,EACA,EACA,EACA,CACA,GAAI,KAAK,kBAAkB,CAAvB,EAAmC,CACrC,GAAM,GAAW,KAAK,YACpB,EACA,CAFe,EAIjB,SAAS,OAAS,EACX,KAAK,WAAW,EAAU,sBAA1B,CACR,KAAM,CACL,GAAM,GAAW,KAAK,YACpB,EACA,CAFe,EAIjB,YAAK,mCAAmC,CAAxC,EACA,EAAS,WAAa,EACf,KAAK,WAAW,EAAU,yBAA1B,CACR,CACF,CAED,kBAAkB,EAAmC,CACnD,OAAQ,EAAW,UACZ,mBACH,MACE,CAAC,EAAW,UAAY,KAAK,kBAAkB,EAAW,MAAlC,MAEvB,aACH,MAAO,WAEP,MAAO,GAEZ,CAMD,mCAAmC,EAA0B,CAO3D,GAAI,KAAK,MAAL,EAAA,EACF,KAAM,MAAK,MAAM,EAAO,oBAAqB,CAAE,GAAI,KAAK,MAAM,QAAjB,CAAvC,EAIR,AAAK,KAAK,sCAAL,GACH,KAAK,MAAM,EAAO,oBAAqB,CAAE,GAAI,EAA7C,CAEH,CAQD,wBAA2B,EAAsB,CAC/C,GAAM,GAAyB,KAAK,MAAM,aAC1C,KAAK,MAAM,aAAe,CAExB,yBAA0B,EAE1B,cAAe,MAGjB,GAAI,CACF,MAAO,GAAQ,CAChB,QAFD,CAGE,KAAK,MAAM,aAAe,CAC3B,CACF,CAUD,mCAAsC,EAAsB,CAC1D,GAAI,KAAK,UAAU,CAAC,mBAAoB,CAAE,SAAU,QAAjC,CAAf,EAA6D,CAE/D,GAAM,GAAyB,KAAK,MAAM,aAC1C,KAAK,MAAM,aAAe,CAExB,yBAA0B,EAE1B,cAAe,MAGjB,GAAI,CACF,MAAO,GAAQ,CAChB,QAFD,CAGE,KAAK,MAAM,aAAe,CAC3B,CACF,KAKC,OAAO,GAAQ,CAElB,CAED,+BAAkC,EAAsB,CACtD,GAAM,GAA6B,KAAK,MAAM,UAC9C,KAAK,MAAM,UAAY,GAEvB,GAAI,CACF,MAAO,GAAQ,CAChB,QAFD,CAGE,KAAK,MAAM,UAAY,CACxB,CACF,CAED,WAAc,EAAsB,CAClC,GAAM,GAAQ,KAAK,UAAU,aAAf,EAEd,GADuB,GAAW,CAAC,EACf,CAClB,KAAK,UAAU,MAAM,EAAQ,EAA7B,EACA,GAAI,CACF,MAAO,GAAQ,CAChB,QAFD,CAGE,KAAK,UAAU,KAAf,CACD,CACF,CACD,MAAO,GAAQ,CAChB,CAED,cAAiB,EAAsB,CACrC,GAAM,GAAQ,KAAK,UAAU,aAAf,EAEd,GADyB,GAAW,EACd,CACpB,KAAK,UAAU,MAAM,EAAQ,CAAC,EAA9B,EACA,GAAI,CACF,MAAO,GAAQ,CAChB,QAFD,CAGE,KAAK,UAAU,KAAf,CACD,CACF,CACD,MAAO,GAAQ,CAChB,CAID,wBAA+B,CAC7B,KAAK,MAAM,aAAa,cAAgB,CACzC,CAED,yCAAmD,CACjD,MAAO,MAAK,MAAM,aAAa,0BAA4B,CAC5D,CAED,uCAAiD,CAC/C,MACE,MAAK,MAAM,aAAa,eAAiB,MACzC,KAAK,MAAM,aAAa,eAAiB,CAE5C,CAED,wBAAsC,EAA4B,CAChE,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SAE5B,KAAK,MAAM,iBAAmB,KAAK,MAAM,MACzC,GAAM,GAAgC,KAAK,MAAM,2BACjD,KAAK,MAAM,2BAA6B,GAExC,GAAM,GAAM,KAAK,YACf,KAAK,yBAAL,EACA,EACA,EACA,CAJU,EAOZ,YAAK,MAAM,2BAA6B,EAEjC,CACR,CAGD,uBAAwD,CACtD,KAAK,aAAa,cAAlB,EACA,GAAM,GAAO,KAAK,UAAL,EACb,KAAK,KAAL,EACA,KAAK,IAAL,CAAA,EAEA,GAAM,GAAe,KAAK,iBAAiC,EAAtC,EACrB,KAAK,mBAAL,EAEA,GAAM,GAAU,KAAK,UAAL,EAChB,GAAI,CACF,EAAK,KAAO,KAAK,aAAa,EAAoB,EAAA,QAAtC,CACb,QAFD,CAGE,EAAY,CACb,CACD,YAAK,IAAL,CAAA,EACO,KAAK,WAA+B,EAAM,kBAA1C,CACR,CAGD,gCAEE,EACM,CAAA,CA1mGwD,EC/B5D,GAAY,CAAE,KAAM,MAAR,EAChB,GAAc,CAAE,KAAM,QAAR,EAEV,GAAgB,EACpB,GAAiB,EACjB,GAAyB,EACzB,GAAmB,EAEf,GAAgB,mBAEhB,GAA4B,mBAYlC,YAA4B,EAA+B,EAAe,CACxE,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,IAAK,CACtC,GAAM,GAAQ,EAAO,GACf,CAAE,QAAS,EACjB,GAAI,MAAO,IAAS,SAAU,CACO,CACjC,GAAI,IAAI,IAAqB,CAC3B,GAAM,CAAE,MAAK,QAAO,QAAO,OAAQ,EAC7B,EAAa,EAAQ,EACrB,EAAa,GAA+B,EAAI,MAAO,CAAZ,EACjD,EAAO,OACL,EACA,EACA,GAAI,IAAM,CAER,KAAM,GAFE,EAAA,EAGR,MAAO,IACP,MAAO,EACP,IAAK,EACL,SAAU,EAAI,MACd,OAAQ,CAPA,CAAV,EASA,GAAI,IAAM,CAER,KAAM,GAFE,GAAA,EAGR,MAAO,EACP,MAAO,EACP,IAAK,EACL,SAAU,EACV,OAAQ,EAAI,GAPJ,CAAV,CAZF,EAsBA,IACA,QACD,CAED,GAAI,GAAgB,CAAD,EAAQ,CACzB,GAAM,CAAE,MAAK,QAAO,QAAO,OAAQ,EAC7B,EAAe,EAAQ,EACvB,EAAkB,GAA+B,EAAI,MAAO,CAAZ,EAClD,EACJ,AAAI,EAAM,WAAW,CAAjB,IAAA,GACF,EAAa,GAAI,IAAM,CAErB,KAAM,GAFe,EAAA,EAGrB,MAAO,IACP,MAAO,EACP,IAAK,EACL,SAAU,EAAI,MACd,OAAQ,CAPa,CAAV,EAUb,EAAa,GAAI,IAAM,CAErB,KAAM,GAFe,CAAA,EAGrB,MAAO,IACP,MAAO,EACP,IAAK,EACL,SAAU,EAAI,MACd,OAAQ,CAPa,CAAV,EAUf,GAAI,GACF,EACA,EACA,EACF,AAAI,IAAI,GAEN,GAAqB,EAAM,EAC3B,EAAwB,GAA+B,EAAI,IAAK,EAAV,EACtD,EAAgB,IAAU,KAAO,KAAO,EAAM,MAAM,EAAG,EAAf,EACxC,EAAW,GAAI,IAAM,CAEnB,KAAM,GAFa,EAAA,EAGnB,MAAO,IACP,MAAO,EACP,IAAK,EACL,SAAU,EACV,OAAQ,EAAI,GAPO,CAAV,GAWX,GAAqB,EAAM,EAC3B,EAAwB,GAA+B,EAAI,IAAK,EAAV,EACtD,EAAgB,IAAU,KAAO,KAAO,EAAM,MAAM,EAAG,EAAf,EACxC,EAAW,GAAI,IAAM,CAEnB,KAAM,GAFa,EAAA,EAGnB,MAAO,KACP,MAAO,EACP,IAAK,EACL,SAAU,EACV,OAAQ,EAAI,GAPO,CAAV,GAUb,EAAO,OACL,EACA,EACA,EACA,GAAI,IAAM,CAER,KAAM,GAFE,EAAA,EAGR,MAAO,EACP,MAAO,EACP,IAAK,EACL,SAAU,EACV,OAAQ,EAPV,EASA,CAbF,EAeA,GAAK,EACL,QACD,CACF,CAED,EAAM,KAAO,GAAiB,CAAD,CAC9B,CACF,CACD,MAAO,EACR,CACc,oBAAuC,GAAiB,CAQrE,cAA4B,EAAc,EAA4B,CACpE,SAAK,QAAU,KAAK,aAAa,CAAlB,EACf,EAAK,SAAW,KAAK,MAAM,SAEvB,KAAK,QAAQ,QACf,GAAK,OAAS,GAAmB,KAAK,OAAQ,KAAK,KAAnB,GAG3B,KAAK,WAAW,EAAM,MAAtB,CACR,CAED,aAEE,EACA,EAHU,IAIV,EAAyB,KAAK,QAAQ,WAC3B,CAIX,GAHA,EAAQ,WAAa,EACrB,EAAQ,YAAc,KAAK,0BAAL,EACtB,KAAK,eAAe,EAAS,GAAM,GAAM,CAAzC,EAEE,KAAK,UACL,CAAC,KAAK,QAAQ,wBACd,KAAK,MAAM,iBAAiB,KAAO,EAEnC,OAAW,CAAC,EAAW,IAAO,OAAM,KAAK,KAAK,MAAM,gBAAtB,EAC5B,KAAK,MAAM,EAAO,sBAAuB,CAAE,KAAI,YAA/C,EAGJ,MAAO,MAAK,WAAW,EAAS,SAAzB,CACR,CAWD,gBAAgB,EAAgC,CAC9C,GAAM,GAAY,EAClB,EAAU,KAAO,YACjB,EAAU,MAAQ,EAAU,WAC5B,MAAO,GAAU,WAEjB,GAAM,GAAmB,EAAU,MAC7B,EAAkB,EAAiB,MACnC,EAAM,KAAK,MAAM,MAAM,EAAiB,MAAO,EAAiB,GAA1D,EACN,EAAO,EAAiB,MAAQ,EAAI,MAAM,EAAG,EAAb,EAEtC,YAAK,SAAS,EAAkB,MAAO,CAAvC,EACA,KAAK,SAAS,EAAkB,WAAY,CAA5C,EACA,KAAK,SAAS,EAAkB,kBAAmB,CAAnD,EAEA,EAAiB,KAAO,mBAEjB,CACR,CAED,2BAA2D,CACzD,GAAI,CAAC,KAAK,MAAL,EAAA,EACH,MAAO,MAGT,GAAM,GAAO,KAAK,UAAL,EACb,SAAK,MAAQ,KAAK,MAAM,MACxB,KAAK,KAAL,EACO,KAAK,WAAW,EAAM,sBAAtB,CACR,CAED,MAAM,EAAkC,CACtC,MAAK,MAAK,aAAL,EAAA,EAGE,KAAK,aAAa,CAAlB,EAFE,EAGV,CAWD,aAAa,EAAkC,CAC7C,GAAM,GAAO,KAAK,eAAL,EACP,EAAS,KAAK,eAAe,CAApB,EAMf,GACE,IAAM,IACN,IAAM,GAEN,MAAO,GAET,GAAI,EAAS,MAAO,GAEpB,GAAI,IAAM,IAA+B,MAAO,GAEhD,GAAI,GAAkB,CAAD,EAAU,CAE7B,GADA,GAA0B,UAAY,EAClC,GAA0B,KAAK,KAAK,KAApC,EAA4C,CAG9C,GAAM,GAAQ,KAAK,eAAe,GAA0B,SAA9C,EACd,GAAI,CAAC,GAAiB,CAAD,GAAW,IAAK,GACnC,MAAO,EAEV,CACD,MAAO,EACR,CACD,MAAO,EACR,CAWD,eAEE,EACA,EACa,CACb,MAAI,MAAK,MAAL,EAAA,GACF,KAAK,gBAAgB,EAArB,EAEK,KAAK,sBAAsB,EAAS,CAApC,CACR,CAED,sBAEE,EACA,EACa,CACb,GAAI,GAAY,KAAK,MAAM,KACrB,EAAO,KAAK,UAAL,EACT,EAWJ,OATI,KAAK,MAAM,CAAX,GACF,GAAA,GACA,EAAO,OAOD,OACN,IACE,MAAO,MAAK,4BAA4B,EAAoB,EAArD,MACT,IACE,MAAO,MAAK,4BAA4B,EAAoB,EAArD,MACT,IACE,MAAO,MAAK,uBAAuB,CAA5B,MACT,IACE,MAAO,MAAK,iBAAiB,CAAtB,MACT,IACE,MAAO,MAAK,kBAAkB,CAAvB,MACT,IACE,GAAI,KAAK,kBAAL,IAAA,GAA4C,MAChD,MAAI,IACF,CAAI,KAAK,MAAM,OACb,KAAK,MAAM,EAAO,eAAgB,CAAE,GAAI,KAAK,MAAM,SAAnD,EACS,IAAY,MAAQ,IAAY,SACzC,KAAK,MAAM,EAAO,eAAgB,CAAE,GAAI,KAAK,MAAM,SAAnD,GAGG,KAAK,uBACV,EACA,GACA,CAAC,CAHI,MAMT,IACE,MAAI,IAAS,KAAK,WAAL,EACN,KAAK,WAAW,EAAoC,EAApD,MAET,IACE,MAAO,MAAK,iBAAiB,CAAtB,MACT,IACE,MAAO,MAAK,qBAAqB,CAA1B,MACT,IACE,MAAO,MAAK,qBAAqB,CAA1B,MACT,IACE,MAAO,MAAK,oBAAoB,CAAzB,MACT,IACE,MAAO,MAAK,kBAAkB,CAAvB,MAET,QACA,IACE,SAAO,GAAQ,KAAK,MAAM,MACtB,GAAW,IAAS,OACtB,KAAK,MAAM,EAAO,6BAA8B,CAC9C,GAAI,KAAK,MAAM,SADjB,EAIK,KAAK,kBACV,EACA,CAFK,MAKT,IACE,MAAO,MAAK,oBAAoB,CAAzB,MACT,IACE,MAAO,MAAK,mBAAmB,CAAxB,MACT,GACE,MAAO,MAAK,WAAL,MACT,IACE,MAAO,MAAK,oBAAoB,CAAzB,MACT,IAAiB,CACf,GAAM,GAAoB,KAAK,kBAAL,EAC1B,GACE,IAAiB,IACjB,IAAiB,GAEjB,KAEH,KAED,IAAiB,CACf,AAAI,CAAC,KAAK,QAAQ,6BAA+B,CAAC,GAChD,KAAK,MAAM,EAAO,uBAAwB,CACxC,GAAI,KAAK,MAAM,SADjB,EAKF,KAAK,KAAL,EAEA,GAAI,GACJ,MAAI,KAAS,GACX,GAAS,KAAK,YAAY,CAAjB,EAGP,EAAO,OAAS,qBACf,EAAC,EAAO,YAAc,EAAO,aAAe,UAE7C,MAAK,kBAAoB,KAG3B,GAAS,KAAK,YACZ,CADO,EASN,GAAO,OAAS,0BACd,EAAC,EAAO,YAAc,EAAO,aAAe,UAC9C,EAAO,OAAS,wBACd,EAAC,EAAO,YAAc,EAAO,aAAe,UAC/C,EAAO,OAAS,6BAEhB,MAAK,kBAAoB,KAI7B,KAAK,wBAAwB,CAA7B,EAEO,CACR,SAGC,GAAI,KAAK,gBAAL,EACF,MAAI,IACF,KAAK,MAAM,EAAO,sCAAuC,CACvD,GAAI,KAAK,MAAM,SADjB,EAIF,KAAK,KAAL,EACO,KAAK,uBACV,EACA,GACA,CAAC,CAHI,EAcb,GAAM,GAAY,KAAK,MAAM,MACvB,EAAO,KAAK,gBAAL,EAEb,MACE,IAAkB,CAAD,GACjB,EAAK,OAAS,cACd,KAAK,IAAL,EAAA,EAEO,KAAK,sBACV,EACA,EAEA,EACA,CALK,EAQA,KAAK,yBACV,EACA,CAFK,CAKV,CAED,wBAAwB,EAAoB,CAC1C,AAAI,CAAC,KAAK,QAAQ,6BAA+B,CAAC,KAAK,UACrD,KAAK,MAAM,EAAO,oBAAqB,CAAE,GAAI,EAA7C,CAEH,CAED,eAAe,EAA6B,CAC1C,GAAM,GACJ,KAAK,MAAM,eAAe,KAAK,MAAM,eAAe,OAAS,GAC/D,AAAI,EAAW,QACb,GAAK,WAAa,EAClB,KAAK,2BAA2B,EAAM,EAAW,EAAjD,EACA,KAAK,MAAM,eAAe,KAAK,MAAM,eAAe,OAAS,GAAK,CAAA,EAErE,CAED,yBAAmC,CACjC,MAAO,MAAK,MAAZ,EAAA,CACD,CAED,gBAA8B,EAA6B,CACzD,GAAM,GACJ,KAAK,MAAM,eAAe,KAAK,MAAM,eAAe,OAAS,GAC/D,KAAO,KAAK,MAAL,EAAA,GAAmB,CACxB,GAAM,GAAY,KAAK,eAAL,EAClB,EAAyB,KAAK,CAA9B,CACD,CAED,GAAI,KAAK,MAAL,EAAA,EACF,AAAK,GACH,KAAK,WAAL,EAIA,KAAK,UAAU,YAAf,GACA,CAAC,KAAK,gBAAgB,aAAc,wBAAnC,GAED,KAAK,MAAM,EAAO,qBAAsB,CAAE,GAAI,KAAK,MAAM,SAAzD,UAEO,CAAC,KAAK,wBAAL,EACV,KAAM,MAAK,MAAM,EAAO,2BAA4B,CAClD,GAAI,KAAK,MAAM,QADmC,CAA9C,CAIT,CAED,gBAA0C,CACxC,KAAK,gBAAgB,CAAC,aAAc,mBAAf,CAArB,EAEA,GAAM,GAAO,KAAK,UAAL,EAGb,GAFA,KAAK,KAAL,EAEI,KAAK,UAAU,YAAf,EAA8B,CAGhC,KAAK,MAAM,eAAe,KAAK,CAAA,CAA/B,EAEA,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SACxB,EAEJ,GAAI,KAAK,MAAL,EAAA,EAAuB,CACzB,GAAM,GAAW,KAAK,MAAM,MACtB,EAAW,KAAK,MAAM,SAC5B,KAAK,KAAL,EACA,EAAO,KAAK,gBAAL,EACP,KAAK,OAAL,EAAA,EACA,EAAO,KAAK,gBAAgB,EAAU,EAAU,CAAzC,EAEP,GAAM,GAAiB,KAAK,MAAM,SAClC,EAAK,WAAa,KAAK,6BAA6B,CAAlC,EAEhB,KAAK,gBAAgB,aAAc,wBAAnC,IACE,IACF,EAAK,aAAe,GAEpB,KAAK,MAAM,EAAO,qCAAsC,CACtD,GAAI,EADN,CAIH,KAAM,CAGL,IAFA,EAAO,KAAK,gBAAgB,EAArB,EAEA,KAAK,IAAL,EAAA,GAAkB,CACvB,GAAM,GAAO,KAAK,YAAY,EAAU,CAA3B,EACb,EAAK,OAAS,EACd,AAAI,KAAK,MAAL,GAAA,EACF,MAAK,WAAW,eACd,KAAK,MAAM,MACX,KAAK,MAAM,QAFb,EAIA,EAAK,SAAW,KAAK,iBAAL,GAEhB,EAAK,SAAW,KAAK,gBAAgB,EAArB,EAElB,EAAK,SAAW,GAChB,EAAO,KAAK,WAAW,EAAM,kBAAtB,CACR,CAED,EAAK,WAAa,KAAK,6BAA6B,CAAlC,CACnB,CAED,KAAK,MAAM,eAAe,IAA1B,CACD,KACC,GAAK,WAAa,KAAK,oBAAL,EAEpB,MAAO,MAAK,WAAW,EAAM,WAAtB,CACR,CAED,6BAA2C,EAAkC,CAC3E,GAAI,KAAK,IAAL,EAAA,EAAqB,CACvB,GAAM,GAAO,KAAK,gBAAgB,CAArB,EACb,SAAK,OAAS,EACd,EAAK,UAAY,KAAK,6BAAL,GAA6C,EAA7C,EACjB,KAAK,iBAAiB,EAAK,SAA3B,EACO,KAAK,WAAW,EAAM,gBAAtB,CACR,CAED,MAAO,EACR,CAUD,4BACE,EACA,EACwC,CACxC,YAAK,KAAL,EAEA,AAAI,KAAK,iBAAL,EACF,EAAK,MAAQ,KAEb,GAAK,MAAQ,KAAK,gBAAL,EACb,KAAK,UAAL,GAGF,KAAK,oBAAoB,EAAM,CAA/B,EAEO,KAAK,WACV,EACA,EAAU,iBAAmB,mBAFxB,CAIR,CAED,oBACE,EACA,EACA,CACA,GAAI,GACJ,IAAK,EAAI,EAAG,EAAI,KAAK,MAAM,OAAO,OAAQ,EAAE,EAAG,CAC7C,GAAM,GAAM,KAAK,MAAM,OAAO,GAC9B,GAAI,GAAK,OAAS,MAAQ,EAAI,OAAS,EAAK,MAAM,OAC5C,GAAI,MAAQ,MAAS,IAAW,EAAI,OAAS,SAC7C,EAAK,OAAS,GAAS,KAE9B,CACD,GAAI,IAAM,KAAK,MAAM,OAAO,OAAQ,CAClC,GAAM,GAAO,EAAU,iBAAmB,oBAC1C,KAAK,MAAM,EAAO,qBAAsB,CAAE,GAAI,EAAM,OAApD,CACD,CACF,CAED,uBACE,EACqB,CACrB,YAAK,KAAL,EACA,KAAK,UAAL,EACO,KAAK,WAAW,EAAM,mBAAtB,CACR,CAED,uBAAkD,CAChD,KAAK,OAAL,EAAA,EACA,GAAM,GAAM,KAAK,gBAAL,EACZ,YAAK,OAAL,EAAA,EACO,CACR,CAED,iBAEE,EACoB,CACpB,YAAK,KAAL,EACA,KAAK,MAAM,OAAO,KAAK,EAAvB,EAGA,EAAK,KAIH,KAAK,mCAAmC,IAEtC,KAAK,eAAe,IAApB,CAFF,EAKF,KAAK,MAAM,OAAO,IAAlB,EAEA,KAAK,OAAL,EAAA,EACA,EAAK,KAAO,KAAK,sBAAL,EACZ,KAAK,IAAL,EAAA,EACO,KAAK,WAAW,EAAM,kBAAtB,CACR,CAUD,kBAEE,EACW,CACX,KAAK,KAAL,EACA,KAAK,MAAM,OAAO,KAAK,EAAvB,EAEA,GAAI,GAAU,KAQd,GANI,KAAK,eAAL,GAAyB,KAAK,cAAL,EAAA,GAC3B,GAAU,KAAK,MAAM,iBAEvB,KAAK,MAAM,MAAM,EAAjB,EACA,KAAK,OAAL,EAAA,EAEI,KAAK,MAAL,EAAA,EACF,MAAI,KAAY,MACd,KAAK,WAAW,CAAhB,EAEK,KAAK,SAAS,EAAgC,IAA9C,EAGT,GAAM,GAAgB,KAAK,aAA3B,EAAA,EACM,EAAQ,GAAiB,KAAK,aAAL,EAC/B,GAAI,KAAK,MAAkB,EAAA,GAAA,KAAK,MAA5B,EAAA,GAAgD,EAAO,CACzD,GAAM,GAAW,KAAK,UAAL,EACX,EAAO,EAAQ,MAAQ,KAAK,MAAM,MACxC,KAAK,KAAL,EACA,KAAK,SAAS,EAAU,GAAM,CAA9B,EACA,GAAM,GAAO,KAAK,WAAW,EAAU,qBAA1B,EAEb,MACG,MAAK,MAAL,EAAA,GAAsB,KAAK,aAAL,GAAA,IACvB,EAAK,aAAa,SAAW,EAEtB,KAAK,WAAW,EAA2B,EAAM,CAAjD,EAEL,KAAY,MACd,KAAK,WAAW,CAAhB,EAEK,KAAK,SAAS,EAAgC,CAA9C,EACR,CAID,GAAM,GAAkB,KAAK,aAA7B,EAAA,EAEM,EAAsB,GAAI,IAC1B,EAAO,KAAK,gBAAgB,GAAM,CAA3B,EACP,EAAU,KAAK,aAArB,GAAA,EAoBA,GAnBI,GAEE,IACF,KAAK,MAAM,EAAO,SAAU,CAAE,GAAI,EAAlC,EAKA,IAAY,MACZ,GACA,EAAK,OAAS,cAMd,KAAK,MAAM,EAAO,WAAY,CAAE,GAAI,EAApC,GAGA,GAAW,KAAK,MAAL,EAAA,EAAoB,CACjC,KAAK,0BAA0B,CAA/B,EACA,KAAK,aAAa,EAAkB,EAApC,EACA,GAAM,GAAO,EAAU,iBAAmB,iBAC1C,YAAK,UAAU,EAAM,CAAE,GAAI,CAAE,MAAF,EAA3B,EACO,KAAK,WACV,EAEA,EACA,CAJK,CAMR,KACC,MAAK,sBAAsB,EAAqB,EAAhD,EAEF,MAAI,KAAY,MACd,KAAK,WAAW,CAAhB,EAEK,KAAK,SAAS,EAAgC,CAA9C,CACR,CAED,uBAEE,EACA,EACA,EACuB,CACvB,YAAK,KAAL,EACO,KAAK,cACV,EACA,GAAkB,GAAsB,EAAI,IAC5C,CAHK,CAKR,CAED,iBAA+B,EAA6B,CAC1D,YAAK,KAAL,EACA,EAAK,KAAO,KAAK,sBAAL,EACZ,EAAK,WAAa,KAAK,eAAe,IAApB,EAClB,EAAK,UAAY,KAAK,IAAL,EAAA,EAAqB,KAAK,eAAe,IAApB,EAA4B,KAC3D,KAAK,WAAW,EAAM,aAAtB,CACR,CAED,qBAAmC,EAAiC,CAClE,MAAI,CAAC,KAAK,UAAU,WAAa,CAAC,KAAK,QAAQ,4BAC7C,KAAK,MAAM,EAAO,cAAe,CAAE,GAAI,KAAK,MAAM,SAAlD,EAGF,KAAK,KAAL,EAMA,AAAI,KAAK,iBAAL,EACF,EAAK,SAAW,KAEhB,GAAK,SAAW,KAAK,gBAAL,EAChB,KAAK,UAAL,GAGK,KAAK,WAAW,EAAM,iBAAtB,CACR,CAED,qBAAmC,EAAiC,CAClE,KAAK,KAAL,EACA,EAAK,aAAe,KAAK,sBAAL,EACpB,GAAM,GAAqC,EAAK,MAAQ,CAAA,EACxD,KAAK,OAAL,CAAA,EACA,KAAK,MAAM,OAAO,KAAK,EAAvB,EACA,KAAK,MAAM,MAAM,EAAjB,EAMA,GAAI,GACJ,OAAS,GAAY,CAAC,KAAK,MAAL,CAAA,GACpB,GAAI,KAAK,MAAL,EAAA,GAAwB,KAAK,MAAL,EAAA,EAAyB,CACnD,GAAM,GAAS,KAAK,MAApB,EAAA,EACA,AAAI,GAAK,KAAK,WAAW,EAAK,YAArB,EAET,EAAM,KAAM,EAAM,KAAK,UAAL,CAAlB,EACA,EAAI,WAAa,CAAA,EACjB,KAAK,KAAL,EACA,AAAI,EACF,EAAI,KAAO,KAAK,gBAAL,EAEP,IACF,KAAK,MAAM,EAAO,yBAA0B,CAC1C,GAAI,KAAK,MAAM,gBADjB,EAIF,EAAa,GACb,EAAI,KAAO,MAEb,KAAK,OAAL,EAAA,CACD,KACC,AAAI,GACF,EAAI,WAAW,KAAK,KAAK,eAAe,IAApB,CAApB,EAEA,KAAK,WAAL,EAIN,YAAK,MAAM,KAAX,EACI,GAAK,KAAK,WAAW,EAAK,YAArB,EACT,KAAK,KAAL,EACA,KAAK,MAAM,OAAO,IAAlB,EACO,KAAK,WAAW,EAAM,iBAAtB,CACR,CAED,oBAAkC,EAAgC,CAChE,YAAK,KAAL,EACI,KAAK,sBAAL,GACF,KAAK,MAAM,EAAO,kBAAmB,CAAE,GAAI,KAAK,MAAM,cAAtD,EAEF,EAAK,SAAW,KAAK,gBAAL,EAChB,KAAK,UAAL,EACO,KAAK,WAAW,EAAM,gBAAtB,CACR,CAED,uBAA+C,CAC7C,GAAM,GAAQ,KAAK,iBAAL,EAER,EAAS,EAAM,OAAS,aAC9B,YAAK,MAAM,MAAM,EAAS,GAAqB,CAA/C,EACA,KAAK,UAAU,EAAO,CACpB,GAAI,CAAE,KAAM,eACZ,QAAS,GACT,yBAA0B,GAH5B,EAMO,CACR,CAED,kBAEE,EACgB,CAMhB,GALA,KAAK,KAAL,EAEA,EAAK,MAAQ,KAAK,WAAL,EACb,EAAK,QAAU,KAEX,KAAK,MAAL,EAAA,EAAuB,CACzB,GAAM,GAAS,KAAK,UAAL,EACf,KAAK,KAAL,EACA,AAAI,KAAK,MAAL,EAAA,EACF,MAAK,OAAL,EAAA,EACA,EAAO,MAAQ,KAAK,sBAAL,EACf,KAAK,OAAL,EAAA,GAEA,GAAO,MAAQ,KACf,KAAK,MAAM,MAAM,EAAjB,GAIF,EAAO,KAGL,KAAK,mCAAmC,IAEtC,KAAK,WAAW,GAAO,EAAvB,CAFF,EAKF,KAAK,MAAM,KAAX,EACA,EAAK,QAAU,KAAK,WAAW,EAAQ,aAAxB,CAChB,CAED,SAAK,UAAY,KAAK,IAAL,EAAA,EAAwB,KAAK,WAAL,EAAoB,KAEzD,CAAC,EAAK,SAAW,CAAC,EAAK,WACzB,KAAK,MAAM,EAAO,iBAAkB,CAAE,GAAI,EAA1C,EAGK,KAAK,WAAW,EAAM,cAAtB,CACR,CAED,kBAEE,EACA,EACA,EAAmC,GACZ,CACvB,YAAK,KAAL,EACA,KAAK,SAAS,EAAM,GAAO,EAAM,CAAjC,EACA,KAAK,UAAL,EACO,KAAK,WAAW,EAAM,qBAAtB,CACR,CAED,oBAEE,EACkB,CAClB,YAAK,KAAL,EACA,EAAK,KAAO,KAAK,sBAAL,EACZ,KAAK,MAAM,OAAO,KAAK,EAAvB,EAGA,EAAK,KAIH,KAAK,mCAAmC,IAEtC,KAAK,eAAe,OAApB,CAFF,EAKF,KAAK,MAAM,OAAO,IAAlB,EAEO,KAAK,WAAW,EAAM,gBAAtB,CACR,CAED,mBAEE,EACiB,CACjB,MAAI,MAAK,MAAM,QACb,KAAK,MAAM,EAAO,WAAY,CAAE,GAAI,KAAK,MAAM,SAA/C,EAEF,KAAK,KAAL,EACA,EAAK,OAAS,KAAK,sBAAL,EAGd,EAAK,KAKH,KAAK,mCAAmC,IAEtC,KAAK,eAAe,MAApB,CAFF,EAKK,KAAK,WAAW,EAAM,eAAtB,CACR,CAED,oBAAoB,EAAkD,CACpE,YAAK,KAAL,EACO,KAAK,WAAW,EAAM,gBAAtB,CACR,CAED,sBAEE,EACA,EACA,EACA,EACoB,CACpB,OAAW,KAAS,MAAK,MAAM,OAC7B,AAAI,EAAM,OAAS,GACjB,KAAK,MAAM,EAAO,mBAAoB,CACpC,GAAI,EACJ,UAAW,EAFb,EAOJ,GAAM,GAAO,GAAY,KAAK,MAAM,IAAZ,EACpB,OACA,KAAK,MACL,EAAA,EAAA,SACA,KACJ,OAAS,GAAI,KAAK,MAAM,OAAO,OAAS,EAAG,GAAK,EAAG,IAAK,CACtD,GAAM,GAAQ,KAAK,MAAM,OAAO,GAChC,GAAI,EAAM,iBAAmB,EAAK,MAChC,EAAM,eAAiB,KAAK,MAAM,MAClC,EAAM,KAAO,MAEb,MAEH,CAED,YAAK,MAAM,OAAO,KAAK,CACrB,KAAM,EACN,KAAM,EACN,eAAgB,KAAK,MAAM,MAH7B,EAKA,EAAK,KAAO,KAAK,eACf,EACI,EAAQ,QAAQ,OAAhB,IAA6B,GAC3B,EAAU,QACV,EACF,OALM,EAQZ,KAAK,MAAM,OAAO,IAAlB,EACA,EAAK,MAAQ,EACN,KAAK,WAAW,EAAM,kBAAtB,CACR,CAED,yBACE,EACA,EACA,CACA,SAAK,WAAa,EAClB,KAAK,UAAL,EACO,KAAK,WAAW,EAAM,qBAAtB,CACR,CAMD,WAEE,EAA2B,GAC3B,EAAiC,GACjC,EACkB,CAClB,GAAM,GAAO,KAAK,UAAL,EACb,MAAI,IACF,KAAK,MAAM,aAAa,MAAxB,EAEF,KAAK,OAAL,CAAA,EACI,GACF,KAAK,MAAM,MAAM,EAAjB,EAEF,KAAK,eACH,EACA,EACA,GAHF,EAKE,CALF,EAOI,GACF,KAAK,MAAM,KAAX,EAEK,KAAK,WAAW,EAAM,gBAAtB,CACR,CAED,iBAAiB,EAA4B,CAC3C,MACE,GAAK,OAAS,uBACd,EAAK,WAAW,OAAS,iBACzB,CAAC,EAAK,WAAW,MAAM,aAE1B,CAED,eAEE,EACA,EACA,EACA,EACA,EACM,CACN,GAAM,GAAsC,EAAK,KAAO,CAAA,EAClD,EAAkD,EAAK,WAC3D,CAAA,EACF,KAAK,4BACH,EACA,EAAkB,EAAa,OAC/B,EACA,EACA,CALF,CAOD,CAKD,4BAEE,EACA,EACA,EACA,EACA,EACM,CACN,GAAM,GAAY,KAAK,MAAM,OACzB,EAAyB,GACzB,EAAqB,GAEzB,KAAO,CAAC,KAAK,MAAM,CAAX,GAAiB,CACvB,GAAM,GAAO,KAAK,eAAe,KAAM,CAA1B,EAEb,GAAI,GAAc,CAAC,EAAoB,CACrC,GAAI,KAAK,iBAAiB,CAAtB,EAA6B,CAC/B,GAAM,GAAY,KAAK,gBAAgB,CAArB,EAClB,EAAW,KAAK,CAAhB,EAGE,CAAC,GACD,EAAU,MAAM,QAAU,cAE1B,GAAyB,GACzB,KAAK,UAAU,EAAf,GAGF,QACD,CACD,EAAqB,GAErB,KAAK,MAAM,aAAa,MAAxB,CACD,CACD,EAAK,KAAK,CAAV,CACD,CAED,AAAI,GACF,EAAgB,KAAK,KAAM,CAA3B,EAGG,GACH,KAAK,UAAU,EAAf,EAGF,KAAK,KAAL,CACD,CAMD,SAEE,EACA,EACgB,CAChB,SAAK,KAAO,EACZ,KAAK,UAAyB,EAA9B,EACA,EAAK,KAAO,KAAK,MAAL,EAAA,EAAsB,KAAO,KAAK,gBAAL,EACzC,KAAK,UAAyB,EAA9B,EACA,EAAK,OAAS,KAAK,MAAL,EAAA,EAAwB,KAAO,KAAK,gBAAL,EAC7C,KAAK,OAAL,EAAA,EAGA,EAAK,KAIH,KAAK,mCAAmC,IAEtC,KAAK,eAAe,KAApB,CAFF,EAKF,KAAK,MAAM,KAAX,EACA,KAAK,MAAM,OAAO,IAAlB,EAEO,KAAK,WAAW,EAAM,cAAtB,CACR,CAKD,WAEE,EACA,EACA,EACW,CACX,GAAM,GAAU,KAAK,MAArB,EAAA,EACA,YAAK,KAAL,EAEA,AAAI,EACE,IAAY,MAAM,KAAK,WAAW,CAAhB,EAEtB,EAAK,MAAQ,IAAY,KAIzB,EAAK,OAAS,uBACd,EAAK,aAAa,GAAG,MAAQ,MAC5B,EAAC,GACA,KAAK,MAAM,QACX,EAAK,OAAS,OACd,EAAK,aAAa,GAAG,GAAG,OAAS,eAEnC,KAAK,MAAM,EAAO,uBAAwB,CACxC,GAAI,EACJ,KAAM,EAAU,iBAAmB,iBAFrC,EAME,EAAK,OAAS,qBAChB,KAAK,MAAM,EAAO,WAAY,CAC5B,GAAI,EACJ,SAAU,CAAE,KAAM,cAAR,EAFZ,EAMF,EAAK,KAAO,EACZ,EAAK,MAAQ,EACT,KAAK,gBAAL,EACA,KAAK,wBAAL,EACJ,KAAK,OAAL,EAAA,EAGA,EAAK,KAIH,KAAK,mCAAmC,IAEtC,KAAK,eAAe,KAApB,CAFF,EAKF,KAAK,MAAM,KAAX,EACA,KAAK,MAAM,OAAO,IAAlB,EAEO,KAAK,WAAW,EAAM,EAAU,iBAAmB,gBAAnD,CACR,CAID,SAEE,EACA,EACA,EACA,EAAmC,GACJ,CAC/B,GAAM,GAAwC,EAAK,aAAe,CAAA,EAElE,IADA,EAAK,KAAO,IACH,CACP,GAAM,GAAO,KAAK,UAAL,EA4Bb,GA3BA,KAAK,WAAW,EAAM,CAAtB,EACA,EAAK,KAAO,AAAC,KAAK,IAAL,EAAA,EAET,EACA,KAAK,2BAAL,EACA,KAAK,wBAAL,EAHA,KAKA,EAAK,OAAS,MAAQ,CAAC,GACzB,CACE,EAAK,GAAG,OAAS,cACjB,CAAE,IAAU,MAAK,MAAiB,EAAA,GAAA,KAAK,aAAhC,GAAA,IAEP,KAAK,MAAM,EAAO,8BAA+B,CAC/C,GAAI,KAAK,MAAM,cACf,KAAM,gBAFR,EAKA,IAAS,SACT,CAAE,MAAK,MAAiB,EAAA,GAAA,KAAK,aAAL,GAAA,IAExB,KAAK,MAAM,EAAO,8BAA+B,CAC/C,GAAI,KAAK,MAAM,cACf,KAAM,QAFR,GAMJ,EAAa,KAAK,KAAK,WAAW,EAAM,oBAAtB,CAAlB,EACI,CAAC,KAAK,IAAL,EAAA,EAAoB,KAC1B,CACD,MAAO,EACR,CAED,WAEE,EACA,EACM,CACN,EAAK,GAAK,KAAK,iBAAL,EACV,KAAK,UAAU,EAAK,GAAI,CACtB,GAAI,CAAE,KAAM,sBACZ,QAAS,IAAS,MAAQ,GAAW,GAFvC,CAID,CAKD,cAEE,EACA,EAAoB,GACpB,EAAmB,GAChB,CACH,GAAM,GAAc,EAAY,GAC1B,EAAqB,EAAY,GACjC,EAAY,CAAC,CAAC,GAAe,CAAE,GAAY,IAEjD,KAAK,aAAa,EAAM,CAAxB,EAEI,KAAK,MAAkB,EAAA,GAAA,GACzB,KAAK,MAAM,EAAO,kCAAmC,CACnD,GAAI,KAAK,MAAM,SADjB,EAIF,EAAK,UAAY,KAAK,IAAtB,EAAA,EAEI,GACF,GAAK,GAAK,KAAK,gBAAgB,CAArB,GAGZ,GAAM,GAA4B,KAAK,MAAM,uBAC7C,YAAK,MAAM,uBAAyB,GACpC,KAAK,MAAM,MAAM,EAAjB,EACA,KAAK,UAAU,MAAM,GAAc,EAAS,EAAK,SAAf,CAAlC,EAEK,GACH,GAAK,GAAK,KAAK,gBAAL,GAGZ,KAAK,oBAAoB,EAA2B,EAApD,EAKA,KAAK,mCAAmC,IAAM,CAE5C,KAAK,2BACH,EACA,EAAc,sBAAwB,oBAFxC,EAFF,EAQA,KAAK,UAAU,KAAf,EACA,KAAK,MAAM,KAAX,EAEI,GAAe,CAAC,GAIlB,KAAK,4BAA4B,CAAjC,EAGF,KAAK,MAAM,uBAAyB,EAC7B,CACR,CAED,gBAAgB,EAAsD,CACpE,MAAO,IAAa,GAAkB,KAAK,MAAM,IAAZ,EACjC,KAAK,gBAAL,EACA,IACL,CAED,oBAEE,EACA,EACM,CACN,KAAK,OAAL,EAAA,EACA,KAAK,gBAAgB,MAAM,GAA4B,CAAvD,EACA,EAAK,OAAS,KAAK,iBAGA,GAAA,GAAA,GACjB,CAJY,EAOd,KAAK,gBAAgB,KAArB,CACD,CAED,4BAA4B,EAAwB,CAClD,AAAI,CAAC,EAAK,IAMV,KAAK,MAAM,YACT,EAAK,GAAG,KACR,KAAK,MAAM,QAAU,EAAK,WAAa,EAAK,MACxC,KAAK,MAAM,oBACT,GACA,GACF,GACJ,EAAK,GAAG,IAAI,KAPd,CASD,CAKD,WAEE,EACA,EACA,EACG,CACH,KAAK,KAAL,EACA,KAAK,eAAe,CAApB,EAGA,GAAM,GAAY,KAAK,MAAM,OAC7B,YAAK,MAAM,OAAS,GAEpB,KAAK,aAAa,EAAM,EAAa,CAArC,EACA,KAAK,gBAAgB,CAArB,EAEA,EAAK,KAAO,KAAK,eAAe,CAAC,CAAC,EAAK,WAAY,CAAvC,EAEL,KAAK,WACV,EACA,EAAc,mBAAqB,iBAF9B,CAIR,CAED,iBAA2B,CACzB,MAAO,MAAK,MAAgB,EAAA,GAAA,KAAK,MAA1B,EAAA,GAA4C,KAAK,MAAxD,CAAA,CACD,CAED,eAAyB,CACvB,MAAO,MAAK,MAAZ,EAAA,CACD,CAED,uBAAuB,EAAkD,CACvE,MACE,CAAC,EAAO,UACR,CAAC,EAAO,QACP,GAAO,IAAI,OAAS,eACnB,EAAO,IAAI,QAAU,cAE1B,CAGD,eAEE,EACA,EACa,CACb,KAAK,WAAW,MAAhB,EAEA,GAAM,GAAiC,CACrC,eAAgB,GAChB,iBAEE,EAA4B,CAAA,EAC1B,EAAY,KAAK,UAAL,EAqDlB,GApDA,EAAU,KAAO,CAAA,EAEjB,KAAK,OAAL,CAAA,EAIA,KAAK,mCAAmC,IAAM,CAE5C,KAAO,CAAC,KAAK,MAAL,CAAA,GAAuB,CAC7B,GAAI,KAAK,IAAL,EAAA,EAAmB,CACrB,GAAI,EAAW,OAAS,EACtB,KAAM,MAAK,MAAM,EAAO,mBAAoB,CAC1C,GAAI,KAAK,MAAM,aAD2B,CAAtC,EAIR,QACD,CAED,GAAI,KAAK,MAAL,EAAA,EAAmB,CACrB,EAAW,KAAK,KAAK,eAAL,CAAhB,EACA,QACD,CAED,GAAM,GAAS,KAAK,UAAL,EAGf,AAAI,EAAW,QAEb,GAAO,WAAa,EACpB,KAAK,2BAA2B,EAAQ,EAAW,EAAnD,EACA,EAAa,CAAA,GAGf,KAAK,iBAAiB,EAAW,EAAQ,CAAzC,EAIE,EAAO,OAAS,eAEhB,EAAO,YAEP,EAAO,WAAW,OAAS,GAE3B,KAAK,MAAM,EAAO,qBAAsB,CAAE,GAAI,EAA9C,CAEH,EAvCH,EA0CA,KAAK,MAAM,OAAS,EAEpB,KAAK,KAAL,EAEI,EAAW,OACb,KAAM,MAAK,MAAM,EAAO,kBAAmB,CAAE,GAAI,KAAK,MAAM,QAAjB,CAArC,EAGR,YAAK,WAAW,KAAhB,EAEO,KAAK,WAAW,EAAW,WAA3B,CACR,CAID,6BAEE,EACA,EACS,CACT,GAAM,GAAM,KAAK,gBAAgB,EAArB,EAEZ,GAAI,KAAK,cAAL,EAAsB,CACxB,GAAM,GAAwB,EAG9B,SAAO,KAAO,SACd,EAAO,SAAW,GAClB,EAAO,IAAM,EACb,EAAO,OAAS,GAChB,KAAK,gBACH,EACA,EACA,GACA,GACoB,GACpB,EANF,EAQO,EACR,SAAU,KAAK,gBAAL,EAAwB,CACjC,GAAM,GAAwB,EAG9B,SAAK,SAAW,GAChB,EAAK,IAAM,EACX,EAAK,OAAS,GACd,EAAU,KAAK,KAAK,KAAK,mBAAmB,CAAxB,CAApB,EACO,EACR,CACD,YAAK,kCAAkC,CAAvC,EACO,EACR,CAED,iBAEE,EACA,EACA,EACM,CACN,GAAM,GAAW,KAAK,aAAtB,GAAA,EAEA,GAAI,EAAU,CACZ,GAAI,KAAK,6BAA6B,EAAW,CAA7C,EAEF,OAEF,GAAI,KAAK,IAAL,CAAA,EAAqB,CACvB,KAAK,sBAAsB,EAAW,CAAtC,EACA,MACD,CACF,CAED,KAAK,6BAA6B,EAAW,EAAQ,EAAO,CAA5D,CACD,CAED,6BAEE,EACA,EACA,EACA,EACA,CACA,GAAM,GAAe,EACf,EAAgB,EAChB,EAAa,EACb,EAAc,EACd,EAAe,EAEf,EAAqD,EACrD,EAAwD,EAK9D,GAHA,EAAO,OAAS,EAChB,KAAK,gCAAgC,CAArC,EAEI,KAAK,IAAL,EAAA,EAAmB,CAErB,EAAO,KAAO,SACd,GAAM,GAAgB,KAAK,MAA3B,GAAA,EAGA,GAFA,KAAK,sBAAsB,CAA3B,EAEI,EAAe,CAEjB,KAAK,uBAAuB,EAAW,EAAe,GAAM,EAA5D,EACA,MACD,CAED,AAAI,KAAK,uBAAuB,CAA5B,GACF,KAAK,MAAM,EAAO,uBAAwB,CACxC,GAAI,EAAa,IADnB,EAKF,KAAK,gBACH,EACA,EACA,GACA,GACoB,GACpB,EANF,EASA,MACD,CAED,GAAM,GACJ,GAAkB,KAAK,MAAM,IAAZ,GAAqB,CAAC,KAAK,MAAM,YAC9C,EAAY,KAAK,MAAvB,GAAA,EACM,EAAM,KAAK,sBAAsB,CAA3B,EACN,EAA6B,KAAK,MAAM,SAI9C,GAFA,KAAK,6BAA6B,CAAlC,EAEI,KAAK,cAAL,EAAsB,CAGxB,GAFA,EAAO,KAAO,SAEV,EAAW,CACb,KAAK,uBAAuB,EAAW,EAAe,GAAO,EAA7D,EACA,MACD,CAGD,GAAM,GAAgB,KAAK,uBAAuB,CAA5B,EAClB,EAAoB,GACxB,AAAI,GACF,GAAa,KAAO,cAGhB,EAAM,gBAAkB,CAAC,KAAK,UAAU,YAAf,GAC3B,KAAK,MAAM,EAAO,qBAAsB,CAAE,GAAI,EAA9C,EAEE,GAAiB,KAAK,UAAU,YAAf,GAAgC,EAAO,UAC1D,KAAK,MAAM,EAAO,sBAAuB,CAAE,GAAI,EAA/C,EAEF,EAAM,eAAiB,GACvB,EAAoB,EAAM,eAG5B,KAAK,gBACH,EACA,EACA,GACA,GACA,EACA,CANF,CAQD,SAAU,KAAK,gBAAL,EACT,AAAI,EACF,KAAK,yBAAyB,EAAW,CAAzC,EAEA,KAAK,kBAAkB,EAAW,CAAlC,UAGF,GACA,EAAI,OAAS,SACb,CAAC,KAAK,iBAAL,EACD,CAEA,KAAK,kCAAkC,CAAvC,EACA,GAAM,GAAc,KAAK,IAAzB,EAAA,EAEA,AAAI,EAAa,UACf,KAAK,WAAW,CAAhB,EAGF,EAAO,KAAO,SAEd,GAAM,GAAY,KAAK,MAAvB,GAAA,EACA,KAAK,sBAAsB,CAA3B,EACA,KAAK,6BAA6B,CAAlC,EAEA,AAAI,EAEF,KAAK,uBACH,EACA,EACA,EACA,EAJF,EAOI,MAAK,uBAAuB,CAA5B,GACF,KAAK,MAAM,EAAO,mBAAoB,CAAE,GAAI,EAAa,IAAzD,EAGF,KAAK,gBACH,EACA,EACA,EACA,GACoB,GACpB,EANF,WAUF,GACC,GAAI,OAAS,OAAS,EAAI,OAAS,QACpC,CAAE,MAAK,MAAL,EAAA,GAAuB,KAAK,iBAAL,GACzB,CAGA,KAAK,kCAAkC,CAAvC,EACA,EAAO,KAAO,EAAI,KAElB,GAAM,GAAY,KAAK,MAAvB,GAAA,EACA,KAAK,sBAAsB,CAA3B,EAEA,AAAI,EAEF,KAAK,uBAAuB,EAAW,EAAe,GAAO,EAA7D,EAEI,MAAK,uBAAuB,CAA5B,GACF,KAAK,MAAM,EAAO,sBAAuB,CAAE,GAAI,EAAa,IAA5D,EAEF,KAAK,gBACH,EACA,EACA,GACA,GACoB,GACpB,EANF,GAUF,KAAK,wBAAwB,CAA7B,CACD,SACC,GACA,EAAI,OAAS,YACb,CAAC,KAAK,iBAAL,EACD,CACA,KAAK,aAAa,wBAAlB,EACA,KAAK,kCAAkC,CAAvC,EAGA,GAAM,GAAY,KAAK,MAAvB,GAAA,EACA,KAAK,sBAAsB,CAA3B,EACA,KAAK,0BAA0B,EAAW,EAAc,CAAxD,CACD,KAAM,AAAI,MAAK,iBAAL,EAET,AAAI,EACF,KAAK,yBAAyB,EAAW,CAAzC,EAEA,KAAK,kBAAkB,EAAW,CAAlC,EAGF,KAAK,WAAL,CAEH,CAGD,sBAEE,EAC6B,CAC7B,GAAM,CAAE,OAAM,SAAU,KAAK,MAS7B,GAPG,KAAA,KAAoB,IAArB,MACA,EAAO,QACP,IAAU,aAEV,KAAK,MAAM,EAAO,gBAAiB,CAAE,GAAI,KAAK,MAAM,SAApD,EAGE,IAAI,IAAqB,CAC3B,AAAI,IAAU,eACZ,KAAK,MAAM,EAAO,6BAA8B,CAC9C,GAAI,KAAK,MAAM,SADjB,EAIF,GAAM,GAAM,KAAK,iBAAL,EACZ,SAAO,IAAM,EACN,CACR,CAED,MAAO,MAAK,kBAAkB,CAAvB,CACR,CAED,sBAEE,EACA,EAKA,CAAA,GAAA,GAEA,KAAK,MAAM,MAAM,GAAc,GAAqB,EAApD,EAEA,GAAM,GAAY,KAAK,MAAM,OAC7B,KAAK,MAAM,OAAS,CAAA,EAGpB,KAAK,UAAU,MAAM,EAArB,EACA,GAAM,GAAkB,EAAO,KAAO,CAAA,EACtC,KAAK,4BAA4B,EAAM,OAAW,GAAlD,CAAA,EACA,KAAK,UAAU,KAAf,EACA,KAAK,MAAM,KAAX,EACA,KAAK,MAAM,OAAS,EACpB,EAAU,KAAK,KAAK,KAAK,WAA0B,EAAQ,aAAvC,CAApB,EACA,GAAI,EAAO,aAAP,MAAA,EAAmB,QACrB,KAAK,MAAM,EAAO,qBAAsB,CAAE,GAAI,EAA9C,CAEH,CAED,kBAEE,EACA,EACA,CACA,AACE,CAAC,EAAK,UACL,GAAK,IAAI,OAAS,eAAiB,EAAK,IAAI,QAAU,gBAIvD,KAAK,MAAM,EAAO,sBAAuB,CAAE,GAAI,EAAK,IAApD,EAGF,EAAU,KAAK,KAAK,KAAK,mBAAmB,CAAxB,CAApB,CACD,CAED,yBAEE,EACA,EACA,CACA,GAAM,GAAO,KAAK,0BAA0B,CAA/B,EACb,EAAU,KAAK,KAAK,CAApB,EAEA,KAAK,WAAW,mBACd,KAAK,iBAAiB,EAAK,GAA3B,EACA,GACA,EAAK,IAAI,IAAI,KAHf,CAKD,CAED,0BAEE,EACA,EACA,EACA,CACA,GAAI,CAAC,GAAa,CAAC,EAAK,SAAU,CAEhC,GAAM,GAAM,EAAK,IAEjB,AAAI,GAAI,OAAS,eAAiB,EAAI,QAAU,gBAG9C,KAAK,MAAM,EAAO,sBAAuB,CAAE,GAAI,EAA/C,CAEH,CAED,GAAM,GAAO,KAAK,2BAA2B,CAAhC,EACb,EAAU,KAAK,KAAK,CAApB,EAEI,GACF,KAAK,WAAW,mBACd,KAAK,iBAAiB,EAAK,GAA3B,EACA,GACA,EAAK,IAAI,IAAI,KAHf,CAMH,CAED,gBAEE,EACA,EACA,EACA,EACA,EACA,EACM,CACN,EAAU,KAAK,KACb,KAAK,YACH,EACA,EACA,EACA,EACA,EACA,cACA,EAPF,CADF,CAWD,CAED,uBAEE,EACA,EACA,EACA,EACM,CACN,GAAM,GAAO,KAAK,YAChB,EACA,EACA,EACoB,GACpB,GACA,qBACA,EAPW,EASb,EAAU,KAAK,KAAK,CAApB,EAEA,GAAM,GACJ,EAAK,OAAS,MACV,EAAK,OACH,GACA,GACF,EAAK,OAAS,MACd,EAAK,OACH,GACA,GACF,GACN,KAAK,iCAAiC,EAAM,CAA5C,CACD,CAED,iCACE,EAGA,EACA,CACA,KAAK,WAAW,mBACd,KAAK,iBAAiB,EAAK,GAA3B,EACA,EACA,EAAK,IAAI,IAAI,KAHf,CAKD,CAGD,6BAEE,EACM,CAAA,CAGR,0BAEE,EACwB,CACxB,YAAK,iBAAiB,CAAtB,EACA,KAAK,UAAL,EACO,KAAK,WAAW,EAAM,sBAAtB,CACR,CAGD,mBAAiC,EAAwC,CACvE,YAAK,iBAAiB,CAAtB,EACA,KAAK,UAAL,EACO,KAAK,WAAW,EAAM,eAAtB,CACR,CAED,2BAEE,EACyB,CACzB,YAAK,iBAAiB,CAAtB,EACA,KAAK,UAAL,EACO,KAAK,WAAW,EAAM,uBAAtB,CACR,CAGD,iBAEE,EAGM,CACN,KAAK,MAAM,MAAM,GAAc,EAA/B,EACA,KAAK,gBAAgB,MAAM,GAAkB,CAA7C,EACA,KAAK,UAAU,MAAM,EAArB,EACA,EAAK,MAAQ,KAAK,IAAL,EAAA,EAAkB,KAAK,wBAAL,EAAiC,KAChE,KAAK,gBAAgB,KAArB,EACA,KAAK,UAAU,KAAf,EACA,KAAK,MAAM,KAAX,CACD,CAED,aACE,EACA,EACA,EACA,EAA4B,GACtB,CACN,GAAI,GAAkB,KAAK,MAAM,IAAZ,EACnB,EAAK,GAAK,KAAK,gBAAL,EACN,GACF,KAAK,0BAA0B,EAAK,GAAI,CAAxC,UAGE,GAAc,CAAC,EACjB,EAAK,GAAK,SAEV,MAAM,MAAK,MAAM,EAAO,iBAAkB,CAAE,GAAI,KAAK,MAAM,QAAjB,CAApC,CAGX,CAGD,gBAA8B,EAA6B,CACzD,EAAK,WAAa,KAAK,IAAL,EAAA,EAAwB,KAAK,oBAAL,EAA6B,IACxE,CAKD,YAEE,EAKa,CACb,GAAM,GAAa,KAAK,iCAEtB,CAFiB,EAIb,EAAoB,CAAC,GAAc,KAAK,IAA9C,EAAA,EACM,EACJ,GACA,KAAK,cAEH,CAFF,EAII,EACJ,GACA,KAAK,mCAEH,CAFF,EAII,EACJ,GAAsB,EAAC,GAAgB,KAAK,IAAL,EAAA,GACnC,EAAiB,GAAc,EAErC,GAAI,GAAW,CAAC,EACd,MAAI,IAAY,KAAK,WAAL,EAChB,KAAK,gBAAgB,EAA0C,EAA/D,EAEO,KAAK,WAAW,EAAM,sBAAtB,EAGT,GAAM,GAAgB,KAAK,gCAEzB,CAFoB,EAKtB,GACG,GAAc,GAAqB,CAAC,GAAW,CAAC,GAChD,GAAgB,GAAuB,CAAC,EAEzC,KAAM,MAAK,WAAW,KAAtB,CAAA,EAGF,GAAI,GAaJ,GAZA,AAAI,GAAkB,EACpB,GAAiB,GACjB,KAAK,gBACH,EACA,CAFF,GAKA,EAAiB,KAAK,4BACpB,CADe,EAKf,GAAkB,GAAiB,EACrC,YAAK,YACH,EACA,GACA,GACA,CAAC,CAAE,EAA0C,MAJ/C,EAMO,KAAK,WAAW,EAAM,wBAAtB,EAGT,GAAI,KAAK,IAAL,EAAA,EAED,SAA4C,YAC3C,KAAK,6BAAL,EACF,KAAK,YAAY,EAA4C,GAAM,EAAnE,EAEO,KAAK,WAAW,EAAM,0BAAtB,EAGT,KAAM,MAAK,WAAW,KAAtB,CAAA,CACD,CAGD,cAAc,EAAuB,CACnC,MAAO,MAAK,IAAZ,EAAA,CACD,CAED,iCAAiC,EAAuB,CACtD,GAAI,KAAK,yBAAL,EAAiC,CAEnC,KAAK,aAAa,mBAAlB,EACA,GAAM,GAAY,KAAK,UAAL,EAClB,SAAU,SAAW,KAAK,gBAAgB,EAArB,EACrB,EAAK,WAAa,CAAC,KAAK,WAAW,EAAW,wBAA3B,CAAD,EACX,EACR,CACD,MAAO,EACR,CAED,mCAAmC,EAAuB,CACxD,GAAI,KAAK,aAAL,EAAA,EAA2B,CAC7B,AAAK,EAAK,YAAY,GAAK,WAAa,CAAA,GAExC,GAAM,GAAY,KAAK,YACrB,KAAK,MAAM,aACX,KAAK,MAAM,eAFK,EAKlB,YAAK,KAAL,EAEA,EAAU,SAAW,KAAK,sBAAL,EACrB,EAAK,WAAW,KACd,KAAK,WAAW,EAAW,0BAA3B,CADF,EAGO,EACR,CACD,MAAO,EACR,CAED,gCAAgC,EAAuB,CACrD,GAAI,KAAK,MAAL,CAAA,EAAuB,CACzB,AAAK,EAAK,YAAY,GAAK,WAAa,CAAA,GACxC,GAAM,GAAe,EAAK,aAAe,OACzC,SAAK,WAAW,KAAK,GAAG,KAAK,sBAAsB,CAA3B,CAAxB,EAEA,EAAK,OAAS,KACd,EAAK,YAAc,KACf,KAAK,UAAU,kBAAf,GACF,GAAK,WAAa,CAAA,GAGb,EACR,CACD,MAAO,EACR,CAED,4BAEE,EACS,CACT,MAAI,MAAK,6BAAL,EACF,GAAK,WAAa,CAAA,EAClB,EAAK,OAAS,KACV,KAAK,UAAU,kBAAf,GACF,GAAK,WAAa,CAAA,GAEpB,EAAK,YAAc,KAAK,uBAAuB,CAA5B,EACZ,IAEF,EACR,CAED,iBAA2B,CACzB,GAAI,CAAC,KAAK,aAAV,EAAA,EAAmC,MAAO,GAC1C,GAAM,GAAO,KAAK,eAAL,EACb,MACE,CAAC,GAAU,KAAK,KAAK,MAAM,MAAM,KAAK,MAAM,IAAK,CAAjC,CAAf,GACD,KAAK,qBAAqB,EAAM,UAAhC,CAEH,CAED,8BAAyE,CACvE,GAAM,GAAO,KAAK,UAAL,EAEP,EAAU,KAAK,gBAAL,EAEhB,GAAI,KAAK,MAAuB,EAAA,GAAA,EAC9B,YAAK,KAAL,EACI,GACF,KAAK,KAAL,EAGK,KAAK,cACV,EACA,GAAiB,GACjB,CAHK,EAOT,GAAI,KAAK,MAAL,EAAA,EACF,MAAO,MAAK,WAAW,EAAmC,GAAM,EAAzD,EAGT,GAAI,KAAK,MAAL,EAAA,EACF,MACE,MAAK,UAAU,YAAf,GACA,KAAK,gBAAgB,aAAc,wBAAnC,GAEA,KAAK,MAAM,EAAO,sBAAuB,CAAE,GAAI,KAAK,MAAM,SAA1D,EAEF,KAAK,gBAAgB,EAArB,EACO,KAAK,WAAW,EAAmC,GAAM,EAAzD,EAGT,GAAI,KAAK,MAAL,EAAA,GAAyB,KAAK,MAAL,EAAA,GAAuB,KAAK,MAAL,EAClD,KAAM,MAAK,MAAM,EAAO,yBAA0B,CAChD,GAAI,KAAK,MAAM,QADiC,CAA5C,EAKR,GAAM,GAAM,KAAK,wBAAL,EACZ,YAAK,UAAL,EACO,CACR,CAED,uBAGE,EACkC,CAClC,MAAO,MAAK,eAAe,IAApB,CACR,CAED,0BAAoC,CAClC,GAAM,CAAE,QAAS,KAAK,MACtB,GAAI,GAAkB,CAAD,EAAQ,CAC3B,GAAK,IAAA,IAAsB,CAAC,KAAK,MAAM,aAAgB,IAAI,GACzD,MAAO,GAET,GACG,KAAA,KAAqB,IAAI,MAC1B,CAAC,KAAK,MAAM,YACZ,CACA,GAAM,CAAE,KAAM,GAAa,KAAK,UAAL,EAK3B,GACG,GAAkB,CAAD,GAAc,IAAhC,IACA,IAAQ,EAER,YAAK,gBAAgB,CAAC,OAAQ,YAAT,CAArB,EACO,EAEV,CACF,SAAU,CAAC,KAAK,MAAL,EAAA,EACV,MAAO,GAGT,GAAM,GAAO,KAAK,eAAL,EACP,EAAU,KAAK,qBAAqB,EAAM,MAAhC,EAChB,GACE,KAAK,MAAM,WAAW,CAAtB,IACC,IAAA,GAAkB,KAAK,MAAM,IAAZ,GAAqB,EAEvC,MAAO,GAGT,GAAI,KAAK,MAAsB,EAAA,GAAA,EAAS,CACtC,GAAM,GAAgB,KAAK,MAAM,WAC/B,KAAK,oBAAoB,EAAO,CAAhC,CADoB,EAGtB,MACE,KAAa,IACb,IAFF,EAID,CACD,MAAO,EACR,CAED,gBAEE,EACA,EACM,CACN,GAAI,KAAK,cAAL,EAAA,EAA8B,CAChC,EAAK,OAAS,KAAK,kBAAL,EACd,KAAK,YAAY,CAAjB,EACA,GAAM,GAAa,KAAK,2BAAL,EACnB,AAAI,GACF,GAAK,WAAa,EAClB,KAAK,sBAAsB,CAA3B,OAEG,AAAI,IACT,KAAK,WAAL,EAGF,KAAK,UAAL,CACD,CAED,8BAAwC,CACtC,GAAM,CAAE,QAAS,KAAK,MACtB,GAAI,IAAI,IACN,MAAK,gBAAgB,CAAC,aAAc,mBAAf,CAArB,EACI,KAAK,UAAU,YAAf,GAA8B,CAChC,GAAI,KAAK,gBAAgB,aAAc,wBAAnC,EACF,KAAM,MAAK,MAAM,EAAO,sBAAuB,CAC7C,GAAI,KAAK,MAAM,QAD8B,CAAzC,EAKR,MAAO,EACR,CAGH,MACE,KAAA,IACA,IADA,IAEA,IAFA,IAGA,IAAI,IACJ,KAAK,MAAL,GACA,KAAK,gBAAL,CAEH,CAED,YACE,EACA,EACA,EACA,EACM,CACN,GAAI,GAEF,GAAI,GAGF,GADA,KAAK,sBAAsB,EAAM,SAAjC,EACI,KAAK,UAAU,mBAAf,EAAqC,CAAA,GAAA,GACvC,GAAM,GAAe,EAClB,YACH,AACE,EAAY,OAAS,cACrB,EAAY,OAAS,QACrB,EAAY,IAAM,EAAY,QAAU,GACxC,CAAA,IAAC,EAAY,QAAb,MAAC,EAAmB,gBAEpB,KAAK,MAAM,EAAO,8BAA+B,CAC/C,GAAI,EADN,CAIH,UAEQ,EAAK,YAAc,EAAK,WAAW,OAG5C,OAAW,KAAa,GAAK,WAAY,CACvC,GAAM,CAAE,YAAa,EACf,EACJ,EAAS,OAAS,aAAe,EAAS,KAAO,EAAS,MAE5D,GADA,KAAK,sBAAsB,EAAW,CAAtC,EACI,CAAC,GAAU,EAAU,MAAO,CAC9B,GAAM,CAAE,SAAU,EAClB,AAAI,EAAM,OAAS,aACjB,KAAK,MAAM,EAAO,sBAAuB,CACvC,GAAI,EACJ,UAAW,EAAM,MACjB,aAHF,EAOA,MAAK,kBAAkB,EAAM,KAAM,EAAM,IAAI,MAAO,GAAM,EAA1D,EAEA,KAAK,MAAM,iBAAiB,CAA5B,EAEH,CACF,SACQ,EAAK,aAEd,GACE,EAAK,YAAY,OAAS,uBAC1B,EAAK,YAAY,OAAS,mBAC1B,CACA,GAAM,GAAK,EAAK,YAAY,GAC5B,GAAI,CAAC,EAAI,KAAM,IAAI,OAAM,mBAAV,EAEf,KAAK,sBAAsB,EAAM,EAAG,IAApC,UACS,EAAK,YAAY,OAAS,sBACnC,OAAW,KAAe,GAAK,YAAY,aACzC,KAAK,iBAAiB,EAAY,EAAlC,GAUR,GAAI,AAHF,KAAK,MAAM,eAAe,KAAK,MAAM,eAAe,OAAS,GAGlC,OAC3B,KAAM,MAAK,MAAM,EAAO,2BAA4B,CAAE,GAAI,CAAN,CAA9C,CAET,CAED,iBAAiB,EAA0C,CACzD,GAAI,EAAK,OAAS,aAChB,KAAK,sBAAsB,EAAM,EAAK,IAAtC,UACS,EAAK,OAAS,gBACvB,OAAW,KAAQ,GAAK,WACtB,KAAK,iBAAiB,CAAtB,UAEO,EAAK,OAAS,eACvB,OAAW,KAAQ,GAAK,SACtB,AAAI,GACF,KAAK,iBAAiB,CAAtB,MAGC,AAAI,GAAK,OAAS,iBAEvB,KAAK,iBAAiB,EAAK,KAA3B,EACK,AAAI,EAAK,OAAS,cACvB,KAAK,iBAAiB,EAAK,QAA3B,EACS,EAAK,OAAS,qBACvB,KAAK,iBAAiB,EAAK,IAA3B,CAEH,CAED,sBACE,EAOA,EACM,CACN,AAAI,KAAK,oBAAoB,IAAI,CAA7B,GACF,CAAI,IAAe,UACjB,KAAK,MAAM,EAAO,uBAAwB,CAAE,GAAI,EAAhD,EAEA,KAAK,MAAM,EAAO,gBAAiB,CAAE,GAAI,EAAM,aAA/C,GAGJ,KAAK,oBAAoB,IAAI,CAA7B,CACD,CAID,sBAAsB,EAAmD,CACvE,GAAM,GAAQ,CAAA,EACV,EAAQ,GAKZ,IAFA,KAAK,OAAL,CAAA,EAEO,CAAC,KAAK,IAAL,CAAA,GAAqB,CAC3B,GAAI,EACF,EAAQ,WAER,KAAK,OAAL,EAAA,EACI,KAAK,IAAL,CAAA,EAAqB,MAE3B,GAAM,GAAkB,KAAK,aAA7B,GAAA,EACM,EAAW,KAAK,MAAtB,GAAA,EACM,EAAO,KAAK,UAAL,EACb,EAAK,MAAQ,KAAK,sBAAL,EACb,EAAM,KACJ,KAAK,qBACH,EACA,EACA,EACA,CAJF,CADF,CAQD,CAED,MAAO,EACR,CAED,qBACE,EACA,EAEA,EACA,EAEmB,CACnB,MAAI,MAAK,cAAL,EAAA,EACF,EAAK,SAAW,KAAK,sBAAL,EACX,AAAI,EACT,EAAK,SAAW,GAAmB,EAAK,KAAN,EACxB,EAAK,UACf,GAAK,SAAW,GAAgB,EAAK,KAAN,GAE1B,KAAK,WAA8B,EAAM,iBAAzC,CACR,CAGD,uBAAwD,CACtD,GAAI,KAAK,MAAL,GAAA,EAAuB,CACzB,GAAM,GAAS,KAAK,mBAAmB,KAAK,MAAM,KAAnC,EACT,EAAY,EAAO,MAAM,MAAM,EAAnB,EAClB,MAAI,IACF,KAAK,MAAM,EAAO,iCAAkC,CAClD,GAAI,EACJ,kBAAmB,EAAU,GAAG,WAAW,CAAxB,EAFrB,EAKK,CACR,CACD,MAAO,MAAK,gBAAgB,EAArB,CACR,CAED,mBACE,EAGS,CACT,MAAI,GAAK,YAAc,KACd,EAAK,WAAW,KAAK,CAAC,CAAE,MAAK,WAEhC,EAAM,QAAU,QACf,GAAI,OAAS,aACV,EAAI,OAAS,OACb,EAAI,QAAU,OALf,EASF,EACR,CAED,sBACE,EAGA,CAEA,GAAI,KAAK,mBAAmB,CAAxB,GAAiC,EAAK,OAAS,uBAAwB,CAEzE,GAAM,CAAE,cAAe,EACvB,GAAI,GAAc,KAAM,CAEtB,GAAM,GAA2B,EAAW,KAAK,GAAa,CAC5D,GAAI,GAMJ,GALA,AAAI,EAAU,OAAS,kBACrB,EAAW,EAAU,MACZ,EAAU,OAAS,mBAC5B,GAAW,EAAU,UAEnB,IAAa,OACf,MAAO,GAAS,OAAS,aACrB,EAAS,OAAS,UAClB,EAAS,QAAU,SAE1B,CAZgC,EAajC,AAAI,IAA6B,QAC/B,KAAK,MAAM,EAAO,4BAA6B,CAC7C,GAAI,EAAyB,IAAI,MADnC,CAIH,CACF,CACF,CAKD,YAA0B,EAAgD,CAGxE,GADA,EAAK,WAAa,CAAA,EACd,CAAC,KAAK,MAAL,GAAA,EAAuB,CAU1B,GAAM,GAAY,CAPC,KAAK,iCAAiC,CAAtC,GAOc,KAAK,IAAtC,EAAA,EAGM,EAAU,GAAa,KAAK,8BAA8B,CAAnC,EAG7B,AAAI,GAAa,CAAC,GAAS,KAAK,2BAA2B,CAAhC,EAC3B,KAAK,iBAAL,EAAA,CACD,CACD,EAAK,OAAS,KAAK,kBAAL,EAId,GAAM,GAAa,KAAK,2BAAL,EACnB,GAAI,EACF,EAAK,WAAa,MACsB,CACxC,GAAM,GAAa,KAAK,2BAAL,EACnB,AAAI,GAEF,GAAK,WAAa,EAErB,CACD,YAAK,sBAAsB,CAA3B,EAEA,KAAK,UAAL,EACO,KAAK,WAAW,EAAM,mBAAtB,CACR,CAED,mBAAiD,CAC/C,MAAK,MAAK,MAAV,GAAA,GAA4B,KAAK,WAAL,EACrB,KAAK,cAAL,CACR,CAGD,yBAAyB,EAA4C,CACnE,MAAO,IAAkB,KAAK,MAAM,IAAZ,CACzB,CAED,0BAME,EACA,EACA,EACM,CACN,EAAU,MAAQ,KAAK,gBAAL,EAClB,EAAK,WAAW,KAAK,KAAK,sBAAsB,EAAW,CAAtC,CAArB,CACD,CAED,sBAKE,EAAsB,EAAiB,EAAc,GAAc,CACnE,YAAK,UAAU,EAAU,MAAO,CAE9B,GAAI,EACJ,QAAS,EAHX,EAKO,KAAK,WAAW,EAAW,CAA3B,CACR,CASD,oBAA0C,CACxC,GAAM,GAAQ,CAAA,EACR,EAAY,GAAI,KAEtB,EAAG,CACD,GAAI,KAAK,MAAL,CAAA,EACF,MAGF,GAAM,GAAO,KAAK,UAAL,EAGP,EAAU,KAAK,MAAM,MAkB3B,GAdI,EAAU,IAAI,CAAd,GACF,KAAK,MAAM,EAAO,kCAAmC,CACnD,GAAI,KAAK,MAAM,SACf,IAAK,EAFP,EAKF,EAAU,IAAI,CAAd,EACA,AAAI,KAAK,MAAL,GAAA,EACF,EAAK,IAAM,KAAK,mBAAmB,CAAxB,EAEX,EAAK,IAAM,KAAK,gBAAgB,EAArB,EAEb,KAAK,OAAL,EAAA,EAEI,CAAC,KAAK,MAAL,GAAA,EACH,KAAM,MAAK,MAAM,EAAO,4BAA6B,CACnD,GAAI,KAAK,MAAM,QADoC,CAA/C,EAIR,EAAK,MAAQ,KAAK,mBAAmB,KAAK,MAAM,KAAnC,EACb,EAAM,KAAK,KAAK,WAAW,EAAM,iBAAtB,CAAX,QACO,KAAK,IAjCd,EAAA,GAmCA,MAAO,EACR,CAQD,4BAA6B,CAC3B,GAAI,KAAK,MAAL,EAAA,GAAwB,CAAC,KAAK,sBAAL,EAC3B,KAAK,aAAa,kBAAlB,EACA,KAAK,KAAL,MAEA,OAAI,MAAK,UAAU,kBAAf,EAA2C,CAAA,EACxC,KAET,GAAM,GAAQ,CAAA,EACR,EAAa,GAAI,KACvB,EAAG,CACD,GAAM,GAAO,KAAK,UAAL,EAiBb,GAhBA,EAAK,IAAM,KAAK,gBAAgB,EAArB,EAEP,EAAK,IAAI,OAAS,QACpB,KAAK,MAAM,EAAO,iCAAkC,CAClD,GAAI,EAAK,IADX,EAKE,EAAW,IAAI,EAAK,IAAI,IAAxB,GACF,KAAK,MAAM,EAAO,kCAAmC,CACnD,GAAI,EAAK,IACT,IAAK,EAAK,IAAI,KAFhB,EAKF,EAAW,IAAI,EAAK,IAAI,IAAxB,EACA,KAAK,OAAL,EAAA,EACI,CAAC,KAAK,MAAL,GAAA,EACH,KAAM,MAAK,MAAM,EAAO,4BAA6B,CACnD,GAAI,KAAK,MAAM,QADoC,CAA/C,EAIR,EAAK,MAAQ,KAAK,mBAAmB,KAAK,MAAM,KAAnC,EACb,KAAK,WAAW,EAAM,iBAAtB,EACA,EAAM,KAAK,CAAX,QACO,KAAK,IA1Bd,EAAA,GA4BA,MAAO,EACR,CAED,4BAA6B,CAE3B,GAAI,KAAK,aAAL,EAAA,GAAiC,CAAC,KAAK,sBAAL,EACpC,KAAK,aAAa,kBAAlB,EACA,KAAK,KAAL,MAEA,OAAI,MAAK,UAAU,kBAAf,EAA2C,CAAA,EACxC,KAGT,KAAK,IAAL,CAAA,EACA,GAAM,GAAQ,KAAK,mBAAL,EACd,YAAK,IAAL,CAAA,EAEO,CACR,CAED,iCAAiC,EAA4C,CAC3E,MAAI,MAAK,yBAAyB,CAA9B,EAEF,MAAK,0BACH,EACA,KAAK,UAAL,EACA,wBAHF,EAKO,IAEF,EACR,CAED,8BAA8B,EAA4C,CACxE,GAAI,KAAK,MAAL,EAAA,EAAqB,CACvB,GAAM,GAAY,KAAK,UAAL,EAClB,YAAK,KAAL,EACA,KAAK,iBAAL,EAAA,EAEA,KAAK,0BACH,EACA,EACA,0BAHF,EAKO,EACR,CACD,MAAO,EACR,CAED,2BAA2B,EAAmC,CAC5D,GAAI,GAAQ,GAEZ,IADA,KAAK,OAAL,CAAA,EACO,CAAC,KAAK,IAAL,CAAA,GAAqB,CAC3B,GAAI,EACF,EAAQ,OACH,CAEL,GAAI,KAAK,IAAL,EAAA,EACF,KAAM,MAAK,MAAM,EAAO,uBAAwB,CAC9C,GAAI,KAAK,MAAM,QAD+B,CAA1C,EAMR,GADA,KAAK,OAAL,EAAA,EACI,KAAK,IAAL,CAAA,EAAqB,KAC1B,CAED,GAAM,GAAY,KAAK,UAAL,EACZ,EAAmB,KAAK,MAA9B,GAAA,EACM,EAAkB,KAAK,aAA7B,GAAA,EACA,EAAU,SAAW,KAAK,sBAAL,EACrB,GAAM,GAAkB,KAAK,qBAC3B,EACA,EACA,EAAK,aAAe,QAAU,EAAK,aAAe,SAClD,EACA,MALsB,EAOxB,EAAK,WAAW,KAAK,CAArB,CACD,CACF,CAGD,qBACE,EACA,EAEA,EACA,EACA,EAEmB,CACnB,GAAI,KAAK,cAAL,EAAA,EACF,EAAU,MAAQ,KAAK,gBAAL,MACb,CACL,GAAM,CAAE,YAAa,EACrB,GAAI,EACF,KAAM,MAAK,MAAM,EAAO,sBAAuB,CAC7C,GAAI,EACJ,WAAa,EAA6B,KAFG,CAAzC,EAKR,KAAK,kBACF,EAA0B,KAC3B,EAAU,IAAI,MACd,GACA,EAJF,EAMK,EAAU,OACb,GAAU,MAAQ,GAAgB,CAAD,EAEpC,CACD,MAAO,MAAK,sBACV,EACA,kBACA,CAHK,CAKR,CAID,YACE,EACS,CACT,MAAO,GAAM,OAAS,cAAgB,EAAM,OAAS,MACtD,CAlsFoE,EC7KxD,gBAAqB,GAAgB,CAOlD,YAAY,EAAqC,EAAe,CAC9D,EAAU,GAAW,CAAD,EACpB,MAAM,EAAS,CAAf,EAEA,KAAK,QAAU,EACf,KAAK,iBAAL,EACA,KAAK,QAAU,GAAW,KAAK,QAAQ,OAAd,EACzB,KAAK,SAAW,EAAQ,cACzB,CAGD,iBAEE,CACA,MAAO,GACR,CAED,OAAgB,CACd,KAAK,mBAAL,EACA,GAAM,GAAO,KAAK,UAAL,EACP,EAAU,KAAK,UAAL,EAChB,YAAK,UAAL,EACA,EAAK,OAAS,KACd,KAAK,cAAc,EAAM,CAAzB,EACA,EAAK,OAAS,KAAK,MAAM,OAClB,CACR,CAjCiD,EAoCpD,YAAoB,EAAiC,CACnD,GAAM,GAAwB,GAAI,KAClC,OAAW,KAAU,GAAS,CAC5B,GAAM,CAAC,EAAM,GAAW,MAAM,QAAQ,CAAd,EAAwB,EAAS,CAAC,EAAQ,CAAA,CAAT,EACzD,AAAK,EAAU,IAAI,CAAd,GAAqB,EAAU,IAAI,EAAM,GAAW,CAAA,CAA/B,CAC3B,CACD,MAAO,EACR,CC/BM,YAAe,EAAe,EAAyB,CAAA,GAAA,GAC5D,GAAI,IAAA,IAAO,KAAP,OAAA,EAAS,cAAe,cAAe,CACzC,EAAO,OAAA,OAAA,CAAA,EACF,CADE,EAGP,GAAI,CACF,EAAQ,WAAa,SACrB,GAAM,GAAS,GAAU,EAAS,CAAV,EAClB,EAAM,EAAO,MAAP,EAEZ,GAAI,EAAO,kBACT,MAAO,GAGT,GAAI,EAAO,4BAMT,GAAI,CACF,SAAQ,WAAa,SACd,GAAU,EAAS,CAAV,EAAiB,MAA1B,QACP,EAAA,CAAM,KAIR,GAAI,QAAQ,WAAa,SAG3B,MAAO,SACA,EAAP,CACA,GAAI,CACF,SAAQ,WAAa,SACd,GAAU,EAAS,CAAV,EAAiB,MAA1B,QACP,EAAA,CAAM,CAER,KAAM,EACP,CACF,KACC,OAAO,IAAU,EAAS,CAAV,EAAiB,MAA1B,CAEV,CAEM,YAAyB,EAAe,EAA+B,CAC5E,GAAM,GAAS,GAAU,EAAS,CAAV,EACxB,MAAI,GAAO,QAAQ,YACjB,GAAO,MAAM,OAAS,IAEjB,EAAO,cAAP,CACR,CAED,YACE,EACmC,CACnC,GAAM,GAAgD,CAAA,EACtD,OAAW,KAAY,QAAO,KAAK,CAAZ,EACrB,EAAW,GAAY,GAAiB,EAAmB,EAApB,EAEzC,MAAO,EACR,IAEY,IAAW,GAA2B,EAAD,EAElD,YAAmB,EAAqC,EAAuB,CAC7E,GAAI,GAAM,GACV,MAAI,IAAJ,MAAI,EAAS,SACX,IAAgB,EAAQ,OAAT,EACf,EAAM,GAAe,EAAQ,OAAT,GAGf,GAAI,GAAI,EAAS,CAAjB,CACR,CAED,GAAM,IAAsE,CAAA,EAG5E,YAAwB,EAEtB,CACA,GAAM,GAAa,GAAiB,OAAO,GACzC,GAAU,EAAoB,CAArB,CADQ,EAIb,EAAM,EAAW,KAAK,GAAhB,EACR,EAAM,GAAiB,GAC3B,GAAI,CAAC,EAAK,CACR,EAAM,GACN,OAAW,KAAU,GAEnB,EAAM,GAAa,GAAQ,CAArB,EAER,GAAiB,GAAO,CACzB,CACD,MAAO,EACR,oDCzHD,eAOA,GAAI,IAAe,mEAAmE,MAAM,EAAE,EAK9F,GAAQ,OAAS,SAAU,EAAQ,CACjC,GAAI,GAAK,GAAU,EAAS,GAAa,OACvC,MAAO,IAAa,GAEtB,KAAM,IAAI,WAAU,6BAA+B,CAAM,CAC3D,EAMA,GAAQ,OAAS,SAAU,EAAU,CACnC,GAAI,GAAO,GACP,EAAO,GAEP,EAAU,GACV,EAAU,IAEV,EAAO,GACP,EAAO,GAEP,EAAO,GACP,EAAQ,GAER,EAAe,GACf,EAAe,GAGnB,MAAI,IAAQ,GAAY,GAAY,EAC1B,EAAW,EAIjB,GAAW,GAAY,GAAY,EAC7B,EAAW,EAAU,EAI3B,GAAQ,GAAY,GAAY,EAC1B,EAAW,EAAO,EAIxB,GAAY,EACP,GAIL,GAAY,EACP,GAIF,EACT,IClEA,eAqCA,GAAI,IAAS,KAcT,GAAiB,EAGjB,GAAW,GAAK,GAGhB,GAAgB,GAAW,EAG3B,GAAuB,GAQ3B,YAAqB,EAAQ,CAC3B,MAAO,GAAS,EACV,EAAC,GAAW,GAAK,EAClB,IAAU,GAAK,CACtB,CAQA,YAAuB,EAAQ,CAC7B,GAAI,GAAc,GAAS,KAAO,EAC9B,EAAU,GAAU,EACxB,MAAO,GACH,CAAC,EACD,CACN,CAKA,GAAQ,OAAS,SAA0B,EAAQ,CACjD,GAAI,GAAU,GACV,EAEA,EAAM,GAAY,CAAM,EAE5B,EACE,GAAQ,EAAM,GACd,KAAS,GACL,EAAM,GAGR,IAAS,IAEX,GAAW,GAAO,OAAO,CAAK,QACvB,EAAM,GAEf,MAAO,EACT,EAMA,GAAQ,OAAS,SAA0B,EAAM,EAAQ,EAAW,CAClE,GAAI,GAAS,EAAK,OACd,EAAS,EACT,EAAQ,EACR,EAAc,EAElB,EAAG,CACD,GAAI,GAAU,EACZ,KAAM,IAAI,OAAM,4CAA4C,EAI9D,GADA,EAAQ,GAAO,OAAO,EAAK,WAAW,GAAQ,CAAC,EAC3C,IAAU,GACZ,KAAM,IAAI,OAAM,yBAA2B,EAAK,OAAO,EAAS,CAAC,CAAC,EAGpE,EAAe,CAAC,CAAE,GAAQ,IAC1B,GAAS,GACT,EAAS,EAAU,IAAS,GAC5B,GAAS,EACX,OAAS,GAET,EAAU,MAAQ,GAAc,CAAM,EACtC,EAAU,KAAO,CACnB,IC3IA,eAiBA,YAAgB,EAAO,EAAO,EAAe,CAC3C,GAAI,IAAS,GACX,MAAO,GAAM,GACR,GAAI,UAAU,SAAW,EAC9B,MAAO,GAEP,KAAM,IAAI,OAAM,IAAM,EAAQ,2BAA2B,CAE7D,CACA,GAAQ,OAAS,GAEjB,GAAI,IAAY,iEACZ,GAAgB,gBAEpB,YAAkB,EAAM,CACtB,GAAI,GAAQ,EAAK,MAAM,EAAS,EAChC,MAAK,GAGE,CACL,OAAQ,EAAM,GACd,KAAM,EAAM,GACZ,KAAM,EAAM,GACZ,KAAM,EAAM,GACZ,KAAM,EAAM,EACd,EARS,IASX,CACA,GAAQ,SAAW,GAEnB,YAAqB,EAAY,CAC/B,GAAI,GAAM,GACV,MAAI,GAAW,QACb,IAAO,EAAW,OAAS,KAE7B,GAAO,KACH,EAAW,MACb,IAAO,EAAW,KAAO,KAEvB,EAAW,MACb,IAAO,EAAW,MAEhB,EAAW,MACb,IAAO,IAAM,EAAW,MAEtB,EAAW,MACb,IAAO,EAAW,MAEb,CACT,CACA,GAAQ,YAAc,GAatB,YAAmB,EAAO,CACxB,GAAI,GAAO,EACP,EAAM,GAAS,CAAK,EACxB,GAAI,EAAK,CACP,GAAI,CAAC,EAAI,KACP,MAAO,GAET,EAAO,EAAI,IACb,CAIA,OAHI,GAAa,GAAQ,WAAW,CAAI,EAEpC,EAAQ,EAAK,MAAM,KAAK,EACnB,EAAM,EAAK,EAAG,EAAI,EAAM,OAAS,EAAG,GAAK,EAAG,IACnD,EAAO,EAAM,GACb,AAAI,IAAS,IACX,EAAM,OAAO,EAAG,CAAC,EACZ,AAAI,IAAS,KAClB,IACS,EAAK,GACd,CAAI,IAAS,GAIX,GAAM,OAAO,EAAI,EAAG,CAAE,EACtB,EAAK,GAEL,GAAM,OAAO,EAAG,CAAC,EACjB,MAUN,MANA,GAAO,EAAM,KAAK,GAAG,EAEjB,IAAS,IACX,GAAO,EAAa,IAAM,KAGxB,EACF,GAAI,KAAO,EACJ,GAAY,CAAG,GAEjB,CACT,CACA,GAAQ,UAAY,GAkBpB,YAAc,EAAO,EAAO,CAC1B,AAAI,IAAU,IACZ,GAAQ,KAEN,IAAU,IACZ,GAAQ,KAEV,GAAI,GAAW,GAAS,CAAK,EACzB,EAAW,GAAS,CAAK,EAM7B,GALI,GACF,GAAQ,EAAS,MAAQ,KAIvB,GAAY,CAAC,EAAS,OACxB,MAAI,IACF,GAAS,OAAS,EAAS,QAEtB,GAAY,CAAQ,EAG7B,GAAI,GAAY,EAAM,MAAM,EAAa,EACvC,MAAO,GAIT,GAAI,GAAY,CAAC,EAAS,MAAQ,CAAC,EAAS,KAC1C,SAAS,KAAO,EACT,GAAY,CAAQ,EAG7B,GAAI,GAAS,EAAM,OAAO,CAAC,IAAM,IAC7B,EACA,GAAU,EAAM,QAAQ,OAAQ,EAAE,EAAI,IAAM,CAAK,EAErD,MAAI,GACF,GAAS,KAAO,EACT,GAAY,CAAQ,GAEtB,CACT,CACA,GAAQ,KAAO,GAEf,GAAQ,WAAa,SAAU,EAAO,CACpC,MAAO,GAAM,OAAO,CAAC,IAAM,KAAO,GAAU,KAAK,CAAK,CACxD,EAQA,YAAkB,EAAO,EAAO,CAC9B,AAAI,IAAU,IACZ,GAAQ,KAGV,EAAQ,EAAM,QAAQ,MAAO,EAAE,EAO/B,OADI,GAAQ,EACL,EAAM,QAAQ,EAAQ,GAAG,IAAM,GAAG,CACvC,GAAI,GAAQ,EAAM,YAAY,GAAG,EASjC,GARI,EAAQ,GAOZ,GAAQ,EAAM,MAAM,EAAG,CAAK,EACxB,EAAM,MAAM,mBAAmB,GACjC,MAAO,GAGT,EAAE,CACJ,CAGA,MAAO,OAAM,EAAQ,CAAC,EAAE,KAAK,KAAK,EAAI,EAAM,OAAO,EAAM,OAAS,CAAC,CACrE,CACA,GAAQ,SAAW,GAEnB,GAAI,IAAqB,UAAY,CACnC,GAAI,GAAM,OAAO,OAAO,IAAI,EAC5B,MAAO,CAAE,cAAe,GAC1B,EAAE,EAEF,YAAmB,EAAG,CACpB,MAAO,EACT,CAWA,YAAqB,EAAM,CACzB,MAAI,IAAc,CAAI,EACb,IAAM,EAGR,CACT,CACA,GAAQ,YAAc,GAAoB,GAAW,GAErD,YAAuB,EAAM,CAC3B,MAAI,IAAc,CAAI,EACb,EAAK,MAAM,CAAC,EAGd,CACT,CACA,GAAQ,cAAgB,GAAoB,GAAW,GAEvD,YAAuB,EAAG,CACxB,GAAI,CAAC,EACH,MAAO,GAGT,GAAI,GAAS,EAAE,OAMf,GAJI,EAAS,GAIT,EAAE,WAAW,EAAS,CAAC,IAAM,IAC7B,EAAE,WAAW,EAAS,CAAC,IAAM,IAC7B,EAAE,WAAW,EAAS,CAAC,IAAM,KAC7B,EAAE,WAAW,EAAS,CAAC,IAAM,KAC7B,EAAE,WAAW,EAAS,CAAC,IAAM,KAC7B,EAAE,WAAW,EAAS,CAAC,IAAM,KAC7B,EAAE,WAAW,EAAS,CAAC,IAAM,KAC7B,EAAE,WAAW,EAAS,CAAC,IAAM,IAC7B,EAAE,WAAW,EAAS,CAAC,IAAM,GAC/B,MAAO,GAGT,OAAS,GAAI,EAAS,GAAI,GAAK,EAAG,IAChC,GAAI,EAAE,WAAW,CAAC,IAAM,GACtB,MAAO,GAIX,MAAO,EACT,CAUA,YAAoC,EAAU,EAAU,EAAqB,CAC3E,GAAI,GAAM,GAAO,EAAS,OAAQ,EAAS,MAAM,EAqBjD,MApBI,KAAQ,GAIZ,GAAM,EAAS,aAAe,EAAS,aACnC,IAAQ,IAIZ,GAAM,EAAS,eAAiB,EAAS,eACrC,IAAQ,GAAK,IAIjB,GAAM,EAAS,gBAAkB,EAAS,gBACtC,IAAQ,IAIZ,GAAM,EAAS,cAAgB,EAAS,cACpC,IAAQ,GACH,EAGF,GAAO,EAAS,KAAM,EAAS,IAAI,CAC5C,CACA,GAAQ,2BAA6B,GAWrC,YAA6C,EAAU,EAAU,EAAsB,CACrF,GAAI,GAAM,EAAS,cAAgB,EAAS,cAqB5C,MApBI,KAAQ,GAIZ,GAAM,EAAS,gBAAkB,EAAS,gBACtC,IAAQ,GAAK,IAIjB,GAAM,GAAO,EAAS,OAAQ,EAAS,MAAM,EACzC,IAAQ,IAIZ,GAAM,EAAS,aAAe,EAAS,aACnC,IAAQ,IAIZ,GAAM,EAAS,eAAiB,EAAS,eACrC,IAAQ,GACH,EAGF,GAAO,EAAS,KAAM,EAAS,IAAI,CAC5C,CACA,GAAQ,oCAAsC,GAE9C,YAAgB,EAAO,EAAO,CAC5B,MAAI,KAAU,EACL,EAGL,IAAU,KACL,EAGL,IAAU,KACL,GAGL,EAAQ,EACH,EAGF,EACT,CAMA,YAA6C,EAAU,EAAU,CAC/D,GAAI,GAAM,EAAS,cAAgB,EAAS,cAqB5C,MApBI,KAAQ,GAIZ,GAAM,EAAS,gBAAkB,EAAS,gBACtC,IAAQ,IAIZ,GAAM,GAAO,EAAS,OAAQ,EAAS,MAAM,EACzC,IAAQ,IAIZ,GAAM,EAAS,aAAe,EAAS,aACnC,IAAQ,IAIZ,GAAM,EAAS,eAAiB,EAAS,eACrC,IAAQ,GACH,EAGF,GAAO,EAAS,KAAM,EAAS,IAAI,CAC5C,CACA,GAAQ,oCAAsC,GAO9C,YAA6B,EAAK,CAChC,MAAO,MAAK,MAAM,EAAI,QAAQ,iBAAkB,EAAE,CAAC,CACrD,CACA,GAAQ,oBAAsB,GAM9B,YAA0B,EAAY,EAAW,EAAc,CA8B7D,GA7BA,EAAY,GAAa,GAErB,GAEE,GAAW,EAAW,OAAS,KAAO,KAAO,EAAU,KAAO,KAChE,IAAc,KAOhB,EAAY,EAAa,GAiBvB,EAAc,CAChB,GAAI,GAAS,GAAS,CAAY,EAClC,GAAI,CAAC,EACH,KAAM,IAAI,OAAM,kCAAkC,EAEpD,GAAI,EAAO,KAAM,CAEf,GAAI,GAAQ,EAAO,KAAK,YAAY,GAAG,EACvC,AAAI,GAAS,GACX,GAAO,KAAO,EAAO,KAAK,UAAU,EAAG,EAAQ,CAAC,EAEpD,CACA,EAAY,GAAK,GAAY,CAAM,EAAG,CAAS,CACjD,CAEA,MAAO,IAAU,CAAS,CAC5B,CACA,GAAQ,iBAAmB,KCve3B,eAOA,GAAI,IAAO,KACP,GAAM,OAAO,UAAU,eACvB,GAAe,MAAO,MAAQ,YAQlC,aAAoB,CAClB,KAAK,OAAS,CAAC,EACf,KAAK,KAAO,GAAe,GAAI,KAAQ,OAAO,OAAO,IAAI,CAC3D,CAKA,GAAS,UAAY,SAA4B,EAAQ,EAAkB,CAEzE,OADI,GAAM,GAAI,IACL,EAAI,EAAG,EAAM,EAAO,OAAQ,EAAI,EAAK,IAC5C,EAAI,IAAI,EAAO,GAAI,CAAgB,EAErC,MAAO,EACT,EAQA,GAAS,UAAU,KAAO,UAAyB,CACjD,MAAO,IAAe,KAAK,KAAK,KAAO,OAAO,oBAAoB,KAAK,IAAI,EAAE,MAC/E,EAOA,GAAS,UAAU,IAAM,SAAsB,EAAM,EAAkB,CACrE,GAAI,GAAO,GAAe,EAAO,GAAK,YAAY,CAAI,EAClD,EAAc,GAAe,KAAK,IAAI,CAAI,EAAI,GAAI,KAAK,KAAK,KAAM,CAAI,EACtE,EAAM,KAAK,OAAO,OACtB,AAAI,EAAC,GAAe,IAClB,KAAK,OAAO,KAAK,CAAI,EAElB,GACH,CAAI,GACF,KAAK,KAAK,IAAI,EAAM,CAAG,EAEvB,KAAK,KAAK,GAAQ,EAGxB,EAOA,GAAS,UAAU,IAAM,SAAsB,EAAM,CACnD,GAAI,GACF,MAAO,MAAK,KAAK,IAAI,CAAI,EAEzB,GAAI,GAAO,GAAK,YAAY,CAAI,EAChC,MAAO,IAAI,KAAK,KAAK,KAAM,CAAI,CAEnC,EAOA,GAAS,UAAU,QAAU,SAA0B,EAAM,CAC3D,GAAI,GAAc,CAChB,GAAI,GAAM,KAAK,KAAK,IAAI,CAAI,EAC5B,GAAI,GAAO,EACP,MAAO,EAEb,KAAO,CACL,GAAI,GAAO,GAAK,YAAY,CAAI,EAChC,GAAI,GAAI,KAAK,KAAK,KAAM,CAAI,EAC1B,MAAO,MAAK,KAAK,EAErB,CAEA,KAAM,IAAI,OAAM,IAAM,EAAO,sBAAsB,CACrD,EAOA,GAAS,UAAU,GAAK,SAAqB,EAAM,CACjD,GAAI,GAAQ,GAAK,EAAO,KAAK,OAAO,OAClC,MAAO,MAAK,OAAO,GAErB,KAAM,IAAI,OAAM,yBAA2B,CAAI,CACjD,EAOA,GAAS,UAAU,QAAU,UAA4B,CACvD,MAAO,MAAK,OAAO,MAAM,CAC3B,EAEA,GAAQ,SAAW,KCxHnB,eAOA,GAAI,IAAO,KAMX,YAAgC,EAAU,EAAU,CAElD,GAAI,GAAQ,EAAS,cACjB,EAAQ,EAAS,cACjB,EAAU,EAAS,gBACnB,EAAU,EAAS,gBACvB,MAAO,GAAQ,GAAS,GAAS,GAAS,GAAW,GAC9C,GAAK,oCAAoC,EAAU,CAAQ,GAAK,CACzE,CAOA,aAAuB,CACrB,KAAK,OAAS,CAAC,EACf,KAAK,QAAU,GAEf,KAAK,MAAQ,CAAC,cAAe,GAAI,gBAAiB,CAAC,CACrD,CAQA,GAAY,UAAU,gBACpB,SAA6B,EAAW,EAAU,CAChD,KAAK,OAAO,QAAQ,EAAW,CAAQ,CACzC,EAOF,GAAY,UAAU,IAAM,SAAyB,EAAU,CAC7D,AAAI,GAAuB,KAAK,MAAO,CAAQ,EAC7C,MAAK,MAAQ,EACb,KAAK,OAAO,KAAK,CAAQ,GAEzB,MAAK,QAAU,GACf,KAAK,OAAO,KAAK,CAAQ,EAE7B,EAWA,GAAY,UAAU,QAAU,UAA+B,CAC7D,MAAK,MAAK,SACR,MAAK,OAAO,KAAK,GAAK,mCAAmC,EACzD,KAAK,QAAU,IAEV,KAAK,MACd,EAEA,GAAQ,YAAc,KC9EtB,eAOA,GAAI,IAAY,KACZ,GAAO,KACP,GAAW,KAAuB,SAClC,GAAc,KAA0B,YAU5C,YAA4B,EAAO,CACjC,AAAK,GACH,GAAQ,CAAC,GAEX,KAAK,MAAQ,GAAK,OAAO,EAAO,OAAQ,IAAI,EAC5C,KAAK,YAAc,GAAK,OAAO,EAAO,aAAc,IAAI,EACxD,KAAK,gBAAkB,GAAK,OAAO,EAAO,iBAAkB,EAAK,EACjE,KAAK,SAAW,GAAI,IACpB,KAAK,OAAS,GAAI,IAClB,KAAK,UAAY,GAAI,IACrB,KAAK,iBAAmB,IAC1B,CAEA,GAAmB,UAAU,SAAW,EAOxC,GAAmB,cACjB,SAA0C,EAAoB,CAC5D,GAAI,GAAa,EAAmB,WAChC,EAAY,GAAI,IAAmB,CACrC,KAAM,EAAmB,KACzB,WAAY,CACd,CAAC,EACD,SAAmB,YAAY,SAAU,EAAS,CAChD,GAAI,GAAa,CACf,UAAW,CACT,KAAM,EAAQ,cACd,OAAQ,EAAQ,eAClB,CACF,EAEA,AAAI,EAAQ,QAAU,MACpB,GAAW,OAAS,EAAQ,OACxB,GAAc,MAChB,GAAW,OAAS,GAAK,SAAS,EAAY,EAAW,MAAM,GAGjE,EAAW,SAAW,CACpB,KAAM,EAAQ,aACd,OAAQ,EAAQ,cAClB,EAEI,EAAQ,MAAQ,MAClB,GAAW,KAAO,EAAQ,OAI9B,EAAU,WAAW,CAAU,CACjC,CAAC,EACD,EAAmB,QAAQ,QAAQ,SAAU,EAAY,CACvD,GAAI,GAAiB,EACrB,AAAI,IAAe,MACjB,GAAiB,GAAK,SAAS,EAAY,CAAU,GAGlD,EAAU,SAAS,IAAI,CAAc,GACxC,EAAU,SAAS,IAAI,CAAc,EAGvC,GAAI,GAAU,EAAmB,iBAAiB,CAAU,EAC5D,AAAI,GAAW,MACb,EAAU,iBAAiB,EAAY,CAAO,CAElD,CAAC,EACM,CACT,EAYF,GAAmB,UAAU,WAC3B,SAAuC,EAAO,CAC5C,GAAI,GAAY,GAAK,OAAO,EAAO,WAAW,EAC1C,EAAW,GAAK,OAAO,EAAO,WAAY,IAAI,EAC9C,EAAS,GAAK,OAAO,EAAO,SAAU,IAAI,EAC1C,EAAO,GAAK,OAAO,EAAO,OAAQ,IAAI,EAE1C,AAAK,KAAK,iBACR,KAAK,iBAAiB,EAAW,EAAU,EAAQ,CAAI,EAGrD,GAAU,MACZ,GAAS,OAAO,CAAM,EACjB,KAAK,SAAS,IAAI,CAAM,GAC3B,KAAK,SAAS,IAAI,CAAM,GAIxB,GAAQ,MACV,GAAO,OAAO,CAAI,EACb,KAAK,OAAO,IAAI,CAAI,GACvB,KAAK,OAAO,IAAI,CAAI,GAIxB,KAAK,UAAU,IAAI,CACjB,cAAe,EAAU,KACzB,gBAAiB,EAAU,OAC3B,aAAc,GAAY,MAAQ,EAAS,KAC3C,eAAgB,GAAY,MAAQ,EAAS,OAC7C,OAAQ,EACR,KAAM,CACR,CAAC,CACH,EAKF,GAAmB,UAAU,iBAC3B,SAA6C,EAAa,EAAgB,CACxE,GAAI,GAAS,EACb,AAAI,KAAK,aAAe,MACtB,GAAS,GAAK,SAAS,KAAK,YAAa,CAAM,GAGjD,AAAI,GAAkB,KAGf,MAAK,kBACR,MAAK,iBAAmB,OAAO,OAAO,IAAI,GAE5C,KAAK,iBAAiB,GAAK,YAAY,CAAM,GAAK,GACzC,KAAK,kBAGd,OAAO,MAAK,iBAAiB,GAAK,YAAY,CAAM,GAChD,OAAO,KAAK,KAAK,gBAAgB,EAAE,SAAW,GAChD,MAAK,iBAAmB,MAG9B,EAkBF,GAAmB,UAAU,eAC3B,SAA2C,EAAoB,EAAa,EAAgB,CAC1F,GAAI,GAAa,EAEjB,GAAI,GAAe,KAAM,CACvB,GAAI,EAAmB,MAAQ,KAC7B,KAAM,IAAI,OACR,8IAEF,EAEF,EAAa,EAAmB,IAClC,CACA,GAAI,GAAa,KAAK,YAEtB,AAAI,GAAc,MAChB,GAAa,GAAK,SAAS,EAAY,CAAU,GAInD,GAAI,GAAa,GAAI,IACjB,EAAW,GAAI,IAGnB,KAAK,UAAU,gBAAgB,SAAU,EAAS,CAChD,GAAI,EAAQ,SAAW,GAAc,EAAQ,cAAgB,KAAM,CAEjE,GAAI,GAAW,EAAmB,oBAAoB,CACpD,KAAM,EAAQ,aACd,OAAQ,EAAQ,cAClB,CAAC,EACD,AAAI,EAAS,QAAU,MAErB,GAAQ,OAAS,EAAS,OACtB,GAAkB,MACpB,GAAQ,OAAS,GAAK,KAAK,EAAgB,EAAQ,MAAM,GAEvD,GAAc,MAChB,GAAQ,OAAS,GAAK,SAAS,EAAY,EAAQ,MAAM,GAE3D,EAAQ,aAAe,EAAS,KAChC,EAAQ,eAAiB,EAAS,OAC9B,EAAS,MAAQ,MACnB,GAAQ,KAAO,EAAS,MAG9B,CAEA,GAAI,GAAS,EAAQ,OACrB,AAAI,GAAU,MAAQ,CAAC,EAAW,IAAI,CAAM,GAC1C,EAAW,IAAI,CAAM,EAGvB,GAAI,GAAO,EAAQ,KACnB,AAAI,GAAQ,MAAQ,CAAC,EAAS,IAAI,CAAI,GACpC,EAAS,IAAI,CAAI,CAGrB,EAAG,IAAI,EACP,KAAK,SAAW,EAChB,KAAK,OAAS,EAGd,EAAmB,QAAQ,QAAQ,SAAU,EAAY,CACvD,GAAI,GAAU,EAAmB,iBAAiB,CAAU,EAC5D,AAAI,GAAW,MACT,IAAkB,MACpB,GAAa,GAAK,KAAK,EAAgB,CAAU,GAE/C,GAAc,MAChB,GAAa,GAAK,SAAS,EAAY,CAAU,GAEnD,KAAK,iBAAiB,EAAY,CAAO,EAE7C,EAAG,IAAI,CACT,EAaF,GAAmB,UAAU,iBAC3B,SAA4C,EAAY,EAAW,EACvB,EAAO,CAKjD,GAAI,GAAa,MAAO,GAAU,MAAS,UAAY,MAAO,GAAU,QAAW,SAC/E,KAAM,IAAI,OACN,8OAGJ,EAGJ,GAAI,KAAc,QAAU,IAAc,UAAY,IAC/C,EAAW,KAAO,GAAK,EAAW,QAAU,GAC5C,CAAC,GAAa,CAAC,GAAW,CAAC,GAI7B,IAAI,GAAc,QAAU,IAAc,UAAY,IAC/C,GAAa,QAAU,IAAa,UAAY,IAChD,EAAW,KAAO,GAAK,EAAW,QAAU,GAC5C,EAAU,KAAO,GAAK,EAAU,QAAU,GAC1C,EAEV,OAGA,KAAM,IAAI,OAAM,oBAAsB,KAAK,UAAU,CACnD,UAAW,EACX,OAAQ,EACR,SAAU,EACV,KAAM,CACR,CAAC,CAAC,EAEN,EAMF,GAAmB,UAAU,mBAC3B,UAAgD,CAc9C,OAbI,GAA0B,EAC1B,EAAwB,EACxB,EAAyB,EACzB,EAAuB,EACvB,EAAe,EACf,EAAiB,EACjB,EAAS,GACT,EACA,EACA,EACA,EAEA,EAAW,KAAK,UAAU,QAAQ,EAC7B,EAAI,EAAG,EAAM,EAAS,OAAQ,EAAI,EAAK,IAAK,CAInD,GAHA,EAAU,EAAS,GACnB,EAAO,GAEH,EAAQ,gBAAkB,EAE5B,IADA,EAA0B,EACnB,EAAQ,gBAAkB,GAC/B,GAAQ,IACR,YAIE,EAAI,EAAG,CACT,GAAI,CAAC,GAAK,oCAAoC,EAAS,EAAS,EAAI,EAAE,EACpE,SAEF,GAAQ,GACV,CAGF,GAAQ,GAAU,OAAO,EAAQ,gBACJ,CAAuB,EACpD,EAA0B,EAAQ,gBAE9B,EAAQ,QAAU,MACpB,GAAY,KAAK,SAAS,QAAQ,EAAQ,MAAM,EAChD,GAAQ,GAAU,OAAO,EAAY,CAAc,EACnD,EAAiB,EAGjB,GAAQ,GAAU,OAAO,EAAQ,aAAe,EACnB,CAAoB,EACjD,EAAuB,EAAQ,aAAe,EAE9C,GAAQ,GAAU,OAAO,EAAQ,eACJ,CAAsB,EACnD,EAAyB,EAAQ,eAE7B,EAAQ,MAAQ,MAClB,GAAU,KAAK,OAAO,QAAQ,EAAQ,IAAI,EAC1C,GAAQ,GAAU,OAAO,EAAU,CAAY,EAC/C,EAAe,IAInB,GAAU,CACZ,CAEA,MAAO,EACT,EAEF,GAAmB,UAAU,wBAC3B,SAAmD,EAAU,EAAa,CACxE,MAAO,GAAS,IAAI,SAAU,EAAQ,CACpC,GAAI,CAAC,KAAK,iBACR,MAAO,MAET,AAAI,GAAe,MACjB,GAAS,GAAK,SAAS,EAAa,CAAM,GAE5C,GAAI,GAAM,GAAK,YAAY,CAAM,EACjC,MAAO,QAAO,UAAU,eAAe,KAAK,KAAK,iBAAkB,CAAG,EAClE,KAAK,iBAAiB,GACtB,IACN,EAAG,IAAI,CACT,EAKF,GAAmB,UAAU,OAC3B,UAAqC,CACnC,GAAI,GAAM,CACR,QAAS,KAAK,SACd,QAAS,KAAK,SAAS,QAAQ,EAC/B,MAAO,KAAK,OAAO,QAAQ,EAC3B,SAAU,KAAK,mBAAmB,CACpC,EACA,MAAI,MAAK,OAAS,MAChB,GAAI,KAAO,KAAK,OAEd,KAAK,aAAe,MACtB,GAAI,WAAa,KAAK,aAEpB,KAAK,kBACP,GAAI,eAAiB,KAAK,wBAAwB,EAAI,QAAS,EAAI,UAAU,GAGxE,CACT,EAKF,GAAmB,UAAU,SAC3B,UAAuC,CACrC,MAAO,MAAK,UAAU,KAAK,OAAO,CAAC,CACrC,EAEF,GAAQ,mBAAqB,KCxa7B,eAOA,GAAQ,qBAAuB,EAC/B,GAAQ,kBAAoB,EAe5B,YAAyB,EAAM,EAAO,EAAS,EAAW,EAAU,EAAO,CAUzE,GAAI,GAAM,KAAK,MAAO,GAAQ,GAAQ,CAAC,EAAI,EACvC,EAAM,EAAS,EAAS,EAAU,GAAM,EAAI,EAChD,MAAI,KAAQ,EAEH,EAEA,EAAM,EAET,EAAQ,EAAM,EAET,GAAgB,EAAK,EAAO,EAAS,EAAW,EAAU,CAAK,EAKpE,GAAS,GAAQ,kBACZ,EAAQ,EAAU,OAAS,EAAQ,GAEnC,EAKL,EAAM,EAAO,EAER,GAAgB,EAAM,EAAK,EAAS,EAAW,EAAU,CAAK,EAInE,GAAS,GAAQ,kBACZ,EAEA,EAAO,EAAI,GAAK,CAG7B,CAoBA,GAAQ,OAAS,SAAgB,EAAS,EAAW,EAAU,EAAO,CACpE,GAAI,EAAU,SAAW,EACvB,MAAO,GAGT,GAAI,GAAQ,GAAgB,GAAI,EAAU,OAAQ,EAAS,EAC/B,EAAU,GAAS,GAAQ,oBAAoB,EAC3E,GAAI,EAAQ,EACV,MAAO,GAMT,KAAO,EAAQ,GAAK,GACd,EAAS,EAAU,GAAQ,EAAU,EAAQ,GAAI,EAAI,IAAM,GAG/D,EAAE,EAGJ,MAAO,EACT,IC9GA,eA2BA,YAAc,EAAK,EAAG,EAAG,CACvB,GAAI,GAAO,EAAI,GACf,EAAI,GAAK,EAAI,GACb,EAAI,GAAK,CACX,CAUA,YAA0B,EAAK,EAAM,CACnC,MAAO,MAAK,MAAM,EAAO,KAAK,OAAO,EAAK,GAAO,EAAK,CACxD,CAcA,YAAqB,EAAK,EAAY,EAAG,EAAG,CAK1C,GAAI,EAAI,EAAG,CAYT,GAAI,GAAa,GAAiB,EAAG,CAAC,EAClC,EAAI,EAAI,EAEZ,GAAK,EAAK,EAAY,CAAC,EASvB,OARI,GAAQ,EAAI,GAQP,EAAI,EAAG,EAAI,EAAG,IACrB,AAAI,EAAW,EAAI,GAAI,CAAK,GAAK,GAC/B,IAAK,EACL,GAAK,EAAK,EAAG,CAAC,GAIlB,GAAK,EAAK,EAAI,EAAG,CAAC,EAClB,GAAI,GAAI,EAAI,EAIZ,GAAY,EAAK,EAAY,EAAG,EAAI,CAAC,EACrC,GAAY,EAAK,EAAY,EAAI,EAAG,CAAC,CACvC,CACF,CAUA,GAAQ,UAAY,SAAU,EAAK,EAAY,CAC7C,GAAY,EAAK,EAAY,EAAG,EAAI,OAAS,CAAC,CAChD,ICjHA,eAOA,GAAI,GAAO,KACP,GAAe,KACf,GAAW,KAAuB,SAClC,GAAY,KACZ,GAAY,KAAwB,UAExC,YAA2B,EAAY,EAAe,CACpD,GAAI,GAAY,EAChB,MAAI,OAAO,IAAe,UACxB,GAAY,EAAK,oBAAoB,CAAU,GAG1C,EAAU,UAAY,KACzB,GAAI,IAAyB,EAAW,CAAa,EACrD,GAAI,IAAuB,EAAW,CAAa,CACzD,CAEA,GAAkB,cAAgB,SAAS,EAAY,EAAe,CACpE,MAAO,IAAuB,cAAc,EAAY,CAAa,CACvE,EAKA,GAAkB,UAAU,SAAW,EAgCvC,GAAkB,UAAU,oBAAsB,KAClD,OAAO,eAAe,GAAkB,UAAW,qBAAsB,CACvE,aAAc,GACd,WAAY,GACZ,IAAK,UAAY,CACf,MAAK,MAAK,qBACR,KAAK,eAAe,KAAK,UAAW,KAAK,UAAU,EAG9C,KAAK,mBACd,CACF,CAAC,EAED,GAAkB,UAAU,mBAAqB,KACjD,OAAO,eAAe,GAAkB,UAAW,oBAAqB,CACtE,aAAc,GACd,WAAY,GACZ,IAAK,UAAY,CACf,MAAK,MAAK,oBACR,KAAK,eAAe,KAAK,UAAW,KAAK,UAAU,EAG9C,KAAK,kBACd,CACF,CAAC,EAED,GAAkB,UAAU,wBAC1B,SAAkD,EAAM,EAAO,CAC7D,GAAI,GAAI,EAAK,OAAO,CAAK,EACzB,MAAO,KAAM,KAAO,IAAM,GAC5B,EAOF,GAAkB,UAAU,eAC1B,SAAyC,EAAM,EAAa,CAC1D,KAAM,IAAI,OAAM,0CAA0C,CAC5D,EAEF,GAAkB,gBAAkB,EACpC,GAAkB,eAAiB,EAEnC,GAAkB,qBAAuB,EACzC,GAAkB,kBAAoB,EAkBtC,GAAkB,UAAU,YAC1B,SAAuC,EAAW,EAAU,EAAQ,CAClE,GAAI,GAAU,GAAY,KACtB,EAAQ,GAAU,GAAkB,gBAEpC,EACJ,OAAQ,OACH,IAAkB,gBACrB,EAAW,KAAK,mBAChB,UACG,IAAkB,eACrB,EAAW,KAAK,kBAChB,cAEA,KAAM,IAAI,OAAM,6BAA6B,EAG/C,GAAI,GAAa,KAAK,WACtB,EAAS,IAAI,SAAU,EAAS,CAC9B,GAAI,GAAS,EAAQ,SAAW,KAAO,KAAO,KAAK,SAAS,GAAG,EAAQ,MAAM,EAC7E,SAAS,EAAK,iBAAiB,EAAY,EAAQ,KAAK,aAAa,EAC9D,CACL,OAAQ,EACR,cAAe,EAAQ,cACvB,gBAAiB,EAAQ,gBACzB,aAAc,EAAQ,aACtB,eAAgB,EAAQ,eACxB,KAAM,EAAQ,OAAS,KAAO,KAAO,KAAK,OAAO,GAAG,EAAQ,IAAI,CAClE,CACF,EAAG,IAAI,EAAE,QAAQ,EAAW,CAAO,CACrC,EAwBF,GAAkB,UAAU,yBAC1B,SAAoD,EAAO,CACzD,GAAI,GAAO,EAAK,OAAO,EAAO,MAAM,EAMhC,EAAS,CACX,OAAQ,EAAK,OAAO,EAAO,QAAQ,EACnC,aAAc,EACd,eAAgB,EAAK,OAAO,EAAO,SAAU,CAAC,CAChD,EAGA,GADA,EAAO,OAAS,KAAK,iBAAiB,EAAO,MAAM,EAC/C,EAAO,OAAS,EAClB,MAAO,CAAC,EAGV,GAAI,GAAW,CAAC,EAEZ,EAAQ,KAAK,aAAa,EACA,KAAK,kBACL,eACA,iBACA,EAAK,2BACL,GAAa,iBAAiB,EAC5D,GAAI,GAAS,EAAG,CACd,GAAI,GAAU,KAAK,kBAAkB,GAErC,GAAI,EAAM,SAAW,OAOnB,OANI,GAAe,EAAQ,aAMpB,GAAW,EAAQ,eAAiB,GACzC,EAAS,KAAK,CACZ,KAAM,EAAK,OAAO,EAAS,gBAAiB,IAAI,EAChD,OAAQ,EAAK,OAAO,EAAS,kBAAmB,IAAI,EACpD,WAAY,EAAK,OAAO,EAAS,sBAAuB,IAAI,CAC9D,CAAC,EAED,EAAU,KAAK,kBAAkB,EAAE,OASrC,QANI,GAAiB,EAAQ,eAMtB,GACA,EAAQ,eAAiB,GACzB,EAAQ,gBAAkB,GAC/B,EAAS,KAAK,CACZ,KAAM,EAAK,OAAO,EAAS,gBAAiB,IAAI,EAChD,OAAQ,EAAK,OAAO,EAAS,kBAAmB,IAAI,EACpD,WAAY,EAAK,OAAO,EAAS,sBAAuB,IAAI,CAC9D,CAAC,EAED,EAAU,KAAK,kBAAkB,EAAE,EAGzC,CAEA,MAAO,EACT,EAEF,GAAQ,kBAAoB,GAoC5B,YAAgC,EAAY,EAAe,CACzD,GAAI,GAAY,EAChB,AAAI,MAAO,IAAe,UACxB,GAAY,EAAK,oBAAoB,CAAU,GAGjD,GAAI,GAAU,EAAK,OAAO,EAAW,SAAS,EAC1C,EAAU,EAAK,OAAO,EAAW,SAAS,EAG1C,EAAQ,EAAK,OAAO,EAAW,QAAS,CAAC,CAAC,EAC1C,EAAa,EAAK,OAAO,EAAW,aAAc,IAAI,EACtD,EAAiB,EAAK,OAAO,EAAW,iBAAkB,IAAI,EAC9D,EAAW,EAAK,OAAO,EAAW,UAAU,EAC5C,EAAO,EAAK,OAAO,EAAW,OAAQ,IAAI,EAI9C,GAAI,GAAW,KAAK,SAClB,KAAM,IAAI,OAAM,wBAA0B,CAAO,EAGnD,AAAI,GACF,GAAa,EAAK,UAAU,CAAU,GAGxC,EAAU,EACP,IAAI,MAAM,EAIV,IAAI,EAAK,SAAS,EAKlB,IAAI,SAAU,EAAQ,CACrB,MAAO,IAAc,EAAK,WAAW,CAAU,GAAK,EAAK,WAAW,CAAM,EACtE,EAAK,SAAS,EAAY,CAAM,EAChC,CACN,CAAC,EAMH,KAAK,OAAS,GAAS,UAAU,EAAM,IAAI,MAAM,EAAG,EAAI,EACxD,KAAK,SAAW,GAAS,UAAU,EAAS,EAAI,EAEhD,KAAK,iBAAmB,KAAK,SAAS,QAAQ,EAAE,IAAI,SAAU,EAAG,CAC/D,MAAO,GAAK,iBAAiB,EAAY,EAAG,CAAa,CAC3D,CAAC,EAED,KAAK,WAAa,EAClB,KAAK,eAAiB,EACtB,KAAK,UAAY,EACjB,KAAK,cAAgB,EACrB,KAAK,KAAO,CACd,CAEA,GAAuB,UAAY,OAAO,OAAO,GAAkB,SAAS,EAC5E,GAAuB,UAAU,SAAW,GAM5C,GAAuB,UAAU,iBAAmB,SAAS,EAAS,CACpE,GAAI,GAAiB,EAKrB,GAJI,KAAK,YAAc,MACrB,GAAiB,EAAK,SAAS,KAAK,WAAY,CAAc,GAG5D,KAAK,SAAS,IAAI,CAAc,EAClC,MAAO,MAAK,SAAS,QAAQ,CAAc,EAK7C,GAAI,GACJ,IAAK,EAAI,EAAG,EAAI,KAAK,iBAAiB,OAAQ,EAAE,EAC9C,GAAI,KAAK,iBAAiB,IAAM,EAC9B,MAAO,GAIX,MAAO,EACT,EAWA,GAAuB,cACrB,SAAyC,EAAY,EAAe,CAClE,GAAI,GAAM,OAAO,OAAO,GAAuB,SAAS,EAEpD,EAAQ,EAAI,OAAS,GAAS,UAAU,EAAW,OAAO,QAAQ,EAAG,EAAI,EACzE,EAAU,EAAI,SAAW,GAAS,UAAU,EAAW,SAAS,QAAQ,EAAG,EAAI,EACnF,EAAI,WAAa,EAAW,YAC5B,EAAI,eAAiB,EAAW,wBAAwB,EAAI,SAAS,QAAQ,EACrB,EAAI,UAAU,EACtE,EAAI,KAAO,EAAW,MACtB,EAAI,cAAgB,EACpB,EAAI,iBAAmB,EAAI,SAAS,QAAQ,EAAE,IAAI,SAAU,EAAG,CAC7D,MAAO,GAAK,iBAAiB,EAAI,WAAY,EAAG,CAAa,CAC/D,CAAC,EAWD,OAJI,GAAoB,EAAW,UAAU,QAAQ,EAAE,MAAM,EACzD,EAAwB,EAAI,oBAAsB,CAAC,EACnD,EAAuB,EAAI,mBAAqB,CAAC,EAE5C,EAAI,EAAG,EAAS,EAAkB,OAAQ,EAAI,EAAQ,IAAK,CAClE,GAAI,GAAa,EAAkB,GAC/B,EAAc,GAAI,IACtB,EAAY,cAAgB,EAAW,cACvC,EAAY,gBAAkB,EAAW,gBAErC,EAAW,QACb,GAAY,OAAS,EAAQ,QAAQ,EAAW,MAAM,EACtD,EAAY,aAAe,EAAW,aACtC,EAAY,eAAiB,EAAW,eAEpC,EAAW,MACb,GAAY,KAAO,EAAM,QAAQ,EAAW,IAAI,GAGlD,EAAqB,KAAK,CAAW,GAGvC,EAAsB,KAAK,CAAW,CACxC,CAEA,UAAU,EAAI,mBAAoB,EAAK,0BAA0B,EAE1D,CACT,EAKF,GAAuB,UAAU,SAAW,EAK5C,OAAO,eAAe,GAAuB,UAAW,UAAW,CACjE,IAAK,UAAY,CACf,MAAO,MAAK,iBAAiB,MAAM,CACrC,CACF,CAAC,EAKD,aAAmB,CACjB,KAAK,cAAgB,EACrB,KAAK,gBAAkB,EACvB,KAAK,OAAS,KACd,KAAK,aAAe,KACpB,KAAK,eAAiB,KACtB,KAAK,KAAO,IACd,CAOA,GAAuB,UAAU,eAC/B,SAAyC,EAAM,EAAa,CAe1D,OAdI,GAAgB,EAChB,EAA0B,EAC1B,EAAuB,EACvB,EAAyB,EACzB,EAAiB,EACjB,EAAe,EACf,EAAS,EAAK,OACd,EAAQ,EACR,EAAiB,CAAC,EAClB,EAAO,CAAC,EACR,EAAmB,CAAC,EACpB,EAAoB,CAAC,EACrB,EAAS,EAAK,EAAS,EAAK,EAEzB,EAAQ,GACb,GAAI,EAAK,OAAO,CAAK,IAAM,IACzB,IACA,IACA,EAA0B,UAEnB,EAAK,OAAO,CAAK,IAAM,IAC9B,QAEG,CASH,IARA,EAAU,GAAI,IACd,EAAQ,cAAgB,EAOnB,EAAM,EAAO,EAAM,GAClB,MAAK,wBAAwB,EAAM,CAAG,EADZ,IAC9B,CAOF,GAHA,EAAM,EAAK,MAAM,EAAO,CAAG,EAE3B,EAAU,EAAe,GACrB,EACF,GAAS,EAAI,WACR,CAEL,IADA,EAAU,CAAC,EACJ,EAAQ,GACb,GAAU,OAAO,EAAM,EAAO,CAAI,EAClC,EAAQ,EAAK,MACb,EAAQ,EAAK,KACb,EAAQ,KAAK,CAAK,EAGpB,GAAI,EAAQ,SAAW,EACrB,KAAM,IAAI,OAAM,wCAAwC,EAG1D,GAAI,EAAQ,SAAW,EACrB,KAAM,IAAI,OAAM,wCAAwC,EAG1D,EAAe,GAAO,CACxB,CAGA,EAAQ,gBAAkB,EAA0B,EAAQ,GAC5D,EAA0B,EAAQ,gBAE9B,EAAQ,OAAS,GAEnB,GAAQ,OAAS,EAAiB,EAAQ,GAC1C,GAAkB,EAAQ,GAG1B,EAAQ,aAAe,EAAuB,EAAQ,GACtD,EAAuB,EAAQ,aAE/B,EAAQ,cAAgB,EAGxB,EAAQ,eAAiB,EAAyB,EAAQ,GAC1D,EAAyB,EAAQ,eAE7B,EAAQ,OAAS,GAEnB,GAAQ,KAAO,EAAe,EAAQ,GACtC,GAAgB,EAAQ,KAI5B,EAAkB,KAAK,CAAO,EAC1B,MAAO,GAAQ,cAAiB,UAClC,EAAiB,KAAK,CAAO,CAEjC,CAGF,GAAU,EAAmB,EAAK,mCAAmC,EACrE,KAAK,oBAAsB,EAE3B,GAAU,EAAkB,EAAK,0BAA0B,EAC3D,KAAK,mBAAqB,CAC5B,EAMF,GAAuB,UAAU,aAC/B,SAAuC,EAAS,EAAW,EACpB,EAAa,EAAa,EAAO,CAMtE,GAAI,EAAQ,IAAc,EACxB,KAAM,IAAI,WAAU,gDACE,EAAQ,EAAU,EAE1C,GAAI,EAAQ,GAAe,EACzB,KAAM,IAAI,WAAU,kDACE,EAAQ,EAAY,EAG5C,MAAO,IAAa,OAAO,EAAS,EAAW,EAAa,CAAK,CACnE,EAMF,GAAuB,UAAU,mBAC/B,UAAgD,CAC9C,OAAS,GAAQ,EAAG,EAAQ,KAAK,mBAAmB,OAAQ,EAAE,EAAO,CACnE,GAAI,GAAU,KAAK,mBAAmB,GAMtC,GAAI,EAAQ,EAAI,KAAK,mBAAmB,OAAQ,CAC9C,GAAI,GAAc,KAAK,mBAAmB,EAAQ,GAElD,GAAI,EAAQ,gBAAkB,EAAY,cAAe,CACvD,EAAQ,oBAAsB,EAAY,gBAAkB,EAC5D,QACF,CACF,CAGA,EAAQ,oBAAsB,GAChC,CACF,EA0BF,GAAuB,UAAU,oBAC/B,SAA+C,EAAO,CACpD,GAAI,GAAS,CACX,cAAe,EAAK,OAAO,EAAO,MAAM,EACxC,gBAAiB,EAAK,OAAO,EAAO,QAAQ,CAC9C,EAEI,EAAQ,KAAK,aACf,EACA,KAAK,mBACL,gBACA,kBACA,EAAK,oCACL,EAAK,OAAO,EAAO,OAAQ,GAAkB,oBAAoB,CACnE,EAEA,GAAI,GAAS,EAAG,CACd,GAAI,GAAU,KAAK,mBAAmB,GAEtC,GAAI,EAAQ,gBAAkB,EAAO,cAAe,CAClD,GAAI,GAAS,EAAK,OAAO,EAAS,SAAU,IAAI,EAChD,AAAI,IAAW,MACb,GAAS,KAAK,SAAS,GAAG,CAAM,EAChC,EAAS,EAAK,iBAAiB,KAAK,WAAY,EAAQ,KAAK,aAAa,GAE5E,GAAI,GAAO,EAAK,OAAO,EAAS,OAAQ,IAAI,EAC5C,MAAI,KAAS,MACX,GAAO,KAAK,OAAO,GAAG,CAAI,GAErB,CACL,OAAQ,EACR,KAAM,EAAK,OAAO,EAAS,eAAgB,IAAI,EAC/C,OAAQ,EAAK,OAAO,EAAS,iBAAkB,IAAI,EACnD,KAAM,CACR,CACF,CACF,CAEA,MAAO,CACL,OAAQ,KACR,KAAM,KACN,OAAQ,KACR,KAAM,IACR,CACF,EAMF,GAAuB,UAAU,wBAC/B,UAA0D,CACxD,MAAK,MAAK,eAGH,KAAK,eAAe,QAAU,KAAK,SAAS,KAAK,GACtD,CAAC,KAAK,eAAe,KAAK,SAAU,EAAI,CAAE,MAAO,IAAM,IAAM,CAAC,EAHvD,EAIX,EAOF,GAAuB,UAAU,iBAC/B,SAA4C,EAAS,EAAe,CAClE,GAAI,CAAC,KAAK,eACR,MAAO,MAGT,GAAI,GAAQ,KAAK,iBAAiB,CAAO,EACzC,GAAI,GAAS,EACX,MAAO,MAAK,eAAe,GAG7B,GAAI,GAAiB,EACrB,AAAI,KAAK,YAAc,MACrB,GAAiB,EAAK,SAAS,KAAK,WAAY,CAAc,GAGhE,GAAI,GACJ,GAAI,KAAK,YAAc,MACf,GAAM,EAAK,SAAS,KAAK,UAAU,GAAI,CAK7C,GAAI,GAAiB,EAAe,QAAQ,aAAc,EAAE,EAC5D,GAAI,EAAI,QAAU,QACX,KAAK,SAAS,IAAI,CAAc,EACrC,MAAO,MAAK,eAAe,KAAK,SAAS,QAAQ,CAAc,GAGjE,GAAK,EAAC,EAAI,MAAQ,EAAI,MAAQ,MACvB,KAAK,SAAS,IAAI,IAAM,CAAc,EAC3C,MAAO,MAAK,eAAe,KAAK,SAAS,QAAQ,IAAM,CAAc,EAEzE,CAMA,GAAI,EACF,MAAO,MAGP,KAAM,IAAI,OAAM,IAAM,EAAiB,4BAA4B,CAEvE,EAyBF,GAAuB,UAAU,qBAC/B,SAAgD,EAAO,CACrD,GAAI,GAAS,EAAK,OAAO,EAAO,QAAQ,EAExC,GADA,EAAS,KAAK,iBAAiB,CAAM,EACjC,EAAS,EACX,MAAO,CACL,KAAM,KACN,OAAQ,KACR,WAAY,IACd,EAGF,GAAI,GAAS,CACX,OAAQ,EACR,aAAc,EAAK,OAAO,EAAO,MAAM,EACvC,eAAgB,EAAK,OAAO,EAAO,QAAQ,CAC7C,EAEI,EAAQ,KAAK,aACf,EACA,KAAK,kBACL,eACA,iBACA,EAAK,2BACL,EAAK,OAAO,EAAO,OAAQ,GAAkB,oBAAoB,CACnE,EAEA,GAAI,GAAS,EAAG,CACd,GAAI,GAAU,KAAK,kBAAkB,GAErC,GAAI,EAAQ,SAAW,EAAO,OAC5B,MAAO,CACL,KAAM,EAAK,OAAO,EAAS,gBAAiB,IAAI,EAChD,OAAQ,EAAK,OAAO,EAAS,kBAAmB,IAAI,EACpD,WAAY,EAAK,OAAO,EAAS,sBAAuB,IAAI,CAC9D,CAEJ,CAEA,MAAO,CACL,KAAM,KACN,OAAQ,KACR,WAAY,IACd,CACF,EAEF,GAAQ,uBAAyB,GAmDjC,YAAkC,EAAY,EAAe,CAC3D,GAAI,GAAY,EAChB,AAAI,MAAO,IAAe,UACxB,GAAY,EAAK,oBAAoB,CAAU,GAGjD,GAAI,GAAU,EAAK,OAAO,EAAW,SAAS,EAC1C,EAAW,EAAK,OAAO,EAAW,UAAU,EAEhD,GAAI,GAAW,KAAK,SAClB,KAAM,IAAI,OAAM,wBAA0B,CAAO,EAGnD,KAAK,SAAW,GAAI,IACpB,KAAK,OAAS,GAAI,IAElB,GAAI,GAAa,CACf,KAAM,GACN,OAAQ,CACV,EACA,KAAK,UAAY,EAAS,IAAI,SAAU,EAAG,CACzC,GAAI,EAAE,IAGJ,KAAM,IAAI,OAAM,oDAAoD,EAEtE,GAAI,GAAS,EAAK,OAAO,EAAG,QAAQ,EAChC,EAAa,EAAK,OAAO,EAAQ,MAAM,EACvC,EAAe,EAAK,OAAO,EAAQ,QAAQ,EAE/C,GAAI,EAAa,EAAW,MACvB,IAAe,EAAW,MAAQ,EAAe,EAAW,OAC/D,KAAM,IAAI,OAAM,sDAAsD,EAExE,SAAa,EAEN,CACL,gBAAiB,CAGf,cAAe,EAAa,EAC5B,gBAAiB,EAAe,CAClC,EACA,SAAU,GAAI,IAAkB,EAAK,OAAO,EAAG,KAAK,EAAG,CAAa,CACtE,CACF,CAAC,CACH,CAEA,GAAyB,UAAY,OAAO,OAAO,GAAkB,SAAS,EAC9E,GAAyB,UAAU,YAAc,GAKjD,GAAyB,UAAU,SAAW,EAK9C,OAAO,eAAe,GAAyB,UAAW,UAAW,CACnE,IAAK,UAAY,CAEf,OADI,GAAU,CAAC,EACN,EAAI,EAAG,EAAI,KAAK,UAAU,OAAQ,IACzC,OAAS,GAAI,EAAG,EAAI,KAAK,UAAU,GAAG,SAAS,QAAQ,OAAQ,IAC7D,EAAQ,KAAK,KAAK,UAAU,GAAG,SAAS,QAAQ,EAAE,EAGtD,MAAO,EACT,CACF,CAAC,EAqBD,GAAyB,UAAU,oBACjC,SAAsD,EAAO,CAC3D,GAAI,GAAS,CACX,cAAe,EAAK,OAAO,EAAO,MAAM,EACxC,gBAAiB,EAAK,OAAO,EAAO,QAAQ,CAC9C,EAII,EAAe,GAAa,OAAO,EAAQ,KAAK,UAClD,SAAS,EAAQ,EAAS,CACxB,GAAI,GAAM,EAAO,cAAgB,EAAQ,gBAAgB,cACzD,MAAI,IAII,EAAO,gBACP,EAAQ,gBAAgB,eAClC,CAAC,EACC,EAAU,KAAK,UAAU,GAE7B,MAAK,GASE,EAAQ,SAAS,oBAAoB,CAC1C,KAAM,EAAO,cACV,GAAQ,gBAAgB,cAAgB,GAC3C,OAAQ,EAAO,gBACZ,GAAQ,gBAAgB,gBAAkB,EAAO,cAC/C,EAAQ,gBAAgB,gBAAkB,EAC1C,GACL,KAAM,EAAM,IACd,CAAC,EAhBQ,CACL,OAAQ,KACR,KAAM,KACN,OAAQ,KACR,KAAM,IACR,CAYJ,EAMF,GAAyB,UAAU,wBACjC,UAA4D,CAC1D,MAAO,MAAK,UAAU,MAAM,SAAU,EAAG,CACvC,MAAO,GAAE,SAAS,wBAAwB,CAC5C,CAAC,CACH,EAOF,GAAyB,UAAU,iBACjC,SAAmD,EAAS,EAAe,CACzE,OAAS,GAAI,EAAG,EAAI,KAAK,UAAU,OAAQ,IAAK,CAC9C,GAAI,GAAU,KAAK,UAAU,GAEzB,EAAU,EAAQ,SAAS,iBAAiB,EAAS,EAAI,EAC7D,GAAI,EACF,MAAO,EAEX,CACA,GAAI,EACF,MAAO,MAGP,KAAM,IAAI,OAAM,IAAM,EAAU,4BAA4B,CAEhE,EAoBF,GAAyB,UAAU,qBACjC,SAAuD,EAAO,CAC5D,OAAS,GAAI,EAAG,EAAI,KAAK,UAAU,OAAQ,IAAK,CAC9C,GAAI,GAAU,KAAK,UAAU,GAI7B,GAAI,EAAQ,SAAS,iBAAiB,EAAK,OAAO,EAAO,QAAQ,CAAC,IAAM,GAGxE,IAAI,GAAoB,EAAQ,SAAS,qBAAqB,CAAK,EACnE,GAAI,EAAmB,CACrB,GAAI,GAAM,CACR,KAAM,EAAkB,KACrB,GAAQ,gBAAgB,cAAgB,GAC3C,OAAQ,EAAkB,OACvB,GAAQ,gBAAgB,gBAAkB,EAAkB,KAC1D,EAAQ,gBAAgB,gBAAkB,EAC1C,EACP,EACA,MAAO,EACT,EACF,CAEA,MAAO,CACL,KAAM,KACN,OAAQ,IACV,CACF,EAOF,GAAyB,UAAU,eACjC,SAAgD,EAAM,EAAa,CACjE,KAAK,oBAAsB,CAAC,EAC5B,KAAK,mBAAqB,CAAC,EAC3B,OAAS,GAAI,EAAG,EAAI,KAAK,UAAU,OAAQ,IAGzC,OAFI,GAAU,KAAK,UAAU,GACzB,EAAkB,EAAQ,SAAS,mBAC9B,EAAI,EAAG,EAAI,EAAgB,OAAQ,IAAK,CAC/C,GAAI,GAAU,EAAgB,GAE1B,EAAS,EAAQ,SAAS,SAAS,GAAG,EAAQ,MAAM,EACxD,EAAS,EAAK,iBAAiB,EAAQ,SAAS,WAAY,EAAQ,KAAK,aAAa,EACtF,KAAK,SAAS,IAAI,CAAM,EACxB,EAAS,KAAK,SAAS,QAAQ,CAAM,EAErC,GAAI,GAAO,KACX,AAAI,EAAQ,MACV,GAAO,EAAQ,SAAS,OAAO,GAAG,EAAQ,IAAI,EAC9C,KAAK,OAAO,IAAI,CAAI,EACpB,EAAO,KAAK,OAAO,QAAQ,CAAI,GAOjC,GAAI,GAAkB,CACpB,OAAQ,EACR,cAAe,EAAQ,cACpB,GAAQ,gBAAgB,cAAgB,GAC3C,gBAAiB,EAAQ,gBACtB,GAAQ,gBAAgB,gBAAkB,EAAQ,cACjD,EAAQ,gBAAgB,gBAAkB,EAC1C,GACJ,aAAc,EAAQ,aACtB,eAAgB,EAAQ,eACxB,KAAM,CACR,EAEA,KAAK,oBAAoB,KAAK,CAAe,EACzC,MAAO,GAAgB,cAAiB,UAC1C,KAAK,mBAAmB,KAAK,CAAe,CAEhD,CAGF,GAAU,KAAK,oBAAqB,EAAK,mCAAmC,EAC5E,GAAU,KAAK,mBAAoB,EAAK,0BAA0B,CACpE,EAEF,GAAQ,yBAA2B,KCxnCnC,eAOA,GAAI,IAAqB,KAAkC,mBACvD,GAAO,KAIP,GAAgB,UAGhB,GAAe,GAKf,GAAe,qBAcnB,YAAoB,EAAO,EAAS,EAAS,EAAS,EAAO,CAC3D,KAAK,SAAW,CAAC,EACjB,KAAK,eAAiB,CAAC,EACvB,KAAK,KAAO,GAAS,KAAO,KAAO,EACnC,KAAK,OAAS,GAAW,KAAO,KAAO,EACvC,KAAK,OAAS,GAAW,KAAO,KAAO,EACvC,KAAK,KAAO,GAAS,KAAO,KAAO,EACnC,KAAK,IAAgB,GACjB,GAAW,MAAM,KAAK,IAAI,CAAO,CACvC,CAUA,GAAW,wBACT,SAA4C,EAAgB,EAAoB,EAAe,CAG7F,GAAI,GAAO,GAAI,IAMX,EAAiB,EAAe,MAAM,EAAa,EACnD,EAAsB,EACtB,EAAgB,UAAW,CAC7B,GAAI,GAAe,EAAY,EAE3B,EAAU,EAAY,GAAK,GAC/B,MAAO,GAAe,EAEtB,YAAuB,CACrB,MAAO,GAAsB,EAAe,OACxC,EAAe,KAAyB,MAC9C,CACF,EAGI,EAAoB,EAAG,EAAsB,EAK7C,EAAc,KAElB,SAAmB,YAAY,SAAU,EAAS,CAChD,GAAI,IAAgB,KAGlB,GAAI,EAAoB,EAAQ,cAE9B,EAAmB,EAAa,EAAc,CAAC,EAC/C,IACA,EAAsB,MAEjB,CAIL,GAAI,GAAW,EAAe,IAAwB,GAClD,EAAO,EAAS,OAAO,EAAG,EAAQ,gBACR,CAAmB,EACjD,EAAe,GAAuB,EAAS,OAAO,EAAQ,gBAC1B,CAAmB,EACvD,EAAsB,EAAQ,gBAC9B,EAAmB,EAAa,CAAI,EAEpC,EAAc,EACd,MACF,CAKF,KAAO,EAAoB,EAAQ,eACjC,EAAK,IAAI,EAAc,CAAC,EACxB,IAEF,GAAI,EAAsB,EAAQ,gBAAiB,CACjD,GAAI,GAAW,EAAe,IAAwB,GACtD,EAAK,IAAI,EAAS,OAAO,EAAG,EAAQ,eAAe,CAAC,EACpD,EAAe,GAAuB,EAAS,OAAO,EAAQ,eAAe,EAC7E,EAAsB,EAAQ,eAChC,CACA,EAAc,CAChB,EAAG,IAAI,EAEH,EAAsB,EAAe,QACnC,IAEF,EAAmB,EAAa,EAAc,CAAC,EAGjD,EAAK,IAAI,EAAe,OAAO,CAAmB,EAAE,KAAK,EAAE,CAAC,GAI9D,EAAmB,QAAQ,QAAQ,SAAU,EAAY,CACvD,GAAI,GAAU,EAAmB,iBAAiB,CAAU,EAC5D,AAAI,GAAW,MACT,IAAiB,MACnB,GAAa,GAAK,KAAK,EAAe,CAAU,GAElD,EAAK,iBAAiB,EAAY,CAAO,EAE7C,CAAC,EAEM,EAEP,WAA4B,EAAS,EAAM,CACzC,GAAI,IAAY,MAAQ,EAAQ,SAAW,OACzC,EAAK,IAAI,CAAI,MACR,CACL,GAAI,GAAS,EACT,GAAK,KAAK,EAAe,EAAQ,MAAM,EACvC,EAAQ,OACZ,EAAK,IAAI,GAAI,IAAW,EAAQ,aACR,EAAQ,eACR,EACA,EACA,EAAQ,IAAI,CAAC,CACvC,CACF,CACF,EAQF,GAAW,UAAU,IAAM,SAAwB,EAAQ,CACzD,GAAI,MAAM,QAAQ,CAAM,EACtB,EAAO,QAAQ,SAAU,EAAO,CAC9B,KAAK,IAAI,CAAK,CAChB,EAAG,IAAI,UAEA,EAAO,KAAiB,MAAO,IAAW,SACjD,AAAI,GACF,KAAK,SAAS,KAAK,CAAM,MAI3B,MAAM,IAAI,WACR,8EAAgF,CAClF,EAEF,MAAO,KACT,EAQA,GAAW,UAAU,QAAU,SAA4B,EAAQ,CACjE,GAAI,MAAM,QAAQ,CAAM,EACtB,OAAS,GAAI,EAAO,OAAO,EAAG,GAAK,EAAG,IACpC,KAAK,QAAQ,EAAO,EAAE,UAGjB,EAAO,KAAiB,MAAO,IAAW,SACjD,KAAK,SAAS,QAAQ,CAAM,MAG5B,MAAM,IAAI,WACR,8EAAgF,CAClF,EAEF,MAAO,KACT,EASA,GAAW,UAAU,KAAO,SAAyB,EAAK,CAExD,OADI,GACK,EAAI,EAAG,EAAM,KAAK,SAAS,OAAQ,EAAI,EAAK,IACnD,EAAQ,KAAK,SAAS,GACtB,AAAI,EAAM,IACR,EAAM,KAAK,CAAG,EAGV,IAAU,IACZ,EAAI,EAAO,CAAE,OAAQ,KAAK,OACb,KAAM,KAAK,KACX,OAAQ,KAAK,OACb,KAAM,KAAK,IAAK,CAAC,CAItC,EAQA,GAAW,UAAU,KAAO,SAAyB,EAAM,CACzD,GAAI,GACA,EACA,EAAM,KAAK,SAAS,OACxB,GAAI,EAAM,EAAG,CAEX,IADA,EAAc,CAAC,EACV,EAAI,EAAG,EAAI,EAAI,EAAG,IACrB,EAAY,KAAK,KAAK,SAAS,EAAE,EACjC,EAAY,KAAK,CAAI,EAEvB,EAAY,KAAK,KAAK,SAAS,EAAE,EACjC,KAAK,SAAW,CAClB,CACA,MAAO,KACT,EASA,GAAW,UAAU,aAAe,SAAiC,EAAU,EAAc,CAC3F,GAAI,GAAY,KAAK,SAAS,KAAK,SAAS,OAAS,GACrD,MAAI,GAAU,IACZ,EAAU,aAAa,EAAU,CAAY,EAE1C,AAAI,MAAO,IAAc,SAC5B,KAAK,SAAS,KAAK,SAAS,OAAS,GAAK,EAAU,QAAQ,EAAU,CAAY,EAGlF,KAAK,SAAS,KAAK,GAAG,QAAQ,EAAU,CAAY,CAAC,EAEhD,IACT,EASA,GAAW,UAAU,iBACnB,SAAqC,EAAa,EAAgB,CAChE,KAAK,eAAe,GAAK,YAAY,CAAW,GAAK,CACvD,EAQF,GAAW,UAAU,mBACnB,SAAuC,EAAK,CAC1C,OAAS,GAAI,EAAG,EAAM,KAAK,SAAS,OAAQ,EAAI,EAAK,IACnD,AAAI,KAAK,SAAS,GAAG,KACnB,KAAK,SAAS,GAAG,mBAAmB,CAAG,EAK3C,OADI,GAAU,OAAO,KAAK,KAAK,cAAc,EACpC,EAAI,EAAG,EAAM,EAAQ,OAAQ,EAAI,EAAK,IAC7C,EAAI,GAAK,cAAc,EAAQ,EAAE,EAAG,KAAK,eAAe,EAAQ,GAAG,CAEvE,EAMF,GAAW,UAAU,SAAW,UAA+B,CAC7D,GAAI,GAAM,GACV,YAAK,KAAK,SAAU,EAAO,CACzB,GAAO,CACT,CAAC,EACM,CACT,EAMA,GAAW,UAAU,sBAAwB,SAA0C,EAAO,CAC5F,GAAI,GAAY,CACd,KAAM,GACN,KAAM,EACN,OAAQ,CACV,EACI,EAAM,GAAI,IAAmB,CAAK,EAClC,EAAsB,GACtB,EAAqB,KACrB,EAAmB,KACnB,EAAqB,KACrB,EAAmB,KACvB,YAAK,KAAK,SAAU,EAAO,EAAU,CACnC,EAAU,MAAQ,EAClB,AAAI,EAAS,SAAW,MACjB,EAAS,OAAS,MAClB,EAAS,SAAW,KACtB,MAAuB,EAAS,QAC7B,IAAqB,EAAS,MAC9B,IAAuB,EAAS,QAChC,IAAqB,EAAS,OAClC,EAAI,WAAW,CACb,OAAQ,EAAS,OACjB,SAAU,CACR,KAAM,EAAS,KACf,OAAQ,EAAS,MACnB,EACA,UAAW,CACT,KAAM,EAAU,KAChB,OAAQ,EAAU,MACpB,EACA,KAAM,EAAS,IACjB,CAAC,EAEH,EAAqB,EAAS,OAC9B,EAAmB,EAAS,KAC5B,EAAqB,EAAS,OAC9B,EAAmB,EAAS,KAC5B,EAAsB,IACb,GACT,GAAI,WAAW,CACb,UAAW,CACT,KAAM,EAAU,KAChB,OAAQ,EAAU,MACpB,CACF,CAAC,EACD,EAAqB,KACrB,EAAsB,IAExB,OAAS,GAAM,EAAG,EAAS,EAAM,OAAQ,EAAM,EAAQ,IACrD,AAAI,EAAM,WAAW,CAAG,IAAM,GAC5B,GAAU,OACV,EAAU,OAAS,EAEnB,AAAI,EAAM,IAAM,EACd,GAAqB,KACrB,EAAsB,IACb,GACT,EAAI,WAAW,CACb,OAAQ,EAAS,OACjB,SAAU,CACR,KAAM,EAAS,KACf,OAAQ,EAAS,MACnB,EACA,UAAW,CACT,KAAM,EAAU,KAChB,OAAQ,EAAU,MACpB,EACA,KAAM,EAAS,IACjB,CAAC,GAGH,EAAU,QAGhB,CAAC,EACD,KAAK,mBAAmB,SAAU,EAAY,EAAe,CAC3D,EAAI,iBAAiB,EAAY,CAAa,CAChD,CAAC,EAEM,CAAE,KAAM,EAAU,KAAM,IAAK,CAAI,CAC1C,EAEA,GAAQ,WAAa,KC5ZrB,eAKA,GAAQ,mBAAqB,KAAsC,mBACnE,GAAQ,kBAAoB,KAAqC,kBACjE,GAAQ,WAAa,KAA6B,aCPlD,oBAAC,UAAU,EAAQ,EAAS,CAC3B,MAAO,KAAY,UAAY,MAAO,KAAW,YAAc,EAAQ,EAAO,EAC9E,MAAO,SAAW,YAAc,OAAO,IAAM,OAAO,CAAC,SAAS,EAAG,CAAO,EACvE,GAAS,GAAU,KAAM,EAAQ,EAAO,aAAe,CAAC,CAAC,EAC3D,GAAE,GAAO,SAAU,EAAS,CAAE,aAW7B,MAAM,CAAW,CAChB,aAAc,CAEb,KAAK,YAAc,GAGnB,KAAK,cAAgB,GAGrB,KAAK,YAAc,KAGnB,KAAK,QAAU,CACd,KAAM,IAAO,KAAK,YAAc,GAChC,OAAQ,IAAO,KAAK,cAAgB,GACpC,QAAS,AAAC,GAAU,KAAK,YAAc,CACxC,CACD,CASA,QAAQ,EAAQ,EAAM,EAAO,EAAM,CAClC,AAAI,GACH,CAAI,IAAU,KACb,EAAO,GAAM,GAAS,EAEtB,EAAO,GAAQ,EAGlB,CAQA,OAAO,EAAQ,EAAM,EAAO,CAC3B,AAAI,GACH,CAAI,IAAU,KACb,EAAO,GAAM,OAAO,EAAO,CAAC,EAE5B,MAAO,GAAO,GAGjB,CACD,CAeA,MAAM,SAAmB,EAAW,CAMnC,YAAY,EAAO,EAAO,CACzB,MAAM,EAGN,KAAK,MAAQ,EAGb,KAAK,MAAQ,CACd,CAUA,MAAM,EAAM,EAAQ,EAAM,EAAO,CAChC,GAAI,EAAM,CACT,GAAI,KAAK,MAAO,CACf,GAAM,GAAe,KAAK,YACpB,EAAiB,KAAK,cACtB,EAAe,KAAK,YAC1B,KAAK,YAAc,GACnB,KAAK,cAAgB,GACrB,KAAK,YAAc,KAEnB,KAAK,MAAM,KAAK,KAAK,QAAS,EAAM,EAAQ,EAAM,CAAK,EAEnD,KAAK,aACR,GAAO,KAAK,YACZ,KAAK,QAAQ,EAAQ,EAAM,EAAO,CAAI,GAGnC,KAAK,eACR,KAAK,OAAO,EAAQ,EAAM,CAAK,EAGhC,GAAM,GAAU,KAAK,YACf,EAAU,KAAK,cAMrB,GAJA,KAAK,YAAc,EACnB,KAAK,cAAgB,EACrB,KAAK,YAAc,EAEf,EAAS,MAAO,GACpB,GAAI,EAAS,MAAO,KACrB,CAEA,OAAW,KAAO,GAAM,CACvB,GAAM,GAAQ,EAAK,GAEnB,GAAI,MAAO,IAAU,SAEd,GAAI,MAAM,QAAQ,CAAK,EAC7B,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,GAAK,EACtC,AAAI,EAAM,KAAO,MAAQ,MAAO,GAAM,GAAG,MAAS,UAC5C,MAAK,MAAM,EAAM,GAAI,EAAM,EAAK,CAAC,GAErC,SAIG,AAAI,KAAU,MAAQ,MAAO,GAAM,MAAS,UAClD,KAAK,MAAM,EAAO,EAAM,EAAK,IAAI,CAEnC,CAEA,GAAI,KAAK,MAAO,CACf,GAAM,GAAe,KAAK,YACpB,EAAiB,KAAK,cAC5B,KAAK,YAAc,KACnB,KAAK,cAAgB,GAErB,KAAK,MAAM,KAAK,KAAK,QAAS,EAAM,EAAQ,EAAM,CAAK,EAEnD,KAAK,aACR,GAAO,KAAK,YACZ,KAAK,QAAQ,EAAQ,EAAM,EAAO,CAAI,GAGnC,KAAK,eACR,KAAK,OAAO,EAAQ,EAAM,CAAK,EAGhC,GAAM,GAAU,KAAK,cAKrB,GAHA,KAAK,YAAc,EACnB,KAAK,cAAgB,EAEjB,EAAS,MAAO,KACrB,CACD,CAEA,MAAO,EACR,CACD,CAeA,MAAM,SAAoB,EAAW,CAMpC,YAAY,EAAO,EAAO,CACzB,MAAM,EAGN,KAAK,MAAQ,EAGb,KAAK,MAAQ,CACd,MAUM,OAAM,EAAM,EAAQ,EAAM,EAAO,CACtC,GAAI,EAAM,CACT,GAAI,KAAK,MAAO,CACf,GAAM,GAAe,KAAK,YACpB,EAAiB,KAAK,cACtB,EAAe,KAAK,YAC1B,KAAK,YAAc,GACnB,KAAK,cAAgB,GACrB,KAAK,YAAc,KAEnB,KAAM,MAAK,MAAM,KAAK,KAAK,QAAS,EAAM,EAAQ,EAAM,CAAK,EAEzD,KAAK,aACR,GAAO,KAAK,YACZ,KAAK,QAAQ,EAAQ,EAAM,EAAO,CAAI,GAGnC,KAAK,eACR,KAAK,OAAO,EAAQ,EAAM,CAAK,EAGhC,GAAM,GAAU,KAAK,YACf,EAAU,KAAK,cAMrB,GAJA,KAAK,YAAc,EACnB,KAAK,cAAgB,EACrB,KAAK,YAAc,EAEf,EAAS,MAAO,GACpB,GAAI,EAAS,MAAO,KACrB,CAEA,OAAW,KAAO,GAAM,CACvB,GAAM,GAAQ,EAAK,GAEnB,GAAI,MAAO,IAAU,SAEd,GAAI,MAAM,QAAQ,CAAK,EAC7B,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,GAAK,EACtC,AAAI,EAAM,KAAO,MAAQ,MAAO,GAAM,GAAG,MAAS,UAC3C,MAAM,MAAK,MAAM,EAAM,GAAI,EAAM,EAAK,CAAC,GAE5C,SAIG,AAAI,KAAU,MAAQ,MAAO,GAAM,MAAS,UAClD,KAAM,MAAK,MAAM,EAAO,EAAM,EAAK,IAAI,CAEzC,CAEA,GAAI,KAAK,MAAO,CACf,GAAM,GAAe,KAAK,YACpB,EAAiB,KAAK,cAC5B,KAAK,YAAc,KACnB,KAAK,cAAgB,GAErB,KAAM,MAAK,MAAM,KAAK,KAAK,QAAS,EAAM,EAAQ,EAAM,CAAK,EAEzD,KAAK,aACR,GAAO,KAAK,YACZ,KAAK,QAAQ,EAAQ,EAAM,EAAO,CAAI,GAGnC,KAAK,eACR,KAAK,OAAO,EAAQ,EAAM,CAAK,EAGhC,GAAM,GAAU,KAAK,cAKrB,GAHA,KAAK,YAAc,EACnB,KAAK,cAAgB,EAEjB,EAAS,MAAO,KACrB,CACD,CAEA,MAAO,EACR,CACD,CAiBA,WAAc,EAAK,CAAE,QAAO,SAAS,CAEpC,MAAO,AADU,IAAI,GAAW,EAAO,CAAK,EAC5B,MAAM,EAAK,IAAI,CAChC,CAWA,iBAAyB,EAAK,CAAE,QAAO,SAAS,CAE/C,MAAO,MAAM,AADI,IAAI,GAAY,EAAO,CAAK,EACvB,MAAM,EAAK,IAAI,CACtC,CAEA,EAAQ,UAAY,EACpB,EAAQ,KAAO,EAEf,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,CAE7D,CAAE,ICvVF,2BAEA,OAAO,eAAe,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAE5D,GAAI,GAAS,KACT,GAAS,KACT,GAAY,KACZ,GAAe,KAEnB,YAAwB,EAAO,CAC3B,KAAM,EACV,CACA,YAAuB,EAAK,CAC5B,CACA,YAA6B,EAAM,EAAK,EAAU,EAAmB,CACjE,GAAM,GAAO,IAAY,IAAe,GAAS,IAAqB,IAEhE,EAAQ,GAAI,aAAY,OAAO,CAAG,CAAC,EACzC,SAAM,KAAO,EACb,EAAM,IAAM,EACL,CACX,CACA,GAAM,IAAgB,EAEjB,GAAqD,oBACrD,GAA2C,iDAC3C,GAAyC,wBACzC,GAA6C,mCAC7C,GAAmD,wBACnD,GAAyC,0BACzC,GAAkC,oCAClC,GAAoC,8BACpC,GAA0D,6BAC1D,GAAgC,0BAChC,IAAiD,+BACjD,IAAiD,+BACjD,IAA0D,8CAC1D,IAA8C,iCAC9C,IAA2C,8BAC3C,IAA4D,4BAC5D,IAAqC,iCACrC,IAA6D,yEAC7D,IAAuE,4GACvE,IAAmE,yCACnE,IAAmE,wCACnE,IAAgD,8BAChD,IAAgD,wBAEhD,IAAwC,oBACxC,IAAwC,+BACxC,IAAkD,yCAClD,IAA+D,yHAE/D,IAA+C,sCAE/C,IAA2C,yCAC3C,IAAsC,4CACtC,IAA8C,uDAC9C,IAA4C,gCAC5C,IAAmD,iCACnD,IAAqD,gEACrD,IAA6C,iCAC7C,IAA2C,+BAC3C,IAAmE,iDACnE,IAAgD,wKAGhD,IAAoD,gCACpD,IAAgE,uHAEhE,IAAyC,6DACzC,IAA8C,kCAC9C,IAAqD,+DACrD,IAAkD,4FAClD,IAA2C,yCAC3C,IAAoD,oDAEpD,IAAgD,0EAChD,IAAkD,8DAClD,IAAoD,4FACpD,IAA+C,sDAE/C,IAAuC,EAC5C,EAEM,GAAW,OAAO,EAAE,EACpB,GAAW,OAAO,EAAE,EACpB,GAAW,OAAO,EAAE,EACpB,GAAa,OAAO,EAAE,EACtB,GAAkB,OAAO,EAAE,EAC3B,GAAa,OAAO,EAAE,EACtB,GAAe,OAAO,EAAE,EACxB,GAAuB,OAAO,EAAE,EAChC,GAAe,OAAO,EAAE,EACxB,GAAuB,OAAO,EAAE,EAChC,GAAiB,OAAO,EAAE,EAC1B,GAAc,OAAO,EAAE,EACvB,GAAgB,OAAO,EAAE,EACzB,GAAoB,OAAO,EAAE,EAC7B,GAA4B,OAAO,EAAE,EACrC,GAAoB,OAAO,EAAE,EAC7B,GAAiB,OAAO,EAAE,EAC1B,GAAkB,OAAO,EAAE,EAC3B,GAAc,OAAO,EAAE,EACvB,GAAc,OAAO,EAAE,EACvB,GAAe,OAAO,EAAE,EACxB,GAAoB,OAAO,EAAE,EAC7B,GAAc,OAAO,EAAE,EACvB,GAAkB,OAAO,EAAE,EAC3B,GAAkB,OAAO,EAAE,EAC3B,GAAkB,OAAO,EAAE,EAC3B,GAAuB,OAAO,EAAE,EAChC,GAAc,OAAO,EAAE,EACvB,GAAW,OAAO,EAAE,EACpB,GAAa,OAAO,EAAE,EACtB,GAAiB,OAAO,EAAE,EAC1B,GAAqB,OAAO,EAAE,EAC9B,GAAgB,OAAO,EAAE,EACzB,GAAe,OAAO,EAAE,EACxB,GAAW,OAAO,EAAE,EACpB,GAAQ,OAAO,EAAE,EACjB,GAAS,OAAO,EAAE,EAClB,GAAY,OAAO,EAAE,EACrB,GAAe,OAAO,EAAE,EAIxB,GAAgB,EACjB,IAAW,YACX,IAAW,YACX,IAAW,YACX,IAAa,aACb,IAAkB,kBAClB,IAAa,aACb,IAAe,eACf,IAAuB,sBACvB,IAAe,eACf,IAAuB,sBACvB,IAAiB,sBACjB,IAAc,mBACd,IAAgB,qBAChB,IAAoB,oBACpB,IAA4B,2BAC5B,IAAoB,oBACpB,IAAiB,iBACjB,IAAkB,kBAClB,IAAc,cACd,IAAc,cACd,IAAe,eACf,IAAoB,mBACpB,IAAc,cACd,IAAkB,kBAClB,IAAkB,kBAClB,IAAkB,kBAClB,IAAuB,sBACvB,IAAc,cACd,IAAW,YACX,IAAa,cACb,IAAiB,gBACjB,IAAqB,oBACrB,IAAgB,eAChB,IAAe,cACf,IAAW,WACX,IAAQ,SACR,IAAS,SACT,IAAY,YACZ,IAAe,YACpB,EACA,YAAgC,EAAS,CACrC,OAAO,sBAAsB,CAAO,EAAE,QAAQ,GAAK,CAC/C,GAAc,GAAK,EAAQ,EAC/B,CAAC,CACL,CAMA,GAAM,IAAU,CACZ,OAAQ,GACR,MAAO,CAAE,KAAM,EAAG,OAAQ,EAAG,OAAQ,CAAE,EACvC,IAAK,CAAE,KAAM,EAAG,OAAQ,EAAG,OAAQ,CAAE,CACzC,EACA,YAAoB,EAAU,EAAM,GAAS,CACzC,MAAO,CACH,KAAM,EACN,WACA,QAAS,CAAC,EACV,WAAY,CAAC,EACb,WAAY,CAAC,EACb,OAAQ,CAAC,EACT,QAAS,CAAC,EACV,OAAQ,EACR,MAAO,EACP,YAAa,OACb,KACJ,CACJ,CACA,YAAyB,EAAS,EAAK,EAAO,EAAU,EAAW,EAAc,EAAY,EAAU,GAAO,EAAkB,GAAO,EAAc,GAAO,EAAM,GAAS,CACvK,MAAI,IACA,CAAI,EACA,GAAQ,OAAO,EAAU,EACzB,EAAQ,OAAO,GAAoB,EAAQ,MAAO,CAAW,CAAC,GAG9D,EAAQ,OAAO,GAAe,EAAQ,MAAO,CAAW,CAAC,EAEzD,GACA,EAAQ,OAAO,EAAe,GAG/B,CACH,KAAM,GACN,MACA,QACA,WACA,YACA,eACA,aACA,UACA,kBACA,cACA,KACJ,CACJ,CACA,YAA+B,EAAU,EAAM,GAAS,CACpD,MAAO,CACH,KAAM,GACN,MACA,UACJ,CACJ,CACA,YAAgC,EAAY,EAAM,GAAS,CACvD,MAAO,CACH,KAAM,GACN,MACA,YACJ,CACJ,CACA,YAA8B,EAAK,EAAO,CACtC,MAAO,CACH,KAAM,GACN,IAAK,GACL,IAAK,EAAO,SAAS,CAAG,EAAI,GAAuB,EAAK,EAAI,EAAI,EAChE,OACJ,CACJ,CACA,YAAgC,EAAS,EAAW,GAAO,EAAM,GAAS,EAAY,EAAoC,CACtH,MAAO,CACH,KAAM,EACN,MACA,UACA,WACA,UAAW,EAAW,EAAsC,CAChE,CACJ,CACA,YAA6B,EAAS,EAAK,CACvC,MAAO,CACH,KAAM,EACN,MACA,QAAS,EAAO,SAAS,CAAO,EAC1B,GAAuB,EAAS,GAAO,CAAG,EAC1C,CACV,CACJ,CACA,YAAkC,EAAU,EAAM,GAAS,CACvD,MAAO,CACH,KAAM,EACN,MACA,UACJ,CACJ,CACA,YAA8B,EAAQ,EAAO,CAAC,EAAG,EAAM,GAAS,CAC5D,MAAO,CACH,KAAM,GACN,MACA,SACA,UAAW,CACf,CACJ,CACA,YAAkC,EAAQ,EAAU,OAAW,EAAU,GAAO,EAAS,GAAO,EAAM,GAAS,CAC3G,MAAO,CACH,KAAM,GACN,SACA,UACA,UACA,SACA,KACJ,CACJ,CACA,YAAqC,EAAM,EAAY,EAAW,EAAU,GAAM,CAC9E,MAAO,CACH,KAAM,GACN,OACA,aACA,YACA,UACA,IAAK,EACT,CACJ,CACA,YAA+B,EAAO,EAAO,EAAU,GAAO,CAC1D,MAAO,CACH,KAAM,GACN,QACA,QACA,UACA,IAAK,EACT,CACJ,CACA,YAA8B,EAAM,CAChC,MAAO,CACH,KAAM,GACN,OACA,IAAK,EACT,CACJ,CACA,YAA+B,EAAU,CACrC,MAAO,CACH,KAAM,GACN,WACA,IAAK,EACT,CACJ,CACA,YAA2B,EAAM,EAAY,EAAW,CACpD,MAAO,CACH,KAAM,GACN,OACA,aACA,YACA,IAAK,EACT,CACJ,CACA,YAAoC,EAAM,EAAO,CAC7C,MAAO,CACH,KAAM,GACN,OACA,QACA,IAAK,EACT,CACJ,CACA,YAAkC,EAAa,CAC3C,MAAO,CACH,KAAM,GACN,cACA,IAAK,EACT,CACJ,CACA,YAA+B,EAAS,CACpC,MAAO,CACH,KAAM,GACN,UACA,IAAK,EACT,CACJ,CAEA,GAAM,IAAc,AAAC,GAAM,EAAE,OAAS,GAAuC,EAAE,SACzE,GAAgB,CAAC,EAAK,IAAa,IAAQ,GAAY,IAAQ,EAAO,UAAU,CAAQ,EAC9F,YAAyB,EAAK,CAC1B,GAAI,GAAc,EAAK,UAAU,EAC7B,MAAO,IAEN,GAAI,GAAc,EAAK,UAAU,EAClC,MAAO,IAEN,GAAI,GAAc,EAAK,WAAW,EACnC,MAAO,IAEN,GAAI,GAAc,EAAK,gBAAgB,EACxC,MAAO,GAEf,CACA,GAAM,IAAkB,cAClB,GAAqB,AAAC,GAAS,CAAC,GAAgB,KAAK,CAAI,EACzD,GAAwB,wBACxB,GAAmB,uBACnB,GAAe,yBAOf,GAA4B,AAAC,GAAS,CAExC,EAAO,EAAK,KAAK,EAAE,QAAQ,GAAc,GAAK,EAAE,KAAK,CAAC,EACtD,GAAI,GAAQ,EACR,EAAa,CAAC,EACd,EAA0B,EAC1B,EAAyB,EACzB,EAAoB,KACxB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CAClC,GAAM,GAAO,EAAK,OAAO,CAAC,EAC1B,OAAQ,OACC,GACD,GAAI,IAAS,IACT,EAAW,KAAK,CAAK,EACrB,EAAQ,EACR,YAEK,IAAS,IACd,EAAW,KAAK,CAAK,EACrB,EAAQ,EACR,YAEK,CAAE,KAAM,EAAI,GAAwB,IAAkB,KAAK,CAAI,EACpE,MAAO,GAEX,UACC,GACD,AAAI,IAAS,KAAO,IAAS,KAAO,IAAS,IACzC,GAAW,KAAK,CAAK,EACrB,EAAQ,EACR,EAAoB,GAEnB,AAAI,IAAS,IACd,IAEK,IAAS,KACT,GAAE,GACH,GAAQ,EAAW,IAAI,IAG/B,UACC,GACD,GAAI,IAAS,KAAO,IAAS,KAAO,IAAS,IACzC,EAAW,KAAK,CAAK,EACrB,EAAQ,EACR,EAAoB,UAEf,IAAS,IACd,YAEK,IAAS,IAAK,CAEnB,GAAI,IAAM,EAAK,OAAS,EACpB,MAAO,GAEX,AAAK,EAAE,GACH,GAAQ,EAAW,IAAI,EAE/B,CACA,UACC,GACD,AAAI,IAAS,GACT,GAAQ,EAAW,IAAI,EACvB,EAAoB,MAExB,MAEZ,CACA,MAAO,CAAC,GAA2B,CAAC,CACxC,EACM,GAAyB,CAAC,EAAM,IAAY,CAC1C,GAAI,CACA,GAAI,GAAM,GAAO,gBAAgB,EAAM,CACnC,QAAS,EAAQ,iBACrB,CAAC,EACD,MAAI,GAAI,OAAS,kBAAoB,EAAI,OAAS,oBAC9C,GAAM,EAAI,YAEN,EAAI,OAAS,oBACjB,EAAI,OAAS,4BACb,EAAI,OAAS,YACrB,OACO,EAAP,CACI,MAAO,EACX,CACJ,EACE,GAAqB,GAC3B,YAAuB,EAAK,EAAQ,EAAQ,CAExC,GAAM,GAAS,CACX,OAFW,EAAI,OAAO,MAAM,EAAQ,EAAS,CAAM,EAGnD,MAAO,GAAyB,EAAI,MAAO,EAAI,OAAQ,CAAM,EAC7D,IAAK,EAAI,GACb,EACA,MAAI,IAAU,MACV,GAAO,IAAM,GAAyB,EAAI,MAAO,EAAI,OAAQ,EAAS,CAAM,GAEzE,CACX,CACA,YAAkC,EAAK,EAAQ,EAAqB,EAAO,OAAQ,CAC/E,MAAO,IAA4B,EAAO,OAAO,CAAC,EAAG,CAAG,EAAG,EAAQ,CAAkB,CACzF,CAGA,YAAqC,EAAK,EAAQ,EAAqB,EAAO,OAAQ,CAClF,GAAI,GAAa,EACb,EAAiB,GACrB,OAAS,GAAI,EAAG,EAAI,EAAoB,IACpC,AAAI,EAAO,WAAW,CAAC,IAAM,IACzB,KACA,EAAiB,GAGzB,SAAI,QAAU,EACd,EAAI,MAAQ,EACZ,EAAI,OACA,IAAmB,GACb,EAAI,OAAS,EACb,EAAqB,EACxB,CACX,CACA,YAAgB,EAAW,EAAK,CAE5B,GAAI,CAAC,EACD,KAAM,IAAI,OAAM,GAAO,+BAA+B,CAE9D,CACA,YAAiB,EAAM,EAAM,EAAa,GAAO,CAC7C,OAAS,GAAI,EAAG,EAAI,EAAK,MAAM,OAAQ,IAAK,CACxC,GAAM,GAAI,EAAK,MAAM,GACrB,GAAI,EAAE,OAAS,GACV,IAAc,EAAE,MAChB,GAAO,SAAS,CAAI,EAAI,EAAE,OAAS,EAAO,EAAK,KAAK,EAAE,IAAI,GAC3D,MAAO,EAEf,CACJ,CACA,YAAkB,EAAM,EAAM,EAAc,GAAO,EAAa,GAAO,CACnE,OAAS,GAAI,EAAG,EAAI,EAAK,MAAM,OAAQ,IAAK,CACxC,GAAM,GAAI,EAAK,MAAM,GACrB,GAAI,EAAE,OAAS,EAA6B,CACxC,GAAI,EACA,SACJ,GAAI,EAAE,OAAS,GAAS,GAAE,OAAS,GAC/B,MAAO,EAEf,SACS,EAAE,OAAS,QACf,GAAE,KAAO,IACV,GAAc,EAAE,IAAK,CAAI,EACzB,MAAO,EAEf,CACJ,CACA,YAAuB,EAAK,EAAM,CAC9B,MAAO,CAAC,CAAE,IAAO,GAAY,CAAG,GAAK,EAAI,UAAY,EACzD,CACA,YAA4B,EAAM,CAC9B,MAAO,GAAK,MAAM,KAAK,GAAK,EAAE,OAAS,GACnC,EAAE,OAAS,QACV,EAAC,EAAE,KACA,EAAE,IAAI,OAAS,GACf,CAAC,EAAE,IAAI,SACf,CACJ,CACA,YAAgB,EAAM,CAClB,MAAO,GAAK,OAAS,GAAmC,EAAK,OAAS,CAC1E,CACA,YAAiB,EAAG,CAChB,MAAO,GAAE,OAAS,GAA+B,EAAE,OAAS,MAChE,CACA,YAAwB,EAAM,CAC1B,MAAQ,GAAK,OAAS,GAA6B,EAAK,UAAY,CACxE,CACA,YAAsB,EAAM,CACxB,MAAO,GAAK,OAAS,GAA6B,EAAK,UAAY,CACvE,CACA,YAAwB,EAAK,EAAa,CACtC,MAAO,IAAO,EAAc,GAAe,EAC/C,CACA,YAA6B,EAAK,EAAa,CAC3C,MAAO,IAAO,EAAc,GAAe,EAC/C,CACA,GAAM,IAAiB,GAAI,KAAI,CAAC,GAAiB,EAAoB,CAAC,EACtE,YAA8B,EAAO,EAAW,CAAC,EAAG,CAChD,GAAI,GACA,CAAC,EAAO,SAAS,CAAK,GACtB,EAAM,OAAS,GAAuC,CACtD,GAAM,GAAS,EAAM,OACrB,GAAI,CAAC,EAAO,SAAS,CAAM,GAAK,GAAe,IAAI,CAAM,EACrD,MAAO,IAAqB,EAAM,UAAU,GAAI,EAAS,OAAO,CAAK,CAAC,CAE9E,CACA,MAAO,CAAC,EAAO,CAAQ,CAC3B,CACA,YAAoB,EAAM,EAAM,EAAS,CACrC,GAAI,GASA,EAAQ,EAAK,OAAS,GAAgC,EAAK,MAAQ,EAAK,UAAU,GAClF,EAAW,CAAC,EACZ,EACJ,GAAI,GACA,CAAC,EAAO,SAAS,CAAK,GACtB,EAAM,OAAS,GAAuC,CACtD,GAAM,GAAM,GAAqB,CAAK,EACtC,EAAQ,EAAI,GACZ,EAAW,EAAI,GACf,EAAa,EAAS,EAAS,OAAS,EAC5C,CACA,GAAI,GAAS,MAAQ,EAAO,SAAS,CAAK,EACtC,EAAqB,GAAuB,CAAC,CAAI,CAAC,UAE7C,EAAM,OAAS,GAAuC,CAI3D,GAAM,GAAQ,EAAM,UAAU,GAC9B,AAAI,CAAC,EAAO,SAAS,CAAK,GAAK,EAAM,OAAS,GAC1C,EAAM,WAAW,QAAQ,CAAI,EAG7B,AAAI,EAAM,SAAW,GAEjB,EAAqB,GAAqB,EAAQ,OAAO,EAAW,EAAG,CACnE,GAAuB,CAAC,CAAI,CAAC,EAC7B,CACJ,CAAC,EAGD,EAAM,UAAU,QAAQ,GAAuB,CAAC,CAAI,CAAC,CAAC,EAG9D,CAAC,GAAuB,GAAqB,EACjD,SACS,EAAM,OAAS,GAAyC,CAC7D,GAAI,GAAgB,GAEpB,GAAI,EAAK,IAAI,OAAS,EAAqC,CACvD,GAAM,GAAc,EAAK,IAAI,QAC7B,EAAgB,EAAM,WAAW,KAAK,GAAK,EAAE,IAAI,OAAS,GACtD,EAAE,IAAI,UAAY,CAAW,CACrC,CACA,AAAK,GACD,EAAM,WAAW,QAAQ,CAAI,EAEjC,EAAqB,CACzB,KAGI,GAAqB,GAAqB,EAAQ,OAAO,EAAW,EAAG,CACnE,GAAuB,CAAC,CAAI,CAAC,EAC7B,CACJ,CAAC,EAIG,GAAc,EAAW,SAAW,IACpC,GAAa,EAAS,EAAS,OAAS,IAGhD,AAAI,EAAK,OAAS,GACd,AAAI,EACA,EAAW,UAAU,GAAK,EAG1B,EAAK,MAAQ,EAIjB,AAAI,EACA,EAAW,UAAU,GAAK,EAG1B,EAAK,UAAU,GAAK,CAGhC,CACA,YAAwB,EAAM,EAAM,CAEhC,MAAO,IAAI,KAAQ,EAAK,QAAQ,SAAU,CAAC,EAAa,IAC7C,IAAgB,IAAM,IAAM,EAAK,WAAW,CAAY,EAAE,SAAS,CAC7E,GACL,CAEA,YAAqB,EAAM,EAAK,CAC5B,GAAI,CAAC,GAAQ,OAAO,KAAK,CAAG,EAAE,SAAW,EACrC,MAAO,GAEX,OAAQ,EAAK,UACJ,GACD,OAAS,GAAI,EAAG,EAAI,EAAK,MAAM,OAAQ,IAAK,CACxC,GAAM,GAAI,EAAK,MAAM,GACrB,GAAI,EAAE,OAAS,GACV,IAAY,EAAE,IAAK,CAAG,GAAK,GAAY,EAAE,IAAK,CAAG,GAClD,MAAO,EAEf,CACA,MAAO,GAAK,SAAS,KAAK,GAAK,GAAY,EAAG,CAAG,CAAC,MACjD,IACD,MAAI,IAAY,EAAK,OAAQ,CAAG,EACrB,GAEJ,EAAK,SAAS,KAAK,GAAK,GAAY,EAAG,CAAG,CAAC,MACjD,GACD,MAAO,GAAK,SAAS,KAAK,GAAK,GAAY,EAAG,CAAG,CAAC,MACjD,IACD,MAAI,IAAY,EAAK,UAAW,CAAG,EACxB,GAEJ,EAAK,SAAS,KAAK,GAAK,GAAY,EAAG,CAAG,CAAC,MACjD,GACD,MAAQ,CAAC,EAAK,UACV,GAAmB,EAAK,OAAO,GAC/B,CAAC,CAAC,EAAI,EAAK,aACd,GACD,MAAO,GAAK,SAAS,KAAK,GAAK,EAAO,SAAS,CAAC,GAAK,GAAY,EAAG,CAAG,CAAC,MACvE,OACA,IACD,MAAO,IAAY,EAAK,QAAS,CAAG,MACnC,OACA,GACD,MAAO,WAEP,MAAO,GAEnB,CACA,YAA4B,EAAM,CAC9B,MAAI,GAAK,OAAS,IAAyC,EAAK,SAAW,GAChE,EAAK,UAAU,GAAG,QAGlB,CAEf,CACA,YAAmB,EAAM,CAAE,SAAQ,eAAc,SAAS,CACtD,AAAK,EAAK,SACN,GAAK,QAAU,GACf,EAAa,GAAe,EAAO,EAAK,WAAW,CAAC,EACpD,EAAO,EAAU,EACjB,EAAO,GAAoB,EAAO,EAAK,WAAW,CAAC,EAE3D,CAEA,GAAM,IAAkB,CACnB,uBAAiF,CAC9E,QAAS,qJAGT,KAAM,8EACV,EACC,qBAA6E,CAC1E,QAAS,GAAO,2FACkB,2CACjB,OACjB,KAAM,8DACV,EACC,qBAA6E,CAC1E,QAAS,8IAEb,EACC,6BAA6F,CAC1F,QAAS,sUAKT,KAAM,6DACV,EACC,qBAA6E,CAC1E,QAAS,wEACT,KAAM,mFACV,EACC,+BAAiG,CAC9F,QAAS,0RAKT,KAAM,iEACV,EACC,yBAAqF,CAClF,QAAS,uHAEb,EACC,yBAAqF,CAClF,QAAS,+CACT,KAAM,gFACV,EACC,gBAAoE,CACjE,QAAS,gKAGT,KAAM,8DACV,CACJ,EACA,YAAwB,EAAK,EAAS,CAClC,GAAM,GAAS,EAAQ,QACjB,EAAQ,QAAQ,aAChB,EAAQ,aACR,EAAQ,GAAU,EAAO,GAC/B,MAAI,KAAQ,OACD,GAAS,EAGT,CAEf,CACA,YAAyB,EAAK,EAAS,CACnC,GAAM,GAAO,GAAe,OAAQ,CAAO,EACrC,EAAQ,GAAe,EAAK,CAAO,EAGzC,MAAO,KAAS,EAAI,IAAU,GAAO,IAAU,EACnD,CACA,YAA4B,EAAK,EAAS,KAAQ,EAAM,CAEpD,MADgB,IAAgB,EAAK,CAAO,CAEhD,CACA,YAAyB,EAAK,EAAS,KAAQ,EAAM,CAEjD,GAAI,AADQ,GAAe,EAAK,CAAO,IAC3B,mBACR,OAEJ,GAAM,CAAE,UAAS,QAAS,GAAgB,GACpC,EAAM,gBAAgB,MAAQ,MAAO,IAAY,WAAa,EAAQ,GAAG,CAAI,EAAI,IAAU,EAAO;AAAA,aAAgB,IAAS,KAC3H,EAAM,GAAI,aAAY,CAAG,EAC/B,EAAI,KAAO,EACP,GACA,GAAI,IAAM,GACd,EAAQ,OAAO,CAAG,CACtB,CAKA,GAAM,IAAW,2BACX,GAAY,CACd,GAAI,IACJ,GAAI,IACJ,IAAK,IACL,KAAM,IACN,KAAM,GACV,EACM,GAAuB,CACzB,WAAY,CAAC,KAAM,IAAI,EACvB,aAAc,IAAM,EACpB,YAAa,IAAM,EACnB,UAAW,EAAO,GAClB,SAAU,EAAO,GACjB,gBAAiB,EAAO,GACxB,eAAgB,AAAC,GAAY,EAAQ,QAAQ,GAAU,CAAC,EAAG,IAAO,GAAU,EAAG,EAC/E,QAAS,GACT,OAAQ,GACR,SAAU,EACd,EACA,YAAmB,EAAS,EAAU,CAAC,EAAG,CACtC,GAAM,GAAU,GAAoB,EAAS,CAAO,EAC9C,EAAQ,GAAU,CAAO,EAC/B,MAAO,IAAW,GAAc,EAAS,EAAwB,CAAC,CAAC,EAAG,GAAa,EAAS,CAAK,CAAC,CACtG,CACA,YAA6B,EAAS,EAAY,CAC9C,GAAM,GAAU,EAAO,OAAO,CAAC,EAAG,EAAoB,EAClD,EACJ,IAAK,IAAO,GAER,EAAQ,GACJ,EAAW,KAAS,OACd,GAAqB,GACrB,EAAW,GAEzB,MAAO,CACH,UACA,OAAQ,EACR,KAAM,EACN,OAAQ,EACR,eAAgB,EAChB,OAAQ,EACR,MAAO,GACP,OAAQ,GACR,OAAQ,EAAQ,MACpB,CACJ,CACA,YAAuB,EAAS,EAAM,EAAW,CAC7C,GAAM,GAAS,GAAK,CAAS,EACvB,EAAK,EAAS,EAAO,GAAK,EAC1B,EAAQ,CAAC,EACf,KAAO,CAAC,GAAM,EAAS,EAAM,CAAS,GAAG,CACrC,GAAM,GAAI,EAAQ,OACd,EACJ,GAAI,IAAS,GAA0B,IAAS,GAC5C,GAAI,CAAC,EAAQ,QAAU,GAAW,EAAG,EAAQ,QAAQ,WAAW,EAAE,EAE9D,EAAO,GAAmB,EAAS,CAAI,UAElC,IAAS,GAA0B,EAAE,KAAO,IAEjD,GAAI,EAAE,SAAW,EACb,GAAU,EAAS,EAAwC,CAAC,UAEvD,EAAE,KAAO,IAEd,AAAI,GAAW,EAAG,MAAM,EACpB,EAAO,GAAa,CAAO,EAE1B,AAAI,GAAW,EAAG,WAAW,EAE9B,EAAO,GAAkB,CAAO,EAE/B,AAAI,GAAW,EAAG,WAAW,EAC9B,AAAI,IAAO,EACP,EAAO,GAAW,EAAS,CAAS,EAGpC,IAAU,EAAS,CAAwC,EAC3D,EAAO,GAAkB,CAAO,GAIpC,IAAU,EAAS,EAA8C,EACjE,EAAO,GAAkB,CAAO,WAG/B,EAAE,KAAO,IAEd,GAAI,EAAE,SAAW,EACb,GAAU,EAAS,EAAwC,CAAC,UAEvD,EAAE,KAAO,IAAK,CACnB,GAAU,EAAS,GAA0C,CAAC,EAC9D,GAAU,EAAS,CAAC,EACpB,QACJ,SACS,SAAS,KAAK,EAAE,EAAE,EAAG,CAC1B,GAAU,EAAS,EAAqC,EACxD,GAAS,EAAS,EAAqB,CAAM,EAC7C,QACJ,KAEI,IAAU,EAAS,GAAyD,CAAC,EAC7E,EAAO,GAAkB,CAAO,MAGnC,AAAI,SAAS,KAAK,EAAE,EAAE,EACvB,GAAO,GAAa,EAAS,CAAS,EAElC,GAAgB,2BAAoF,CAAO,GAC3G,GACA,EAAK,MAAQ,YACb,CAAC,EAAK,MAAM,KAAK,GAAK,EAAE,OAAS,GAC7B,GAA2B,EAAE,IAAI,CAAC,GACtC,GAAO,EAAK,WAGf,AAAI,EAAE,KAAO,IACd,IAAU,EAAS,GAAkE,CAAC,EACtF,EAAO,GAAkB,CAAO,GAGhC,GAAU,EAAS,GAAyD,CAAC,EAOzF,GAHK,GACD,GAAO,GAAU,EAAS,CAAI,GAE9B,EAAO,QAAQ,CAAI,EACnB,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,IAC7B,GAAS,EAAO,EAAK,EAAE,MAI3B,IAAS,EAAO,CAAI,CAE5B,CAEA,GAAI,GAAoB,GACxB,GAAI,IAAS,GAA6B,IAAS,EAA0B,CACzE,GAAM,GAAiB,EAAQ,QAAQ,aAAe,WACtD,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IAAK,CACnC,GAAM,GAAO,EAAM,GACnB,GAAI,CAAC,EAAQ,OAAS,EAAK,OAAS,EAChC,GAAK,eAAe,KAAK,EAAK,OAAO,EAuBhC,AAAI,GAGL,GAAK,QAAU,EAAK,QAAQ,QAAQ,gBAAiB,GAAG,OA1BpB,CACpC,GAAM,GAAO,EAAM,EAAI,GACjB,EAAO,EAAM,EAAI,GAKvB,AAAI,CAAC,GACD,CAAC,GACA,GACI,GAAK,OAAS,GACX,EAAK,OAAS,GACb,EAAK,OAAS,GACX,EAAK,OAAS,GACd,SAAS,KAAK,EAAK,OAAO,GACtC,GAAoB,GACpB,EAAM,GAAK,MAIX,EAAK,QAAU,GAEvB,KAQC,AAAI,GAAK,OAAS,GAA6B,CAAC,EAAQ,QAAQ,UACjE,GAAoB,GACpB,EAAM,GAAK,KAEnB,CACA,GAAI,EAAQ,OAAS,GAAU,EAAQ,QAAQ,SAAS,EAAO,GAAG,EAAG,CAGjE,GAAM,GAAQ,EAAM,GACpB,AAAI,GAAS,EAAM,OAAS,GACxB,GAAM,QAAU,EAAM,QAAQ,QAAQ,SAAU,EAAE,EAE1D,CACJ,CACA,MAAO,GAAoB,EAAM,OAAO,OAAO,EAAI,CACvD,CACA,YAAkB,EAAO,EAAM,CAC3B,GAAI,EAAK,OAAS,EAAwB,CACtC,GAAM,GAAO,GAAK,CAAK,EAGvB,GAAI,GACA,EAAK,OAAS,GACd,EAAK,IAAI,IAAI,SAAW,EAAK,IAAI,MAAM,OAAQ,CAC/C,EAAK,SAAW,EAAK,QACrB,EAAK,IAAI,IAAM,EAAK,IAAI,IACxB,EAAK,IAAI,QAAU,EAAK,IAAI,OAC5B,MACJ,CACJ,CACA,EAAM,KAAK,CAAI,CACnB,CACA,YAAoB,EAAS,EAAW,CACpC,GAAU,EAAS,CAAC,EACpB,GAAM,GAAQ,GAAc,EAAS,EAAyB,CAAS,EACvE,MAAI,GAAQ,OAAO,SAAW,EAC1B,GAAU,EAAS,CAA+B,EAGlD,GAAU,EAAS,CAAC,EAEjB,CACX,CACA,YAAsB,EAAS,CAC3B,GAAM,GAAQ,GAAU,CAAO,EAC3B,EAEE,EAAQ,WAAW,KAAK,EAAQ,MAAM,EAC5C,GAAI,CAAC,EACD,EAAU,EAAQ,OAAO,MAAM,CAAC,EAChC,GAAU,EAAS,EAAQ,OAAO,MAAM,EACxC,GAAU,EAAS,CAAiC,MAEnD,CACD,AAAI,EAAM,OAAS,GACf,GAAU,EAAS,CAAkD,EAErE,EAAM,IACN,GAAU,EAAS,EAA8C,EAErE,EAAU,EAAQ,OAAO,MAAM,EAAG,EAAM,KAAK,EAE7C,GAAM,GAAI,EAAQ,OAAO,MAAM,EAAG,EAAM,KAAK,EACzC,EAAY,EAAG,EAAc,EACjC,KAAQ,GAAc,EAAE,QAAQ,OAAQ,CAAS,KAAO,IACpD,GAAU,EAAS,EAAc,EAAY,CAAC,EAC1C,EAAc,EAAI,EAAE,QACpB,GAAU,EAAS,EAAkC,EAEzD,EAAY,EAAc,EAE9B,GAAU,EAAS,EAAM,MAAQ,EAAM,GAAG,OAAS,EAAY,CAAC,CACpE,CACA,MAAO,CACH,KAAM,EACN,UACA,IAAK,GAAa,EAAS,CAAK,CACpC,CACJ,CACA,YAA2B,EAAS,CAChC,GAAM,GAAQ,GAAU,CAAO,EACzB,EAAe,EAAQ,OAAO,KAAO,IAAM,EAAI,EACjD,EACE,EAAa,EAAQ,OAAO,QAAQ,GAAG,EAC7C,MAAI,KAAe,GACf,GAAU,EAAQ,OAAO,MAAM,CAAY,EAC3C,GAAU,EAAS,EAAQ,OAAO,MAAM,GAGxC,GAAU,EAAQ,OAAO,MAAM,EAAc,CAAU,EACvD,GAAU,EAAS,EAAa,CAAC,GAE9B,CACH,KAAM,EACN,UACA,IAAK,GAAa,EAAS,CAAK,CACpC,CACJ,CACA,YAAsB,EAAS,EAAW,CAEtC,GAAM,GAAW,EAAQ,MACnB,EAAY,EAAQ,OACpB,EAAS,GAAK,CAAS,EACvB,EAAU,GAAS,EAAS,EAAuB,CAAM,EACzD,EAAgB,EAAQ,OAAS,CAAC,EAClC,EAAiB,EAAQ,QAAU,CAAC,EAC1C,GAAI,EAAQ,eAAiB,EAAQ,QAAQ,UAAU,EAAQ,GAAG,EAE9D,MAAI,IACA,GAAQ,MAAQ,IAEhB,GACA,GAAQ,OAAS,IAEd,EAGX,EAAU,KAAK,CAAO,EACtB,GAAM,GAAO,EAAQ,QAAQ,YAAY,EAAS,CAAM,EAClD,EAAW,GAAc,EAAS,EAAM,CAAS,EACvD,EAAU,IAAI,EAEd,CACI,GAAM,GAAqB,EAAQ,MAAM,KAAK,GAAK,EAAE,OAAS,GAA+B,EAAE,OAAS,iBAAiB,EACzH,GAAI,GACA,GAAmB,2BAAoF,EAAS,EAAmB,GAAG,EAAG,CACzI,GAAM,GAAM,GAAa,EAAS,EAAQ,IAAI,GAAG,EACjD,EAAmB,MAAQ,CACvB,KAAM,EACN,QAAS,EAAI,OACb,KACJ,CACJ,CACJ,CAGA,GAFA,EAAQ,SAAW,EAEf,GAAqB,EAAQ,OAAQ,EAAQ,GAAG,EAChD,GAAS,EAAS,EAAqB,CAAM,UAG7C,GAAU,EAAS,GAAuC,EAAG,EAAQ,IAAI,KAAK,EAC1E,EAAQ,OAAO,SAAW,GAAK,EAAQ,IAAI,YAAY,IAAM,SAAU,CACvE,GAAM,GAAQ,EAAS,GACvB,AAAI,GAAS,GAAW,EAAM,IAAI,OAAQ,MAAM,GAC5C,GAAU,EAAS,CAAuD,CAElF,CAEJ,SAAQ,IAAM,GAAa,EAAS,EAAQ,IAAI,KAAK,EACjD,GACA,GAAQ,MAAQ,IAEhB,GACA,GAAQ,OAAS,IAEd,CACX,CACA,GAAM,IAA2C,EAAO,QAAQ,0BAA0B,EAC1F,YAAkB,EAAS,EAAM,EAAQ,CAErC,GAAM,GAAQ,GAAU,CAAO,EACzB,EAAQ,+BAA+B,KAAK,EAAQ,MAAM,EAC1D,EAAM,EAAM,GACZ,EAAK,EAAQ,QAAQ,aAAa,EAAK,CAAM,EACnD,GAAU,EAAS,EAAM,GAAG,MAAM,EAClC,GAAc,CAAO,EAErB,GAAM,GAAS,GAAU,CAAO,EAC1B,EAAgB,EAAQ,OAE9B,AAAI,EAAQ,QAAQ,SAAS,CAAG,GAC5B,GAAQ,MAAQ,IAGpB,GAAI,GAAQ,GAAgB,EAAS,CAAI,EAEzC,AAAI,IAAS,GACT,CAAC,EAAQ,QACT,EAAM,KAAK,GAAK,EAAE,OAAS,GAA+B,EAAE,OAAS,KAAK,GAC1E,GAAQ,OAAS,GAEjB,EAAO,OAAO,EAAS,CAAM,EAC7B,EAAQ,OAAS,EAEjB,EAAQ,GAAgB,EAAS,CAAI,EAAE,OAAO,GAAK,EAAE,OAAS,OAAO,GAGzE,GAAI,GAAgB,GAWpB,GAVA,AAAI,EAAQ,OAAO,SAAW,EAC1B,GAAU,EAAS,CAA6B,EAGhD,GAAgB,GAAW,EAAQ,OAAQ,IAAI,EAC3C,IAAS,GAAuB,GAChC,GAAU,EAAS,CAAgD,EAEvE,GAAU,EAAS,EAAgB,EAAI,CAAC,GAExC,IAAS,EACT,OAEJ,GAAI,GAAU,EACd,MAAK,GAAQ,QACT,CAAI,IAAQ,OACR,EAAU,EAET,AAAI,IAAQ,WACT,EAAM,KAAK,GAAK,EAAE,OAAS,GAA+B,GAA2B,EAAE,IAAI,CAAC,GAC5F,GAAU,GAGT,GAAY,EAAK,EAAO,CAAO,GACpC,GAAU,IAGX,CACH,KAAM,EACN,KACA,MACA,UACA,QACA,gBACA,SAAU,CAAC,EACX,IAAK,GAAa,EAAS,CAAK,EAChC,YAAa,MACjB,CACJ,CACA,YAAqB,EAAK,EAAO,EAAS,CACtC,GAAM,GAAU,EAAQ,QACxB,GAAI,EAAQ,gBAAgB,CAAG,EAC3B,MAAO,GAEX,GAAI,IAAQ,aACR,SAAS,KAAK,CAAG,GACjB,GAAgB,CAAG,GAClB,EAAQ,oBAAsB,EAAQ,mBAAmB,CAAG,GAC5D,EAAQ,aAAe,CAAC,EAAQ,YAAY,CAAG,EAChD,MAAO,GAIX,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IAAK,CACnC,GAAM,GAAI,EAAM,GAChB,GAAI,EAAE,OAAS,GACX,GAAI,EAAE,OAAS,MAAQ,EAAE,MAAO,CAC5B,GAAI,EAAE,MAAM,QAAQ,WAAW,MAAM,EACjC,MAAO,GAEN,GAAI,GAAmB,yBAAgF,EAAS,EAAE,GAAG,EACtH,MAAO,EAEf,MAEC,CAGD,GAAI,EAAE,OAAS,KACX,MAAO,GAEN,GAEL,EAAE,OAAS,QACP,GAAc,EAAE,IAAK,IAAI,GACzB,IACA,GAAmB,yBAAgF,EAAS,EAAE,GAAG,EACjH,MAAO,EAEf,CACJ,CACJ,CACA,YAAyB,EAAS,EAAM,CACpC,GAAM,GAAQ,CAAC,EACT,EAAiB,GAAI,KAC3B,KAAO,EAAQ,OAAO,OAAS,GAC3B,CAAC,GAAW,EAAQ,OAAQ,GAAG,GAC/B,CAAC,GAAW,EAAQ,OAAQ,IAAI,GAAG,CACnC,GAAI,GAAW,EAAQ,OAAQ,GAAG,EAAG,CACjC,GAAU,EAAS,EAA6C,EAChE,GAAU,EAAS,CAAC,EACpB,GAAc,CAAO,EACrB,QACJ,CACA,AAAI,IAAS,GACT,GAAU,EAAS,CAA0C,EAEjE,GAAM,GAAO,GAAe,EAAS,CAAc,EAGnD,AAAI,EAAK,OAAS,GACd,EAAK,OACL,EAAK,OAAS,SACd,GAAK,MAAM,QAAU,EAAK,MAAM,QAAQ,QAAQ,OAAQ,GAAG,EAAE,KAAK,GAElE,IAAS,GACT,EAAM,KAAK,CAAI,EAEf,kBAAkB,KAAK,EAAQ,MAAM,GACrC,GAAU,EAAS,EAAyD,EAEhF,GAAc,CAAO,CACzB,CACA,MAAO,EACX,CACA,YAAwB,EAAS,EAAS,CAEtC,GAAM,GAAQ,GAAU,CAAO,EAEzB,EAAO,AADC,kCAAkC,KAAK,EAAQ,MAAM,EAChD,GACnB,AAAI,EAAQ,IAAI,CAAI,GAChB,GAAU,EAAS,CAAsC,EAE7D,EAAQ,IAAI,CAAI,EACZ,EAAK,KAAO,KACZ,GAAU,EAAS,EAAgE,EAEvF,CACI,GAAM,GAAU,SACZ,EACJ,KAAQ,EAAI,EAAQ,KAAK,CAAI,GACzB,GAAU,EAAS,GAA4D,EAAE,KAAK,CAE9F,CACA,GAAU,EAAS,EAAK,MAAM,EAE9B,GAAI,GACJ,AAAI,iBAAiB,KAAK,EAAQ,MAAM,GACpC,IAAc,CAAO,EACrB,GAAU,EAAS,CAAC,EACpB,GAAc,CAAO,EACrB,EAAQ,GAAoB,CAAO,EAC9B,GACD,GAAU,EAAS,EAA2C,GAGtE,GAAM,GAAM,GAAa,EAAS,CAAK,EACvC,GAAI,CAAC,EAAQ,QAAU,6BAA6B,KAAK,CAAI,EAAG,CAC5D,GAAM,GAAQ,qEAAqE,KAAK,CAAI,EACxF,EAAkB,GAAW,EAAM,GAAG,EACtC,EAAU,EAAM,IACf,IAAmB,GAAW,EAAM,GAAG,EAClC,OACA,GAAW,EAAM,GAAG,EAChB,KACA,QACV,EACJ,GAAI,EAAM,GAAI,CACV,GAAM,GAAS,IAAY,OACrB,EAAc,EAAK,YAAY,EAAM,EAAE,EACvC,EAAM,GAAa,EAAS,GAAe,EAAS,EAAO,CAAW,EAAG,GAAe,EAAS,EAAO,EAAc,EAAM,GAAG,OAAW,IAAU,EAAM,IAAO,IAAI,MAAM,CAAC,EAC9K,EAAU,EAAM,GAChB,EAAW,GACf,AAAI,EAAQ,WAAW,GAAG,EACtB,GAAW,GACX,AAAK,EAAQ,SAAS,GAAG,EAKrB,EAAU,EAAQ,MAAM,EAAG,EAAQ,OAAS,CAAC,EAJ7C,IAAU,EAAS,EAA4D,EAC/E,EAAU,EAAQ,MAAM,CAAC,IAMxB,GAIL,IAAW,EAAM,IAAM,IAE3B,EAAM,CACF,KAAM,EACN,UACA,WACA,UAAW,EACL,EACA,EACN,KACJ,CACJ,CACA,GAAI,GAAS,EAAM,SAAU,CACzB,GAAM,GAAW,EAAM,IACvB,EAAS,MAAM,SACf,EAAS,MAAM,SACf,EAAS,IAAM,GAAyB,EAAS,MAAO,EAAM,OAAO,EACrE,EAAS,OAAS,EAAS,OAAO,MAAM,EAAG,EAAE,CACjD,CACA,GAAM,GAAY,EAAM,GAAK,EAAM,GAAG,MAAM,CAAC,EAAE,MAAM,GAAG,EAAI,CAAC,EAC7D,MAAI,IACA,EAAU,KAAK,MAAM,EAErB,IAAY,QAAU,GAClB,EAAU,SAAS,MAAM,GACzB,GAAmB,uBAA4E,EAAS,EAAK,EAAI,IAAI,MAAM,GAC3H,GAAU,QACV,EAAU,OAAO,EAAU,QAAQ,MAAM,EAAG,CAAC,GAG9C,CACH,KAAM,EACN,KAAM,EACN,IAAK,GAAS,CACV,KAAM,EACN,QAAS,EAAM,QACf,SAAU,GAGV,UAAW,EACX,IAAK,EAAM,GACf,EACA,MACA,YACA,KACJ,CACJ,CAEA,MAAI,CAAC,EAAQ,QAAU,GAAW,EAAM,IAAI,GACxC,GAAU,EAAS,EAA4C,EAE5D,CACH,KAAM,EACN,OACA,MAAO,GAAS,CACZ,KAAM,EACN,QAAS,EAAM,QACf,IAAK,EAAM,GACf,EACA,KACJ,CACJ,CACA,YAA6B,EAAS,CAClC,GAAM,GAAQ,GAAU,CAAO,EAC3B,EACE,EAAQ,EAAQ,OAAO,GACvB,EAAW,IAAU,KAAO,IAAU,IAC5C,GAAI,EAAU,CAEV,GAAU,EAAS,CAAC,EACpB,GAAM,GAAW,EAAQ,OAAO,QAAQ,CAAK,EAC7C,AAAI,IAAa,GACb,EAAU,GAAc,EAAS,EAAQ,OAAO,OAAQ,CAAiC,EAGzF,GAAU,GAAc,EAAS,EAAU,CAAiC,EAC5E,GAAU,EAAS,CAAC,EAE5B,KACK,CAED,GAAM,GAAQ,kBAAkB,KAAK,EAAQ,MAAM,EACnD,GAAI,CAAC,EACD,OAEJ,GAAM,GAAkB,WACpB,EACJ,KAAQ,EAAI,EAAgB,KAAK,EAAM,EAAE,GACrC,GAAU,EAAS,GAAsE,EAAE,KAAK,EAEpG,EAAU,GAAc,EAAS,EAAM,GAAG,OAAQ,CAAiC,CACvF,CACA,MAAO,CAAE,UAAS,WAAU,IAAK,GAAa,EAAS,CAAK,CAAE,CAClE,CACA,YAA4B,EAAS,EAAM,CACvC,GAAM,CAAC,EAAM,GAAS,EAAQ,QAAQ,WAChC,EAAa,EAAQ,OAAO,QAAQ,EAAO,EAAK,MAAM,EAC5D,GAAI,IAAe,GAAI,CACnB,GAAU,EAAS,EAA+C,EAClE,MACJ,CACA,GAAM,GAAQ,GAAU,CAAO,EAC/B,GAAU,EAAS,EAAK,MAAM,EAC9B,GAAM,GAAa,GAAU,CAAO,EAC9B,EAAW,GAAU,CAAO,EAC5B,EAAmB,EAAa,EAAK,OACrC,EAAa,EAAQ,OAAO,MAAM,EAAG,CAAgB,EACrD,EAAiB,GAAc,EAAS,EAAkB,CAAI,EAC9D,EAAU,EAAe,KAAK,EAC9B,EAAc,EAAe,QAAQ,CAAO,EAClD,AAAI,EAAc,GACd,GAA4B,EAAY,EAAY,CAAW,EAEnE,GAAM,GAAY,EAAoB,GAAe,OAAS,EAAQ,OAAS,GAC/E,UAA4B,EAAU,EAAY,CAAS,EAC3D,GAAU,EAAS,EAAM,MAAM,EACxB,CACH,KAAM,EACN,QAAS,CACL,KAAM,EACN,SAAU,GAEV,UAAW,EACX,UACA,IAAK,GAAa,EAAS,EAAY,CAAQ,CACnD,EACA,IAAK,GAAa,EAAS,CAAK,CACpC,CACJ,CACA,YAAmB,EAAS,EAAM,CAC9B,GAAM,GAAY,IAAS,EAA0B,CAAC,KAAK,EAAI,CAAC,IAAK,EAAQ,QAAQ,WAAW,EAAE,EAC9F,EAAW,EAAQ,OAAO,OAC9B,OAAS,GAAI,EAAG,EAAI,EAAU,OAAQ,IAAK,CACvC,GAAM,GAAQ,EAAQ,OAAO,QAAQ,EAAU,GAAI,CAAC,EACpD,AAAI,IAAU,IAAM,EAAW,GAC3B,GAAW,EAEnB,CACA,GAAM,GAAQ,GAAU,CAAO,EACzB,EAAU,GAAc,EAAS,EAAU,CAAI,EACrD,MAAO,CACH,KAAM,EACN,UACA,IAAK,GAAa,EAAS,CAAK,CACpC,CACJ,CAKA,YAAuB,EAAS,EAAQ,EAAM,CAC1C,GAAM,GAAU,EAAQ,OAAO,MAAM,EAAG,CAAM,EAE9C,MADA,IAAU,EAAS,CAAM,EACrB,IAAS,GACT,IAAS,GACT,CAAC,EAAQ,SAAS,GAAG,EACd,EAIA,EAAQ,QAAQ,eAAe,EAAS,IAAS,CAAiC,CAEjG,CACA,YAAmB,EAAS,CACxB,GAAM,CAAE,SAAQ,OAAM,UAAW,EACjC,MAAO,CAAE,SAAQ,OAAM,QAAO,CAClC,CACA,YAAsB,EAAS,EAAO,EAAK,CACvC,SAAM,GAAO,GAAU,CAAO,EACvB,CACH,QACA,MACA,OAAQ,EAAQ,eAAe,MAAM,EAAM,OAAQ,EAAI,MAAM,CACjE,CACJ,CACA,YAAc,EAAI,CACd,MAAO,GAAG,EAAG,OAAS,EAC1B,CACA,YAAoB,EAAQ,EAAc,CACtC,MAAO,GAAO,WAAW,CAAY,CACzC,CACA,YAAmB,EAAS,EAAoB,CAC5C,GAAM,CAAE,UAAW,EACnB,GAA4B,EAAS,EAAQ,CAAkB,EAC/D,EAAQ,OAAS,EAAO,MAAM,CAAkB,CACpD,CACA,YAAuB,EAAS,CAC5B,GAAM,GAAQ,gBAAgB,KAAK,EAAQ,MAAM,EACjD,AAAI,GACA,GAAU,EAAS,EAAM,GAAG,MAAM,CAE1C,CACA,YAAwB,EAAS,EAAO,EAAoB,CACxD,MAAO,IAAyB,EAAO,EAAQ,eAAe,MAAM,EAAM,OAAQ,CAAkB,EAAG,CAAkB,CAC7H,CACA,YAAmB,EAAS,EAAM,EAAQ,EAAM,GAAU,CAAO,EAAG,CAChE,AAAI,GACA,GAAI,QAAU,EACd,EAAI,QAAU,GAElB,EAAQ,QAAQ,QAAQ,GAAoB,EAAM,CAC9C,MAAO,EACP,IAAK,EACL,OAAQ,EACZ,CAAC,CAAC,CACN,CACA,YAAe,EAAS,EAAM,EAAW,CACrC,GAAM,GAAI,EAAQ,OAClB,OAAQ,OACC,GACD,GAAI,GAAW,EAAG,IAAI,GAElB,OAAS,GAAI,EAAU,OAAS,EAAG,GAAK,EAAG,EAAE,EACzC,GAAI,GAAqB,EAAG,EAAU,GAAG,GAAG,EACxC,MAAO,GAInB,UACC,OACA,GAA2B,CAC5B,GAAM,GAAS,GAAK,CAAS,EAC7B,GAAI,GAAU,GAAqB,EAAG,EAAO,GAAG,EAC5C,MAAO,GAEX,KACJ,KACK,GACD,GAAI,GAAW,EAAG,KAAK,EACnB,MAAO,GAEX,MAER,MAAO,CAAC,CACZ,CACA,YAA8B,EAAQ,EAAK,CACvC,MAAQ,IAAW,EAAQ,IAAI,GAC3B,EAAO,MAAM,EAAG,EAAI,EAAI,MAAM,EAAE,YAAY,IAAM,EAAI,YAAY,GAClE,gBAAgB,KAAK,EAAO,EAAI,EAAI,SAAW,GAAG,CAC1D,CAEA,YAAqB,EAAM,EAAS,CAChC,GAAK,EAAM,EAGX,GAAoB,EAAM,EAAK,SAAS,EAAE,CAAC,CAC/C,CACA,YAA6B,EAAM,EAAO,CACtC,GAAM,CAAE,YAAa,EACrB,MAAQ,GAAS,SAAW,GACxB,EAAM,OAAS,GACf,CAAC,GAAa,CAAK,CAC3B,CACA,YAAc,EAAM,EAAS,EAAiB,GAAO,CACjD,GAAM,CAAE,YAAa,EACf,EAAgB,EAAS,OAC3B,EAAe,EACnB,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACtC,GAAM,GAAQ,EAAS,GAEvB,GAAI,EAAM,OAAS,GACf,EAAM,UAAY,EAA8B,CAChD,GAAM,GAAe,EACf,EACA,GAAgB,EAAO,CAAO,EACpC,GAAI,EAAe,GACf,GAAI,GAAgB,EAAiC,CACjD,EAAM,YAAY,UACd,GAA+B,GACnC,EAAM,YAAc,EAAQ,MAAM,EAAM,WAAW,EACnD,IACA,QACJ,MAEC,CAGD,GAAM,GAAc,EAAM,YAC1B,GAAI,EAAY,OAAS,GAA+B,CACpD,GAAM,GAAO,GAAa,CAAW,EACrC,GAAK,EAAC,GACF,IAAS,KACT,IAAS,IACT,GAA8B,EAAO,CAAO,GACxC,EAAiC,CACrC,GAAM,GAAQ,GAAa,CAAK,EAChC,AAAI,GACA,GAAY,MAAQ,EAAQ,MAAM,CAAK,EAE/C,CACA,AAAI,EAAY,cACZ,GAAY,aAAe,EAAQ,MAAM,EAAY,YAAY,EAEzE,CACJ,CACJ,KACK,AAAI,GAAM,OAAS,IACpB,GAAgB,EAAM,QAAS,CAAO,GAAK,GAC3C,GAAM,YAAc,EAAQ,MAAM,EAAM,WAAW,EACnD,KAGJ,GAAI,EAAM,OAAS,EAA2B,CAC1C,GAAM,GAAc,EAAM,UAAY,EACtC,AAAI,GACA,EAAQ,OAAO,QAEnB,GAAK,EAAO,CAAO,EACf,GACA,EAAQ,OAAO,OAEvB,SACS,EAAM,OAAS,GAEpB,GAAK,EAAO,EAAS,EAAM,SAAS,SAAW,CAAC,UAE3C,EAAM,OAAS,EACpB,OAAS,GAAI,EAAG,EAAI,EAAM,SAAS,OAAQ,IAEvC,GAAK,EAAM,SAAS,GAAI,EAAS,EAAM,SAAS,GAAG,SAAS,SAAW,CAAC,CAGpF,CACA,AAAI,GAAgB,EAAQ,gBACxB,EAAQ,eAAe,EAAU,EAAS,CAAI,EAG9C,GACA,IAAiB,GACjB,EAAK,OAAS,GACd,EAAK,UAAY,GACjB,EAAK,aACL,EAAK,YAAY,OAAS,IAC1B,EAAO,QAAQ,EAAK,YAAY,QAAQ,GACxC,GAAK,YAAY,SAAW,EAAQ,MAAM,GAAsB,EAAK,YAAY,QAAQ,CAAC,EAElG,CACA,YAAyB,EAAM,EAAS,CACpC,GAAM,CAAE,iBAAkB,EAC1B,OAAQ,EAAK,UACJ,GACD,GAAI,EAAK,UAAY,EACjB,MAAO,GAEX,GAAM,GAAS,EAAc,IAAI,CAAI,EACrC,GAAI,IAAW,OACX,MAAO,GAEX,GAAM,GAAc,EAAK,YAIzB,GAHI,EAAY,OAAS,IAGrB,EAAY,SACZ,EAAK,MAAQ,OACb,EAAK,MAAQ,gBACb,MAAO,GAGX,GADa,GAAa,CAAW,EAmEjC,SAAc,IAAI,EAAM,CAAkC,EACnD,EAnEA,CACP,GAAI,GAAa,EAMX,EAAqB,GAA8B,EAAM,CAAO,EACtE,GAAI,IAAuB,EACvB,SAAc,IAAI,EAAM,CAAkC,EACnD,EAEX,AAAI,EAAqB,GACrB,GAAa,GAGjB,OAAS,GAAI,EAAG,EAAI,EAAK,SAAS,OAAQ,IAAK,CAC3C,GAAM,GAAY,GAAgB,EAAK,SAAS,GAAI,CAAO,EAC3D,GAAI,IAAc,EACd,SAAc,IAAI,EAAM,CAAkC,EACnD,EAEX,AAAI,EAAY,GACZ,GAAa,EAErB,CAKA,GAAI,EAAa,EACb,OAAS,GAAI,EAAG,EAAI,EAAK,MAAM,OAAQ,IAAK,CACxC,GAAM,GAAI,EAAK,MAAM,GACrB,GAAI,EAAE,OAAS,GAA+B,EAAE,OAAS,QAAU,EAAE,IAAK,CACtE,GAAM,GAAU,GAAgB,EAAE,IAAK,CAAO,EAC9C,GAAI,IAAY,EACZ,SAAc,IAAI,EAAM,CAAkC,EACnD,EAEX,AAAI,EAAU,GACV,GAAa,EAErB,CACJ,CAKJ,GAAI,EAAY,QAAS,CAErB,OAAS,GAAI,EAAG,EAAI,EAAK,MAAM,OAAQ,IAEnC,GAAI,AADM,EAAK,MAAM,GACf,OAAS,EACX,SAAc,IAAI,EAAM,CAAkC,EACnD,EAGf,EAAQ,aAAa,EAAU,EAC/B,EAAQ,aAAa,GAAoB,EAAQ,MAAO,EAAY,WAAW,CAAC,EAChF,EAAY,QAAU,GACtB,EAAQ,OAAO,GAAe,EAAQ,MAAO,EAAY,WAAW,CAAC,CACzE,CACA,SAAc,IAAI,EAAM,CAAU,EAC3B,CACX,KAKC,OACA,GACD,MAAO,OACN,OACA,QACA,IACD,MAAO,OACN,OACA,IACD,MAAO,IAAgB,EAAK,QAAS,CAAO,MAC3C,GACD,MAAO,GAAK,cACX,GACD,GAAI,GAAa,EACjB,OAAS,GAAI,EAAG,EAAI,EAAK,SAAS,OAAQ,IAAK,CAC3C,GAAM,GAAQ,EAAK,SAAS,GAC5B,GAAI,EAAO,SAAS,CAAK,GAAK,EAAO,SAAS,CAAK,EAC/C,SAEJ,GAAM,GAAY,GAAgB,EAAO,CAAO,EAChD,GAAI,IAAc,EACd,MAAO,GAEN,AAAI,EAAY,GACjB,GAAa,EAErB,CACA,MAAO,WAEP,MAAO,GAEnB,CACA,GAAM,IAAwB,GAAI,KAAI,CAClC,GACA,GACA,GACA,EACJ,CAAC,EACD,YAAqC,EAAO,EAAS,CACjD,GAAI,EAAM,OAAS,IACf,CAAC,EAAO,SAAS,EAAM,MAAM,GAC7B,GAAsB,IAAI,EAAM,MAAM,EAAG,CACzC,GAAM,GAAM,EAAM,UAAU,GAC5B,GAAI,EAAI,OAAS,EACb,MAAO,IAAgB,EAAK,CAAO,EAElC,GAAI,EAAI,OAAS,GAElB,MAAO,IAA4B,EAAK,CAAO,CAEvD,CACA,MAAO,EACX,CACA,YAAuC,EAAM,EAAS,CAClD,GAAI,GAAa,EACX,EAAQ,GAAa,CAAI,EAC/B,GAAI,GAAS,EAAM,OAAS,GAAyC,CACjE,GAAM,CAAE,cAAe,EACvB,OAAS,GAAI,EAAG,EAAI,EAAW,OAAQ,IAAK,CACxC,GAAM,CAAE,MAAK,SAAU,EAAW,GAC5B,EAAU,GAAgB,EAAK,CAAO,EAC5C,GAAI,IAAY,EACZ,MAAO,GAEX,AAAI,EAAU,GACV,GAAa,GAEjB,GAAI,GAaJ,GAZA,AAAI,EAAM,OAAS,EACf,EAAY,GAAgB,EAAO,CAAO,EAEzC,AAAI,EAAM,OAAS,GAIpB,EAAY,GAA4B,EAAO,CAAO,EAGtD,EAAY,EAEZ,IAAc,EACd,MAAO,GAEX,AAAI,EAAY,GACZ,GAAa,EAErB,CACJ,CACA,MAAO,EACX,CACA,YAAsB,EAAM,CACxB,GAAM,GAAc,EAAK,YACzB,GAAI,EAAY,OAAS,GACrB,MAAO,GAAY,KAE3B,CACA,YAAsB,EAAM,CACxB,GAAM,GAAO,EAAK,UAClB,MAAO,GAAO,SAAS,EAAM,EAAE,EAAI,MACvC,CAEA,YAAgC,EAAM,CAAE,WAAW,GAAI,oBAAoB,GAAO,cAAc,GAAO,gBAAgB,GAAO,iBAAiB,CAAC,EAAG,sBAAsB,CAAC,EAAG,iBAAiB,KAAM,qBAAqB,EAAO,KAAM,kBAAkB,EAAO,KAAM,oBAAoB,CAAC,EAAG,UAAU,KAAM,UAAU,GAAM,MAAM,GAAO,QAAQ,GAAO,aAAa,GAAI,kBAAkB,EAAO,UAAW,SAAS,GAAO,OAAO,GAAO,UAAU,GAAgB,SAAS,GAAe,gBAAgB,CAC1e,GAAM,GAAY,EAAS,QAAQ,QAAS,EAAE,EAAE,MAAM,iBAAiB,EACjE,EAAU,CAEZ,SAAU,GAAa,EAAO,WAAW,EAAO,SAAS,EAAU,EAAE,CAAC,EACtE,oBACA,cACA,gBACA,iBACA,sBACA,iBACA,qBACA,kBACA,oBACA,UACA,UACA,MACA,QACA,aACA,kBACA,SACA,OACA,UACA,SACA,eAEA,OACA,QAAS,GAAI,KACb,WAAY,GAAI,KAChB,WAAY,GAAI,KAChB,OAAQ,CAAC,EACT,QAAS,CAAC,EACV,cAAe,GAAI,KACnB,MAAO,EACP,OAAQ,EACR,YAAa,OAAO,OAAO,IAAI,EAC/B,OAAQ,CACJ,KAAM,EACN,MAAO,EACP,KAAM,EACN,MAAO,CACX,EACA,OAAQ,KACR,YAAa,EACb,WAAY,EACZ,QAAS,GAET,OAAO,EAAM,CACT,GAAM,GAAQ,EAAQ,QAAQ,IAAI,CAAI,GAAK,EAC3C,SAAQ,QAAQ,IAAI,EAAM,EAAQ,CAAC,EAC5B,CACX,EACA,aAAa,EAAM,CACf,GAAM,GAAQ,EAAQ,QAAQ,IAAI,CAAI,EACtC,GAAI,EAAO,CACP,GAAM,GAAe,EAAQ,EAC7B,AAAK,EAID,EAAQ,QAAQ,IAAI,EAAM,CAAY,EAHtC,EAAQ,QAAQ,OAAO,CAAI,CAKnC,CACJ,EACA,aAAa,EAAM,CACf,MAAO,IAAI,GAAc,EAAQ,OAAO,CAAI,IAChD,EACA,YAAY,EAAM,CACd,EAAQ,OAAO,SAAS,EAAQ,YAAc,EAAQ,YAAc,CACxE,EACA,WAAW,EAAM,CACb,GAAM,GAAO,EAAQ,OAAO,SACtB,EAAe,EACf,EAAK,QAAQ,CAAI,EACjB,EAAQ,YACJ,EAAQ,WACR,GACV,AAAI,CAAC,GAAQ,IAAS,EAAQ,YAE1B,GAAQ,YAAc,KACtB,EAAQ,cAAc,GAIlB,EAAQ,WAAa,GACrB,GAAQ,aACR,EAAQ,cAAc,GAG9B,EAAQ,OAAO,SAAS,OAAO,EAAc,CAAC,CAClD,EACA,cAAe,IAAM,CAAE,EACvB,eAAe,EAAK,CAGZ,AAAI,EAAO,SAAS,CAAG,EACnB,EAAM,CAAG,EAER,AAAI,EAAI,YACT,EAAI,YAAY,QAAQ,CAAK,EAExB,EAAI,OAAS,GAClB,EAAM,EAAI,OAAO,CAG7B,EACA,kBAAkB,EAAK,CAEf,AAAI,EAAO,SAAS,CAAG,EACnB,EAAS,CAAG,EAEX,AAAI,EAAI,YACT,EAAI,YAAY,QAAQ,CAAQ,EAE3B,EAAI,OAAS,GAClB,EAAS,EAAI,OAAO,CAGhC,EACA,MAAM,EAAK,CACP,AAAI,EAAO,SAAS,CAAG,GACnB,GAAM,GAAuB,CAAG,GACpC,EAAQ,OAAO,KAAK,CAAG,EACvB,GAAM,GAAa,GAAuB,YAAY,EAAQ,OAAO,SAAU,GAAO,EAAI,IAAK,CAA+B,EAC9H,SAAW,QAAU,EACd,CACX,EACA,MAAM,EAAK,EAAU,GAAO,CACxB,MAAO,IAAsB,EAAQ,SAAU,EAAK,CAAO,CAC/D,CACJ,EAEI,EAAQ,QAAU,GAAI,KAE1B,WAAe,EAAI,CACf,GAAM,CAAE,eAAgB,EACxB,AAAI,EAAY,KAAQ,QACpB,GAAY,GAAM,GAEtB,EAAY,IAChB,CACA,WAAkB,EAAI,CAClB,EAAQ,YAAY,IACxB,CACA,MAAO,EACX,CACA,YAAmB,EAAM,EAAS,CAC9B,GAAM,GAAU,GAAuB,EAAM,CAAO,EACpD,GAAa,EAAM,CAAO,EACtB,EAAQ,aACR,GAAY,EAAM,CAAO,EAExB,EAAQ,KACT,GAAkB,EAAM,CAAO,EAGnC,EAAK,QAAU,CAAC,GAAG,EAAQ,QAAQ,KAAK,CAAC,EACzC,EAAK,WAAa,CAAC,GAAG,EAAQ,UAAU,EACxC,EAAK,WAAa,CAAC,GAAG,EAAQ,UAAU,EACxC,EAAK,QAAU,EAAQ,QACvB,EAAK,OAAS,EAAQ,OACtB,EAAK,MAAQ,EAAQ,MACrB,EAAK,OAAS,EAAQ,OAElB,EAAK,QAAU,CAAC,GAAG,EAAQ,OAAO,CAE1C,CACA,YAA2B,EAAM,EAAS,CACtC,GAAM,CAAE,UAAW,EACb,CAAE,YAAa,EACrB,GAAI,EAAS,SAAW,EAAG,CACvB,GAAM,GAAQ,EAAS,GAEvB,GAAI,GAAoB,EAAM,CAAK,GAAK,EAAM,YAAa,CAGvD,GAAM,GAAc,EAAM,YAC1B,AAAI,EAAY,OAAS,IACrB,GAAU,EAAa,CAAO,EAElC,EAAK,YAAc,CACvB,KAKI,GAAK,YAAc,CAE3B,SACS,EAAS,OAAS,EAAG,CAE1B,GAAI,GAAY,GAChB,EAAO,eAAe,IACtB,EAAK,YAAc,GAAgB,EAAS,EAAO,EAAQ,EAAG,OAAW,EAAK,SAAU,EAAa,GAAK,OAAW,OAAW,GAAM,OAAW,EAAuB,CAC5K,CAEJ,CACA,YAA0B,EAAQ,EAAS,CACvC,GAAI,GAAI,EACF,EAAc,IAAM,CACtB,GACJ,EACA,KAAO,EAAI,EAAO,SAAS,OAAQ,IAAK,CACpC,GAAM,GAAQ,EAAO,SAAS,GAC9B,AAAI,EAAO,SAAS,CAAK,GAEzB,GAAQ,OAAS,EACjB,EAAQ,WAAa,EACrB,EAAQ,cAAgB,EACxB,GAAa,EAAO,CAAO,EAC/B,CACJ,CACA,YAAsB,EAAM,EAAS,CACjC,EAAQ,YAAc,EAEtB,GAAM,CAAE,kBAAmB,EACrB,EAAU,CAAC,EACjB,OAAS,GAAI,EAAG,EAAI,EAAe,OAAQ,IAAK,CAC5C,GAAM,GAAS,EAAe,GAAG,EAAM,CAAO,EAS9C,GARI,GACA,CAAI,EAAO,QAAQ,CAAM,EACrB,EAAQ,KAAK,GAAG,CAAM,EAGtB,EAAQ,KAAK,CAAM,GAGtB,EAAQ,YAMT,EAAO,EAAQ,gBAJf,OAMR,CACA,OAAQ,EAAK,UACJ,GACD,AAAK,EAAQ,KAGT,EAAQ,OAAO,EAAc,EAEjC,UACC,GAED,AAAK,EAAQ,KACT,EAAQ,OAAO,EAAiB,EAEpC,UAEC,GACD,OAAS,GAAI,EAAG,EAAI,EAAK,SAAS,OAAQ,IACtC,GAAa,EAAK,SAAS,GAAI,CAAO,EAE1C,UACC,QACA,QACA,OACA,GACD,GAAiB,EAAM,CAAO,EAC9B,MAGR,EAAQ,YAAc,EACtB,GAAI,GAAI,EAAQ,OAChB,KAAO,KACH,EAAQ,GAAG,CAEnB,CACA,YAA4C,EAAM,EAAI,CAClD,GAAM,GAAU,EAAO,SAAS,CAAI,EAC9B,AAAC,GAAM,IAAM,EACb,AAAC,GAAM,EAAK,KAAK,CAAC,EACxB,MAAO,CAAC,EAAM,IAAY,CACtB,GAAI,EAAK,OAAS,EAA2B,CACzC,GAAM,CAAE,SAAU,EAGlB,GAAI,EAAK,UAAY,GAAiC,EAAM,KAAK,EAAO,EACpE,OAEJ,GAAM,GAAU,CAAC,EACjB,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IAAK,CACnC,GAAM,GAAO,EAAM,GACnB,GAAI,EAAK,OAAS,GAA+B,EAAQ,EAAK,IAAI,EAAG,CAIjE,EAAM,OAAO,EAAG,CAAC,EACjB,IACA,GAAM,GAAS,EAAG,EAAM,EAAM,CAAO,EACrC,AAAI,GACA,EAAQ,KAAK,CAAM,CAC3B,CACJ,CACA,MAAO,EACX,CACJ,CACJ,CAEA,GAAM,IAAkB,gBAClB,GAAc,AAAC,GAAM,GAAG,GAAc,QAAQ,GAAc,KAClE,YAA8B,EAAK,CAAE,OAAO,WAAY,oBAAoB,IAAS,SAAU,UAAW,EAAc,GAAO,WAAW,oBAAqB,UAAU,KAAM,kBAAkB,GAAO,oBAAoB,MAAO,oBAAoB,MAAO,uBAAuB,sBAAuB,MAAM,GAAO,OAAO,GAAO,QAAQ,IAAS,CACpV,GAAM,GAAU,CACZ,OACA,oBACA,UAAW,EACX,WACA,UACA,kBACA,oBACA,oBACA,uBACA,MACA,OACA,QACA,OAAQ,EAAI,IAAI,OAChB,KAAM,GACN,OAAQ,EACR,KAAM,EACN,OAAQ,EACR,YAAa,EACb,KAAM,GACN,IAAK,OACL,OAAO,EAAK,CACR,MAAO,IAAI,GAAc,IAC7B,EACA,KAAK,EAAM,EAAM,CAEb,GADA,EAAQ,MAAQ,EACZ,EAAQ,IAAK,CACb,GAAI,EAAM,CACN,GAAI,GACJ,GAAI,EAAK,OAAS,GAAuC,CAAC,EAAK,SAAU,CACrE,GAAM,GAAU,EAAK,QAAQ,QAAQ,UAAW,EAAE,EAClD,AAAI,IAAY,EAAK,SAAW,GAAmB,CAAO,GACtD,GAAO,EAEf,CACA,EAAW,EAAK,IAAI,MAAO,CAAI,CACnC,CACA,GAA4B,EAAS,CAAI,EACrC,GAAQ,EAAK,MAAQ,IACrB,EAAW,EAAK,IAAI,GAAG,CAE/B,CACJ,EACA,QAAS,CACL,EAAQ,EAAE,EAAQ,WAAW,CACjC,EACA,SAAS,EAAiB,GAAO,CAC7B,AAAI,EACA,EAAE,EAAQ,YAGV,EAAQ,EAAE,EAAQ,WAAW,CAErC,EACA,SAAU,CACN,EAAQ,EAAQ,WAAW,CAC/B,CACJ,EACA,WAAiB,EAAG,CAChB,EAAQ,KAAK;AAAA,EAAO,KAAK,OAAO,CAAC,CAAC,CACtC,CACA,WAAoB,EAAK,EAAM,CAC3B,EAAQ,IAAI,WAAW,CACnB,OACA,OAAQ,EAAQ,SAChB,SAAU,CACN,KAAM,EAAI,KACV,OAAQ,EAAI,OAAS,CACzB,EACA,UAAW,CACP,KAAM,EAAQ,KACd,OAAQ,EAAQ,OAAS,CAC7B,CACJ,CAAC,CACL,CACA,MAAI,IAEA,GAAQ,IAAM,GAAI,IAAU,mBAC5B,EAAQ,IAAI,iBAAiB,EAAU,EAAQ,MAAM,GAElD,CACX,CACA,YAAkB,EAAK,EAAU,CAAC,EAAG,CACjC,GAAM,GAAU,GAAqB,EAAK,CAAO,EACjD,AAAI,EAAQ,kBACR,EAAQ,iBAAiB,CAAO,EACpC,GAAM,CAAE,OAAM,OAAM,oBAAmB,SAAQ,WAAU,UAAS,UAAS,OAAQ,EAC7E,EAAa,EAAI,QAAQ,OAAS,EAClC,EAAe,CAAC,GAAqB,IAAS,SAC9C,EAAa,GAAW,MAAQ,IAAS,SACzC,EAAiB,CAAC,CAAC,EAAQ,OAI3B,EAAkB,EAClB,GAAqB,EAAK,CAAO,EACjC,EACN,AAAI,IAAS,SACT,GAAkB,EAAK,EAAiB,EAAY,CAAc,EAGlE,GAAoB,EAAK,CAAe,EAG5C,GAAM,GAAe,EAAM,YAAc,SACnC,EAAO,EAAM,CAAC,OAAQ,QAAS,UAAW,QAAQ,EAAI,CAAC,OAAQ,QAAQ,EAC7E,AAAI,EAAQ,iBAAmB,CAAC,EAAQ,QAEpC,EAAK,KAAK,SAAU,SAAU,QAAS,UAAU,EAErD,GAAM,GAAY,EAAQ,KACpB,EAAK,IAAI,GAAO,GAAG,QAAU,EAAE,KAAK,GAAG,EACvC,EAAK,KAAK,IAAI,EAqCpB,GApCA,AACI,EADJ,AAAI,EACK,IAAI,UAGJ,YAAY,KAAgB,MAHP,EAK9B,EAAO,EACH,GACA,GAAK,eAAe,EACpB,EAAO,EAGH,GACA,GAAK,WAAW,EAAI,QAAQ,IAAI,EAAW,EAAE,KAAK,IAAI,YAAY,EAClE,EAAK;AAAA,CAAI,EACT,EAAQ,IAIZ,EAAI,WAAW,QACf,IAAU,EAAI,WAAY,YAAa,CAAO,EAC1C,GAAI,WAAW,QAAU,EAAI,MAAQ,IACrC,EAAQ,GAGZ,EAAI,WAAW,QACf,IAAU,EAAI,WAAY,YAAa,CAAO,EAC1C,EAAI,MAAQ,GACZ,EAAQ,GAGZ,EAAI,SAAW,EAAI,QAAQ,QAC3B,GAAQ,EACR,GAAU,EAAI,QAAS,SAAU,CAAO,EACxC,EAAQ,GAER,EAAI,MAAQ,EAAG,CACf,EAAK,MAAM,EACX,OAAS,GAAI,EAAG,EAAI,EAAI,MAAO,IAC3B,EAAK,GAAG,EAAI,EAAI,KAAO,UAAU,GAAG,CAE5C,CACA,MAAI,GAAI,WAAW,QAAU,EAAI,WAAW,QAAU,EAAI,QACtD,GAAK;AAAA,CAAI,EACT,EAAQ,GAGP,GACD,EAAK,SAAS,EAElB,AAAI,EAAI,YACJ,GAAQ,EAAI,YAAa,CAAO,EAGhC,EAAK,MAAM,EAEX,GACA,GAAS,EACT,EAAK,GAAG,GAEZ,EAAS,EACT,EAAK,GAAG,EACD,CACH,MACA,KAAM,EAAQ,KACd,SAAU,EAAiB,EAAgB,KAAO,GAElD,IAAK,EAAQ,IAAM,EAAQ,IAAI,OAAO,EAAI,MAC9C,CACJ,CACA,YAA6B,EAAK,EAAS,CACvC,GAAM,CAAE,MAAK,oBAAmB,OAAM,UAAS,oBAAmB,oBAAmB,wBAAyB,EACxG,EAAa,EACb,WAAW,KAAK,UAAU,CAAiB,KAC3C,EAKN,GAAI,EAAI,QAAQ,OAAS,GACrB,GAAI,EACA,EAAK,WAAW,EAAI,QAAQ,IAAI,EAAW,EAAE,KAAK,IAAI,SAAS;AAAA,CAAc,UAK7E,EAAK,gBAAgB;AAAA,CAAc,EAI/B,EAAI,OAAO,OAAQ,CACnB,GAAM,GAAgB,CAClB,GACA,GACA,GACA,GACA,EACJ,EACK,OAAO,GAAU,EAAI,QAAQ,SAAS,CAAM,CAAC,EAC7C,IAAI,EAAW,EACf,KAAK,IAAI,EACd,EAAK,WAAW;AAAA,CAA0B,CAC9C,EAIR,AAAI,EAAI,YAAc,EAAI,WAAW,QAEjC,EAAK,WAAW,EAAI,WACf,IAAI,EAAW,EACf,KAAK,IAAI,kBAAkB;AAAA,CAA0B,EAE9D,GAAU,EAAI,OAAQ,CAAO,EAC7B,EAAQ,EACR,EAAK,SAAS,CAClB,CACA,YAA2B,EAAK,EAAS,EAAY,EAAQ,CACzD,GAAM,CAAE,OAAM,UAAS,kBAAiB,oBAAmB,wBAAyB,EACpF,AAAI,GAAc,EAAI,OAAO,QACzB,EAAI,QAAQ,KAAK,GAAe,EAAY,EAG5C,EAAI,QAAQ,QACZ,CAAI,EAMA,GAAK,YAAY,EAAI,QAChB,IAAI,GAAK,GAAc,EAAE,EACzB,KAAK,IAAI,YAAY,KAAK,UAAU,CAAiB;AAAA,CAAK,EAC/D,EAAK;AAAA;AAAA,QAA2D,EAAI,QAC/D,IAAI,GAAK,IAAI,GAAc,QAAQ,GAAc,IAAI,EACrD,KAAK,IAAI;AAAA,CAAK,GAGnB,EAAK,YAAY,EAAI,QAChB,IAAI,GAAK,GAAG,GAAc,UAAU,GAAc,IAAI,EACtD,KAAK,IAAI,YAAY,KAAK,UAAU,CAAiB;AAAA,CAAK,GAGnE,EAAI,YAAc,EAAI,WAAW,QACjC,EAAK,YAAY,EAAI,WAChB,IAAI,GAAK,GAAG,GAAc,UAAU,GAAc,IAAI,EACtD,KAAK,IAAI,aAAa;AAAA,CAAyB,EAEpD,EAAI,QAAQ,QACZ,IAAW,EAAI,QAAS,CAAO,EAC/B,EAAQ,GAEZ,GAAU,EAAI,OAAQ,CAAO,EAC7B,EAAQ,EACH,GACD,EAAK,SAAS,CAEtB,CACA,YAAmB,EAAQ,EAAM,CAAE,SAAQ,OAAM,UAAS,QAAQ,CAC9D,GAAM,GAAW,EAAO,IAAS,SAC3B,GACA,IAAS,YACL,GACA,EAAiB,EAC3B,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,IAAK,CACpC,GAAI,GAAK,EAAO,GAEV,EAAqB,EAAG,SAAS,QAAQ,EAC/C,AAAI,GACA,GAAK,EAAG,MAAM,EAAG,EAAE,GAEvB,EAAK,SAAS,GAAe,EAAI,CAAI,OAAO,KAAY,KAAK,UAAU,CAAE,IAAI,EAAqB,SAAW,MAAM,EAAO,IAAM,IAAI,EAChI,EAAI,EAAO,OAAS,GACpB,EAAQ,CAEhB,CACJ,CACA,YAAmB,EAAQ,EAAS,CAChC,GAAI,CAAC,EAAO,OACR,OAEJ,EAAQ,KAAO,GACf,GAAM,CAAE,OAAM,UAAS,SAAQ,UAAS,QAAS,EAC3C,EAAa,GAAW,MAAQ,IAAS,WAC/C,EAAQ,EAEJ,GACA,GAAK,8BAA8B,EAAO,EAAa,MAAM,aAAmB,EAAO,EAAY,QAAQ,EAC3G,EAAQ,GAEZ,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,IAAK,CACpC,GAAM,GAAM,EAAO,GACnB,GAAI,EAAK,CACL,GAAM,GAAqB,GAAc,EAAI,OAAS,GACtD,EAAK,kBAAkB,EAAI,OAAO,EAAqB,GAAG,yBAAwC,IAAI,EACtG,GAAQ,EAAK,CAAO,EAChB,GACA,EAAK,GAAG,EAEZ,EAAQ,CACZ,CACJ,CACA,EAAQ,KAAO,EACnB,CACA,YAAoB,EAAgB,EAAS,CACzC,AAAI,CAAC,EAAe,QAGpB,EAAe,QAAQ,GAAW,CAC9B,EAAQ,KAAK,SAAS,EACtB,GAAQ,EAAQ,IAAK,CAAO,EAC5B,EAAQ,KAAK,UAAU,EAAQ,OAAO,EACtC,EAAQ,QAAQ,CACpB,CAAC,CACL,CACA,YAAkB,EAAG,CACjB,MAAQ,GAAO,SAAS,CAAC,GACrB,EAAE,OAAS,GACX,EAAE,OAAS,GACX,EAAE,OAAS,GACX,EAAE,OAAS,CACnB,CACA,YAA4B,EAAO,EAAS,CACxC,GAAM,GAAa,EAAM,OAAS,GAC7B,EAAM,KAAK,GAAK,EAAO,QAAQ,CAAC,GAAK,CAAC,GAAS,CAAC,CAAC,EACtD,EAAQ,KAAK,GAAG,EAChB,GAAc,EAAQ,OAAO,EAC7B,GAAY,EAAO,EAAS,CAAU,EACtC,GAAc,EAAQ,SAAS,EAC/B,EAAQ,KAAK,GAAG,CACpB,CACA,YAAqB,EAAO,EAAS,EAAa,GAAO,EAAQ,GAAM,CACnE,GAAM,CAAE,OAAM,WAAY,EAC1B,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IAAK,CACnC,GAAM,GAAO,EAAM,GACnB,AAAI,EAAO,SAAS,CAAI,EACpB,EAAK,CAAI,EAER,AAAI,EAAO,QAAQ,CAAI,EACxB,GAAmB,EAAM,CAAO,EAGhC,GAAQ,EAAM,CAAO,EAErB,EAAI,EAAM,OAAS,GACnB,CAAI,EACA,IAAS,EAAK,GAAG,EACjB,EAAQ,GAGR,GAAS,EAAK,IAAI,EAG9B,CACJ,CACA,YAAiB,EAAM,EAAS,CAC5B,GAAI,EAAO,SAAS,CAAI,EAAG,CACvB,EAAQ,KAAK,CAAI,EACjB,MACJ,CACA,GAAI,EAAO,SAAS,CAAI,EAAG,CACvB,EAAQ,KAAK,EAAQ,OAAO,CAAI,CAAC,EACjC,MACJ,CACA,OAAQ,EAAK,UACJ,OACA,OACA,IACD,GAAQ,EAAK,YAAa,CAAO,EACjC,UACC,GACD,GAAQ,EAAM,CAAO,EACrB,UACC,GACD,GAAc,EAAM,CAAO,EAC3B,UACC,GACD,GAAiB,EAAM,CAAO,EAC9B,UACC,IACD,GAAQ,EAAK,YAAa,CAAO,EACjC,UACC,GACD,GAAsB,EAAM,CAAO,EACnC,UACC,GACD,GAAW,EAAM,CAAO,EACxB,UACC,IACD,GAAa,EAAM,CAAO,EAC1B,UACC,IACD,GAAkB,EAAM,CAAO,EAC/B,UACC,IACD,GAAoB,EAAM,CAAO,EACjC,UACC,IACD,GAAmB,EAAM,CAAO,EAChC,UACC,IACD,GAAsB,EAAM,CAAO,EACnC,UACC,IACD,GAAyB,EAAM,CAAO,EACtC,UACC,IACD,GAAmB,EAAM,CAAO,EAChC,UACC,IACD,GAAY,EAAK,KAAM,EAAS,GAAM,EAAK,EAC3C,UAEC,IACD,GAAmB,EAAM,CAAO,EAChC,UACC,IACD,GAAe,EAAM,CAAO,EAC5B,UACC,IACD,GAAwB,EAAM,CAAO,EACrC,UACC,IACD,GAAsB,EAAM,CAAO,EACnC,UACC,IACD,GAAmB,EAAM,CAAO,EAChC,MAEZ,CACA,YAAiB,EAAM,EAAS,CAC5B,EAAQ,KAAK,KAAK,UAAU,EAAK,OAAO,EAAG,CAAI,CACnD,CACA,YAAuB,EAAM,EAAS,CAClC,GAAM,CAAE,UAAS,YAAa,EAC9B,EAAQ,KAAK,EAAW,KAAK,UAAU,CAAO,EAAI,EAAS,CAAI,CACnE,CACA,YAA0B,EAAM,EAAS,CACrC,GAAM,CAAE,OAAM,SAAQ,QAAS,EAC/B,AAAI,GACA,EAAK,EAAe,EACxB,EAAK,GAAG,EAAO,EAAiB,IAAI,EACpC,GAAQ,EAAK,QAAS,CAAO,EAC7B,EAAK,GAAG,CACZ,CACA,YAA+B,EAAM,EAAS,CAC1C,OAAS,GAAI,EAAG,EAAI,EAAK,SAAS,OAAQ,IAAK,CAC3C,GAAM,GAAQ,EAAK,SAAS,GAC5B,AAAI,EAAO,SAAS,CAAK,EACrB,EAAQ,KAAK,CAAK,EAGlB,GAAQ,EAAO,CAAO,CAE9B,CACJ,CACA,YAAoC,EAAM,EAAS,CAC/C,GAAM,CAAE,QAAS,EACjB,GAAI,EAAK,OAAS,EACd,EAAK,GAAG,EACR,GAAsB,EAAM,CAAO,EACnC,EAAK,GAAG,UAEH,EAAK,SAAU,CAEpB,GAAM,GAAO,GAAmB,EAAK,OAAO,EACtC,EAAK,QACL,KAAK,UAAU,EAAK,OAAO,EACjC,EAAK,EAAM,CAAI,CACnB,KAEI,GAAK,IAAI,EAAK,WAAY,CAAI,CAEtC,CACA,YAAoB,EAAM,EAAS,CAC/B,GAAM,CAAE,OAAM,SAAQ,QAAS,EAC/B,AAAI,GACA,EAAK,EAAe,EAExB,EAAK,GAAG,EAAO,EAAc,KAAK,KAAK,UAAU,EAAK,OAAO,KAAM,CAAI,CAC3E,CACA,YAAsB,EAAM,EAAS,CACjC,GAAM,CAAE,OAAM,SAAQ,QAAS,EACzB,CAAE,MAAK,QAAO,WAAU,YAAW,eAAc,aAAY,UAAS,kBAAiB,eAAgB,EAC7G,AAAI,GACA,EAAK,EAAO,EAAe,EAAI,GAAG,EAElC,GACA,EAAK,IAAI,EAAO,EAAU,KAAK,EAAkB,OAAS,OAAO,EAEjE,GACA,EAAK,EAAe,EAExB,GAAM,GAAa,EACb,GAAoB,EAAQ,MAAO,CAAW,EAC9C,GAAe,EAAQ,MAAO,CAAW,EAC/C,EAAK,EAAO,CAAU,EAAI,IAAK,CAAI,EACnC,GAAY,GAAgB,CAAC,EAAK,EAAO,EAAU,EAAW,CAAY,CAAC,EAAG,CAAO,EACrF,EAAK,GAAG,EACJ,GACA,EAAK,GAAG,EAER,GACA,GAAK,IAAI,EACT,GAAQ,EAAY,CAAO,EAC3B,EAAK,GAAG,EAEhB,CACA,YAAyB,EAAM,CAC3B,GAAI,GAAI,EAAK,OACb,KAAO,KACC,EAAK,IAAM,MAAf,CAGJ,MAAO,GAAK,MAAM,EAAG,EAAI,CAAC,EAAE,IAAI,GAAO,GAAO,MAAM,CACxD,CAEA,YAA2B,EAAM,EAAS,CACtC,GAAM,CAAE,OAAM,SAAQ,QAAS,EACzB,EAAS,EAAO,SAAS,EAAK,MAAM,EAAI,EAAK,OAAS,EAAO,EAAK,MAAM,EAC9E,AAAI,GACA,EAAK,EAAe,EAExB,EAAK,EAAS,IAAK,CAAI,EACvB,GAAY,EAAK,UAAW,CAAO,EACnC,EAAK,GAAG,CACZ,CACA,YAA6B,EAAM,EAAS,CACxC,GAAM,CAAE,OAAM,SAAQ,WAAU,WAAY,EACtC,CAAE,cAAe,EACvB,GAAI,CAAC,EAAW,OAAQ,CACpB,EAAK,KAAM,CAAI,EACf,MACJ,CACA,GAAM,GAAa,EAAW,OAAS,GAClC,EAAW,KAAK,GAAK,EAAE,MAAM,OAAS,CAAmC,EAC9E,EAAK,EAAa,IAAM,IAAI,EAC5B,GAAc,EAAO,EACrB,OAAS,GAAI,EAAG,EAAI,EAAW,OAAQ,IAAK,CACxC,GAAM,CAAE,MAAK,SAAU,EAAW,GAElC,GAA2B,EAAK,CAAO,EACvC,EAAK,IAAI,EAET,GAAQ,EAAO,CAAO,EAClB,EAAI,EAAW,OAAS,GAExB,GAAK,GAAG,EACR,EAAQ,EAEhB,CACA,GAAc,EAAS,EACvB,EAAK,EAAa,IAAM,IAAI,CAChC,CACA,YAA4B,EAAM,EAAS,CACvC,GAAmB,EAAK,SAAU,CAAO,CAC7C,CACA,YAA+B,EAAM,EAAS,CAC1C,GAAM,CAAE,OAAM,SAAQ,YAAa,EAC7B,CAAE,SAAQ,UAAS,OAAM,UAAS,UAAW,EACnD,AAAI,GAEA,EAAK,IAAI,GAAc,MAAY,EAEvC,EAAK,IAAK,CAAI,EACd,AAAI,EAAO,QAAQ,CAAM,EACrB,GAAY,EAAQ,CAAO,EAEtB,GACL,GAAQ,EAAQ,CAAO,EAE3B,EAAK,OAAO,EACR,IAAW,IACX,GAAK,GAAG,EACR,EAAO,GAEX,AAAI,EACI,IACA,EAAK,SAAS,EAElB,AAAI,EAAO,QAAQ,CAAO,EACtB,GAAmB,EAAS,CAAO,EAGnC,GAAQ,EAAS,CAAO,GAGvB,GACL,GAAQ,EAAM,CAAO,EAErB,IAAW,IACX,GAAS,EACT,EAAK,GAAG,GAER,GACI,GAAK,iBACL,EAAK,mBAAmB,EAE5B,EAAK,GAAG,EAEhB,CACA,YAAkC,EAAM,EAAS,CAC7C,GAAM,CAAE,OAAM,aAAY,YAAW,QAAS,GAAgB,EACxD,CAAE,OAAM,SAAQ,WAAU,WAAY,EAC5C,GAAI,EAAK,OAAS,EAAqC,CACnD,GAAM,GAAc,CAAC,GAAmB,EAAK,OAAO,EACpD,GAAe,EAAK,GAAG,EACvB,GAAc,EAAM,CAAO,EAC3B,GAAe,EAAK,GAAG,CAC3B,KAEI,GAAK,GAAG,EACR,GAAQ,EAAM,CAAO,EACrB,EAAK,GAAG,EAEZ,GAAe,EAAO,EACtB,EAAQ,cACR,GAAe,EAAK,GAAG,EACvB,EAAK,IAAI,EACT,GAAQ,EAAY,CAAO,EAC3B,EAAQ,cACR,GAAe,EAAQ,EACvB,GAAe,EAAK,GAAG,EACvB,EAAK,IAAI,EACT,GAAM,GAAW,EAAU,OAAS,GACpC,AAAK,GACD,EAAQ,cAEZ,GAAQ,EAAW,CAAO,EACrB,GACD,EAAQ,cAEZ,GAAe,EAAS,EAA0B,CACtD,CACA,YAA4B,EAAM,EAAS,CACvC,GAAM,CAAE,OAAM,SAAQ,SAAQ,WAAU,WAAY,EACpD,EAAK,UAAU,EAAK,aAAa,EAC7B,EAAK,SACL,GAAO,EACP,EAAK,GAAG,EAAO,EAAkB,QAAQ,EACzC,EAAQ,GAEZ,EAAK,UAAU,EAAK,WAAW,EAC/B,GAAQ,EAAK,MAAO,CAAO,EACvB,EAAK,SACL,GAAK,GAAG,EACR,EAAQ,EACR,EAAK,GAAG,EAAO,EAAkB,OAAO,EACxC,EAAQ,EACR,EAAK,UAAU,EAAK,QAAQ,EAC5B,EAAS,GAEb,EAAK,GAAG,CACZ,CACA,YAA4B,EAAM,EAAS,CACvC,GAAM,CAAE,OAAM,SAAQ,YAAa,EACnC,EAAK,GAAG,EACR,GAAM,GAAI,EAAK,SAAS,OAClB,EAAa,EAAI,EACvB,OAAS,GAAI,EAAG,EAAI,EAAG,IAAK,CACxB,GAAM,GAAI,EAAK,SAAS,GACxB,AAAI,EAAO,SAAS,CAAC,EACjB,EAAK,EAAE,QAAQ,aAAc,MAAM,CAAC,EAGpC,GAAK,IAAI,EACL,GACA,EAAO,EACX,GAAQ,EAAG,CAAO,EACd,GACA,EAAS,EACb,EAAK,GAAG,EAEhB,CACA,EAAK,GAAG,CACZ,CACA,YAAwB,EAAM,EAAS,CACnC,GAAM,CAAE,OAAM,SAAQ,YAAa,EAC7B,CAAE,OAAM,aAAY,aAAc,EACxC,EAAK,MAAM,EACX,GAAQ,EAAM,CAAO,EACrB,EAAK,KAAK,EACV,EAAO,EACP,GAAQ,EAAY,CAAO,EAC3B,EAAS,EACT,EAAK,GAAG,EACJ,GACA,GAAK,QAAQ,EACb,AAAI,EAAU,OAAS,GACnB,GAAe,EAAW,CAAO,EAGjC,GAAK,GAAG,EACR,EAAO,EACP,GAAQ,EAAW,CAAO,EAC1B,EAAS,EACT,EAAK,GAAG,GAGpB,CACA,YAAiC,EAAM,EAAS,CAC5C,GAAQ,EAAK,KAAM,CAAO,EAC1B,EAAQ,KAAK,KAAK,EAClB,GAAQ,EAAK,MAAO,CAAO,CAC/B,CACA,YAA+B,EAAM,EAAS,CAC1C,EAAQ,KAAK,GAAG,EAChB,GAAY,EAAK,YAAa,CAAO,EACrC,EAAQ,KAAK,GAAG,CACpB,CACA,YAA4B,CAAE,WAAW,EAAS,CAC9C,EAAQ,KAAK,SAAS,EACtB,AAAI,EAAO,QAAQ,CAAO,EACtB,GAAmB,EAAS,CAAO,EAGnC,GAAQ,EAAS,CAAO,CAEhC,CAEA,YAAyB,EAAM,EAAc,EAAa,GAAO,EAAc,CAAC,EAAG,EAAW,OAAO,OAAO,IAAI,EAAG,CAC/G,GAAM,GAAU,EAAK,OAAS,WAC1B,EAAK,KAAK,GAAG,OAAS,uBACtB,EAAK,KAAK,GAAG,WACjB,GAAa,KAAK,EAAM,CACpB,MAAM,EAAM,EAAQ,CAEhB,GADA,GAAU,EAAY,KAAK,CAAM,EAC7B,GACA,EAAO,KAAK,WAAW,IAAI,GAC3B,EAAO,OAAS,kBAChB,EAAO,OAAS,uBAChB,EAAO,OAAS,kBAChB,MAAO,MAAK,KAAK,EAErB,GAAI,EAAK,OAAS,aAAc,CAC5B,GAAM,GAAU,CAAC,CAAC,EAAS,EAAK,MAC1B,EAAU,GAAuB,EAAM,EAAQ,CAAW,EAChE,AAAI,IAAe,GAAW,CAAC,IAC3B,EAAa,EAAM,EAAQ,EAAa,EAAS,CAAO,CAEhE,KACK,AAAI,GAAK,OAAS,kBACnB,EAAO,OAAS,gBAChB,EAAK,UAAY,GAEhB,AAAI,GAAe,CAAI,EAGxB,GAAmB,EAAM,GAAM,GAAoB,EAAM,EAAI,CAAQ,CAAC,EAEjE,EAAK,OAAS,kBAEnB,GAAsB,EAAM,GAAM,GAAoB,EAAM,EAAI,CAAQ,CAAC,CAEjF,EACA,MAAM,EAAM,EAAQ,CAEhB,GADA,GAAU,EAAY,IAAI,EACtB,IAAS,GAAW,EAAK,SACzB,OAAW,KAAM,GAAK,SAClB,EAAS,KACL,EAAS,KAAQ,GACjB,MAAO,GAAS,EAIhC,CACJ,CAAC,CACL,CACA,YAAgC,EAAI,EAAQ,EAAa,CACrD,GAAI,CAAC,EACD,MAAO,GAGX,GAAI,EAAG,OAAS,YACZ,MAAO,GAEX,GAAI,GAAa,EAAI,CAAM,EACvB,MAAO,GAIX,OAAQ,EAAO,UACN,2BACA,oBACD,MAAO,OACN,oBACA,eACD,MAAO,IAA0B,EAAQ,CAAW,EAE5D,MAAO,EACX,CACA,YAAmC,EAAQ,EAAa,CACpD,GAAI,GACC,GAAO,OAAS,kBAAoB,EAAO,OAAS,gBAAiB,CACtE,GAAI,GAAI,EAAY,OACpB,KAAO,KAAK,CACR,GAAM,GAAI,EAAY,GACtB,GAAI,EAAE,OAAS,uBACX,MAAO,GAEN,GAAI,EAAE,OAAS,kBAAoB,CAAC,EAAE,KAAK,SAAS,SAAS,EAC9D,KAER,CACJ,CACA,MAAO,EACX,CACA,YAA4B,EAAM,EAAS,CACvC,OAAW,KAAK,GAAK,OACjB,OAAW,KAAM,IAAmB,CAAC,EACjC,EAAQ,CAAE,CAGtB,CACA,YAA+B,EAAO,EAAS,CAC3C,OAAW,KAAQ,GAAM,KACrB,GAAI,EAAK,OAAS,sBAAuB,CACrC,GAAI,EAAK,QACL,SACJ,OAAW,KAAQ,GAAK,aACpB,OAAW,KAAM,IAAmB,EAAK,EAAE,EACvC,EAAQ,CAAE,CAGtB,SACS,EAAK,OAAS,uBACnB,EAAK,OAAS,mBAAoB,CAClC,GAAI,EAAK,SAAW,CAAC,EAAK,GACtB,SACJ,EAAQ,EAAK,EAAE,CACnB,CAER,CACA,YAA4B,EAAO,EAAQ,CAAC,EAAG,CAC3C,OAAQ,EAAM,UACL,aACD,EAAM,KAAK,CAAK,EAChB,UACC,mBACD,GAAI,GAAS,EACb,KAAO,EAAO,OAAS,oBACnB,EAAS,EAAO,OAEpB,EAAM,KAAK,CAAM,EACjB,UACC,gBACD,OAAW,KAAQ,GAAM,WACrB,AAAI,EAAK,OAAS,cACd,GAAmB,EAAK,SAAU,CAAK,EAGvC,GAAmB,EAAK,MAAO,CAAK,EAG5C,UACC,eACD,EAAM,SAAS,QAAQ,GAAW,CAC9B,AAAI,GACA,GAAmB,EAAS,CAAK,CACzC,CAAC,EACD,UACC,cACD,GAAmB,EAAM,SAAU,CAAK,EACxC,UACC,oBACD,GAAmB,EAAM,KAAM,CAAK,EACpC,MAER,MAAO,EACX,CACA,YAA6B,EAAM,EAAO,EAAU,CAChD,GAAM,CAAE,QAAS,EACjB,AAAI,EAAK,UAAY,EAAK,SAAS,IAAI,CAAI,GAG3C,CAAI,IAAQ,GACR,EAAS,KAGT,EAAS,GAAQ,EAEpB,GAAK,UAAa,GAAK,SAAW,GAAI,OAAQ,IAAI,CAAI,EAC3D,CACA,GAAM,IAAiB,AAAC,GACb,8CAA8C,KAAK,EAAK,IAAI,EAEjE,GAAmB,AAAC,GAAS,GAC9B,GAAK,OAAS,kBAAoB,EAAK,OAAS,iBACjD,CAAC,EAAK,SACJ,GAAsB,CAAC,EAAM,IAAW,GAAiB,CAAM,GAAK,EAAO,MAAQ,EAUzF,YAAsB,EAAM,EAAQ,EAAa,CAC7C,OAAQ,EAAO,UAIN,uBACA,2BACD,MAAI,GAAO,WAAa,EACb,CAAC,CAAC,EAAO,SAEb,EAAO,SAAW,MACxB,sBACD,MAAO,GAAO,SAAW,MAGxB,qBACD,MAAO,GAAO,OAAS,MAGtB,0BACD,MAAO,GAAO,OAAS,MAKtB,cACD,MAAO,OAIN,kBACA,yBACA,eACD,MAAI,GAAO,MAAQ,EACR,CAAC,CAAC,EAAO,SAEb,OAKN,iBACD,MAAI,GAAO,MAAQ,EACR,CAAC,CAAC,EAAO,SAGb,CAAC,GAAe,EAAY,OAAS,oBAI3C,gBACD,MAAI,GAAO,MAAQ,EACR,CAAC,CAAC,EAAO,SAEb,OACN,uBACD,MAAO,GAAO,MAAQ,MAGrB,uBACA,kBACD,MAAO,GAAO,aAAe,MAG5B,uBACD,MAAO,GAAO,QAAU,MAGvB,oBACD,MAAO,GAAO,QAAU,MAEvB,mBACD,MAAO,OAEN,cACD,MAAO,OAEN,cACD,MAAO,OACN,qBACA,oBACD,MAAO,OAGN,0BACA,qBACD,MAAO,OAGN,+BACA,yBACD,MAAO,OAIN,kBAED,MAAI,IAAgB,MAA0C,EAAY,OAC/D,GAEJ,EAAO,QAAU,MAMvB,6BACA,+BACA,kBACD,MAAO,OAEN,kBACD,MAAO,OAEN,eACD,MAAO,OAGN,oBACA,eACD,MAAO,OAGN,eACD,MAAO,OAGN,qBACD,MAAO,GAAO,MAAQ,MAGrB,eACD,MAAO,GAAO,KAAO,MAGpB,sBACD,MAAI,GAAO,MAAQ,EACR,CAAC,CAAC,EAAO,SAEb,GAEf,MAAO,EACX,CAEA,GAAM,IAAqC,EAAO,QAAQ,sBAAsB,EAC1E,GAAsB,CAAC,EAAM,IAAY,CAC3C,GAAI,EAAK,OAAS,EACd,EAAK,QAAU,GAAkB,EAAK,QAAS,CAAO,UAEjD,EAAK,OAAS,EAEnB,OAAS,GAAI,EAAG,EAAI,EAAK,MAAM,OAAQ,IAAK,CACxC,GAAM,GAAM,EAAK,MAAM,GAEvB,GAAI,EAAI,OAAS,GAA+B,EAAI,OAAS,MAAO,CAChE,GAAM,GAAM,EAAI,IACV,EAAM,EAAI,IAGhB,AAAI,GACA,EAAI,OAAS,GACb,CAAE,GAAI,OAAS,MAAQ,IACvB,GAAI,IAAM,GAAkB,EAAK,EAEjC,EAAI,OAAS,MAAM,GAEnB,GAAO,EAAI,OAAS,GAAuC,CAAC,EAAI,UAChE,GAAI,IAAM,GAAkB,EAAK,CAAO,EAEhD,CACJ,CAER,EAIA,YAA2B,EAAM,EAGjC,EAAW,GAEX,EAAkB,GAAO,EAAY,OAAO,OAAO,EAAQ,WAAW,EAAG,CACrE,GAAI,CAAC,EAAQ,mBAAqB,CAAC,EAAK,QAAQ,KAAK,EACjD,MAAO,GAEX,GAAM,CAAE,SAAQ,mBAAoB,EAC9B,EAAoB,CAAC,EAAK,EAAQ,IAAO,CAC3C,GAAM,GAAO,EAAO,OAAO,EAAiB,CAAG,GAAK,EAAgB,GACpE,GAAI,EAAQ,CAER,GAAM,GAAmB,GAAU,EAAO,OAAS,wBAA0B,EAAO,OAAS,EAEvF,EAAc,GAAU,EAAO,OAAS,oBAAsB,EAAO,WAAa,EAElF,EAA0B,GAAU,GAA0B,EAAQ,CAAW,EACvF,GAAI,IAAS,eACT,IAAS,wBACT,EAAU,GACV,MAAO,GAEN,GAAI,IAAS,YACd,MAAO,GAAG,UAET,GAAI,IAAS,kBAKd,MAAO,IAAoB,GAAe,EACpC,GAAG,UACH,GAAG,EAAQ,aAAa,EAAK,KAAK,KAEvC,GAAI,IAAS,YACd,GAAI,EAAkB,CAMlB,GAAM,CAAE,MAAO,EAAM,YAAa,EAC5B,EAAO,EAAO,MAAM,EAAK,MAAQ,EAAG,EAAK,IAAM,CAAC,EAChD,EAAa,GAAoB,GAAkB,GAAuB,EAAM,EAAK,EAAG,EAAS,GAAO,GAAO,CAAQ,CAAC,EAC9H,MAAO,GAAG,EAAQ,aAAa,EAAM,KAAK,KAAO,EAAQ,KAAO;AAAA,EAAoB,QAAQ,WAAa,KAAY,OAAgB,GACzI,SACS,EAAa,CAGlB,EAAG,MAAQ,EAAO,MAClB,EAAG,IAAM,EAAO,IAChB,GAAM,CAAE,OAAQ,EAAU,YAAa,EACjC,EAAS,EAAW,EAAW,GAC/B,EAAU,EAAW,GAAK,EAGhC,MAAO,GAAG,EAAQ,aAAa,EAAM,KAAK,KAAO,EAAQ,KAAO;AAAA,EAAoB,QAAQ,IAAS,UAAY,OAAa,IAAS,IAAM,GACjJ,KACK,OAAI,GAME,EAGA,GAAG,EAAQ,aAAa,EAAK,KAAK,SAG5C,IAAI,IAAS,QAGd,MAAO,GAAO,kBAAkB,CAAG,EAElC,GAAI,IAAS,gBAEd,MAAO,GAAO,kBAAkB,EAAgB,eAAe,EAAI,EAE3E,KACK,CACD,GAAI,GAAQ,EAAK,WAAW,OAAO,EAE/B,MAAO,UAAU,IAEhB,GAAI,IAAS,gBACd,MAAO,WAAW,EAAgB,eAAe,OAEhD,GAAI,EACL,MAAO,IAAI,KAAQ,GAE3B,CAEA,MAAO,QAAQ,GACnB,EAEM,EAAS,EAAK,QAEd,EAAe,EAAO,QAAQ,GAAG,EAAI,IAAM,EAAO,QAAQ,GAAG,EAAI,EACvE,GAAI,GAAmB,CAAM,EAAG,CAC5B,GAAM,GAAsB,EAAQ,YAAY,GAC1C,EAAkB,EAAO,sBAAsB,CAAM,EACrD,EAAY,GAAqB,CAAM,EAC7C,MAAI,CAAC,GAAY,CAAC,GAAuB,CAAC,GAAmB,CAAC,EAGtD,GAAgB,EAAK,WAAa,eAClC,GAAK,UAAY,GAErB,EAAK,QAAU,EAAkB,CAAM,GAEjC,GACN,CAAI,EACA,EAAK,UAAY,EAGjB,EAAK,UAAY,GAGlB,CACX,CACA,GAAI,GAME,EAAS,EACT,IAAI,KACJ,IAAI,KAAU,EAAW,OAAS,KACxC,GAAI,CACA,EAAM,GAAO,MAAM,EAAQ,CACvB,QAAS,EAAQ,iBACrB,CAAC,EAAE,OACP,OACO,EAAP,CACI,SAAQ,QAAQ,GAAoB,GAA0C,EAAK,IAAK,OAAW,EAAE,OAAO,CAAC,EACtG,CACX,CACA,GAAM,GAAM,CAAC,EACP,EAAc,CAAC,EACf,EAAW,OAAO,OAAO,EAAQ,WAAW,EAClD,GAAgB,EAAK,CAAC,EAAM,EAAQ,EAAG,EAAc,IAAY,CAK7D,GAJI,GAAoB,EAAM,CAAM,GAIhC,EAAK,KAAK,WAAW,UAAU,EAC/B,OAEJ,GAAM,GAAa,GAAgB,GAAU,CAAI,EACjD,AAAI,GAAc,CAAC,EACX,IAAiB,CAAM,GAAK,EAAO,WACnC,GAAK,OAAS,GAAG,EAAK,UAE1B,EAAK,KAAO,EAAkB,EAAK,KAAM,EAAQ,CAAI,EACrD,EAAI,KAAK,CAAI,GAKT,EAAE,IAAc,IAAY,CAAC,GAC7B,GAAK,WAAa,IAItB,EAAI,KAAK,CAAI,EAErB,EAAG,GACH,EAAa,CAAQ,EAKrB,GAAM,GAAW,CAAC,EAClB,EAAI,KAAK,CAAC,EAAG,IAAM,EAAE,MAAQ,EAAE,KAAK,EACpC,EAAI,QAAQ,CAAC,EAAI,IAAM,CAEnB,GAAM,GAAQ,EAAG,MAAQ,EACnB,EAAM,EAAG,IAAM,EACf,EAAO,EAAI,EAAI,GACf,EAAc,EAAO,MAAM,EAAO,EAAK,IAAM,EAAI,EAAG,CAAK,EAC/D,AAAI,GAAY,QAAU,EAAG,SACzB,EAAS,KAAK,EAAe,GAAG,QAAU,GAAG,EAEjD,GAAM,GAAS,EAAO,MAAM,EAAO,CAAG,EACtC,EAAS,KAAK,GAAuB,EAAG,KAAM,GAAO,CACjD,SACA,MAAO,GAAyB,EAAK,IAAI,MAAO,EAAQ,CAAK,EAC7D,IAAK,GAAyB,EAAK,IAAI,MAAO,EAAQ,CAAG,CAC7D,EAAG,EAAG,WAAa,EAAsC,CAAkC,CAAC,EACxF,IAAM,EAAI,OAAS,GAAK,EAAM,EAAO,QACrC,EAAS,KAAK,EAAO,MAAM,CAAG,CAAC,CAEvC,CAAC,EACD,GAAI,GACJ,MAAI,GAAS,OACT,EAAM,GAAyB,EAAU,EAAK,GAAG,EAGjD,GAAM,EACN,EAAI,UAAY,EACV,EACA,GAEV,EAAI,YAAc,OAAO,KAAK,CAAQ,EAC/B,CACX,CACA,YAAmB,EAAI,CAMnB,MAJI,IAAO,sBAAsB,EAAG,IAAI,GAIpC,EAAG,OAAS,UAIpB,CACA,YAA6B,EAAK,CAC9B,MAAI,GAAO,SAAS,CAAG,EACZ,EAEF,EAAI,OAAS,EACX,EAAI,QAGJ,EAAI,SACN,IAAI,EAAmB,EACvB,KAAK,EAAE,CAEpB,CAEA,GAAM,IAAc,GAAmC,sBAAuB,CAAC,EAAM,EAAK,IAC/E,GAAU,EAAM,EAAK,EAAS,CAAC,EAAQ,EAAQ,IAAW,CAI7D,GAAM,GAAW,EAAQ,OAAO,SAC5B,EAAI,EAAS,QAAQ,CAAM,EAC3B,EAAM,EACV,KAAO,KAAO,GAAG,CACb,GAAM,GAAU,EAAS,GACzB,AAAI,GAAW,EAAQ,OAAS,GAC5B,IAAO,EAAQ,SAAS,OAEhC,CAGA,MAAO,IAAM,CACT,GAAI,EACA,EAAO,YAAc,GAA2B,EAAQ,EAAK,CAAO,MAEnE,CAED,GAAM,GAAkB,GAAmB,EAAO,WAAW,EAC7D,EAAgB,UAAY,GAA2B,EAAQ,EAAM,EAAO,SAAS,OAAS,EAAG,CAAO,CAC5G,CACJ,CACJ,CAAC,CACJ,EAED,YAAmB,EAAM,EAAK,EAAS,EAAgB,CACnD,GAAI,EAAI,OAAS,QACZ,EAAC,EAAI,KAAO,CAAC,EAAI,IAAI,QAAQ,KAAK,GAAI,CACvC,GAAM,GAAM,EAAI,IAAM,EAAI,IAAI,IAAM,EAAK,IACzC,EAAQ,QAAQ,GAAoB,GAA0C,EAAI,GAAG,CAAC,EACtF,EAAI,IAAM,GAAuB,OAAQ,GAAO,CAAG,CACvD,CAMA,GALI,EAAQ,mBAAqB,EAAI,KAGjC,GAAI,IAAM,GAAkB,EAAI,IAAK,CAAO,GAE5C,EAAI,OAAS,KAAM,CACnB,GAAM,GAAS,GAAe,EAAM,CAAG,EACjC,EAAS,CACX,KAAM,EACN,IAAK,EAAK,IACV,SAAU,CAAC,CAAM,CACrB,EAEA,GADA,EAAQ,YAAY,CAAM,EACtB,EACA,MAAO,GAAe,EAAQ,EAAQ,EAAI,CAElD,KACK,CAED,GAAM,GAAW,EAAQ,OAAO,SAC5B,EAAI,EAAS,QAAQ,CAAI,EAC7B,KAAO,KAAO,IAAI,CACd,GAAM,GAAU,EAAS,GACzB,GAAI,GACA,EAAQ,OAAS,GACjB,CAAC,EAAQ,QAAQ,KAAK,EAAE,OAAQ,CAChC,EAAQ,WAAW,CAAO,EAC1B,QACJ,CACA,GAAI,GAAW,EAAQ,OAAS,EAAsB,CAElD,AAAI,EAAI,OAAS,WACb,EAAQ,SAAS,EAAQ,SAAS,OAAS,GAAG,YAAc,QAC5D,EAAQ,QAAQ,GAAoB,GAA6C,EAAK,GAAG,CAAC,EAG9F,EAAQ,WAAW,EACnB,GAAM,GAAS,GAAe,EAAM,CAAG,EAEvC,CACI,GAAM,GAAM,EAAO,QACnB,AAAI,GACA,EAAQ,SAAS,QAAQ,CAAC,CAAE,aAAc,CACtC,AAAI,GAAU,EAAS,CAAG,GACtB,EAAQ,QAAQ,GAAoB,GAAqC,EAAO,QAAQ,GAAG,CAAC,CAEpG,CAAC,CAET,CACA,EAAQ,SAAS,KAAK,CAAM,EAC5B,GAAM,GAAS,GAAkB,EAAe,EAAS,EAAQ,EAAK,EAGtE,GAAa,EAAQ,CAAO,EAExB,GACA,EAAO,EAGX,EAAQ,YAAc,IAC1B,KAEI,GAAQ,QAAQ,GAAoB,GAA6C,EAAK,GAAG,CAAC,EAE9F,KACJ,CACJ,CACJ,CACA,YAAwB,EAAM,EAAK,CAC/B,GAAM,GAAe,EAAK,UAAY,EACtC,MAAO,CACH,KAAM,GACN,IAAK,EAAK,IACV,UAAW,EAAI,OAAS,OAAS,OAAY,EAAI,IACjD,SAAU,GAAgB,CAAC,GAAQ,EAAM,KAAK,EAAI,EAAK,SAAW,CAAC,CAAI,EACvE,QAAS,GAAS,EAAM,KAAK,EAC7B,cACJ,CACJ,CACA,YAAoC,EAAQ,EAAU,EAAS,CAC3D,MAAI,GAAO,UACA,GAA4B,EAAO,UAAW,GAA0B,EAAQ,EAAU,CAAO,EAGxG,GAAqB,EAAQ,OAAO,EAAc,EAAG,CACjD,KACA,MACJ,CAAC,CAAC,EAGK,GAA0B,EAAQ,EAAU,CAAO,CAElE,CACA,YAAmC,EAAQ,EAAU,EAAS,CAC1D,GAAM,CAAE,UAAW,EACb,EAAc,GAAqB,MAAO,GAAuB,GAAG,IAAY,GAAO,GAAS,CAA+B,CAAC,EAChI,CAAE,YAAa,EACf,EAAa,EAAS,GAE5B,GAD4B,EAAS,SAAW,GAAK,EAAW,OAAS,EAErE,GAAI,EAAS,SAAW,GAAK,EAAW,OAAS,GAAwB,CAErE,GAAM,GAAY,EAAW,YAC7B,UAAW,EAAW,EAAa,CAAO,EACnC,CACX,KACK,CACD,GAAI,GAAY,GAChB,SAAO,eAAe,IACf,GAAgB,EAAS,EAAO,EAAQ,EAAG,GAAuB,CAAC,CAAW,CAAC,EAAG,EAAU,EAAa,GAAK,OAAW,OAAW,GAAM,GAAO,GAAyB,EAAO,GAAG,CAC/L,KAEC,CACD,GAAM,GAAM,EAAW,YACjB,EAAY,GAAmB,CAAG,EAExC,MAAI,GAAU,OAAS,IACnB,GAAU,EAAW,CAAO,EAGhC,GAAW,EAAW,EAAa,CAAO,EACnC,CACX,CACJ,CACA,YAAmB,EAAG,EAAG,CACrB,GAAI,CAAC,GAAK,EAAE,OAAS,EAAE,KACnB,MAAO,GAEX,GAAI,EAAE,OAAS,GACX,GAAI,EAAE,MAAM,UAAY,EAAE,MAAM,QAC5B,MAAO,OAGV,CAED,GAAM,GAAM,EAAE,IACR,EAAY,EAAE,IAIpB,GAHI,EAAI,OAAS,EAAU,MAGvB,EAAI,OAAS,GACb,EAAI,WAAa,EAAU,UAC3B,EAAI,UAAY,EAAU,QAC1B,MAAO,EAEf,CACA,MAAO,EACX,CACA,YAA4B,EAAM,CAC9B,OACI,GAAI,EAAK,OAAS,GACd,GAAI,EAAK,UAAU,OAAS,GACxB,EAAO,EAAK,cAGZ,OAAO,OAGV,AAAI,GAAK,OAAS,IACnB,GAAO,EAAK,MAGxB,CAEA,GAAM,IAAe,GAAmC,MAAO,CAAC,EAAM,EAAK,IAAY,CACnF,GAAM,CAAE,SAAQ,gBAAiB,EACjC,MAAO,IAAW,EAAM,EAAK,EAAS,GAAW,CAG7C,GAAM,GAAY,GAAqB,EAAO,EAAW,EAAG,CACxD,EAAQ,MACZ,CAAC,EACK,EAAa,GAAe,CAAI,EAChC,EAAO,GAAQ,EAAM,MAAM,EAC3B,EAAU,GAAS,EAAM,KAAK,EAC9B,EAAS,GACV,GAAQ,OAAS,EACZ,GAAuB,EAAQ,MAAM,QAAS,EAAI,EAClD,EAAQ,KACZ,EAAc,EAAU,GAAqB,MAAO,CAAM,EAAI,KACpE,AAAI,GAKI,IACA,GAAK,IAAM,GAAkB,EAAK,IAAK,CAAO,GAE9C,GAAe,EAAQ,OAAS,GAChC,GAAY,MAAQ,GAAkB,EAAY,MAAO,CAAO,IAGxE,GAAM,GAAmB,EAAQ,OAAO,OAAS,GAC7C,EAAQ,OAAO,UAAY,EACzB,EAAe,EACf,GACA,EACI,IACA,IACV,SAAQ,YAAc,GAAgB,EAAS,EAAO,EAAQ,EAAG,OAAW,EAAW,EAClF,GAAK,OAAW,OAAW,GAAoB,CAAC,EAAwC,GAAyB,EAAK,GAAG,EACvH,IAAM,CAET,GAAI,GACE,CAAE,YAAa,EAErB,AAAI,GACA,EAAK,SAAS,KAAK,GAAK,CACpB,GAAI,EAAE,OAAS,EAA2B,CACtC,GAAM,GAAM,GAAS,EAAG,KAAK,EAC7B,GAAI,EACA,SAAQ,QAAQ,GAAoB,GAAoD,EAAI,GAAG,CAAC,EACzF,EAEf,CACJ,CAAC,EAEL,GAAM,GAAsB,EAAS,SAAW,GAAK,EAAS,GAAG,OAAS,EACpE,EAAa,GAAa,CAAI,EAC9B,EACA,GACE,EAAK,SAAS,SAAW,GACzB,GAAa,EAAK,SAAS,EAAE,EAC3B,EAAK,SAAS,GACd,KA6CV,GA5CA,AAAI,EAEA,GAAa,EAAW,YACpB,GAAc,GAId,GAAW,EAAY,EAAa,CAAO,GAG9C,AAAI,EAGL,EAAa,GAAgB,EAAS,EAAO,EAAQ,EAAG,EAAc,GAAuB,CAAC,CAAW,CAAC,EAAI,OAAW,EAAK,SAAU,GACnI,GAAK,OAAW,OAAW,GAAM,OAAW,EAAuB,EAKxE,GAAa,EAAS,GACjB,YACD,GAAc,GACd,GAAW,EAAY,EAAa,CAAO,EAE3C,EAAW,UAAY,CAAC,GACxB,CAAI,EAAW,QAEX,GAAa,EAAU,EACvB,EAAa,GAAoB,EAAQ,MAAO,EAAW,WAAW,CAAC,GAIvE,EAAa,GAAe,EAAQ,MAAO,EAAW,WAAW,CAAC,GAG1E,EAAW,QAAU,CAAC,EACtB,AAAI,EAAW,QACX,GAAO,EAAU,EACjB,EAAO,GAAoB,EAAQ,MAAO,EAAW,WAAW,CAAC,GAGjE,EAAO,GAAe,EAAQ,MAAO,EAAW,WAAW,CAAC,GAGhE,EAAM,CACN,GAAM,GAAO,GAAyB,GAAoB,EAAQ,YAAa,CAC3E,GAAuB,SAAS,CACpC,CAAC,CAAC,EACF,EAAK,KAAO,GAAqB,CAC7B,GAAyB,CAAC,kBAAmB,EAAK,IAAK,GAAG,CAAC,EAC3D,GAAyB,CACrB,cACA,GAAI,EAAS,CAAC,uBAAwB,CAAM,EAAI,CAAC,EACjD,OAAO,EAAQ,aAAa,EAAY,mCAC5C,CAAC,EACD,GAAyB,CAAC,iBAAkB,CAAU,CAAC,EACvD,GAAuB,oBAAoB,EAC3C,GAAuB,cAAc,CACzC,CAAC,EACD,EAAU,UAAU,KAAK,EAAM,GAAuB,QAAQ,EAAG,GAAuB,OAAO,EAAQ,QAAQ,CAAC,CAAC,CACrH,KAEI,GAAU,UAAU,KAAK,GAAyB,GAAoB,EAAQ,WAAW,EAAG,EAAY,EAAwB,CAAC,CAEzI,CACJ,CAAC,CACL,CAAC,EAED,YAAoB,EAAM,EAAK,EAAS,EAAgB,CACpD,GAAI,CAAC,EAAI,IAAK,CACV,EAAQ,QAAQ,GAAoB,GAA2C,EAAI,GAAG,CAAC,EACvF,MACJ,CACA,GAAM,GAAc,GAGpB,EAAI,IAAK,CAAO,EAChB,GAAI,CAAC,EAAa,CACd,EAAQ,QAAQ,GAAoB,GAAkD,EAAI,GAAG,CAAC,EAC9F,MACJ,CACA,GAAM,CAAE,iBAAgB,oBAAmB,UAAW,EAChD,CAAE,SAAQ,QAAO,MAAK,SAAU,EAChC,EAAU,CACZ,KAAM,GACN,IAAK,EAAI,IACT,SACA,WAAY,EACZ,SAAU,EACV,iBAAkB,EAClB,cACA,SAAU,GAAe,CAAI,EAAI,EAAK,SAAW,CAAC,CAAI,CAC1D,EACA,EAAQ,YAAY,CAAO,EAE3B,EAAO,OACH,EAAQ,mBAGR,IAAS,EAAe,CAAK,EAC7B,GAAO,EAAe,CAAG,EACzB,GAAS,EAAe,CAAK,GAEjC,GAAM,GAAS,GAAkB,EAAe,CAAO,EACvD,MAAO,IAAM,CACT,EAAO,OACH,EAAQ,mBACR,IAAS,EAAkB,CAAK,EAChC,GAAO,EAAkB,CAAG,EAC5B,GAAS,EAAkB,CAAK,GAEhC,GACA,EAAO,CACf,CACJ,CACA,GAAM,IAAa,qCAGb,GAAgB,iCAChB,GAAgB,WACtB,YAA4B,EAAO,EAAS,CACxC,GAAM,GAAM,EAAM,IACZ,EAAM,EAAM,QACZ,EAAU,EAAI,MAAM,EAAU,EACpC,GAAI,CAAC,EACD,OACJ,GAAM,CAAC,CAAE,EAAK,GAAO,EACf,EAAS,CACX,OAAQ,GAAsB,EAAK,EAAI,KAAK,EAAG,EAAI,QAAQ,EAAK,EAAI,MAAM,CAAC,EAC3E,MAAO,OACP,IAAK,OACL,MAAO,MACX,EACA,AAAI,EAAQ,mBACR,GAAO,OAAS,GAAkB,EAAO,OAAQ,CAAO,GAE5D,GAAI,GAAe,EAAI,KAAK,EAAE,QAAQ,GAAe,EAAE,EAAE,KAAK,EACxD,EAAgB,EAAI,QAAQ,CAAY,EACxC,EAAgB,EAAa,MAAM,EAAa,EACtD,GAAI,EAAe,CACf,EAAe,EAAa,QAAQ,GAAe,EAAE,EAAE,KAAK,EAC5D,GAAM,GAAa,EAAc,GAAG,KAAK,EACrC,EAQJ,GAPI,GACA,GAAY,EAAI,QAAQ,EAAY,EAAgB,EAAa,MAAM,EACvE,EAAO,IAAM,GAAsB,EAAK,EAAY,CAAS,EACzD,EAAQ,mBACR,GAAO,IAAM,GAAkB,EAAO,IAAK,EAAS,EAAI,IAG5D,EAAc,GAAI,CAClB,GAAM,GAAe,EAAc,GAAG,KAAK,EAC3C,AAAI,GACA,GAAO,MAAQ,GAAsB,EAAK,EAAc,EAAI,QAAQ,EAAc,EAAO,IACnF,EAAY,EAAW,OACvB,EAAgB,EAAa,MAAM,CAAC,EACtC,EAAQ,mBACR,GAAO,MAAQ,GAAkB,EAAO,MAAO,EAAS,EAAI,GAGxE,CACJ,CACA,MAAI,IACA,GAAO,MAAQ,GAAsB,EAAK,EAAc,CAAa,EACjE,EAAQ,mBACR,GAAO,MAAQ,GAAkB,EAAO,MAAO,EAAS,EAAI,IAG7D,CACX,CACA,YAA+B,EAAO,EAAS,EAAQ,CACnD,MAAO,IAAuB,EAAS,GAAO,GAAc,EAAO,EAAQ,EAAQ,MAAM,CAAC,CAC9F,CACA,YAA6B,CAAE,QAAO,MAAK,SAAS,EAAW,CAAC,EAAG,CAC/D,MAAO,IAAiB,CAAC,EAAO,EAAK,EAAO,GAAG,CAAQ,CAAC,CAC5D,CACA,YAA0B,EAAM,CAC5B,GAAI,GAAI,EAAK,OACb,KAAO,KACC,GAAK,IAAT,CAGJ,MAAO,GACF,MAAM,EAAG,EAAI,CAAC,EACd,IAAI,CAAC,EAAK,IAAM,GAAO,GAAuB,IAAI,OAAO,EAAI,CAAC,EAAG,EAAK,CAAC,CAChF,CAEA,GAAM,IAAkB,GAAuB,YAAa,EAAK,EAQ3D,GAAkB,CAAC,EAAM,IAAY,CACvC,GAAI,EAAK,OAAS,GACb,GAAK,UAAY,GACd,EAAK,UAAY,GAAgC,CAGrD,GAAM,GAAQ,GAAQ,EAAM,MAAM,EAClC,GAAI,EAAO,CACP,GAAM,GAAY,EAAM,IACxB,MAAI,GAAQ,mBACR,GAAa,EAAQ,eAAe,CAAS,EAEjD,EAAQ,OAAO,QACR,IAAM,CACT,AAAI,EAAQ,mBACR,GAAa,EAAQ,kBAAkB,CAAS,EAEpD,EAAQ,OAAO,OACnB,CACJ,CACJ,CACJ,EAGM,GAAsB,CAAC,EAAM,IAAY,CAC3C,GAAI,GACJ,GAAI,GAAe,CAAI,GACnB,EAAK,MAAM,KAAK,EAAO,GACtB,GAAO,GAAQ,EAAM,KAAK,GAAI,CAC/B,GAAM,GAAU,EAAK,YAAc,GAAmB,EAAK,IAAK,CAAO,EACvE,GAAI,EAAQ,CACR,GAAM,CAAE,QAAO,MAAK,SAAU,EACxB,CAAE,iBAAgB,qBAAsB,EAC9C,UAAS,EAAe,CAAK,EAC7B,GAAO,EAAe,CAAG,EACzB,GAAS,EAAe,CAAK,EACtB,IAAM,CACT,GAAS,EAAkB,CAAK,EAChC,GAAO,EAAkB,CAAG,EAC5B,GAAS,EAAkB,CAAK,CACpC,CACJ,CACJ,CACJ,EACM,GAAoB,CAAC,EAAO,EAAU,IAAQ,GAAyB,EAAO,EAAU,GAAqB,GAAmB,EAAS,OAAS,EAAS,GAAG,IAAM,CAAG,EAG7K,YAAoB,EAAM,EAAS,EAAc,GAAmB,CAChE,EAAQ,OAAO,EAAQ,EACvB,GAAM,CAAE,WAAU,OAAQ,EACpB,EAAkB,CAAC,EACnB,EAAe,CAAC,EAGlB,EAAkB,EAAQ,OAAO,MAAQ,GAAK,EAAQ,OAAO,KAAO,EAGxE,AAAI,CAAC,EAAQ,KAAO,EAAQ,mBACxB,GAAkB,GAAY,EAAM,EAAQ,WAAW,GAI3D,GAAM,GAAkB,GAAQ,EAAM,OAAQ,EAAI,EAClD,GAAI,EAAiB,CACjB,GAAM,CAAE,MAAK,OAAQ,EACrB,AAAI,GAAO,CAAC,GAAY,CAAG,GACvB,GAAkB,IAEtB,EAAgB,KAAK,GAAqB,GAAO,GAAuB,UAAW,EAAI,EAAG,EAAY,EAAK,EAAU,CAAG,CAAC,CAAC,CAC9H,CAGA,GAAI,GAAmB,GACnB,EAAsB,GACpB,EAA0B,CAAC,EAC3B,EAAgB,GAAI,KACtB,EAAyB,EAC7B,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACtC,GAAM,GAAc,EAAS,GACzB,EACJ,GAAI,CAAC,GAAe,CAAW,GAC3B,CAAE,GAAU,GAAQ,EAAa,OAAQ,EAAI,GAAI,CAEjD,AAAI,EAAY,OAAS,GACrB,EAAwB,KAAK,CAAW,EAE5C,QACJ,CACA,GAAI,EAAiB,CAEjB,EAAQ,QAAQ,GAAoB,GAA+C,EAAQ,GAAG,CAAC,EAC/F,KACJ,CACA,EAAmB,GACnB,GAAM,CAAE,SAAU,EAAc,IAAK,GAAY,EAC3C,CAAE,IAAK,EAAW,GAAuB,UAAW,EAAI,EAAG,IAAK,EAAW,IAAK,GAAW,EAE7F,EACJ,AAAI,GAAY,CAAQ,EACpB,EAAiB,EAAW,EAAS,QAAU,UAG/C,EAAkB,GAEtB,GAAM,GAAe,EAAY,EAAW,EAAc,CAAO,EAE7D,EACA,EACA,EACJ,GAAK,EAAM,GAAQ,EAAa,IAAI,EAChC,EAAkB,GAClB,EAAa,KAAK,GAA4B,EAAI,IAAK,GAAiB,EAAU,EAAc,GAAwB,EAAG,EAAe,CAAC,UAErI,EAAQ,GAAQ,EAAa,eAAgB,EAAqB,EAAI,CAE5E,GAAI,GAAI,EACJ,EACJ,KAAO,KACH,GAAO,EAAS,GACZ,EAAK,OAAS,IAAlB,CAIJ,GAAI,GAAQ,GAAe,CAAI,GAAK,GAAQ,EAAM,IAAI,EAAG,CAErD,EAAS,OAAO,EAAG,CAAC,EACpB,IAEA,GAAI,IAAc,EAAa,EAAa,OAAS,GACrD,KAAO,GAAY,UAAU,OAAS,IAClC,GAAc,GAAY,UAE9B,GAAY,UAAY,EAAM,IACxB,GAA4B,EAAM,IAAK,GAAiB,EAAU,EAAc,GAAwB,EAAG,EAAe,EAC1H,GAAiB,EAAU,EAAc,GAAwB,CAC3E,KAEI,GAAQ,QAAQ,GAAoB,GAA6C,EAAM,GAAG,CAAC,CAEnG,SACU,EAAO,GAAQ,EAAa,KAAK,EAAI,CAC3C,EAAkB,GAClB,GAAM,GAAc,EAAK,aACrB,GAAmB,EAAK,IAAK,CAAO,EACxC,AAAI,EAGA,EAAa,KAAK,GAAqB,EAAQ,OAAO,EAAW,EAAG,CAChE,EAAY,OACZ,GAAyB,GAAoB,CAAW,EAAG,GAAiB,EAAU,CAAY,EAAG,EAAwB,CACjI,CAAC,CAAC,EAGF,EAAQ,QAAQ,GAAoB,GAAkD,EAAK,GAAG,CAAC,CAEvG,KACK,CAED,GAAI,EAAgB,CAChB,GAAI,EAAc,IAAI,CAAc,EAAG,CACnC,EAAQ,QAAQ,GAAoB,GAAmD,CAAM,CAAC,EAC9F,QACJ,CACA,EAAc,IAAI,CAAc,EAC5B,IAAmB,WACnB,GAAsB,GAE9B,CACA,EAAgB,KAAK,GAAqB,EAAU,CAAY,CAAC,CACrE,CACJ,CACA,GAAI,CAAC,EAAiB,CAClB,GAAM,GAA2B,CAAC,EAAO,IAAa,CAClD,GAAM,GAAK,EAAY,EAAO,EAAU,CAAG,EAC3C,MAAI,GAAQ,cACR,GAAG,gBAAkB,IAElB,GAAqB,UAAW,CAAE,CAC7C,EACA,AAAK,EAII,EAAwB,QAI7B,EAAwB,KAAK,GAAQ,GAAuB,CAAI,CAAC,GAEjE,CAAI,EACA,EAAQ,QAAQ,GAAoB,GAA+D,EAAwB,GAAG,GAAG,CAAC,EAGlI,EAAgB,KAAK,EAAyB,OAAW,CAAuB,CAAC,GAZrF,EAAgB,KAAK,EAAyB,OAAW,CAAQ,CAAC,CAe1E,CACA,GAAM,GAAW,EACX,EACA,GAAkB,EAAK,QAAQ,EAC3B,EACA,EACN,EAAQ,GAAuB,EAAgB,OAAO,GAAqB,IAG/E,GAAuB,EAAY,GAAK,EAAK,CAAC,CAAC,EAAG,CAAG,EACrD,MAAI,GAAa,QACb,GAAQ,GAAqB,EAAQ,OAAO,EAAY,EAAG,CACvD,EACA,GAAsB,CAAY,CACtC,CAAC,GAEE,CACH,QACA,iBACJ,CACJ,CACA,YAA0B,EAAM,EAAI,EAAO,CACvC,GAAM,GAAQ,CACV,GAAqB,OAAQ,CAAI,EACjC,GAAqB,KAAM,CAAE,CACjC,EACA,MAAI,IAAS,MACT,EAAM,KAAK,GAAqB,MAAO,GAAuB,OAAO,CAAK,EAAG,EAAI,CAAC,CAAC,EAEhF,GAAuB,CAAK,CACvC,CACA,YAA2B,EAAU,CACjC,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACtC,GAAM,GAAQ,EAAS,GACvB,OAAQ,EAAM,UACL,GACD,GAAI,EAAM,UAAY,GAClB,GAAkB,EAAM,QAAQ,EAChC,MAAO,GAEX,UACC,GACD,GAAI,GAAkB,EAAM,QAAQ,EAChC,MAAO,GACX,UACC,QACA,IACD,GAAI,GAAkB,EAAM,QAAQ,EAChC,MAAO,GACX,MAEZ,CACA,MAAO,EACX,CACA,YAAgC,EAAM,CAClC,MAAI,GAAK,OAAS,GAA0B,EAAK,OAAS,GAC/C,GACJ,EAAK,OAAS,EACf,CAAC,CAAC,EAAK,QAAQ,KAAK,EACpB,GAAuB,EAAK,OAAO,CAC7C,CAIA,GAAM,IAAqB,GAAI,SAEzB,GAAmB,CAAC,EAAM,IAGrB,UAAgC,CAEnC,GADA,EAAO,EAAQ,YACX,CAAE,GAAK,OAAS,GACf,GAAK,UAAY,GACd,EAAK,UAAY,IACrB,OAEJ,GAAM,CAAE,MAAK,SAAU,EACjB,EAAc,EAAK,UAAY,EAGjC,EAAW,EACT,GAAqB,EAAM,CAAO,EAClC,IAAI,KACJ,EAAqB,EAAO,SAAS,CAAQ,GAAK,EAAS,SAAW,GACxE,EACA,EACA,EACA,EAAY,EACZ,EACA,EACA,EACA,EAEJ,GACI,IAAa,IACb,IAAa,IACZ,CAAC,GAKG,KAAQ,OAAS,IAAQ,iBAElC,GAAI,EAAM,OAAS,EAAG,CAClB,GAAM,GAAmB,GAAW,EAAM,EAAS,OAAW,EAAa,CAAkB,EAC7F,EAAa,EAAiB,MAC9B,EAAY,EAAiB,UAC7B,EAAmB,EAAiB,iBACpC,GAAM,GAAa,EAAiB,WACpC,EACI,GAAc,EAAW,OACnB,GAAsB,EAAW,IAAI,GAAO,GAAmB,EAAK,CAAO,CAAC,CAAC,EAC7E,OACN,EAAiB,gBACjB,GAAiB,GAEzB,CAEA,GAAI,EAAK,SAAS,OAAS,EAiBvB,GAhBI,IAAa,IAOb,GAAiB,GAEjB,GAAa,MAEU,GAEvB,IAAa,IAEb,IAAa,GACO,CACpB,GAAM,CAAE,QAAO,mBAAoB,GAAW,EAAM,CAAO,EAC3D,EAAgB,EACZ,GACA,IAAa,KAErB,SACS,EAAK,SAAS,SAAW,GAAK,IAAa,GAAU,CAC1D,GAAM,GAAQ,EAAK,SAAS,GACtB,EAAO,EAAM,KAEb,EAAsB,IAAS,GACjC,IAAS,EACb,AAAI,GACA,GAAgB,EAAO,CAAO,IAAM,GACpC,IAAa,GAIjB,AAAI,GAAuB,IAAS,EAChC,EAAgB,EAGhB,EAAgB,EAAK,QAE7B,KAEI,GAAgB,EAAK,SAI7B,AAAI,IAAc,GAEV,GAAiB,OAAO,CAAS,EAEjC,GAAoB,EAAiB,QACrC,GAAoB,GAA0B,CAAgB,IAGtE,EAAK,YAAc,GAAgB,EAAS,EAAU,EAAY,EAAe,EAAgB,EAAmB,EAAiB,CAAC,CAAC,EAAgB,GAA6B,EAAa,EAAK,GAAG,CAC7M,EAEJ,YAA8B,EAAM,EAAS,EAAM,GAAO,CACtD,GAAI,CAAE,OAAQ,EAER,EAAoB,GAAe,CAAG,EACtC,EAAS,GAAS,EAAM,IAAI,EAClC,GAAI,EACA,GAAI,GACC,GAAgB,yBAAgF,CAAO,EAAI,CAC5G,GAAM,GAAM,EAAO,OAAS,EACtB,EAAO,OAAS,GAAuB,EAAO,MAAM,QAAS,EAAI,EACjE,EAAO,IACb,GAAI,EACA,MAAO,IAAqB,EAAQ,OAAO,EAAyB,EAAG,CACnE,CACJ,CAAC,CAET,KACK,AAAI,GAAO,OAAS,GACrB,EAAO,MAAM,QAAQ,WAAW,MAAM,GAKtC,GAAM,EAAO,MAAM,QAAQ,MAAM,CAAC,GAI1C,GAAM,GAAQ,CAAC,GAAqB,GAAQ,EAAM,IAAI,EACtD,GAAI,GAAS,EAAM,IACf,MAAO,IAAqB,EAAQ,OAAO,EAAyB,EAAG,CACnE,EAAM,GACV,CAAC,EAGL,GAAM,GAAU,GAAgB,CAAG,GAAK,EAAQ,mBAAmB,CAAG,EACtE,GAAI,EAGA,MAAK,IACD,EAAQ,OAAO,CAAO,EACnB,EAKX,CACI,GAAM,GAAY,GAAsB,EAAK,CAAO,EACpD,GAAI,EACA,MAAO,GAEX,GAAM,GAAW,EAAI,QAAQ,GAAG,EAChC,GAAI,EAAW,EAAG,CACd,GAAM,GAAK,GAAsB,EAAI,MAAM,EAAG,CAAQ,EAAG,CAAO,EAChE,GAAI,EACA,MAAO,GAAK,EAAI,MAAM,CAAQ,CAEtC,CACJ,CAEA,MAAI,GAAQ,UACR,EAAO,WAAW,EAAO,SAAS,CAAG,CAAC,IAAM,EAAQ,SACpD,GAAQ,OAAO,EAAiB,EAIhC,EAAQ,WAAW,IAAI,EAAM,QAAQ,EAC9B,GAAe,EAAK,WAAW,GAG1C,GAAQ,OAAO,EAAiB,EAChC,EAAQ,WAAW,IAAI,CAAG,EACnB,GAAe,EAAK,WAAW,EAC1C,CACA,YAA+B,EAAM,EAAS,CAC1C,GAAM,GAAW,EAAQ,gBACzB,GAAI,CAAC,GAAY,EAAS,kBAAoB,GAC1C,OAEJ,GAAM,GAAY,EAAO,SAAS,CAAI,EAChC,EAAa,EAAO,WAAW,CAAS,EACxC,EAAY,AAAC,GAAS,CACxB,GAAI,EAAS,KAAU,EACnB,MAAO,GAEX,GAAI,EAAS,KAAe,EACxB,MAAO,GAEX,GAAI,EAAS,KAAgB,EACzB,MAAO,EAEf,EACM,EAAY,EAAU,aAA4C,GACpE,EAAU,sBAA8D,EAC5E,GAAI,EACA,MAAO,GAAQ,OAEP,EACF,UAAU,KAAK,UAAU,CAAS,KAE5C,GAAM,GAAe,EAAU,WAAwC,GACnE,EAAU,WAAwC,GAClD,EAAU,iBAAoD,EAClE,GAAI,EACA,MAAO,GAAQ,OAEP,GAAG,EAAQ,aAAa,EAAK,KAAK,KACpC,UAAU,KAAK,UAAU,CAAY,IAEnD,CACA,YAAoB,EAAM,EAAS,EAAQ,EAAK,MAAO,EAAa,EAAoB,EAAM,GAAO,CACjG,GAAM,CAAE,MAAK,IAAK,EAAY,YAAa,EACvC,EAAa,CAAC,EACZ,EAAY,CAAC,EACb,EAAoB,CAAC,EACrB,EAAc,EAAS,OAAS,EAClC,EAAiB,GAEjB,EAAY,EACZ,EAAS,GACT,EAAkB,GAClB,EAAkB,GAClB,EAA2B,GAC3B,EAAiB,GACjB,EAAe,GACb,EAAmB,CAAC,EACpB,EAAmB,CAAC,CAAE,MAAK,WAAY,CACzC,GAAI,GAAY,CAAG,EAAG,CAClB,GAAM,GAAO,EAAI,QACX,EAAiB,EAAO,KAAK,CAAI,EAevC,GAdI,GACC,EAAC,GAAe,IAGjB,EAAK,YAAY,IAAM,WAEvB,IAAS,uBAET,CAAC,EAAO,eAAe,CAAI,GAC3B,GAA2B,IAE3B,GAAkB,EAAO,eAAe,CAAI,GAC5C,GAAe,IAEf,EAAM,OAAS,IACb,GAAM,OAAS,GACb,EAAM,OAAS,IACf,GAAgB,EAAO,CAAO,EAAI,EAEtC,OAEJ,AAAI,IAAS,MACT,EAAS,GAER,AAAI,IAAS,QACd,EAAkB,GAEjB,AAAI,IAAS,QACd,EAAkB,GAEb,IAAS,OAAS,CAAC,EAAiB,SAAS,CAAI,GACtD,EAAiB,KAAK,CAAI,EAG1B,GACC,KAAS,SAAW,IAAS,UAC9B,CAAC,EAAiB,SAAS,CAAI,GAC/B,EAAiB,KAAK,CAAI,CAElC,KAEI,GAAiB,EAEzB,EACA,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,IAAK,CAEnC,GAAM,GAAO,EAAM,GACnB,GAAI,EAAK,OAAS,EAA6B,CAC3C,GAAM,CAAE,MAAK,OAAM,SAAU,EACzB,EAAW,GAiBf,GAhBI,IAAS,OACT,GAAS,GACL,EAAQ,OAAO,KAAO,GACtB,EAAW,KAAK,GAAqB,GAAuB,UAAW,EAAI,EAAG,GAAuB,MAAM,CAAC,CAAC,EAK7G,GACA,EAAQ,QACR,EAAQ,gBAAgB,EAAM,UAC9B,GAAW,GACX,EAAW,KAAK,GAAqB,GAAuB,UAAW,EAAI,EAAG,GAAuB,EAAM,QAAS,GAAM,EAAM,GAAG,CAAC,CAAC,IAIzI,IAAS,MACR,IAAe,CAAG,GACd,GAAS,EAAM,QAAQ,WAAW,MAAM,GACxC,GAAgB,yBAAgF,CAAO,GAC5G,SAEJ,EAAW,KAAK,GAAqB,GAAuB,EAAM,GAAM,GAAc,EAAK,EAAG,EAAK,MAAM,CAAC,EAAG,GAAuB,EAAQ,EAAM,QAAU,GAAI,EAAU,EAAQ,EAAM,IAAM,CAAG,CAAC,CAAC,CACvM,KACK,CAED,GAAM,CAAE,OAAM,MAAK,MAAK,OAAQ,EAC1B,EAAU,IAAS,OACnB,GAAQ,IAAS,KAEvB,GAAI,IAAS,OAAQ,CACjB,AAAK,GACD,EAAQ,QAAQ,GAAoB,GAAwC,CAAG,CAAC,EAEpF,QACJ,CAcA,GAZI,IAAS,QAAU,IAAS,QAI5B,IAAS,MACR,GACG,GAAc,EAAK,IAAI,GACtB,IAAe,CAAG,GACd,GAAgB,yBAAgF,CAAO,IAIhH,IAAS,EACT,SAcJ,GAVC,IAAW,GAAc,EAAK,KAAK,GAG/B,IAAS,GAAe,GAAc,EAAK,mBAAmB,IAC/D,GAAiB,IAEjB,GAAW,GAAc,EAAK,KAAK,GAAK,EAAQ,OAAO,KAAO,GAC9D,EAAW,KAAK,GAAqB,GAAuB,UAAW,EAAI,EAAG,GAAuB,MAAM,CAAC,CAAC,EAG7G,CAAC,GAAQ,IAAW,IAAQ,CAE5B,GADA,EAAiB,GACb,EAKA,GAJI,EAAW,QACX,GAAU,KAAK,GAAuB,GAAiB,CAAU,EAAG,CAAU,CAAC,EAC/E,EAAa,CAAC,GAEd,EAAS,CAEL,GAAI,GAAgB,+BAA4F,CAAO,EAAG,CACtH,EAAU,QAAQ,CAAG,EACrB,QACJ,CAEJ,EAAU,KAAK,CAAG,CACtB,KAGI,GAAU,KAAK,CACX,KAAM,GACN,MACA,OAAQ,EAAQ,OAAO,EAAW,EAClC,UAAW,EAAc,CAAC,CAAG,EAAI,CAAC,EAAK,MAAM,CACjD,CAAC,MAIL,GAAQ,QAAQ,GAAoB,EAC9B,GACA,GAA0C,CAAG,CAAC,EAExD,QACJ,CACA,GAAM,IAAqB,EAAQ,oBAAoB,GACvD,GAAI,GAAoB,CAEpB,GAAM,CAAE,SAAO,gBAAgB,GAAmB,EAAM,EAAM,CAAO,EACrE,CAAC,GAAO,GAAM,QAAQ,CAAgB,EACtC,EAAW,KAAK,GAAG,EAAK,EACpB,IACA,GAAkB,KAAK,CAAI,EACvB,EAAO,SAAS,EAAW,GAC3B,GAAmB,IAAI,EAAM,EAAW,EAGpD,KACK,AAAK,GAAO,mBAAmB,CAAI,GAEpC,GAAkB,KAAK,CAAI,EAGvB,GACA,GAAiB,IAG7B,CACJ,CACA,GAAI,GAyCJ,GAvCA,AAAI,EAAU,OACN,GAAW,QACX,EAAU,KAAK,GAAuB,GAAiB,CAAU,EAAG,CAAU,CAAC,EAEnF,AAAI,EAAU,OAAS,EACnB,EAAkB,GAAqB,EAAQ,OAAO,EAAW,EAAG,EAAW,CAAU,EAIzF,EAAkB,EAAU,IAG3B,EAAW,QAChB,GAAkB,GAAuB,GAAiB,CAAU,EAAG,CAAU,GAGrF,AAAI,EACA,GAAa,GAGT,IAAmB,CAAC,GACpB,IAAa,GAEb,GAAmB,CAAC,GACpB,IAAa,GAEb,EAAiB,QACjB,IAAa,GAEb,GACA,IAAa,KAGjB,CAAC,GACA,KAAc,GAAK,IAAc,KACjC,IAAU,GAAgB,EAAkB,OAAS,IACtD,IAAa,KAGb,CAAC,EAAQ,OAAS,EAClB,OAAQ,EAAgB,UACf,IAGD,GAAI,GAAgB,GAChB,EAAgB,GAChB,EAAgB,GACpB,OAAS,GAAI,EAAG,EAAI,EAAgB,WAAW,OAAQ,IAAK,CACxD,GAAM,GAAM,EAAgB,WAAW,GAAG,IAC1C,AAAI,GAAY,CAAG,EACf,AAAI,EAAI,UAAY,QAChB,EAAgB,EAEX,EAAI,UAAY,SACrB,GAAgB,GAGd,EAAI,cACV,GAAgB,GAExB,CACA,GAAM,GAAY,EAAgB,WAAW,GACvC,EAAY,EAAgB,WAAW,GAE7C,AAAK,EAkBD,EAAkB,GAAqB,EAAQ,OAAO,EAAe,EAAG,CAAC,CAAe,CAAC,EAjBrF,IAAa,CAAC,GAAY,EAAU,KAAK,GACzC,GAAU,MAAQ,GAAqB,EAAQ,OAAO,EAAe,EAAG,CAAC,EAAU,KAAK,CAAC,GAEzF,GAGC,IACI,EAAU,MAAM,OAAS,GACtB,EAAU,MAAM,QAAQ,KAAK,EAAE,KAAO,KAG1C,EAAU,MAAM,OAAS,KAC7B,GAAU,MAAQ,GAAqB,EAAQ,OAAO,EAAe,EAAG,CAAC,EAAU,KAAK,CAAC,IAOjG,UACC,IAED,cAGA,EAAkB,GAAqB,EAAQ,OAAO,EAAe,EAAG,CACpE,GAAqB,EAAQ,OAAO,EAAoB,EAAG,CACvD,CACJ,CAAC,CACL,CAAC,EACD,MAGZ,MAAO,CACH,MAAO,EACP,WAAY,EACZ,YACA,mBACA,gBACJ,CACJ,CAOA,YAA0B,EAAY,CAClC,GAAM,GAAa,GAAI,KACjB,EAAU,CAAC,EACjB,OAAS,GAAI,EAAG,EAAI,EAAW,OAAQ,IAAK,CACxC,GAAM,GAAO,EAAW,GAExB,GAAI,EAAK,IAAI,OAAS,GAAyC,CAAC,EAAK,IAAI,SAAU,CAC/E,EAAQ,KAAK,CAAI,EACjB,QACJ,CACA,GAAM,GAAO,EAAK,IAAI,QAChB,EAAW,EAAW,IAAI,CAAI,EACpC,AAAI,EACI,KAAS,SAAW,IAAS,SAAW,EAAO,KAAK,CAAI,IACxD,GAAa,EAAU,CAAI,EAK/B,GAAW,IAAI,EAAM,CAAI,EACzB,EAAQ,KAAK,CAAI,EAEzB,CACA,MAAO,EACX,CACA,YAAsB,EAAU,EAAU,CACtC,AAAI,EAAS,MAAM,OAAS,GACxB,EAAS,MAAM,SAAS,KAAK,EAAS,KAAK,EAG3C,EAAS,MAAQ,GAAsB,CAAC,EAAS,MAAO,EAAS,KAAK,EAAG,EAAS,GAAG,CAE7F,CACA,YAA4B,EAAK,EAAS,CACtC,GAAM,GAAU,CAAC,EACX,EAAU,GAAmB,IAAI,CAAG,EAC1C,GAAI,EAEA,EAAQ,KAAK,EAAQ,aAAa,CAAO,CAAC,MAEzC,CAGD,GAAM,GAAY,GAAsB,KAAO,EAAI,KAAM,CAAO,EAChE,AAAI,EACA,EAAQ,KAAK,CAAS,EAItB,GAAQ,OAAO,EAAiB,EAChC,EAAQ,WAAW,IAAI,EAAI,IAAI,EAC/B,EAAQ,KAAK,GAAe,EAAI,KAAM,WAAW,CAAC,EAE1D,CACA,GAAM,CAAE,OAAQ,EAShB,GARI,EAAI,KACJ,EAAQ,KAAK,EAAI,GAAG,EACpB,EAAI,KACC,GAAI,KACL,EAAQ,KAAK,QAAQ,EAEzB,EAAQ,KAAK,EAAI,GAAG,GAEpB,OAAO,KAAK,EAAI,SAAS,EAAE,OAAQ,CACnC,AAAK,EAAI,KACA,GAAI,KACL,EAAQ,KAAK,QAAQ,EAEzB,EAAQ,KAAK,QAAQ,GAEzB,GAAM,GAAiB,GAAuB,OAAQ,GAAO,CAAG,EAChE,EAAQ,KAAK,GAAuB,EAAI,UAAU,IAAI,GAAY,GAAqB,EAAU,CAAc,CAAC,EAAG,CAAG,CAAC,CAC3H,CACA,MAAO,IAAsB,EAAS,EAAI,GAAG,CACjD,CACA,YAAmC,EAAO,CACtC,GAAI,GAAmB,IACvB,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,IACrC,GAAoB,KAAK,UAAU,EAAM,EAAE,EACvC,EAAI,EAAI,GACR,IAAoB,MAE5B,MAAO,GAAmB,GAC9B,CACA,YAAwB,EAAK,CACzB,MAAO,KAAQ,aAAe,IAAQ,WAC1C,CAEA,GAAM,IAAsB,AAAC,GAAO,CAChC,GAAM,GAAQ,OAAO,OAAO,IAAI,EAChC,MAAQ,AAAC,IAEE,AADK,EAAM,IACH,GAAM,GAAO,EAAG,CAAG,EAE1C,EACM,GAAa,SAIb,GAAW,GAAoB,AAAC,GAC3B,EAAI,QAAQ,GAAY,CAAC,EAAG,IAAO,EAAI,EAAE,YAAY,EAAI,EAAG,CACtE,EAEK,GAAsB,CAAC,EAAM,IAAY,CAC3C,GAAI,GAAa,CAAI,EAAG,CACpB,GAAM,CAAE,WAAU,OAAQ,EACpB,CAAE,WAAU,aAAc,GAAkB,EAAM,CAAO,EACzD,EAAW,CACb,EAAQ,kBAAoB,cAAgB,SAC5C,EACA,KACA,YACA,MACJ,EACI,EAAc,EAClB,AAAI,GACA,GAAS,GAAK,EACd,EAAc,GAEd,EAAS,QACT,GAAS,GAAK,GAAyB,CAAC,EAAG,EAAU,GAAO,GAAO,CAAG,EACtE,EAAc,GAEd,EAAQ,SAAW,CAAC,EAAQ,SAC5B,GAAc,GAElB,EAAS,OAAO,CAAW,EAC3B,EAAK,YAAc,GAAqB,EAAQ,OAAO,EAAW,EAAG,EAAU,CAAG,CACtF,CACJ,EACA,YAA2B,EAAM,EAAS,CACtC,GAAI,GAAW,YACX,EACE,EAAe,CAAC,EACtB,OAAS,GAAI,EAAG,EAAI,EAAK,MAAM,OAAQ,IAAK,CACxC,GAAM,GAAI,EAAK,MAAM,GACrB,AAAI,EAAE,OAAS,EACP,EAAE,OACF,CAAI,EAAE,OAAS,OACX,EAAW,KAAK,UAAU,EAAE,MAAM,OAAO,EAGzC,GAAE,KAAO,GAAS,EAAE,IAAI,EACxB,EAAa,KAAK,CAAC,IAK3B,AAAI,EAAE,OAAS,QAAU,GAAc,EAAE,IAAK,MAAM,EAC5C,EAAE,KACF,GAAW,EAAE,KAGb,GAAE,OAAS,QAAU,EAAE,KAAO,GAAY,EAAE,GAAG,GAC/C,GAAE,IAAI,QAAU,GAAS,EAAE,IAAI,OAAO,GAE1C,EAAa,KAAK,CAAC,EAG/B,CACA,GAAI,EAAa,OAAS,EAAG,CACzB,GAAM,CAAE,QAAO,cAAe,GAAW,EAAM,EAAS,EAAc,GAAO,EAAK,EAClF,EAAY,EACR,EAAW,QACX,EAAQ,QAAQ,GAAoB,GAAkE,EAAW,GAAG,GAAG,CAAC,CAEhI,CACA,MAAO,CACH,WACA,WACJ,CACJ,CAEA,GAAM,IAAU,sFACV,GAAc,CAAC,EAAK,EAAM,EAAS,IAAc,CACnD,GAAM,CAAE,MAAK,YAAW,OAAQ,EAChC,AAAI,CAAC,EAAI,KAAO,CAAC,EAAU,QACvB,EAAQ,QAAQ,GAAoB,GAA0C,CAAG,CAAC,EAEtF,GAAI,GACJ,GAAI,EAAI,OAAS,EACb,GAAI,EAAI,SAAU,CACd,GAAI,GAAU,EAAI,QAElB,AAAI,EAAQ,WAAW,MAAM,GACzB,GAAU,SAAS,EAAQ,MAAM,CAAC,KAEtC,GAAM,GAAc,EAAK,UAAY,GACjC,EAAQ,WAAW,OAAO,GAC1B,CAAC,QAAQ,KAAK,CAAO,EAGjB,EAAO,aAAa,EAAO,SAAS,CAAO,CAAC,EAG9C,MAAM,IACZ,EAAY,GAAuB,EAAa,GAAM,EAAI,GAAG,CACjE,KAGI,GAAY,GAAyB,CACjC,GAAG,EAAQ,aAAa,EAAc,KACtC,EACA,GACJ,CAAC,MAKL,GAAY,EACZ,EAAU,SAAS,QAAQ,GAAG,EAAQ,aAAa,EAAc,IAAI,EACrE,EAAU,SAAS,KAAK,GAAG,EAG/B,GAAI,GAAM,EAAI,IACd,AAAI,GAAO,CAAC,EAAI,QAAQ,KAAK,GACzB,GAAM,QAEV,GAAI,GAAc,EAAQ,eAAiB,CAAC,GAAO,CAAC,EAAQ,QAC5D,GAAI,EAAK,CACL,GAAM,GAAc,GAAmB,EAAI,QAAS,CAAO,EACrD,EAAoB,CAAE,IAAe,GAAQ,KAAK,EAAI,OAAO,GAC7D,EAAwB,EAAI,QAAQ,SAAS,GAAG,EAEtD,AAAI,EAAQ,mBACR,IAAqB,EAAQ,eAAe,QAAQ,EACpD,EAAM,EAAI,IAAM,GAAkB,EAAK,EAAS,GAAO,CAAqB,EAC5E,GAAqB,EAAQ,kBAAkB,QAAQ,EAGvD,EACI,EAAQ,eAEJ,CAAC,EAAQ,SAGT,CAAE,GAAI,OAAS,GAAuC,EAAI,UAAY,IAMtE,CAAE,IAAe,EAAK,UAAY,IAGlC,CAAC,GAAY,EAAK,EAAQ,WAAW,EAKzC,GAAe,GACf,CAAI,EAAI,OAAS,EACb,EAAI,QAAU,GAAG,EAAI,cAAc,EAAI,mBAGvC,EAAI,SAAW,CAAC,GAAG,EAAI,SAAU,OAAQ,GAAG,EAAI,SAAU,WAAW,IAI7E,IAAsB,GAAe,IAErC,GAAM,GAAyB,CAC3B,GAAG,EACG,EAAQ,KACJ,gBACA,SACJ,GAAG,EAAQ,KAAO;AAAA;AAAA,EAAqB,oBAAoB,EAAwB,IAAM,MAC/F,EACA,EAAwB,IAAM,GAClC,CAAC,EAET,CACA,GAAI,GAAM,CACN,MAAO,CACH,GAAqB,EAAW,GAAO,GAAuB,WAAY,GAAO,CAAG,CAAC,CACzF,CACJ,EAEA,MAAI,IACA,GAAM,EAAU,CAAG,GAEnB,GAIA,GAAI,MAAM,GAAG,MAAQ,EAAQ,MAAM,EAAI,MAAM,GAAG,KAAK,GAGzD,EAAI,MAAM,QAAQ,GAAM,EAAE,IAAI,aAAe,EAAK,EAC3C,CACX,EAKM,GAAgB,CAAC,EAAK,EAAO,IAAY,CAC3C,GAAM,CAAE,MAAK,YAAW,OAAQ,EAC1B,EAAM,EAAI,IA+BhB,MA9BA,AAAI,GAAI,OAAS,EACb,GAAI,SAAS,QAAQ,GAAG,EACxB,EAAI,SAAS,KAAK,SAAS,GAErB,EAAI,UACV,GAAI,QAAU,GAAG,EAAI,iBAGrB,EAAU,SAAS,OAAO,GAC1B,CAAI,EAAI,OAAS,EACb,AAAI,EAAI,SACJ,EAAI,QAAU,EAAO,SAAS,EAAI,OAAO,EAGzC,EAAI,QAAU,GAAG,EAAQ,aAAa,EAAQ,KAAK,EAAI,WAI3D,GAAI,SAAS,QAAQ,GAAG,EAAQ,aAAa,EAAQ,IAAI,EACzD,EAAI,SAAS,KAAK,GAAG,IAGxB,EAAQ,OACL,GAAU,SAAS,MAAM,GACzB,GAAa,EAAK,GAAG,EAErB,EAAU,SAAS,MAAM,GACzB,GAAa,EAAK,GAAG,GAGzB,CAAC,GACA,EAAI,OAAS,GAAuC,CAAC,EAAI,QAAQ,KAAK,EACvE,GAAQ,QAAQ,GAAoB,GAA4C,CAAG,CAAC,EAC7E,CACH,MAAO,CAAC,GAAqB,EAAK,GAAuB,GAAI,GAAM,CAAG,CAAC,CAAC,CAC5E,GAEG,CACH,MAAO,CAAC,GAAqB,EAAK,CAAG,CAAC,CAC1C,CACJ,EACM,GAAe,CAAC,EAAK,IAAW,CAClC,AAAI,EAAI,OAAS,EACb,AAAI,EAAI,SACJ,EAAI,QAAU,EAAS,EAAI,QAG3B,EAAI,QAAU,KAAK,OAAY,EAAI,aAIvC,GAAI,SAAS,QAAQ,IAAI,QAAa,EACtC,EAAI,SAAS,KAAK,GAAG,EAE7B,EAIM,GAAgB,CAAC,EAAM,IAAY,CACrC,GAAI,EAAK,OAAS,GACd,EAAK,OAAS,GACd,EAAK,OAAS,IACd,EAAK,OAAS,GAGd,MAAO,IAAM,CACT,GAAM,GAAW,EAAK,SAClB,EACA,EAAU,GACd,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACtC,GAAM,GAAQ,EAAS,GACvB,GAAI,GAAO,CAAK,EAAG,CACf,EAAU,GACV,OAAS,GAAI,EAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CAC1C,GAAM,GAAO,EAAS,GACtB,GAAI,GAAO,CAAI,EACX,AAAK,GACD,GAAmB,EAAS,GAAK,GAAyB,CAAC,CAAK,EAAG,EAAM,GAAG,GAGhF,EAAiB,SAAS,KAAK,MAAO,CAAI,EAC1C,EAAS,OAAO,EAAG,CAAC,EACpB,QAEC,CACD,EAAmB,OACnB,KACJ,CACJ,CACJ,CACJ,CACA,GAAI,GAAC,GAKA,EAAS,SAAW,GAChB,GAAK,OAAS,GACV,EAAK,OAAS,GACX,EAAK,UAAY,GAMjB,CAAC,EAAK,MAAM,KAAK,GAAK,EAAE,OAAS,GAC7B,CAAC,EAAQ,oBAAoB,EAAE,KAAK,GAItC,EAAK,MAAQ,aAK/B,OAAS,GAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACtC,GAAM,GAAQ,EAAS,GACvB,GAAI,GAAO,CAAK,GAAK,EAAM,OAAS,EAAuC,CACvE,GAAM,GAAW,CAAC,EAGlB,AAAI,GAAM,OAAS,GAA0B,EAAM,UAAY,MAC3D,EAAS,KAAK,CAAK,EAGnB,CAAC,EAAQ,KACT,GAAgB,EAAO,CAAO,IAAM,GACpC,EAAS,KAAK,EACT,EAAG,EAEZ,EAAS,GAAK,CACV,KAAM,GACN,QAAS,EACT,IAAK,EAAM,IACX,YAAa,GAAqB,EAAQ,OAAO,EAAW,EAAG,CAAQ,CAC3E,CACJ,CACJ,CACJ,CAER,EAEM,GAAO,GAAI,SACX,GAAgB,CAAC,EAAM,IAAY,CACrC,GAAI,EAAK,OAAS,GAA6B,GAAQ,EAAM,OAAQ,EAAI,EACrE,MAAI,IAAK,IAAI,CAAI,GAAK,EAAQ,QAC1B,OAEJ,IAAK,IAAI,CAAI,EACb,EAAQ,QAAU,GAClB,EAAQ,OAAO,EAAkB,EAC1B,IAAM,CACT,EAAQ,QAAU,GAClB,GAAM,GAAM,EAAQ,YACpB,AAAI,EAAI,aACJ,GAAI,YAAc,EAAQ,MAAM,EAAI,YAAa,EAAkB,EAE3E,EAER,EAEM,GAAiB,CAAC,EAAK,EAAM,IAAY,CAC3C,GAAM,CAAE,MAAK,OAAQ,EACrB,GAAI,CAAC,EACD,SAAQ,QAAQ,GAAoB,GAA6C,EAAI,GAAG,CAAC,EAClF,GAAqB,EAEhC,GAAM,GAAS,EAAI,IAAI,OACjB,EAAY,EAAI,OAAS,EAAsC,EAAI,QAAU,EAG7E,EAAc,EAAQ,gBAAgB,GACtC,EAAW,EAAQ,QACrB,GACA,IAAgB,cACpB,GAAI,CAAC,EAAU,KAAK,GACf,CAAC,GAAmB,EAAW,CAAO,GAAK,CAAC,EAC7C,SAAQ,QAAQ,GAAoB,GAAoD,EAAI,GAAG,CAAC,EACzF,GAAqB,EAEhC,GAAI,EAAQ,mBACR,GAAmB,CAAS,GAC5B,EAAQ,YAAY,GACpB,SAAQ,QAAQ,GAAoB,GAAiD,EAAI,GAAG,CAAC,EACtF,GAAqB,EAEhC,GAAM,GAAW,GAAY,GAAuB,aAAc,EAAI,EAChE,EAAY,EACZ,GAAY,CAAG,EACX,YAAY,EAAI,UAChB,GAAyB,CAAC,iBAAkB,CAAG,CAAC,EACpD,sBACF,EACE,EAAW,EAAQ,KAAO,gBAAkB,SAClD,GAAI,EACA,GAAI,IAAgB,YAEhB,EAAgB,GAAyB,CACrC,GAAG,UACH,GAAuB,EAAQ,GAAO,EAAI,GAAG,EAC7C,mBACJ,CAAC,MAEA,CAGD,GAAM,GAAgB,IAAgB,YAA2C,GAAG,aAAoB,OACxG,EAAgB,GAAyB,CACrC,GAAG,SAAgB,EAAQ,aAAa,EAAM,KAAK,SACnD,GAAuB,EAAQ,GAAO,EAAI,GAAG,EAC7C,sBAAsB,IAC1B,CAAC,CACL,KAGA,GAAgB,GAAyB,CACrC,GAAG,UACH,EACA,aACJ,CAAC,EAEL,GAAM,GAAQ,CAEV,GAAqB,EAAU,EAAI,GAAG,EAEtC,GAAqB,EAAW,CAAa,CACjD,EASA,GAPI,EAAQ,mBACR,CAAC,EAAQ,SACT,EAAQ,eACR,CAAC,GAAY,EAAK,EAAQ,WAAW,GACrC,GAAM,GAAG,MAAQ,EAAQ,MAAM,EAAM,GAAG,KAAK,GAG7C,EAAI,UAAU,QAAU,EAAK,UAAY,EAAgC,CACzE,GAAM,GAAY,EAAI,UACjB,IAAI,GAAM,IAAmB,CAAC,EAAI,EAAI,KAAK,UAAU,CAAC,GAAK,QAAQ,EACnE,KAAK,IAAI,EACR,EAAe,EACf,GAAY,CAAG,EACX,GAAG,EAAI,mBACP,GAAyB,CAAC,EAAK,gBAAgB,CAAC,EACpD,iBACN,EAAM,KAAK,GAAqB,EAAc,GAAuB,KAAK,MAAe,GAAO,EAAI,IAAK,CAA+B,CAAC,CAAC,CAC9I,CACA,MAAO,IAAqB,CAAK,CACrC,EACA,YAA8B,EAAQ,CAAC,EAAG,CACtC,MAAO,CAAE,OAAM,CACnB,CAEA,GAAM,IAAsB,gBACtB,GAAkB,CAAC,EAAM,IAAY,CACvC,AAAI,CAAC,GAAgB,kBAAmE,CAAO,GAG3F,GAAK,OAAS,GAGd,GAAc,EAAK,QAAS,CAAO,EAEnC,EAAK,OAAS,GACd,EAAK,MAAM,QAAQ,AAAC,GAAS,CACzB,AAAI,EAAK,OAAS,GACd,EAAK,OAAS,OACd,EAAK,KACL,GAAc,EAAK,IAAK,CAAO,CAEvC,CAAC,EAET,EACA,YAAuB,EAAM,EAAS,CAClC,GAAI,EAAK,OAAS,EACd,GAAY,EAAM,CAAO,MAGzB,QAAS,GAAI,EAAG,EAAI,EAAK,SAAS,OAAQ,IAAK,CAC3C,GAAM,GAAQ,EAAK,SAAS,GAC5B,AAAI,MAAO,IAAU,UAErB,CAAI,EAAM,OAAS,EACf,GAAY,EAAO,CAAO,EAEzB,AAAI,EAAM,OAAS,EACpB,GAAc,EAAM,CAAO,EAEtB,EAAM,OAAS,GACpB,GAAc,EAAM,QAAS,CAAO,EAE5C,CAER,CACA,YAAqB,EAAM,EAAS,CAChC,GAAM,GAAM,EAAK,QACb,EAAW,GACX,EAAW,GACX,EAAmB,GACnB,EAAU,GACV,EAAQ,EACR,EAAS,EACT,EAAQ,EACR,EAAkB,EAClB,EAAG,EAAM,EAAG,EAAY,EAAU,CAAC,EACvC,IAAK,EAAI,EAAG,EAAI,EAAI,OAAQ,IAGxB,GAFA,EAAO,EACP,EAAI,EAAI,WAAW,CAAC,EAChB,EACA,AAAI,IAAM,IAAQ,IAAS,IACvB,GAAW,YAEV,EACL,AAAI,IAAM,IAAQ,IAAS,IACvB,GAAW,YAEV,EACL,AAAI,IAAM,IAAQ,IAAS,IACvB,GAAmB,YAElB,EACL,AAAI,IAAM,IAAQ,IAAS,IACvB,GAAU,YAET,IAAM,KACX,EAAI,WAAW,EAAI,CAAC,IAAM,KAC1B,EAAI,WAAW,EAAI,CAAC,IAAM,KAC1B,CAAC,GACD,CAAC,GACD,CAAC,EACD,AAAI,IAAe,OAEf,GAAkB,EAAI,EACtB,EAAa,EAAI,MAAM,EAAG,CAAC,EAAE,KAAK,GAGlC,EAAW,MAGd,CACD,OAAQ,OACC,IACD,EAAW,GACX,UACC,IACD,EAAW,GACX,UACC,IACD,EAAmB,GACnB,UACC,IACD,IACA,UACC,IACD,IACA,UACC,IACD,IACA,UACC,IACD,IACA,UACC,KACD,IACA,UACC,KACD,IACA,MAER,GAAI,IAAM,GAAM,CAEZ,GAAI,GAAI,EAAI,EACR,EAEJ,KAAO,GAAK,GACR,GAAI,EAAI,OAAO,CAAC,EACZ,IAAM,KAFC,IAEX,CAGJ,AAAI,EAAC,GAAK,CAAC,GAAoB,KAAK,CAAC,IACjC,GAAU,GAElB,CACJ,CAEJ,AAAI,IAAe,OACf,EAAa,EAAI,MAAM,EAAG,CAAC,EAAE,KAAK,EAE7B,IAAoB,GACzB,EAAW,EAEf,YAAsB,CAClB,EAAQ,KAAK,EAAI,MAAM,EAAiB,CAAC,EAAE,KAAK,CAAC,EACjD,EAAkB,EAAI,CAC1B,CACA,GAAI,EAAQ,OAAQ,CAChB,IAAK,EAAI,EAAG,EAAI,EAAQ,OAAQ,IAC5B,EAAa,GAAW,EAAY,EAAQ,GAAI,CAAO,EAE3D,EAAK,QAAU,CACnB,CACJ,CACA,YAAoB,EAAK,EAAQ,EAAS,CACtC,EAAQ,OAAO,EAAc,EAC7B,GAAM,GAAI,EAAO,QAAQ,GAAG,EAC5B,GAAI,EAAI,EACJ,SAAQ,QAAQ,IAAI,CAAM,EACnB,GAAG,GAAe,EAAQ,QAAQ,KAAK,KAE7C,CACD,GAAM,GAAO,EAAO,MAAM,EAAG,CAAC,EACxB,EAAO,EAAO,MAAM,EAAI,CAAC,EAC/B,SAAQ,QAAQ,IAAI,CAAI,EACjB,GAAG,GAAe,EAAM,QAAQ,KAAK,IAAM,IAAS,IAAM,IAAM,EAAO,GAClF,CACJ,CAEA,GAAM,IAAS,GAAI,SACb,GAAgB,CAAC,EAAM,IAAY,CACrC,GAAI,EAAK,OAAS,EAA2B,CACzC,GAAM,GAAM,GAAQ,EAAM,MAAM,EAChC,MAAI,CAAC,GAAO,GAAO,IAAI,CAAI,EACvB,OAEJ,IAAO,IAAI,CAAI,EACR,IAAM,CACT,GAAM,GAAc,EAAK,aACrB,EAAQ,YAAY,YACxB,AAAI,GAAe,EAAY,OAAS,IAEhC,GAAK,UAAY,GACjB,GAAU,EAAa,CAAO,EAElC,EAAK,YAAc,GAAqB,EAAQ,OAAO,EAAS,EAAG,CAC/D,EAAI,IACJ,GAAyB,OAAW,CAAW,EAC/C,SACA,OAAO,EAAQ,QAAQ,CAC3B,CAAC,EAET,EACJ,CACJ,EAEA,YAAgC,EAAmB,CAC/C,MAAO,CACH,CACI,GACA,GACA,GACA,GACK,GACL,GAAI,EACE,CAEE,GACA,EACJ,EACE,CAAC,EACP,GACA,GACA,GACA,EACJ,EACA,CACI,GAAI,GACJ,KAAM,GACN,MAAO,EACX,CACJ,CACJ,CAGA,YAAqB,EAAU,EAAU,CAAC,EAAG,CACzC,GAAM,GAAU,EAAQ,SAAW,GAC7B,EAAe,EAAQ,OAAS,SAChC,EAAqB,EAAQ,oBAAsB,IAAQ,EACjE,AAAI,CAAC,GAAqB,EAAQ,eAC9B,EAAQ,GAAoB,EAAiD,CAAC,EAE9E,EAAQ,SAAW,CAAC,GACpB,EAAQ,GAAoB,EAA4C,CAAC,EAE7E,GAAM,GAAM,EAAO,SAAS,CAAQ,EAAI,GAAU,EAAU,CAAO,EAAI,EACjE,CAAC,EAAgB,GAAuB,GAAuB,CAAiB,EACtF,GAAI,EAAQ,KAAM,CACd,GAAM,CAAE,qBAAsB,EAC9B,AAAI,EAAC,GAAqB,CAAC,EAAkB,SAAS,YAAY,IAC9D,GAAQ,kBAAoB,CAAC,GAAI,GAAqB,CAAC,EAAI,YAAY,EAE/E,CACA,UAAU,EAAK,EAAO,OAAO,CAAC,EAAG,EAAS,CACtC,oBACA,eAAgB,CACZ,GAAG,EACH,GAAI,EAAQ,gBAAkB,CAAC,CACnC,EACA,oBAAqB,EAAO,OAAO,CAAC,EAAG,EAAqB,EAAQ,qBAAuB,CAAC,CAC5F,CACJ,CAAC,CAAC,EACK,GAAS,EAAK,EAAO,OAAO,CAAC,EAAG,EAAS,CAC5C,mBACJ,CAAC,CAAC,CACN,CAEA,GAAM,IAAyB,IAAO,EAAE,MAAO,CAAC,CAAE,GAElD,EAAQ,kBAAoB,EAAO,kBACnC,EAAQ,gBAAkB,GAC1B,EAAQ,SAAW,GACnB,EAAQ,WAAa,GACrB,EAAQ,aAAe,GACvB,EAAQ,eAAiB,GACzB,EAAQ,qBAAuB,GAC/B,EAAQ,qBAAuB,GAC/B,EAAQ,aAAe,GACvB,EAAQ,cAAgB,GACxB,EAAQ,YAAc,GACtB,EAAQ,aAAe,GACvB,EAAQ,SAAW,GACnB,EAAQ,qBAAuB,GAC/B,EAAQ,aAAe,GACvB,EAAQ,OAAS,GACjB,EAAQ,WAAa,GACrB,EAAQ,YAAc,GACtB,EAAQ,gBAAkB,GAC1B,EAAQ,gBAAkB,GAC1B,EAAQ,gBAAkB,GAC1B,EAAQ,WAAa,GACrB,EAAQ,aAAe,GACvB,EAAQ,cAAgB,GACxB,EAAQ,YAAc,GACtB,EAAQ,YAAc,GACtB,EAAQ,kBAAoB,GAC5B,EAAQ,kBAAoB,GAC5B,EAAQ,0BAA4B,GACpC,EAAQ,eAAiB,GACzB,EAAQ,mBAAqB,GAC7B,EAAQ,SAAW,GACnB,EAAQ,SAAW,GACnB,EAAQ,kBAAoB,GAC5B,EAAQ,YAAc,GACtB,EAAQ,eAAiB,GACzB,EAAQ,MAAQ,GAChB,EAAQ,SAAW,GACnB,EAAQ,gBAAkB,GAC1B,EAAQ,UAAY,GACpB,EAAQ,yBAA2B,GACnC,EAAQ,4BAA8B,GACtC,EAAQ,OAAS,GACjB,EAAQ,YAAc,GACtB,EAAQ,UAAY,GACpB,EAAQ,mBAAqB,GAC7B,EAAQ,WAAa,GACrB,EAAQ,WAAa,GACrB,EAAQ,mBAAqB,GAC7B,EAAQ,sBAAwB,GAChC,EAAQ,2BAA6B,GACrC,EAAQ,qBAAuB,GAC/B,EAAQ,sBAAwB,GAChC,EAAQ,qBAAuB,GAC/B,EAAQ,oBAAsB,GAC9B,EAAQ,yBAA2B,GACnC,EAAQ,4BAA8B,GACtC,EAAQ,oBAAsB,GAC9B,EAAQ,yBAA2B,GACnC,EAAQ,kBAAoB,GAC5B,EAAQ,oBAAsB,GAC9B,EAAQ,uBAAyB,GACjC,EAAQ,qBAAuB,GAC/B,EAAQ,sBAAwB,GAChC,EAAQ,WAAa,GACrB,EAAQ,yBAA2B,GACnC,EAAQ,uBAAyB,GACjC,EAAQ,mCAAqC,GAC7C,EAAQ,sBAAwB,GAChC,EAAQ,uBAAyB,GACjC,EAAQ,gBAAkB,GAC1B,EAAQ,mBAAqB,GAC7B,EAAQ,QAAU,GAClB,EAAQ,SAAW,GACnB,EAAQ,SAAW,GACnB,EAAQ,uBAAyB,GACjC,EAAQ,gBAAkB,GAC1B,EAAQ,cAAgB,GACxB,EAAQ,mBAAqB,GAC7B,EAAQ,oBAAsB,GAC9B,EAAQ,eAAiB,GACzB,EAAQ,mBAAqB,GAC7B,EAAQ,YAAc,GACtB,EAAQ,cAAgB,GACxB,EAAQ,WAAa,GACrB,EAAQ,cAAgB,GACxB,EAAQ,gBAAkB,GAC1B,EAAQ,eAAiB,GACzB,EAAQ,0BAA4B,GACpC,EAAQ,mBAAqB,GAC7B,EAAQ,0BAA4B,GACpC,EAAQ,uBAAyB,GACjC,EAAQ,uBAAyB,GACjC,EAAQ,mBAAqB,GAC7B,EAAQ,aAAe,GACvB,EAAQ,cAAgB,GACxB,EAAQ,YAAc,GACtB,EAAQ,iBAAmB,GAC3B,EAAQ,oBAAsB,GAC9B,EAAQ,eAAiB,GACzB,EAAQ,OAAS,GACjB,EAAQ,QAAU,GAClB,EAAQ,QAAU,GAClB,EAAQ,UAAY,GACpB,EAAQ,uBAAyB,GACjC,EAAQ,kBAAoB,GAC5B,EAAQ,WAAa,GACrB,EAAQ,UAAY,GACpB,EAAQ,kBAAoB,GAC5B,EAAQ,uBAAyB,GACjC,EAAQ,qBAAuB,GAC/B,EAAQ,eAAiB,GACzB,EAAQ,gBAAkB,GAC1B,EAAQ,oBAAsB,GAC9B,EAAQ,UAAY,GACpB,EAAQ,cAAgB,GACxB,EAAQ,iBAAmB,GAC3B,EAAQ,oBAAsB,GAC9B,EAAQ,eAAiB,GACzB,EAAQ,YAAc,GACtB,EAAQ,aAAe,GACvB,EAAQ,sBAAwB,GAChC,EAAQ,mBAAqB,GAC7B,EAAQ,gBAAkB,GAC1B,EAAQ,gBAAkB,KC1jL1B,iCAGE,GAAO,QAAU,OCHnB,4BAEA,OAAO,eAAe,GAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAE5D,GAAI,IAAe,KACf,GAAS,KAEP,GAAgB,OAAO,EAAE,EACzB,GAAmB,OAAO,EAAE,EAC5B,GAAe,OAAO,EAAE,EACxB,GAAiB,OAAO,EAAE,EAC1B,GAAkB,OAAO,EAAE,EAC3B,GAAsB,OAAO,EAAE,EAC/B,GAAiB,OAAO,EAAE,EAC1B,GAAS,OAAO,EAAE,EAClB,GAAa,OAAO,EAAE,EACtB,GAAmB,OAAO,EAAE,EAClC,GAAa,uBAAuB,EAC/B,IAAgB,eAChB,IAAmB,kBACnB,IAAe,cACf,IAAiB,gBACjB,IAAkB,iBAClB,IAAsB,iBACtB,IAAiB,YACjB,IAAS,SACT,IAAa,cACb,IAAmB,iBACxB,CAAC,EAED,GAAI,IAA2B,CAC9B,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,MAAO,SACP,MAAO,SACP,IAAK,IACL,IAAK,IACL,MAAO,SACP,MAAO,SACP,MAAO,SACP,IAAK,OACL,MAAO,SACP,MAAO,SACP,MAAO,SACP,IAAK,OACL,IAAK,OACL,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,IACP,MAAO,SACP,MAAO,IACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,IACP,MAAO,SACP,MAAO,IACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,IAAK,OACL,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,OACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,IAAK,OACL,IAAK,OACL,MAAO,SACP,MAAO,SACP,MAAO,SACP,IAAK,OACL,IAAK,OACL,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,IAAK,OACL,OAAQ,SACR,OAAQ,eeACR,OAAQ,SACR,OAAQ,eACR,OAAQ,eACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,eACR,OAAQ,SACR,OAAQ,eACR,OAAQ,eACR,OAAQ,SACR,OAAQ,SACR,OAAQ,OACR,OAAQ,SACR,OAAQ,SACR,OAAQ,IACR,OAAQ,SACR,OAAQ,SACR,OAAQ,YACR,OAAQ,YACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,KAAM,OACN,KAAM,OACN,OAAQ,SACR,KAAM,OACN,KAAM,OACN,OAAQ,SACR,KAAM,OACN,OAAQ,SACR,OAAQ,SACR,OAAQ,YACR,OAAQ,YACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,YACR,OAAQ,YACR,KAAM,IACN,KAAM,IACN,OAAQ,SACR,OAAQ,SACR,OAAQ,OACR,OAAQ,OACR,OAAQ,SACR,OAAQ,YACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,KAAM,OACN,OAAQ,YACR,OAAQ,YACR,OAAQ,OACR,OAAQ,SACR,OAAQ,SACR,OAAQ,IACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,KAAM,OACN,KAAM,OACN,KAAM,OACN,OAAQ,IACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,YACR,OAAQ,YACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,YACR,OAAQ,YACR,OAAQ,OACR,KAAM,OACN,KAAM,OACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,YACR,OAAQ,YACR,OAAQ,YACR,OAAQ,YACR,OAAQ,YACR,OAAQ,YACR,OAAQ,SACR,OAAQ,SACR,OAAQ,OACR,OAAQ,YACR,OAAQ,YACR,KAAM,OACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,YACR,OAAQ,SACR,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,IACT,MAAO,OACP,MAAO,OACP,QAAS,YACT,QAAS,YACT,QAAS,OACT,QAAS,OACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,SACT,QAAS,KACT,QAAS,SACT,QAAS,SACT,QAAS,eACT,QAAS,SACT,QAAS,SACT,MAAO,OACP,QAAS,OACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,OACT,QAAS,OACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,eACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,MAAO,OACP,MAAO,OACP,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,OACT,QAAS,OACT,QAAS,SACT,QAAS,IACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,eACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,eACT,QAAS,OACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,SACT,QAAS,YACT,MAAO,OACP,MAAO,OACP,QAAS,SACT,QAAS,SACT,QAAS,SACT,MAAO,OACP,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,SACT,QAAS,OACT,QAAS,OACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,MAAO,OACP,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,IACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,eACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,IACT,QAAS,SACT,QAAS,YACT,QAAS,SACT,QAAS,IACT,QAAS,SACT,QAAS,SACT,QAAS,eACT,QAAS,OACT,QAAS,SACT,QAAS,SACT,MAAO,OACP,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,YACT,QAAS,eACT,QAAS,eACT,QAAS,OACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,eACT,QAAS,SACT,QAAS,eACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,eACT,QAAS,eACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,SACT,QAAS,eACT,QAAS,eACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,eACT,QAAS,eACT,QAAS,UACT,QAAS,eACT,QAAS,UACT,QAAS,SACT,QAAS,SACT,MAAO,OACP,MAAO,OACP,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,OACT,QAAS,OACT,QAAS,SACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,OACT,QAAS,OACT,QAAS,OACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,IACT,QAAS,SACT,QAAS,YACT,MAAO,OACP,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,IACT,QAAS,IACT,QAAS,eACT,QAAS,SACT,QAAS,SACT,MAAO,OACP,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,IACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,IACT,QAAS,SACT,QAAS,YACT,QAAS,IACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,OACT,QAAS,IACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,OACT,QAAS,OACT,QAAS,OACT,QAAS,SACT,QAAS,SACT,MAAO,OACP,QAAS,SACT,QAAS,SACT,MAAO,OACP,MAAO,OACP,MAAO,OACP,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,MAAO,OACP,MAAO,OACP,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,OACT,QAAS,OACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,IACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,OACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,QAAS,YACT,QAAS,YACT,QAAS,SACT,OAAQ,OACR,OAAQ,OACR,SAAU,OACV,SAAU,OACV,SAAU,OACV,SAAU,OACV,SAAU,OACV,OAAQ,OACR,OAAQ,OACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,OACV,SAAU,SACV,SAAU,SACV,SAAU,OACV,SAAU,OACV,SAAU,SACV,OAAQ,OACR,OAAQ,OACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,OAAQ,OACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,OAAQ,OACR,OAAQ,OACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,OACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,IACV,SAAU,IACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,OAAQ,OACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,OAAQ,OACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,OAAQ,OACR,OAAQ,OACR,SAAU,OACV,SAAU,OACV,SAAU,SACV,SAAU,SACV,OAAQ,OACR,OAAQ,OACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,KACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,IACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,OAAQ,OACR,OAAQ,OACR,SAAU,OACV,SAAU,OACV,SAAU,OACV,OAAQ,OACR,OAAQ,OACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,OAAQ,OACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,OACV,SAAU,SACV,SAAU,eACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,OACV,OAAQ,OACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,eACV,SAAU,SACV,SAAU,SACV,SAAU,eACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,eACV,SAAU,eACV,SAAU,eACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,eACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,eACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,eACV,SAAU,SACV,SAAU,SACV,SAAU,eACV,SAAU,SACV,OAAQ,OACR,OAAQ,OACR,SAAU,SACV,SAAU,eACV,SAAU,SACV,SAAU,SACV,OAAQ,OACR,OAAQ,OACR,SAAU,OACV,SAAU,OACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,OAAQ,OACR,OAAQ,OACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,OAAQ,OACR,SAAU,OACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,IACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,OACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,eeACV,SAAU,eACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,SAAU,SACV,OAAQ,OACR,OAAQ,OACR,SAAU,SACV,SAAU,SACV,UAAW,OACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,OACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,OACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,OACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,IACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,IACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,OACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,OACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,IACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,OACX,UAAW,SACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,OACX,UAAW,OACX,UAAW,OACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,IACX,UAAW,IACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,IACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,IACX,UAAW,SACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,eACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,eACX,UAAW,eACX,UAAW,SACX,UAAW,eACX,UAAW,eeACX,UAAW,eeACX,UAAW,eACX,UAAW,eACX,UAAW,eACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,OACX,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,WAAY,SACZ,WAAY,SACZ,WAAY,SACZ,WAAY,SACZ,WAAY,SACZ,WAAY,SACZ,WAAY,SACZ,WAAY,SACZ,WAAY,SACZ,WAAY,SACZ,WAAY,SACZ,WAAY,SACZ,WAAY,eeACZ,WAAY,SACZ,WAAY,SACZ,WAAY,eACZ,WAAY,eACZ,WAAY,eACZ,WAAY,SACZ,WAAY,eACZ,WAAY,ea,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,OACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,eACb,YAAa,SACb,YAAa,eACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,IACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,YAAa,SACb,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,OACd,aAAc,OACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,OACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,eACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,eACd,aAAc,SACd,aAAc,SACd,aAAc,eACd,aAAc,eACd,aAAc,SACd,aAAc,SACd,aAAc,eACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,OACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,aAAc,SACd,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,eACf,cAAe,eACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,eACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,cAAe,SACf,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,eAChB,eAAgB,SAChB,e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",
  "names": []
}
